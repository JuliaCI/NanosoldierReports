cset: moving following pidspec: 154394
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.786291929 seconds)
loading group "shootout"... done (took 0.792363509 seconds)
loading group "string"... done (took 0.226295969 seconds)
loading group "linalg"... done (took 3.127730468 seconds)
loading group "parallel"... done (took 0.021986516 seconds)
loading group "find"... done (took 1.288312782 seconds)
loading group "tuple"... done (took 0.687092309 seconds)
loading group "union"... done (took 3.081018621 seconds)
loading group "dates"... done (took 0.156799848 seconds)
loading group "micro"... done (took 0.057024708 seconds)
loading group "simd"... done (took 0.373312926 seconds)
loading group "io"... done (took 1.398546283 seconds)
loading group "random"... done (took 2.366413682 seconds)
loading group "problem"... done (took 1.187978483 seconds)
loading group "array"... done (took 4.625836301 seconds)
loading group "misc"... done (took 0.980599687 seconds)
loading group "scalar"... done (took 3.532927419 seconds)
loading group "sort"... done (took 0.313496707 seconds)
loading group "sparse"... done (took 3.560921514 seconds)
loading group "collection"... done (took 5.956964291 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.541494964 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.071800991 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.252197896 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.076801455 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.278319956 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.081119959 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.087751384 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.069765856 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.042168218 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159547228 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.212452172 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.390588735 seconds)
done (took 5.005161172 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.262375373 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033172835 seconds)
    (2/2) benchmarking "String"...
    done (took 0.122709743 seconds)
  done (took 0.769081734 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.136827566 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015294764 seconds)
    (3/3) benchmarking "different"...
    done (took 0.02210433 seconds)
  done (took 0.780994103 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020161286 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.094270459 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021177518 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.021751087 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.021695794 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021088884 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.020958697 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.020904634 seconds)
  done (took 0.830737146 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.028271243 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022711666 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020785414 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022197891 seconds)
  done (took 0.700878452 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022041282 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.081784135 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019735138 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019632775 seconds)
  done (took 0.750141519 seconds)
done (took 4.73617624 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.194623849 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.779264577 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.985545068 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.17879568 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.355893648 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.304281295 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076593646 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.241526132 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.145849785 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.031471058 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.180015275 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.039919592 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.529781286 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.448351723 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.028510685 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.143202117 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.57707857 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039302484 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.069912998 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.250183177 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.039891097 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039213515 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043417444 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.026484782 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.150482505 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.136106602 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.587191056 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.066641082 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.026056046 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135855239 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.028654506 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.030684668 seconds)
  done (took 9.555192583 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148145986 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142427496 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023328208 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.059244206 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.049937907 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024496926 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.029917707 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.022697224 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.042402826 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.087761852 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.045247348 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154351547 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.020987917 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.023839055 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.136028186 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.115415269 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.037543162 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.039503001 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.021989938 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036155021 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.049453847 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034399288 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.032989171 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032516139 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.068135904 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.089578086 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.041278667 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.063640491 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022229043 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034659557 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.051244367 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.063251212 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022549015 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.020886691 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.064964958 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.039868084 seconds)
  done (took 2.632382411 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.706253393 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.050380631 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.136828472 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.127685166 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.063384789 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.050124712 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.178722528 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.077885814 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.054976659 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.023626784 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.205936001 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.627215966 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.167249408 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.053775297 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028108107 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.179825687 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.872173646 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.941912629 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023306554 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023564381 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.133207198 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025933807 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.177139514 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.02279057 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.137013654 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.820911952 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.02545784 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.023990493 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.052358 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.139360123 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.020662314 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.096326971 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.050009037 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.024863157 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.557055581 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.02168123 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.019667316 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.041534595 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.050074966 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021898997 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023051191 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.033531001 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.02106817 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.073985013 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.035479349 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.524109236 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025015438 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.690458834 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.834166775 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.030384484 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.027476773 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.058004465 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.01968252 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023231968 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.566578455 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.109753575 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022562147 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.247993108 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025161411 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024306647 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024438127 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.057526611 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023247472 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024350903 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026578232 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.042716151 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.97024174 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.03234155 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.043059786 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021572259 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022657486 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021053072 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.386680788 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029456389 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025071461 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020559843 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026844139 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022857616 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022417615 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.0674044 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.049434792 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.046888335 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026100094 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023179348 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022275262 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.492043274 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.050320076 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.024851105 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024065693 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.484760667 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020228926 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022117068 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.023728138 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.043704845 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.022473813 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019463903 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.057701137 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.024116987 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.124987034 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.48783558 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.023979029 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.019752497 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.518294786 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024096021 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.05395813 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.075684713 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022079021 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.05955616 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.022493487 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.019814427 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026077975 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.019674272 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024038197 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.020904485 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.021668369 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021437354 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.022502021 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023636255 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022471467 seconds)
  done (took 19.622856276 seconds)
done (took 34.12387433 seconds)
(4/20) benchmarking "parallel"...
done (took 0.748758825 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.209985967 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.048241408 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.01922336 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.16139152 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.043396937 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.13393152 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.174647115 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.126523075 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.045293853 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.04501609 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.04514036 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.180240693 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.191826598 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.046255668 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.119840581 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.192175457 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.046699679 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019680908 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.045489096 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.046577748 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.046316596 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019784566 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.045626808 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.04662271 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.118803631 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.046644477 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019587979 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.121859657 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.047691176 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.122864215 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.047453082 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.046409553 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.047337016 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.121816083 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.048990209 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.121539706 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.019969825 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.048884128 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.048723152 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.049466749 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.048618003 seconds)
  done (took 3.944465752 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.045165305 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.037053414 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.0395941 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017675028 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.027140897 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.037160203 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.017679638 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.036676202 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.040785262 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.037157921 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.037044015 seconds)
  done (took 1.129939285 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.040056353 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038166839 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.039527397 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017649982 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028848194 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.037959404 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.017584914 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.037494038 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.040210846 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.037934793 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.037990746 seconds)
  done (took 1.070331778 seconds)
done (took 6.821869027 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.151872723 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.119555789 seconds)
  done (took 0.956456772 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.549868104 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.219188704 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.128332264 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.251948944 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.122179311 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.154201646 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.292032794 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.159641393 seconds)
  done (took 6.617088178 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.073905728 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.139763808 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.023674723 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.022213614 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.022399178 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.022566799 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024167423 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.022828717 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022118716 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.024636463 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024191772 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.02229857 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023040479 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024388119 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.022382269 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.022646815 seconds)
  done (took 1.372934162 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.028403035 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025217036 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.026323388 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.016773922 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027275685 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.025789564 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.026854526 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.027172198 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.026538488 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026250646 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024080522 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027022197 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.025946595 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024582262 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.026807926 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.016776312 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027253342 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026315429 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028183413 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027480925 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026492904 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024090449 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.028116617 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.025309911 seconds)
  done (took 1.324603029 seconds)
done (took 10.967385708 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.140066066 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029135648 seconds)
  done (took 0.864950799 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.125552602 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.124160016 seconds)
  done (took 0.957748228 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.028468244 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.015652742 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.032173736 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.023885941 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.015841733 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.015572458 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.031102746 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.015875554 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.015723174 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.015869076 seconds)
  done (took 0.919080316 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019168678 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022837462 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.020858226 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.018957476 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020541629 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.016635735 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.01895107 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017017017 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022577647 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016049349 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.019882846 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.037341673 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019223669 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.037624213 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019184566 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.019749217 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021215144 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019004258 seconds)
  done (took 1.094018841 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017345185 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.016633006 seconds)
  done (took 0.745646245 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020364862 seconds)
    (2/7) benchmarking "second"...
    done (took 0.016685855 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018443789 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018204301 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016226956 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.015617205 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016188767 seconds)
  done (took 0.826872687 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383950789 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.086466382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312432244 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.023863788 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.037415086 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.224166405 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019278544 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023695945 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.023570474 seconds)
  done (took 1.842653242 seconds)
done (took 7.95898039 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.040145539 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.141937881 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.145495594 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.448512579 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.033448711 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022040501 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.051422664 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.226498694 seconds)
done (took 1.829640978 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.484046578 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.250003231 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.186811018 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.023539525 seconds)
  done (took 2.175280744 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.307640453 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.138657976 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.029757738 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.022188556 seconds)
  done (took 1.224727115 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.021674049 seconds)
    (2/2) benchmarking "read"...
    done (took 0.026763622 seconds)
  done (took 0.771952083 seconds)
done (took 5.381514349 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029898903 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.016516066 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.022789239 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018023419 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.017671803 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017157978 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017086853 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.017948971 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016145685 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018172285 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.01808119 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018098641 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017829779 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017816875 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017291764 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018068769 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016205301 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.017808737 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017805098 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.017803457 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016124309 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018153413 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017299435 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.017805626 seconds)
  done (took 1.147096408 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.035518279 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.020467787 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.021151811 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.020968598 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.021443242 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.020953369 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.020927767 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.020035707 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.020977229 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.019828182 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.021545869 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.021574007 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.019957747 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.021685695 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.019998036 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.02167403 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.021278184 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020357907 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.019980345 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.021622436 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.021101519 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020322782 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.021631777 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.021153439 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.02152433 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.021509369 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.019973837 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.020324743 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.021089957 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.021474261 seconds)
  done (took 1.367142046 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.022562498 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.014778237 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015080721 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.024910184 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.014753413 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.014921516 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015373026 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014469933 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.014889946 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.015721846 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015207488 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.014608545 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015411909 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.01461623 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.01469776 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.01519211 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0197439 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.03530436 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015023335 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.014742285 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019285633 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.014990241 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.01471153 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.014765427 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015216403 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.014861367 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.014606939 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015113218 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.014742855 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015358996 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.014737672 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019254647 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.020732007 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015221461 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025047909 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.019773006 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.015243773 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019094038 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.015658094 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.014598597 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.014563965 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.014595637 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.014773124 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.014806344 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.02511841 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.014991588 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.015878744 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015217256 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.014888249 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.014597382 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.014692633 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.01623925 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.020408962 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016059628 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.014668983 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0160193 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.01472461 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015490845 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.014895715 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.014744942 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.014687936 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.018734682 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016244853 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015560264 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.035886803 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016187995 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025297913 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.014941841 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015327924 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.018965379 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015408609 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.033967819 seconds)
  done (took 1.957763638 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.027495003 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025330212 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.033638049 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024525096 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018194733 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015528334 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018584425 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015659626 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024699408 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019201014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015706402 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018804772 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024796565 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.01917403 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016770098 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.024647941 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019267379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018415848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.015610044 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019152826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016723346 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018818131 seconds)
  done (took 1.180225566 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100229215 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020967247 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.06275362 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.024127742 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.022999309 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.024326111 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.020934714 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020924663 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02113611 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021622413 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021541262 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021038221 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.023069992 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021566047 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021535744 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.021350021 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021097822 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.021366885 seconds)
  done (took 1.240084869 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.033324002 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.020827562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.047544132 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.020428559 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.020521618 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020237903 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023833462 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024030842 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.02029739 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.020730499 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024344651 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020391687 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.020356604 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020768712 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020432693 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.020747629 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020367556 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020705056 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024304058 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024152098 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024122954 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024253881 seconds)
  done (took 1.242118246 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034552929 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.019835559 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.035865557 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.021268001 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015199559 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015175584 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.021446628 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.019984231 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.021215743 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.019518893 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020000365 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015233792 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.022107503 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020143529 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.022337862 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020107787 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.019788824 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020161054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.01978423 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.01531993 seconds)
  done (took 1.144328238 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128995339 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017304986 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017102843 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021528205 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017008561 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017024571 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021603755 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.01713062 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017143287 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.040777707 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017207303 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017161543 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0217584 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.019997533 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017166094 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02171901 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021687147 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021701378 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017289086 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017224872 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.040788061 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.01727195 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022119042 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017445264 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017368363 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017426297 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.01739349 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020395492 seconds)
  done (took 1.404232957 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.037171457 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.017649484 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015422432 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019340059 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.01928545 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.031337599 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019198691 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019062145 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.017522933 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015441401 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017604659 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.017535515 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.017576388 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.027632975 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.017480423 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017560351 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.027649743 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019387745 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.031589801 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.031455055 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017641265 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.027536557 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017626753 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.01550277 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.031550602 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.01763957 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0195891 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020537102 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017831407 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015624748 seconds)
  done (took 1.37069105 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029238233 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026011942 seconds)
  done (took 0.783337544 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018218237 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.032949182 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.014557115 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.027615501 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.023266456 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.018759071 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.02327293 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.02319085 seconds)
  done (took 0.904461187 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.12394142 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.147466856 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.016706192 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.016819668 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.121434271 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083210316 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.132477009 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028395954 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030299699 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019608372 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016727685 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.133005043 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016275873 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030034783 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017767938 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026054821 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024105809 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034492958 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029473935 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015336474 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029279177 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017115138 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016285405 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017178459 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017447887 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023311097 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032454953 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.028911038 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024824555 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.014695828 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035340542 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.015550241 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016176006 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024871793 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.124095677 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.015832253 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.053365195 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.015755065 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020102172 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015394427 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027738814 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.03646306 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030421207 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.034736195 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017225116 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.01765566 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015546813 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017337695 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020400634 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025041294 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.0157799 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023143059 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015311104 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017126335 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026327845 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.015790342 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020556219 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.024987175 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029460499 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026268559 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028024284 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031243804 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024528837 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.02424367 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016313412 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.035685406 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017268132 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.02898916 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030583069 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.016889995 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028860147 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015578004 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.014807842 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.015701221 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049904661 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017107382 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016524677 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.015771928 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.01595838 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017101314 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.02531245 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020587464 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023181489 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018782273 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031833174 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.024974322 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.01552948 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023142585 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034190116 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019926442 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.01578948 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033089178 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.019847622 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.01559402 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.033898763 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026230772 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017244048 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016423287 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.019731277 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029458552 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.0170645 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.014814739 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.02437133 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017217472 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.126057955 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021201532 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024454065 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016006546 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026762602 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022781992 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017697676 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015185949 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021004888 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.016983696 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015207524 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025859221 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016171938 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031719753 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023321543 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.030993238 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031464345 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.026930522 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032500962 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.015974502 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015229453 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.03513353 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025653837 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017411767 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.034905917 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016044348 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026798235 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016179859 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017692407 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.02559641 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015516715 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017909623 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016365153 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.02273942 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.017816344 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.01796516 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022363715 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.024823144 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028780231 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017244578 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.02519244 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016677179 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032704996 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026288288 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021350589 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019942719 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017140869 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028856878 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023364142 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025663864 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016166452 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017169159 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016299212 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027525732 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026107006 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018091629 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026303161 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021361888 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017109431 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016392116 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017373143 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020335787 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.019948906 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.016914413 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024277398 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025330957 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031192872 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024417155 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.02551197 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.015705654 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016182102 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018192865 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016207335 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021246728 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025769663 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032343008 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028513444 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038220868 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016624334 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026325009 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018271629 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.034129772 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.029943337 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017439442 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021631795 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015505429 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018345529 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026065684 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028318304 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031180317 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031727528 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021487898 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.02138791 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016351576 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032212891 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016864406 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025046338 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025937003 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023222298 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016333408 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018366192 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025793326 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021441702 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017611657 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032729043 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.024832186 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016365762 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031201262 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.016773062 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027549752 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016392368 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020418926 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022142298 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018580965 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.026440857 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032391261 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015618096 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016865357 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032677761 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018557707 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018425079 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024696053 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.032189204 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021579971 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.173119282 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.02635847 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.026370903 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.020562382 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.02589773 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.016254668 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.024711985 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.018115068 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.027070736 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.015387507 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033479425 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.014622216 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.030738161 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.015937707 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.026219192 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.015641412 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.024677421 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.015996421 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.032154241 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.016607385 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.015924233 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.026779416 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.014482436 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0243628 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.015408963 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.02181666 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.022752863 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.024768417 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.016869186 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.024758495 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.016642122 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.024370849 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.020341105 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.023897613 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.024344636 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.020244846 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015021035 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.023556771 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025869367 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.023374054 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.016594319 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.016497962 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.01555099 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.02444813 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.01649945 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.01606979 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023374277 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020337109 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021395875 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016513053 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.016606181 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016435522 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023553648 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024479722 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033008681 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.023788115 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.022663868 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024263252 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015044324 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.030533511 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015059244 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.022593134 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.014404747 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021351032 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024265145 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015305271 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034032566 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.016507036 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.022957557 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027020745 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023740956 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019369522 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.032812888 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.017969549 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.023497871 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.0230311 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020138905 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022208269 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.016555891 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.023519327 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024501008 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025475272 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.015745883 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.022679914 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024170428 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.016595175 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.023278924 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016698474 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023769662 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.01699133 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.014874212 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020609892 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026833091 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020705811 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.020955677 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.015763418 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.014690989 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015683778 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.022654367 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.02059151 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024148332 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031053263 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014814334 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.01636368 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015452352 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.01968764 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033869748 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025138203 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023643744 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020747812 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.014990622 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016934315 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017213942 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015760361 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.018775578 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015109214 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015522363 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026394749 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017215358 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020571907 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015841177 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016741696 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025756157 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.020032346 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016095061 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.022861396 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015498893 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.02134486 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015095058 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.017155951 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020689647 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.01539117 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019861849 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.026196008 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.03244392 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.022842595 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.02466672 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.01663041 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023703538 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031427371 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.024175648 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016636057 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.025095224 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015310075 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034759935 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.025171863 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024404618 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026124553 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.017006998 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.033412293 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.021069331 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.026281456 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031884962 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017122407 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.024964411 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.016059025 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.032277727 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021057563 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.01596032 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024801825 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024020115 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022542398 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.028199351 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016946725 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024819744 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.021570537 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020109709 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017948399 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017913076 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.025123596 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032587214 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.016991032 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.022249613 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024330582 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024623267 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.02124726 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028721164 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024413311 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017135631 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.017896947 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020204602 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.016924363 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028637271 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016440061 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021094697 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021241897 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016230212 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023546526 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033335323 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025839908 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026074888 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016261403 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015654123 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.035179179 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020386582 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019947983 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024549096 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026403409 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028971057 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.02597791 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.033715391 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016763918 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022656051 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028826906 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017233079 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016082016 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020362234 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018014335 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025569231 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026331216 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023731176 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018295479 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023617161 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.030103167 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017808071 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021393351 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023014296 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017208425 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.026983065 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024466119 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024930183 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.017949846 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016147156 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020011867 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025178803 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023853683 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025526699 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017314977 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.025644078 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030976611 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.023865102 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020030021 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016207489 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019985004 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025584096 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.023387242 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016246875 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021439829 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020295118 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.025913525 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.026005954 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021340066 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016283503 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.034111477 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.025245201 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025662891 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018242722 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.018376627 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.01674619 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016296403 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.028103915 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016331331 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.01819303 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.02162321 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018845122 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.035561803 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.025824421 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.033218364 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017536788 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.021410026 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016371899 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026264338 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021513167 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016415797 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.02726926 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015850069 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032422226 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.029143334 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.024555649 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.01647049 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.022088668 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.17542454 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.03102481 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025018849 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.024401237 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.018272535 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025001379 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.016795543 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.026237597 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.01525673 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.014584143 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.025246989 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.023983938 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.027418129 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.01515691 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.025209585 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.01675846 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.023554118 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.023736182 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.016531581 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.016624113 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.01653763 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024621449 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.020295638 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.024415355 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.020462888 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.032060238 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.015933003 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.026157065 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.024233954 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.025872414 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029248555 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027015104 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.023529658 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.015498609 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.022665104 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.023525519 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.016038046 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.020756376 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.017895209 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.036683397 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.01658451 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.016575859 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.028989334 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.021911981 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.015166826 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.021645933 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.020252245 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.025084014 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.015833166 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.025435662 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.019676698 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.015817327 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.020188941 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.020229322 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.014357885 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.014992921 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.015286475 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.024758786 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.019965484 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.015196882 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033973582 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.016302181 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.023772673 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.025834741 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.022128839 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.01636504 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.014358114 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.01583518 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.028450359 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030587857 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.019246067 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023759407 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.016646511 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024377017 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.014460024 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.023845159 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023076777 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023703344 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015039691 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015351053 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.029968537 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.030530145 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020279849 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.031552074 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.02413814 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.016523618 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.0367051 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024189075 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016253613 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.026251469 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017462508 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015080852 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.014848763 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.01696687 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.026952047 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015399428 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.017578479 seconds)
  done (took 15.06250345 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.059213192 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016417595 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.014986398 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015032643 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021899074 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016182362 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.014971755 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016180918 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016206124 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017302902 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015120135 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.01511258 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020556188 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030078436 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022969424 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018809729 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015145276 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016384612 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.01514985 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.01637869 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021107856 seconds)
  done (took 1.197625297 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.019574711 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.019567656 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.018872799 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019061049 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018220847 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015290121 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018616308 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015239228 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.018954428 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015562916 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019214947 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015376426 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.015706764 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.015675707 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015683019 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016757741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019194104 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018437438 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015343143 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018824804 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016757284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018794955 seconds)
  done (took 1.149266642 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.017947405 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.015899424 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.023965324 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.014725031 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.014666181 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.01741843 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.014644876 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019555671 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019507845 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019579801 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023724363 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015374594 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.014597751 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.020857792 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.01453369 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015353972 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.058989874 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015628831 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.015678066 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.01486014 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017138539 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024019297 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.014922118 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015114733 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019613822 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017604414 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.014881969 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.01718058 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015405719 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.019674701 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.015608676 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.014685239 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.023805915 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023006045 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.019644963 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019606982 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016114487 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.015543959 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.014918045 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.0148769 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023226197 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.01613383 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.01508349 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016051731 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023826307 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015030312 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.014773798 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.023997999 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.014879815 seconds)
  done (took 1.671201268 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028196849 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.067611519 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.021067074 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.05063446 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.026602213 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.02035923 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.020937112 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053623744 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016180017 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.01654744 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.027626864 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.027810907 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017587867 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.018728534 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022094791 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017489568 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018107939 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.016819616 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.019764298 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0171613 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.01983862 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.022227427 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.027311555 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.02772689 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.018681363 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017133317 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017333421 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.018972692 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.027377087 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020547426 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019106682 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019632483 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.027734178 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.021389204 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017347845 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017526298 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028291087 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.01796687 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017678191 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016267022 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017473712 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.018894458 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.022338195 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028496328 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017972937 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.02275389 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017795589 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016019634 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028003794 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017824376 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.021373674 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.028999471 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018977925 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018233841 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019346139 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028033784 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.017999459 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.016809771 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018135758 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.027713863 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016369306 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018783998 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.028587696 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.01757004 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020993859 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.028763362 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.022902699 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018928894 seconds)
  done (took 2.428340653 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.024904717 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.050275568 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.028835421 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.02881102 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.025517701 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.024976755 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.024893773 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.024852725 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.024674078 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.027450776 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.024787933 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163876249 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.021933357 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.026437785 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.025063302 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.024924459 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.024798136 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.024724143 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.025044971 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025021793 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.025188657 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.029899196 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.025080578 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.029669018 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029428271 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.021838069 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.024946159 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.02502241 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.029839622 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.025223842 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.029476147 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.025087531 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.025257142 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.029916446 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.029476984 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.024974754 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015799709 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.024904573 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.025152347 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.025013169 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.021836928 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.029850372 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.025190347 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.022041914 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.025414794 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.02522989 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.03026278 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029975135 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.027127164 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.02828093 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.025438682 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.030244189 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025218953 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.025511696 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.030467383 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.033523748 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.03044558 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030512866 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.025647145 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.030376653 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.030640359 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.033735668 seconds)
  done (took 2.591274275 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030188223 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020823333 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.033599966 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.014842211 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014770607 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.023618894 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014718836 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.014738581 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020661793 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020652248 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022118372 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023981523 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025827163 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022148153 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.023939153 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025759491 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.02391941 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024052785 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020753566 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.023971052 seconds)
  done (took 1.230885252 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.01867665 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020474125 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.015687418 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.031004856 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.01554536 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022824215 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.015703617 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015542808 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015549598 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015719515 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020007793 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020146392 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015726703 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023555579 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019214312 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023045194 seconds)
  done (took 1.078418047 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020079143 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.024036017 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12452707 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016320552 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018070012 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015542179 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016368047 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015395944 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017673679 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.030352524 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0168197 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018757529 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.01660443 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015195284 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.015800883 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018457316 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.01761068 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016522267 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016492531 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125954797 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.024586598 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.01700148 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.018505774 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017226288 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.01822938 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.024640552 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.01796319 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018428648 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016601359 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018828655 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018386853 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.027156975 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018371623 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017115353 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.0152445 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016150258 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016716988 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018717413 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018714241 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016657516 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015525638 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018340107 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016712832 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.016987841 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.017766854 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.018696779 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.017799564 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.026327898 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016473644 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018373233 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016610606 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017797048 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017026008 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.02748339 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018646551 seconds)
  done (took 2.002966357 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034196218 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020563105 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.014835146 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.014739062 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020060559 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.020649475 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.02018467 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.020270188 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020669366 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.014710661 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020689108 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019763657 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020671761 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.02044366 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020926351 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020451264 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.014782978 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.020598425 seconds)
  done (took 1.140233978 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.023998144 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020511814 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.020792579 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.016747233 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.01662731 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.02069986 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015086271 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016209307 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016266465 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.016803841 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.01680813 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016381003 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016380442 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016413097 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020354531 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016769605 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016440338 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.01537113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.016818301 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015196471 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020850719 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.01533368 seconds)
  done (took 1.158731157 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.186807245 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.146132953 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038980557 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.03465291 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.026592965 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.051113117 seconds)
  done (took 1.258828545 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.051087148 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.052589619 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020185514 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020142269 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024250138 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022534923 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022527749 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022703888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025630465 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028382846 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022957731 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026106068 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025799033 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027538295 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024379656 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024387743 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022996124 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022927476 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020336839 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030220941 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023049229 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026369742 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023357343 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023108724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023286891 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028081009 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026532458 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029122459 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023141568 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026546855 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02486835 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023279714 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026587588 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028936457 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020541711 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026323333 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023309394 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030810587 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024834806 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028067692 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020382671 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024911623 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026440556 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026118007 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026701767 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023548509 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026377068 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023504794 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023578628 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.03478148 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025279489 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028239909 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02515454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026967504 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026722152 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.035020554 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029517126 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028486033 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025240795 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029436517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028605118 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025536686 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028668652 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029772373 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02554101 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028987686 seconds)
  done (took 2.53637229 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.059232065 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020613266 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022728043 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028041624 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026977733 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022571519 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022775016 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022854433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022926083 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020688093 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.058866306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023118828 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027420991 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027445853 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139319272 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023861951 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023255865 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027634659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020705464 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.03376971 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023138683 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027930068 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027932253 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027846799 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028913575 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024924039 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023370893 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023263091 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02317751 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023202971 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026151719 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023327051 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027971651 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020779278 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027933053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023383048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023206419 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026078406 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023227358 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024972938 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028071734 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.03095147 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023290264 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023390805 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029467576 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023423523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023429646 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020974982 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023414225 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020958378 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029363546 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029321885 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029317439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028404924 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023626525 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023584428 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023472556 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023462759 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02356657 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025300446 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02834337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023424947 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.035120225 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023732337 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023715386 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028717627 seconds)
  done (took 2.637251954 seconds)
done (took 51.602938399 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20465684 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172428274 seconds)
  done (took 1.141544571 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.13610964 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.133184902 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.16252672 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023680954 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081455665 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.175060624 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.125075477 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026181385 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.02384565 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025448688 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023475875 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025127436 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025273013 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023428002 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.085919763 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.02610794 seconds)
  done (took 1.907837136 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.074885828 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.238663527 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.058742188 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022498067 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10525167 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.028589223 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024236158 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028199273 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028673795 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.022815971 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072750397 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.03603766 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.027453 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028464983 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024098657 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.027380469 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028189192 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028542709 seconds)
  done (took 1.689102525 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.090466286 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.033741872 seconds)
  done (took 0.906960832 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.124476395 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.06360562 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.105045639 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.309029525 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.094892308 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.097677576 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.101387648 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.099383485 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.068508557 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.094585797 seconds)
  done (took 1.936428492 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.06111128 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.055630663 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.285015978 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.053142401 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034202907 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029410734 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.029220182 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.030953617 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.029524433 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029080419 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074025349 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.027664397 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024283973 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.071266025 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.050025057 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.057856766 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023436968 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.030036956 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032350996 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023291767 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.027960584 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.03143502 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134330169 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.030727545 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.052198473 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.027768683 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.029436369 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.028723628 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.028565155 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030502444 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.031025954 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.055604454 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.030471162 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037282564 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.028811214 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.050068577 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024353943 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.050833433 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027000829 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024312254 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027571884 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.031105279 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.024789394 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030481203 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.029771187 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.03015523 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.031444066 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023596888 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.029832053 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027284035 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024567425 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.02871053 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028559892 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.029667183 seconds)
  done (took 3.023924622 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.078037011 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.066329873 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023950704 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.07362575 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064971965 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023967262 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079937181 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060238147 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078367578 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023530517 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023104243 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023161977 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030885283 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.03472088 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075847821 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.069173161 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.02522594 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023878272 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.068255599 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.068971002 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.022801866 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080024037 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071114415 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.067908727 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022544275 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024123848 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022762929 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023392077 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.031616963 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031417187 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023167928 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.033808387 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.0346656 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030503353 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022565817 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022849492 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022848626 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031416239 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033014169 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032724739 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.029887938 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022535394 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022883778 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023373965 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023818851 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.02238312 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032795791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.030699841 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.032694236 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023198099 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023283584 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022759009 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023637784 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030330179 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029290673 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.03074191 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.03379363 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023172935 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023101529 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024442752 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034666998 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031611339 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031481762 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024127899 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032705657 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023153086 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033843336 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036780266 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023068242 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023622153 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023203737 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023176746 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023524808 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029964857 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.030090329 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023671233 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023509585 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023020744 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031804189 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030278846 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023023338 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032293207 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022656877 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023248173 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023588783 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023840746 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.03325001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.031775043 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023746308 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023255867 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023276227 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023467405 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.023595423 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.033132952 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032470141 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.032704003 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.034638215 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024230774 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.03531838 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.032711813 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024269555 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.031570259 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023821794 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024205907 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024050728 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031716607 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.031274926 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.032984797 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023683011 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023422577 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.032908434 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034743723 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.02366988 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031297877 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034106891 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.031912965 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023164034 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.03470446 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023699218 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034644987 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023888297 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034608711 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024072052 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0323226 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024015639 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023236219 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023941005 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.035951144 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024742439 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023812251 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024225076 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023791368 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032344227 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.036666909 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024499639 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032801175 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032548766 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024392911 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034867267 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024003782 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034873196 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024020929 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024272642 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023114216 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036930627 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02391229 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024225418 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023909413 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034551106 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023936719 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034440849 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.031779551 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023395457 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.035751903 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.034239738 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.031818274 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.034835368 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024768789 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024076113 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023783554 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024024397 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.035076012 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.036679203 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024924959 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024048818 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.031566931 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.035354646 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023469513 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.031889988 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.031761606 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.032234787 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024164028 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.167767059 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.032885508 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.033547126 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.029252153 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.031841725 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.030170903 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022931076 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.028978797 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031628706 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022966064 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035847634 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022819037 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.032120867 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.031837466 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.028359223 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031638642 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.032810744 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.031443325 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.031175526 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.033187636 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022443529 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.022717181 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.029063005 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022666968 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02286071 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.028729728 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023246363 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023293114 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035001371 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022940395 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.032039 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022323662 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.029798976 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022247394 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023172609 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033650903 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022654593 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.02313976 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029197283 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.022748766 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.028786641 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031712974 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.028782175 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.022635752 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023088151 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.032346714 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.0315352 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022661963 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022582066 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023110208 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.031344658 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.03073239 seconds)
  done (took 7.794565636 seconds)
done (took 19.195230147 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.153130313 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.071701344 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.154607475 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.090766557 seconds)
  done (took 1.251740316 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.056091079 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019232825 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.139564233 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.15064106 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019529996 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.133515315 seconds)
  done (took 1.315345607 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.212121924 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.137766428 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.141125054 seconds)
  done (took 1.291450025 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.137321843 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.283194153 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.557770653 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.132454501 seconds)
  done (took 1.917532143 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.171469787 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.163678576 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.030943207 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179877544 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.037948879 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.015848578 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.10308893 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.022358941 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.05224355 seconds)
  done (took 1.635293383 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.095529058 seconds)
done (took 8.308238534 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.180450265 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.137478271 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033012078 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.026741015 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.131934211 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.134226016 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.139245186 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.029139189 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.129850215 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.299001761 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.161993004 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.047173314 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.153119749 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043497187 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.256801221 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030876289 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.028688523 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024186984 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.137296957 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.126845363 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.238211871 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028012318 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.09335025 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030059005 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.098203158 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.077750097 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.168314883 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.288368 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.27216647 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030409207 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.126865915 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.042222074 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.11361527 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.131561223 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.132838067 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.047746264 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.019935735 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.240565026 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.111986818 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.304073114 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.152288982 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.026541717 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.142253325 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.024571323 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019159308 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.141321617 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.032107566 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.025807603 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.041902211 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.02615967 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.041790603 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.026440549 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.141439067 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.023440079 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.092389482 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.138334849 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.163561528 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.098966375 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026939349 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.039486006 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029273128 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.153361841 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.038712252 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.025512087 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.03209155 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.0199191 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.136597213 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039273707 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.02024036 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030198581 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.028158274 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.113892685 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.15377054 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.064669822 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031834416 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.119250409 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.096332677 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.046308487 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.04904746 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.02957958 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.01956199 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.168756025 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025118003 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038382091 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.026149665 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052343413 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.01977402 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.035531685 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.156875809 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.151393204 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.087185008 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.020754476 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.234807221 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022156066 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.200452318 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.020797734 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.019701327 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.163803939 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.019427873 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.019604038 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.029137379 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.027825962 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.021192557 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.14981761 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.096545029 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.027160638 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.025803248 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.019809894 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.024838722 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.020398464 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.019808981 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.019606931 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.093991735 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.034932507 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.018839297 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.106734675 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.125214382 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.030284179 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.035695814 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.083604239 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.022338157 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.027918269 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.026263362 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.122603938 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.027227577 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.13214314 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.020760462 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.04179192 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.118659232 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.092897477 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.105428139 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019313824 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.153631298 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029200122 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.01880961 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.026202 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.046882938 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.028668156 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.03468678 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.028293353 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.154964265 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.030023177 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.024756736 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.118751841 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.018714606 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.110393405 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.093725186 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.127112406 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.02427375 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.029501226 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.09216029 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.042726559 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.047270301 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.042016856 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.023527773 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.019523827 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019208061 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.034064985 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.018656196 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019403854 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.032840389 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.025534588 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.01918807 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.237739945 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029427055 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.023706658 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.259161954 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.031495314 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.098897374 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.039660435 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.01996954 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.098263357 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021532765 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.039888059 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.081263249 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020019711 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.09529931 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.02009284 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.019722953 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.027053365 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021373921 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.028534066 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033030953 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020243705 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.032907134 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027278353 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.019896015 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.098298687 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.021552963 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.167827648 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.09741311 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.116061321 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020047772 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.037939019 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.01953232 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.133513782 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.019828202 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.067639462 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.1088392 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.034569414 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.039900893 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021100426 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.093758751 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.03413653 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.019536578 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.100812476 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.128297901 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.098639935 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.027075306 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.242134293 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.028828072 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020312508 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.026964478 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.027940615 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020606256 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.095689582 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024165676 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019184647 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019493625 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021411185 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.018767229 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.043749959 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.01923396 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.027487143 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.019861224 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.022496434 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.021771631 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019193335 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.02761321 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.09632007 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.129721062 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026573368 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.040051081 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.032670912 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.031000633 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.066903585 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.026427589 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.141261031 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019215269 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.029057654 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.041992997 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019445307 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.024607928 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.019913853 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.037742625 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023160405 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021629342 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.028406458 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020266612 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020392009 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.019992291 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020212707 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028205152 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021552761 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019467271 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019498191 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.019936767 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.024439183 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025331435 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.03078757 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.040053181 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.476054172 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.022303235 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022291671 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.020293988 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.02019892 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.0204535 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021824855 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020040637 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022037145 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020381874 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019653708 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.049364835 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.025089758 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020924506 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.041130633 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.020180015 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029560167 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.128763233 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.037018058 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.024962979 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019500019 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.269088316 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.111120845 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.20846711 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.039685056 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020267949 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030020152 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020068547 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020215449 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019017753 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046746523 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.024217322 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.02010925 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.018898467 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019279889 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.066343899 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.027495452 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019187799 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.027479251 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.019340915 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.01956686 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046815202 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020444748 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.019369609 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.036967687 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.031128871 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.096374471 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.030865615 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.022226282 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.069007185 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.018650609 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.019309297 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.019783908 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.111018194 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.031826374 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.020493661 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.019278155 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.026491347 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.027951881 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.070735679 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.024944275 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.022212112 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.027024599 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.01853406 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.019669591 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.043414434 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.046216213 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.020248231 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.022770645 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.019115656 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.019668448 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.092301852 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.026756157 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.023631205 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.101414887 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.021187236 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.026862285 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.018527285 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.46858111 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.023801341 seconds)
  done (took 21.880826424 seconds)
done (took 22.696172234 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.161713511 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.03380202 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.032751021 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.02807889 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.031893469 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.031965842 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.033101209 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.028839675 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.031898409 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.03127083 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.139861746 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.019212877 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.026916326 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034522358 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028126186 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.035308396 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.031850172 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.034698223 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020080951 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.034972571 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.030089524 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.032626921 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.033746813 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.034314474 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.019992574 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028030026 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.15429021 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.038806822 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.02316999 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029270223 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.02724416 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.033308669 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027280797 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.026917275 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029072864 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.024881296 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029884349 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026098956 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.155455344 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025169171 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020121665 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.03246517 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.026692426 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027519993 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028212288 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.031607415 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.024890981 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.033350164 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.019345941 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.032478277 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.155161548 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.024362059 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.023161221 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028210366 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.024967467 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0291179 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.022982837 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.031282853 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.024730164 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.031761755 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.02763954 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027567315 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019468493 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028222726 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.026863051 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027161924 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.01856074 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024369622 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019524061 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019454184 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.018839703 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028143368 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026401795 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.024489453 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.018882604 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019506619 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.018986661 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.031972396 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026736743 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028386782 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.019943652 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.024908263 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024510203 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020030553 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024441847 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031374874 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.018970085 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.019997688 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.01900068 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.03121252 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026127197 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019505471 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031456269 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.02424382 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.023930354 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019546466 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.019031732 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024080874 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027609877 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019542118 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.018543637 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024174175 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024641577 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028277453 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.01990281 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024066666 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.023989849 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.018652264 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028278347 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026800318 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028682362 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.032540947 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028308875 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.030797978 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020032972 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018537584 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.02929794 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019867848 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024356999 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027500691 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.024762859 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027479679 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020064278 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.018883089 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024152074 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025491692 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.019905008 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020032673 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.019918809 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028438776 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026935057 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.018709083 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.01958379 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028441083 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028468301 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.020046817 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.019410415 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028603029 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020190894 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025625168 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.024904866 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028417682 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.019314194 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.019968651 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.018887729 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.01932744 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.019027115 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.02490702 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024360157 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020332184 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028427211 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.026800062 seconds)
done (took 5.474042163 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.034859323 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.063221392 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.174252099 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.137954267 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.032912469 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.020755629 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.024601186 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.040131354 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.023287958 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.045346266 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045114838 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.041632876 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.161426894 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.018824468 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.019935391 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.020685124 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.01833292 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.032110511 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143531075 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.043784999 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.062593484 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.019612646 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.036392355 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.040153005 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.033021161 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.039064246 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.021237575 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.020793109 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.022791412 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.037558661 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.046028374 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.019691725 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.021081907 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.039572808 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.036257143 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.028872763 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020765241 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.026842586 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.020809401 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.019889437 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.021878293 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.038662392 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027105989 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027277965 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021101051 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.020489605 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.020332516 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.027940423 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.034342158 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026324302 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.032704736 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.037055605 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.021928533 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.020463993 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.018729853 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.027699855 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.020327295 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020481311 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020743294 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.019718365 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020802925 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.022843795 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.026022301 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.030834562 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024166973 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.027661537 seconds)
  done (took 3.289358684 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.039338164 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.047256162 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.033992725 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.0343302 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019517856 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020203855 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020144046 seconds)
  done (took 1.12537881 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067649352 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135483512 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.142616323 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143612276 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.154889336 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.141440494 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.032945083 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.049818931 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.019565105 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.155272172 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.151945094 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146803163 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024151561 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.032887996 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.053024414 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.150498918 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033547668 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.027240998 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141697211 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.147740389 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025203071 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.051142033 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.032291234 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.021290197 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.145897935 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138281633 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.023971799 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.021453049 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023174788 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.020534471 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020614888 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.044251206 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138354727 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.035705645 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021441603 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019538262 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135604949 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021755079 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.138539676 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028163195 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.138169729 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.022950964 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023002056 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.02071965 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.021811958 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.142074339 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022786761 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020902026 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020298239 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141564874 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.020152171 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.139203236 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.023562882 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.025977096 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.027702149 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027113214 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.027479062 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021047933 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142533841 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.030565573 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022281825 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.150357115 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149547793 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139828245 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.150390202 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.029569362 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.1401886 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.139067118 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.020643028 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.028620698 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021144919 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.151954043 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.024471616 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023334608 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.02606892 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028074893 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.157663182 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.15827016 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.158767069 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035606326 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023775284 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.021194102 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.155733548 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.158925824 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026758401 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0210727 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.022000487 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037286865 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.04646488 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023173447 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.025928102 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021098548 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.031235571 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023588823 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023660555 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152459323 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.021709544 seconds)
  done (took 7.606562198 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.028272743 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021477734 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.020944705 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021271492 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.02149638 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021304181 seconds)
  done (took 1.141792351 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.048387176 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.021709326 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.033402711 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021405729 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.043278315 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.139922893 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.139913919 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022770563 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.037227091 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.033033319 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.140081008 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144366982 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142935006 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.022396356 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.141003003 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.032949733 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.141760734 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026273476 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032149194 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022705205 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.035025792 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022346259 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022533362 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.150638767 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.02350883 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.032528956 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.030568091 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.032381215 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.03188092 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022608136 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022259867 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.023137702 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.028195805 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022560006 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.14320686 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.028624425 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.021810477 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.025369023 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.02345104 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.023171991 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.146862948 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023062994 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026417359 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.025501531 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022659603 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028333075 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.025484725 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.02544664 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144010691 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.025772323 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.025448823 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022128972 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.023308447 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.025375108 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028346796 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022737978 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.025310484 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144707619 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.022697799 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028550069 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.021895202 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.0234373 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.02279057 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.023374024 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026805058 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.025432701 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028586744 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022886611 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02289218 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.02194523 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.025668155 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.02196176 seconds)
  done (took 4.231351824 seconds)
done (took 18.308907506 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.507445801 seconds)
  done (took 1.429513032 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.020158289 seconds)
  done (took 1.968117669 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.052259209 seconds)
  done (took 0.998869046 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.286225306 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.378134698 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728552846 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.093425391 seconds)
  done (took 2.417926021 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.850771263 seconds)
  done (took 1.803542418 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.219622963 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.181416258 seconds)
  done (took 1.383207617 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.496056789 seconds)
  done (took 1.44363287 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.317228647 seconds)
  done (took 2.267794707 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.189192194 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.129652798 seconds)
  done (took 1.268201628 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.594760091 seconds)
  done (took 1.545434382 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.572172064 seconds)
  done (took 5.52015735 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.192641956 seconds)
  done (took 1.203153756 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.194896276 seconds)
  done (took 1.145151041 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.697961787 seconds)
  done (took 1.645557898 seconds)
done (took 26.997427851 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043339372 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.039074179 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.038645655 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034153175 seconds)
  done (took 1.092881179 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030078784 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.024211232 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.026622785 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027173202 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.024527494 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026320645 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.02674225 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.022951385 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.024402789 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.023539306 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.021859406 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.02348022 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026049439 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023117019 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.025668421 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.027025917 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.023716074 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.024018405 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.025613587 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.023199034 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.02623413 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.023633988 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.023625239 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025038619 seconds)
  done (took 1.550301433 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.033750806 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.02552042 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.028533779 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024375566 seconds)
  done (took 1.067637262 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.032357756 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.030249208 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.038577109 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.043288638 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.029471266 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.030331216 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.03678075 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.036954217 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.043348507 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.039718336 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021104324 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.020901584 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020163349 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.038807494 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.036287876 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.015710696 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017228469 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.030505526 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.029657881 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.032470142 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023179523 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.018923185 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.029762176 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.03058865 seconds)
  done (took 1.676168334 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.037575914 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019173856 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.035313094 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.044446366 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.045637027 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.018971212 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.032749432 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045399868 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.08187664 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.018997519 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.024977032 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.018928266 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.057745912 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.01910175 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034317158 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.06410398 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.066962154 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.022948193 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.051978689 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019022003 seconds)
  done (took 1.717643763 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028233819 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.023474587 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.023754624 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019048177 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.029978459 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026328689 seconds)
  done (took 1.110435958 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.023980988 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021208763 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.020933571 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025068405 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021507021 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.020722565 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.020880157 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.01960197 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.01957096 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020394011 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020365142 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.020781036 seconds)
  done (took 1.213082077 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.16966417 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026283598 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.024240252 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019667941 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021441906 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020473819 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.034622088 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022439439 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.037582799 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020424639 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020629149 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.022809742 seconds)
  done (took 1.396722902 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060887885 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06532212 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099121276 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069628614 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069069032 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049701373 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.196130954 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.032292723 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.118797144 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091847759 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070732872 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045337813 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039880737 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.0231236 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054678295 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073824997 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09216996 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.026445908 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.068265953 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.240393699 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089096514 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.091926742 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104383355 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07188771 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047489981 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103974331 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050917171 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.05891703 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.078166915 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083620818 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074908331 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.053098884 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025081404 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.024602102 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107193472 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.062803471 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07576368 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.047204067 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060149695 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042993462 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063827611 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.023331545 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.036006694 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.06634607 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041123671 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09026181 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.047845313 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071828426 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035988193 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098676161 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087900666 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.174949795 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.041939104 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062891378 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101351722 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073993009 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100055567 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065076605 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039752863 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.230377373 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.059151813 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053902891 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061363885 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033531172 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131293015 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042618235 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.065548292 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064382048 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.049057303 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049115617 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.060074314 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089498283 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079358557 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.079645062 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090542534 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.0449427 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073056104 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.053497103 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.081569698 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056989627 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026178987 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.076594745 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083467043 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.053906892 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.054829569 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085463414 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.046719856 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029832395 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.055604009 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.074618106 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034156053 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.069730415 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036398231 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.065579177 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095187989 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053859465 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066479696 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.073533624 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032175773 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113927665 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063922408 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026796415 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072726549 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069276052 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114974093 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052055526 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.030225542 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.056192993 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059743508 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.11244781 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067994548 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035531369 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068701668 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103717268 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051635844 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.258387014 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053211952 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106008688 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07332107 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.04263962 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.030513735 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.046670966 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.223130205 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06141608 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065258478 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047548491 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.037228885 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040008635 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067849427 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046270823 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034196845 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.067317881 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.055967184 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.028347138 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04166674 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.029959694 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094324753 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.031620413 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088321585 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078401087 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.028582988 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059921981 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.048453941 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058949424 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.050659376 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070639189 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092329883 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.13758259 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043731308 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.047715796 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061023639 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09872882 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081991127 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.046453697 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.031064312 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055871483 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066835736 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.053026063 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080499016 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.048612599 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062727577 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058264568 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099397641 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103267778 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054776625 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056351302 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065783245 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.079727066 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029051206 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115767953 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060416926 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074773223 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041641812 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100718642 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.066660003 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045469948 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.041777688 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055541516 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.061744483 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064326263 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105822263 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.052157552 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.027556196 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052294178 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108933759 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033247861 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070402435 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.0475002 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.049280245 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079107639 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.05437967 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.038092844 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022997195 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.24622756 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111994297 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.023520318 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.065739341 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.060626252 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055781842 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.074608751 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.022835451 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.071408338 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089277998 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06926379 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093233854 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118088072 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070586503 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.071202212 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.066966141 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.058749038 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032518887 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.078575408 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088162238 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049119656 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044914783 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088277715 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072753692 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.092144086 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.07401759 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074282516 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.061924147 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061981076 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060047245 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.061319652 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103417457 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.078116945 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.082159413 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037752377 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06207279 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073476435 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093959672 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036329445 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10034761 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.040539 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.077168663 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.032883267 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.081328717 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030309538 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.126239537 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034862325 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057847078 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.023999914 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.029202393 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.102523201 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.070610747 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.066952417 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060569974 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.101100075 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098454816 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.032045048 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066384359 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074226605 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.059701299 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.229574747 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.062644338 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042457522 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048661823 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.060242875 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.03836448 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.034523441 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069569953 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047390106 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078535717 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.037361006 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028219183 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092052714 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057393219 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048060382 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029639157 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059626636 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.07876273 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.046150818 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03993202 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.067521501 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057916212 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094695723 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.044019494 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.050954268 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077650644 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033505322 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.045666069 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.022809873 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.038841527 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.029405728 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082159116 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.029172318 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.070576192 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.022429436 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086594686 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.04231546 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.047539435 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057336952 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066053151 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.08371881 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049246566 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098650199 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04508406 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.076903157 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063753625 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04953476 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.041495002 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.057979038 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055785443 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078909758 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.050950779 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079959785 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1022022 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058691383 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.099954174 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0459184 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.07870086 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062747645 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.081371007 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.068803598 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129591012 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102299243 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071486464 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.068651927 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030232057 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054828307 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06519978 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073160266 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.29808566 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079467221 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.025965979 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058048728 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047383794 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06186994 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057315235 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035442676 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097664216 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055946127 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041808747 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064665327 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.043845286 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057028954 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029347502 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053031488 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.056288281 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048059098 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050340984 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066837521 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081362074 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065142313 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.096064859 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.055467628 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.045351072 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.071681684 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063575863 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062360365 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038827893 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039328708 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09172503 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072796447 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.080517928 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.054948249 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063754158 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06569916 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055138 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.081846272 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063402274 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.085190625 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034553806 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.031123496 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022156358 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.026158529 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080878718 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063429701 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06712417 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054320385 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026212419 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059026376 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059202236 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026164168 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042852957 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05080944 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.053379642 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.047973755 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063824636 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.066172342 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.05147574 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060145262 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.052815475 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107601597 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.057093712 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045873562 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106030563 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11515043 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045883743 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051711215 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025973627 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034116901 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073879854 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115049296 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.260438265 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.031992841 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040677914 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.041142318 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04066292 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025269993 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.041999622 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.042728629 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058743568 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051826647 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.067034957 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058009993 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028697293 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055730829 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052088307 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.045757403 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.060099153 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072325815 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.078645774 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.094499448 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066662547 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060477357 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029387481 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.033511228 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029179926 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032805171 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.054427415 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.031980264 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029399995 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096779391 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.04473937 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058830634 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061905158 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041571835 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.02924496 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090032691 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.02319915 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090764034 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.024850553 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036205839 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036180194 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032973254 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049064261 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095692612 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.065077779 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.068042571 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062234194 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060171366 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118876496 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116560172 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036903344 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.099365093 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030024831 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.030908138 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030058539 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067256739 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045468346 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.069225733 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100337496 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045472225 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057532962 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032607475 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102576659 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.05925369 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060817994 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041924673 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.034091237 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106595298 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034498876 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.04003859 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.046131543 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.069648819 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.027270715 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.060019491 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038899641 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.035122278 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.272047122 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.66391788 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044464577 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.030592698 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.04999696 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.094489947 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084558317 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049102241 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061214876 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.072294217 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053374742 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.04666159 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060665052 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.145497775 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027595634 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04785023 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.05685334 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050494897 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054618808 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.05196729 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.040450015 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.045785375 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.040287491 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.032590426 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060540611 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041443958 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049467915 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06028122 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.036099384 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.041021001 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084858638 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.057474243 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.036749822 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042801674 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.057415768 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041996499 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058015597 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.023208672 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066841661 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043022626 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074629405 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.054769275 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063782433 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082311253 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048970216 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094824902 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.064184236 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0792034 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041832733 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032450033 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083832885 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.04561985 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032018255 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104504534 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.053957295 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.058426324 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059605816 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.051273556 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069149531 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077055787 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070613782 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053711851 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033873653 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060270366 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.062213848 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.043987758 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035216209 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.029717815 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.030912035 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.324596049 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044912081 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.04148301 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071875352 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.046689915 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.210591813 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.056853994 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075815798 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.040904215 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054875879 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064527169 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045077276 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063182291 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054103024 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.081883172 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128815839 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077544132 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082338155 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08734791 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.031067815 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.028802035 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.022149709 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066837665 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.032797604 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.042366514 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032311062 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087124073 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.037254617 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064875837 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.199082469 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.034020016 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.047525269 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049575703 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.023101451 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.036599991 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061209943 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040434693 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033651636 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072326596 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.035086255 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.08379891 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066333588 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054232964 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.0498912 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035066922 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06981885 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.057688761 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.085168271 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.049489214 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.029354973 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.080446409 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059302634 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096933667 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.027128459 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035373748 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087036571 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059719283 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089435435 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034615869 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110027264 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.09992924 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.056022705 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093296491 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025057151 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.04224179 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045386043 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.082312633 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040452736 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070130284 seconds)
  done (took 40.689007532 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.149587725 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.139621551 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.076717568 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.088616775 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.24452589 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.253668448 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.105919716 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.078061599 seconds)
  done (took 2.245920429 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.0245024 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.037300167 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.034625602 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.277401386 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.053827348 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.020612298 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.025636734 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.035359989 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.020841441 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020220032 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.054935297 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.02058419 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.020943121 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.428617294 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.019738147 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025475415 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.020909254 seconds)
  done (took 2.228426005 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.306981019 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.562326991 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.330413381 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.413020128 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.103782515 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.561266904 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.028800982 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.034323801 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.638468492 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.365479742 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.099568442 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.180594218 seconds)
  done (took 17.69690553 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031150602 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.153893347 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.151865253 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.027680871 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027203553 seconds)
  done (took 1.5274707 seconds)
done (took 76.236556593 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040466578 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.123616509 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.02039654 seconds)
  done (took 1.245875037 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.157046926 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.151594825 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.151445375 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.154265127 seconds)
  done (took 1.685513506 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030416989 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.029800739 seconds)
  done (took 1.136245479 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.185503058 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.248120175 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.043968348 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.038448023 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034115931 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.034459993 seconds)
  done (took 1.184990649 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.026827588 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.024530794 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024636173 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.024870273 seconds)
  done (took 1.170067753 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.134074445 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019378731 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.021833991 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023608079 seconds)
  done (took 1.272046354 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.040746865 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.039794699 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.068966272 seconds)
  done (took 1.223464026 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039311152 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.03865625 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.032706963 seconds)
  done (took 1.185679886 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.065135243 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.04976504 seconds)
  done (took 1.185767021 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.035348097 seconds)
  done (took 1.111125521 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.048167251 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.051094493 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.218608304 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.18295009 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.220271916 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.204808828 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.030104457 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.030576548 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.02638283 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.025381338 seconds)
  done (took 2.108834832 seconds)
done (took 16.09971478 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.03602351 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.14301547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.270805206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040349397 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.608816309 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.268029198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.678934053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044168421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053085802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021804475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038373129 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.586440302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.683974095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.100780136 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.671232847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.091855931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.761153059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022415923 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021261191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021799233 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.672139621 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021388499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021668949 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022117418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.75872473 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.410281862 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.024268673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.091571283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021840466 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025695897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392875765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022625067 seconds)
  done (took 12.719666289 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026235716 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076310264 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026730256 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.037172295 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023634566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023706072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.02530021 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022053335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.063903165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021643354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038652049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021144667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.025842712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.02265746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041628572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021537343 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023719836 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022371278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021606614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022111163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040353406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021266677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022003967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022115882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.021731466 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.035762413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022820666 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021668412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.02190298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025538705 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.026654908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022969279 seconds)
  done (took 1.996799282 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079327013 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.079996887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027396595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.062065357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073867944 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024253047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105551857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044189493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.067119298 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022066306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039019728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021750804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.05816897 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023334025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042191572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021999764 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024195731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022347741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021501397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022228911 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.04064498 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021629437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022259385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022403222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022298003 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038089378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022841411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021944143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021675053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025782452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027680257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023116666 seconds)
  done (took 2.278761722 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.02498315 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.025359661 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.030944579 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.034085011 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020012563 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.022194286 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.023244886 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020060515 seconds)
  done (took 1.287031641 seconds)
done (took 19.372122639 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035349875 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.02203378 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.024875167 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.041627129 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.027914287 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.142457294 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.019019381 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.026970805 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025168538 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.024496658 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.026729119 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.020302115 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024062408 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.018795206 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.027030865 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020378494 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.145883459 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024184917 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.142866769 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.144095657 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.022411142 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.025508856 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.028524105 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.143172356 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.143529284 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.143387051 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029108976 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.025970594 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.020309628 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.022950481 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.141205517 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.143307262 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.022988735 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.139329717 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020399895 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020180643 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.024435864 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.021835344 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.147283089 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029425566 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022518424 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.028995735 seconds)
  done (took 3.420471089 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.147111909 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.152266564 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.144280363 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.032045591 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.028605616 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.031844604 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.150889906 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.0288966 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.027529661 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.150279682 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.023596042 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.027622018 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.029960905 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.020698199 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027517632 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.023824793 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029160016 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.021780676 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027438492 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.027512908 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.1507633 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021009337 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.028194623 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.028996281 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.023087185 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.029123962 seconds)
  done (took 2.537726618 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.030203004 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043073966 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.044800666 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.099341522 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.063328505 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.036123953 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.036476759 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047131178 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.054494382 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021256507 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.042919331 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.048639439 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049478197 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028051325 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060488248 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.039613864 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.033766769 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022815455 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027716937 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.055478303 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.043902358 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040446976 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054055208 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.040984768 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020243166 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030353887 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.028392721 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037349377 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.028604954 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033346206 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025264948 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.024828453 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022215888 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032809714 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025262274 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019495527 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044348759 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.033760857 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.03605127 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060681664 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031181586 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022587339 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.047217139 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.084357244 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020818631 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.023699767 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025380373 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.033570969 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022590254 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.051676374 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036260353 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020954296 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040346395 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022648525 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022583109 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.036641009 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.022783421 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.02325545 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.032746022 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027167509 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.042423871 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026396732 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.041526299 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.02093849 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032287374 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022682764 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.022874774 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.01999041 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.054988792 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.02869269 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.069878675 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022376576 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019423318 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033479226 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.032536793 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028366763 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020927665 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.039977663 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033571301 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025062826 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.032017244 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024083022 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024346453 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.05791063 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020261193 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019369929 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019332861 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.023566028 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024495037 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.021858039 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.033582625 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020674384 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.024495956 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.035426628 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.021120243 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.02175805 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.023578839 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022352314 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020598362 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.030990952 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024836148 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.022782203 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.033924572 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022250211 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024430595 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.036198054 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030282725 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020679195 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.026047653 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.023366757 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.02280721 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.025618683 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.024371206 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.022964794 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026144055 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028636807 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027225533 seconds)
  done (took 4.924233332 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23830283 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.226664587 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.02215819 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.22424353 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.029722432 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.156675615 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.225962757 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.226311588 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.021819665 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.02256467 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.02091052 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.170146163 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.165894722 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178216869 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.159118715 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024020641 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.049365625 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.178651699 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.23330703 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.228904903 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.047764327 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.028887268 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024165948 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023070279 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.02266125 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030483058 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038589572 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030504908 seconds)
  done (took 4.168151902 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.030344002 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065991789 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025090754 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.045946822 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.038456761 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.021614901 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023432583 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022186098 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.038166273 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.026935111 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022341149 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.026074906 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025204081 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.023868593 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.021823142 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028096625 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028029164 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.028896663 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025271237 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026140034 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.032516722 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.045843048 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.025882942 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021724432 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.024930456 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021601342 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.027047809 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030109511 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021404872 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021510616 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.018782515 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.026107762 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.036170174 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.022858394 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.02144623 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022256734 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.021913291 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.021904737 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022153109 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.019995032 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.019962177 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.026811245 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020385839 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026657369 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.036106856 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.023992426 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023246052 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.02432868 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024067593 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.018685348 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.024842041 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.024948982 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024306443 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.029972768 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.025606321 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024209089 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023149774 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.035757037 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.027329873 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.02123465 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.020932485 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020375707 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.023440808 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028348672 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038567857 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.023440478 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020131145 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.021841262 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023221216 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035832411 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021186161 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.027299054 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.018746819 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.021712611 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024211327 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024834759 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023237896 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020332998 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021581093 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021208372 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.02180657 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021695635 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021181191 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024437157 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.01975302 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020261121 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022488469 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.023351713 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027149145 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.020725126 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.024443468 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023108143 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020618343 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024405813 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027143839 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.024595697 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.04191684 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.029542954 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.022530582 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.019595021 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.036614218 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.023507633 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.02121062 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.023592869 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.026092675 seconds)
  done (took 3.82992264 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.051343151 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.02379412 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041403364 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.052914342 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.031774558 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.027301188 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035374194 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.022854308 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.042561552 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.020932961 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.030904538 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.02016272 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.034488327 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.030247533 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023589836 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.031458389 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.024472999 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.042061178 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.036312467 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020512985 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030361176 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.033739387 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034186145 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039367805 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039003522 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040000529 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.033898608 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.024604399 seconds)
  done (took 2.038510162 seconds)
done (took 22.00045445 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.154825256 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.352753145 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.125958985 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.826296119 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.189803148 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.236625772 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.219408543 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.099922602 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.893268414 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203929372 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.87571532 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.105643502 seconds)
done (took 59.45915871 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.158465468 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.262746884 seconds)
    (2/2) benchmarking "String"...
    done (took 1.363177164 seconds)
  done (took 3.735418619 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.555801076 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.109122316 seconds)
    (3/3) benchmarking "different"...
    done (took 1.152222593 seconds)
  done (took 4.910936884 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.462240447 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.103384975 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.420678849 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.099161631 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.112697836 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.754320253 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.292370174 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.782736722 seconds)
  done (took 27.670260048 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.107284198 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.451885235 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.461726897 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.577910811 seconds)
  done (took 17.787808934 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.553643094 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.525399273 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.525648373 seconds)
    (4/4) benchmarking "different"...
    done (took 1.818822531 seconds)
  done (took 7.652023371 seconds)
done (took 71.578694087 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.099785077 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.399275815 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.145138764 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.292856687 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.200910828 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.213818142 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.112006274 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.140826598 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.108441807 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.114845184 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.107992923 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.107421756 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.112005813 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.15728985 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.11351447 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.113085776 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.390411668 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.112229844 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.116177105 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.964608409 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.436853926 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.109011946 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.108611158 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.183029545 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.616786373 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.157997895 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.551111691 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.127250606 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.714077126 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.103861965 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.116448327 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.113578989 seconds)
  done (took 182.557065684 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.096772733 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.908647847 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.897425853 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.117377466 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.488055742 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.459974316 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.94894195 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.507176029 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.108668612 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.116245092 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.094686596 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.10789475 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.12929341 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.672014532 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.143063294 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.113450089 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.033592465 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.939170423 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.15507227 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.124152915 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.103100897 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.719075483 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.696903899 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.955935439 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.113330589 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.131933427 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.113623184 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.145471406 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.624590721 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.987897954 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.109981569 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.128348404 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.298591578 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.345819842 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.104890064 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.11666669 seconds)
  done (took 152.964705756 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.348816731 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.10590563 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.141771775 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.217085037 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.074594197 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.922669236 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.108208485 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.096420686 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.102058913 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.104154647 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.098420487 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.166042196 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.11221138 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.219619736 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.137690695 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.098215078 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.09823541 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.227748958 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.116773924 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.09677649 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.097341738 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.20384161 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.448045216 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.213899151 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.107050585 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.108649525 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.207830853 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.113336699 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.098457777 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.09737518 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.210439545 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.107558416 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.229044219 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.21729607 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.118598442 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.155696779 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.114395743 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.309334666 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.109577413 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.097061861 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.097507655 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.150772396 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.106969884 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.175762782 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.212213953 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.11127336 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.122840731 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.557951744 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.687268941 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.11416113 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.097565799 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.096742685 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.099723876 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.101302745 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.27385086 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.112085328 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.131339801 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.629248491 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.120534847 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.096456625 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.096778744 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.097874874 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.096911397 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.109208954 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.135403226 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.716289043 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.8865958 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.460487999 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.843465875 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.10692577 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.096631235 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.097979018 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.843994986 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.170722094 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.098758695 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.095926495 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.279003046 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.10776454 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.097187804 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.021622151 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.024645154 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.114314883 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.206594324 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.1074624 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.096636114 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.355563212 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.233480706 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.117495381 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.116936703 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.153435497 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.106495489 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.095852565 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.103185121 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.021843481 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.109244826 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.10975672 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.441031517 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.108379929 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.096592038 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.416953036 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.467158685 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.107631838 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.179095021 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.511266645 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.033309541 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.107276969 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.096765931 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.114863172 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.098139514 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.115302258 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.109835031 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.09763317 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.09697514 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.106863002 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.096538951 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.096333512 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.097116089 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.115842772 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.102234341 seconds)
  done (took 326.181759062 seconds)
done (took 664.29241431 seconds)
(4/20) benchmarking "parallel"...
done (took 1.093902843 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.358550158 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.283753379 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.217988458 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.362269792 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.311121094 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.28346004 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.311969194 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.403560129 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.339341174 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.277254705 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.337629641 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.290534233 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.396357842 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.364820496 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.401834553 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.367629283 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.30606551 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.786730844 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.329022647 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.285810008 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.30946437 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.295024969 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.268847405 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.335290881 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.410491069 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.284156263 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.504159527 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.346130542 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.318431138 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.358433814 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.37475768 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.392015026 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.325405538 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.391527541 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.355618182 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.409751841 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.283244045 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.375579936 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.29301716 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.321879602 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.332055307 seconds)
  done (took 63.396982245 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.496584286 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.300499701 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.418574492 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.408362587 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.967064735 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.426320095 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.499382428 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.305301751 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.324860581 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.434054626 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.429593548 seconds)
  done (took 18.136042123 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.345212655 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.304384914 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.436940303 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.430056786 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.517275436 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.420541464 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.467588816 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.315757542 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.306498331 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.474163122 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.464949687 seconds)
  done (took 17.611562386 seconds)
done (took 100.237637326 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.663978444 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.181218909 seconds)
  done (took 3.940020765 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.137023234 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.125447635 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.109525208 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.115069316 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.111593114 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.112242904 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.16591606 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.12211735 seconds)
  done (took 10.093526262 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.110164017 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.116992679 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.109705951 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.109212042 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.109506714 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.115304446 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.109716512 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.10907172 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.110123145 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.109224468 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.116211283 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.109704011 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.110461876 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.110437375 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.115311691 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.111489152 seconds)
  done (took 18.882052966 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.109476056 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.110789496 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.116204835 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.109169302 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.10972625 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.109635913 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.115260772 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.120298399 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.111053568 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.110277112 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.110001588 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.1160985 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.109371204 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.110004536 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.110203859 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.114882621 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.111873286 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.109667267 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.109686396 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.110050334 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.117073281 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.109303608 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.109911662 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.112282893 seconds)
  done (took 27.777902948 seconds)
done (took 61.814376297 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.709995451 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.157332676 seconds)
  done (took 6.963205037 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.113206237 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.112278846 seconds)
  done (took 3.43752188 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.109352909 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.108995837 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.111113714 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.11102361 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.110344166 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.108283018 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.109460556 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.11259428 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.110016385 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.109863 seconds)
  done (took 12.19634685 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.109926937 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.111349148 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.109356358 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.111189815 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.109304232 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.112154334 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.110488621 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.109616753 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.11029655 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.109501292 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.110880878 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.297012671 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.121698989 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.336337614 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.119742556 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.110806163 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.109220947 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.108594311 seconds)
  done (took 21.513096602 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.111533991 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.109785583 seconds)
  done (took 3.322654326 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.108230067 seconds)
    (2/7) benchmarking "second"...
    done (took 1.113896851 seconds)
    (3/7) benchmarking "month"...
    done (took 1.109635857 seconds)
    (4/7) benchmarking "year"...
    done (took 1.109554921 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.108602633 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.112773301 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.109830498 seconds)
  done (took 8.867628408 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.56356224 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.278061652 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.332406493 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.574659562 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.749447437 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.055474633 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.758103601 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.042454671 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.933705351 seconds)
  done (took 16.383791621 seconds)
done (took 73.783525658 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.784916835 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.107137565 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.825054708 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.221474027 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.119081784 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.474516786 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.123340289 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.644896093 seconds)
done (took 37.424746455 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.368693733 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.098463459 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.147005691 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.145887142 seconds)
  done (took 19.495918055 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.100321416 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.727569084 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.146831382 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.162470099 seconds)
  done (took 19.332127012 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.623349562 seconds)
    (2/2) benchmarking "read"...
    done (took 1.650987801 seconds)
  done (took 4.388651556 seconds)
done (took 50.687445157 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.109864285 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.114728651 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.109625388 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.109740032 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.110299451 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.111016122 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.114342641 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.110053354 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.109696817 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.109596562 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.113306529 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.111865291 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.110123683 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.10992814 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.110354939 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.114605966 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.109471073 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.109556473 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.108642085 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.113763436 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.110183732 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.109244963 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.110263618 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.109060867 seconds)
  done (took 27.757013044 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.17864887 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.168104431 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.181198239 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.176045999 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.199240137 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.172231142 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.173150912 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.154683492 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.179732036 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.16150266 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.149291325 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.195194742 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.159691049 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.195552621 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149347583 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.195596065 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.183266327 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149111476 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149460375 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.198664723 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.175107747 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151961667 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.19696705 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.142593977 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.196209908 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.150073525 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.161133934 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.166928117 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.142461927 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.197162258 seconds)
  done (took 36.249942165 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.143470856 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.109014908 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.111476392 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.199692093 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.109303788 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.109179292 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.113616162 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.110917132 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.109557754 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.11133684 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.109763438 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.11230825 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.109541036 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.109507551 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.109623449 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.112707604 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.144548747 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.285030009 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.109501079 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.109381154 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.158230682 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.110032327 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.109332645 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.108626112 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.111774279 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.110018112 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.10912148 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.109172234 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.109525173 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.111767589 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.108785999 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.15922315 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.14894221 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.112843943 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.231680423 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.168964739 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.109348214 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.142182322 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.110194348 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.109641494 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.109873411 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.10876383 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.111918902 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.108896887 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.175456257 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.110716785 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.113567525 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.110152976 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.108522484 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.114677613 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.109829781 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.11412399 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.124816333 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.109393082 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.11018149 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.113333416 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.110297786 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.109999876 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.111099274 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.111339661 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.113341561 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.184977838 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.109778798 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.109769044 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.486103803 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.111652305 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.177191409 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.109640132 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.111870134 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.322531746 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.11016154 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.315479952 seconds)
  done (took 82.747076959 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.11649756 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.10925236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.18751815 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.187359782 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.112608369 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.110143562 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.109205347 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.109949126 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774504136 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.110875507 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.110971667 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.109808091 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78832029 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.112594457 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.110460035 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.187250813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.11416816 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.110875011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.110774956 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.11229155 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.111064225 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.114752041 seconds)
  done (took 27.118446819 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.143384396 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.12524735 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.156352791 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.126379867 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.124753111 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.12549886 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.152054559 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.128326519 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15065291 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151024718 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153087335 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147960506 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.124801596 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.154653936 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149763766 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209247948 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.145010059 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.206291136 seconds)
  done (took 21.771541467 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.286314606 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.280491033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.193717252 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.152661184 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.372243262 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.349722809 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216161619 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.285908608 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.155116772 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.276364137 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.285151676 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155722298 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.344443799 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156606746 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.151735866 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.370792912 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.195066034 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155941783 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221708911 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214603132 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.28706503 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228772728 seconds)
  done (took 28.43237994 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.146486841 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.156903434 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.196863235 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.187462301 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.109403376 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.11012369 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.17048812 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.146995647 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.12602809 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.152557671 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151675416 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.117597689 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.201664619 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.173343198 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.202998576 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.158625993 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.162331328 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.174223857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.148660676 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.112606482 seconds)
  done (took 24.204197474 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.110211023 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.110971087 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.109867238 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.114769548 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.110572598 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.112445091 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.111392331 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.114323489 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.112314925 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.347805513 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.110620698 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.112891227 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.111567732 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.10989726 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.110112476 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.111219038 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.113408468 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.110703227 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.110320256 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.110053394 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.350721821 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.111640727 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.110824976 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.110127128 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.110387571 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.113408618 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.111119335 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.111851693 seconds)
  done (took 32.693081844 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162534119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.111665098 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.109969406 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.110779678 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.111282742 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.176405678 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.110365394 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.110592144 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.110341673 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.113579281 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.111065986 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.109605098 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.109938952 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.158074042 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.116789613 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.110091681 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.169338906 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.118095218 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.174517922 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.104014134 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.119284616 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.202135234 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.119757666 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.111378561 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.101828609 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.119053868 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.110495902 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.110264172 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.110467952 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.112701164 seconds)
  done (took 52.824562012 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.128223356 seconds)
    (2/2) benchmarking "in"...
    done (took 1.132578505 seconds)
  done (took 3.356977985 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.110706567 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210757938 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.111307443 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.309750902 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.282900873 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285916341 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.276526036 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208687119 seconds)
  done (took 10.895268659 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.110902902 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.525939301 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.131877161 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.110467208 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.115950548 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.576993248 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.065427892 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.02119211 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.949601683 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.122987863 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.232007902 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.632801711 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.105898069 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.430745766 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.235503009 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.984973056 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.386981548 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.691493764 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.193328514 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.245761188 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.864469774 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.222125017 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.110911886 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.114985525 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.11066124 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.013764108 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 4.021360474 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.5504863 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.300713807 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.245116355 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.931494493 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.201454989 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.114077182 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.372427775 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.245410562 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.112346981 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.265794006 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.230248553 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.111774336 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.11133804 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.892005566 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.819010143 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.403372887 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.350634687 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.20855644 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.112669372 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.110652679 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.110795462 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.383976355 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.733003877 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.10857375 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.098991824 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.262730406 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.115929916 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.844667578 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.126999708 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.11081071 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.013966412 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.726570747 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.370676346 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.445738614 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.26350108 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.176365895 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.257408121 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.111884173 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.308521185 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.954198576 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.944897159 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.899746796 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.237699149 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.630909751 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.134182896 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.11118739 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.110932694 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.059213719 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.434797354 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.111796523 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.111100789 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.111424368 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.114483096 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.378091834 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.243785902 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.958133448 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.262024813 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.293374019 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.612769029 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.250088327 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.11097536 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.797933735 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.97295712 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.238607124 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.781643188 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.345607949 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2604513 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.130438535 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.381677375 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.153701129 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.111550917 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.956178459 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.76014268 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.127231099 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.113727566 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.404837242 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.171212698 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.116553191 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.110270404 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.841187716 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.250689972 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.232222172 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.159543449 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.111642097 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.11118145 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.699385906 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.241524214 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.114073825 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.572382442 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.112870274 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.657556399 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.376964621 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.328020723 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.487779941 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.108311391 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.381473162 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.952397461 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.115988014 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.665105445 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 2.936948497 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.723268074 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.38729457 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.247642343 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.998158117 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.18980265 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.111829669 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.278675317 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.198390849 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.112272621 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.11139536 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.117401294 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.111287236 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.111257439 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.234973025 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.521354454 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.980381194 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.127223764 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.356899401 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.243818774 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.984388845 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.334829374 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.858500949 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.262726706 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.112813698 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.873680545 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.408341536 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.850208882 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.254324084 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.112319238 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.112162535 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.000497197 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.153889164 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.221544463 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.11288208 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.719440463 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.245361314 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.117326152 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.111653917 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.581100495 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261128832 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.112078445 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.246000568 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.945912643 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 5.011590761 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.129441904 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.430223292 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.240155393 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.116408479 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.112291156 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.111477672 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.906045508 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.74321222 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.286856542 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.712750498 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.925151151 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.21281222 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.266993666 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.214927113 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.379537182 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.370329769 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.263237523 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.118270571 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.112898717 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.112164789 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.586158198 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.991472486 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.178110768 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.005038297 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.141291545 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.094275441 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.233029043 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.912273964 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.135820467 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.852056623 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.118876041 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.225043583 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.113169563 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.115711808 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.276967479 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.313186639 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.263985016 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.702368006 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.127881333 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.112300262 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.816011981 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.251838604 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.791247781 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.229249597 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.951711788 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.229079491 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249709475 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.24856933 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.80202831 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.253525648 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.113743222 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.851953639 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.271838657 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.1148657 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.212017908 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.836682792 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.925958458 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.905351672 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.765234661 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.069335262 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.674427665 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.370841506 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.266071286 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.991624961 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.225691338 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.312085107 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.187497546 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.638278219 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.134869126 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.863986644 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.131440506 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.878757021 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.12825718 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.138745051 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.247800673 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.594343409 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.241253761 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.112826853 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.288783076 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.217376078 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.801217785 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251379906 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.242533654 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.461916959 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.073184216 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.222850329 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.317606758 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.188447755 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.035786417 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.100125276 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.467097974 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.086318539 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.118776814 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.234018473 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.913772902 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.307431562 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.396312618 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.267183396 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.116151423 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.1141019 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.324653068 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.209937107 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.11246682 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.446046535 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.121857207 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.159073136 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.237182647 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.117041331 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.11361187 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.348043635 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.292420424 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.429819222 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.624976906 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.71401427 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.955443037 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249981747 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.782445158 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.261929115 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.78534086 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.239385388 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.119074237 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.802305229 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.25137258 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.414143981 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.270018034 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.244303095 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.793903445 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.267512297 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.418139174 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.267414511 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.249097292 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.905531993 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.687707638 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.379540299 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.549258555 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.157298057 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.633434851 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.210350822 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.653829804 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.131169883 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.792970923 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.204245065 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.177381958 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.112894147 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.112604004 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.603812307 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.105050845 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.122370172 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.906358461 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.830040879 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.047991277 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.856228575 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.243362776 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.116847808 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.114871069 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.113573106 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.02380087 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.229961486 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.477110978 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25895762 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.11297223 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.115831846 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.090665829 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.46736981 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.963394533 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 3.028434181 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.122624231 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.261130346 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.11367972 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.11874591 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.113171959 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.113199821 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.112647931 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.119695181 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.621066651 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.129105169 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.718630832 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.244048853 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.11897957 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.313934196 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.185046714 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.116888515 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.344937992 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.204878447 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.227530318 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.188385785 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.119014113 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.525823781 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.262640787 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.087712492 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.422603759 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.411634803 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.370418035 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.686464404 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.170086069 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.539811266 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.427174226 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.916056256 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.118448656 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.020473033 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.234938497 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.92303626 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.105174026 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.591270052 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.700598668 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.126367756 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.391469697 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.033751716 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.467921609 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.289229843 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18830697 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.115172147 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.113385621 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.192052076 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.369105305 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.17109512 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.388311086 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.331699034 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.096462348 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.421958186 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.225197075 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.364605486 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.151752574 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.129833882 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.114177806 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.113742386 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.605329055 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.037662772 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.213219955 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.11360413 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.018660524 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 4.030807772 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.03535423 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.732085766 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.046481585 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263379588 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.114544461 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.31787531 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.175844573 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.935947917 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.137913557 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.906935327 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.458357542 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.166341071 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.3342113 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.499823162 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.866532681 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.522546727 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.239868067 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.114434103 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.507512836 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.123329814 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.266194625 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.042380033 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.461244462 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.649054699 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.558012536 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.393918879 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.240181655 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.010196739 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.665791115 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.128836211 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.118529234 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.964757045 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269543194 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.47461149 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.114287837 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.409666855 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265553598 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.753075519 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.847860412 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.263723235 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.723841223 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.264292674 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.113932495 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.934680861 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.033613819 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.336088832 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.245487047 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.115307686 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.129971665 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.810339351 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.726028508 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.365825493 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.204623124 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.115280945 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.926374456 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.805263121 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.247869734 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.118374426 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.115228675 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.591101601 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.168878725 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.113626613 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.528150413 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.738757384 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.265002544 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.591368868 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.248534592 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.265270691 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.389810257 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.527527751 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.325459815 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.188354329 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.116712878 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.114384033 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.114490912 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.699230014 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.129775348 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.116384994 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.708542375 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.264048614 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.995271361 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.059502675 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.381384675 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19218771 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.532908346 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.264209374 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.580038487 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.007216392 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.232584183 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.336587058 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.190248199 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.220453492 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.904169726 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.229695586 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.115052089 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.067633868 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.488167102 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.495995023 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.542711796 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.446538833 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.20992443 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.807165963 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.234771491 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.900104538 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.135828375 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.114055115 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.579906756 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.296281911 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.574118076 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.277038772 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.607448816 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.240521014 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.383666412 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.381964211 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.216709006 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.114393206 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.114676938 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.141915907 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.153033104 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.671856248 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.030820459 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.605809175 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.256930529 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.907681231 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.655846253 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 5.011366565 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.310345794 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.42442174 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.435809668 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.154314334 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.101380113 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.503255022 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.20636706 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.295418177 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.216315642 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.941440252 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.194645831 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.118857011 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.698880949 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.133563131 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.114073934 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.114926822 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.016974962 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.931006968 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.229575881 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.373790731 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.224285567 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.115763913 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.725138396 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.409371028 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.156767375 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.115174497 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.117008303 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.016005194 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.236849499 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.115221269 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.475255685 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.27931841 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.44101015 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.966249914 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.563990724 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.215406879 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.115245415 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.115287849 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.816931906 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.710072521 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.151203577 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.399658902 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.173195084 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.59837586 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.116357494 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.593220138 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.664107957 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.141359519 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248686119 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.115854253 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.15894251 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 5.046493709 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.044307376 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.864438183 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.607250966 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.215131714 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.925830665 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.118128273 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.183464929 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.290301715 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.192853717 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.116292435 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.115523536 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.117460231 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.57427405 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.125571246 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.120048828 seconds)
  done (took 1442.266669646 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.381553574 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.120884168 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.115576149 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.114787177 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.114175251 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.121805776 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.115342919 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.114414755 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.115596128 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.114746492 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.121228205 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.116688209 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.115003805 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.388759747 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.121024919 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.117880089 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.117513433 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.115720198 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.11869554 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.117168696 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.114953163 seconds)
  done (took 25.095536249 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.114700298 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.117093269 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.114723374 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.115265566 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.115356311 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.117991978 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.115486923 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.115039098 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.115339395 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.114404907 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.117776407 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.115475985 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.115247386 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.114736442 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.11810817 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.116548279 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.115116731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.115550011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.115347609 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.122340195 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.11560693 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.115819905 seconds)
  done (took 25.654803221 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.118280253 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.116228246 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.867157662 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.251082495 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.115925626 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.115281233 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.115427653 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.318283342 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.152513705 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.015053204 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.504940917 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.177527339 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.121556937 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.301887778 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.219505356 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.116352573 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.236637497 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.122245084 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.116979967 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.115304576 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.115181222 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.335731166 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.262490428 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.115211703 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.970342527 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.268793915 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.116097602 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.114191987 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.118091179 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.086916329 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.231386941 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.120397459 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.988932856 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.904424839 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.466596591 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.016050462 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.241514617 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.124511619 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.114856666 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.115185888 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.312386006 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.915020594 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.119557738 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.122825288 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.432735049 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.247800251 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.116091082 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.410517313 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.176377853 seconds)
  done (took 89.000671484 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.115631264 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.24364817 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.172192441 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.114953032 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.233367176 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.118718279 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.172484408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.115465155 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.115238178 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.115008388 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.248363191 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.259478271 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.116441841 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.115027446 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.210924121 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.114841493 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.114773363 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.115379531 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.121120342 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.115383865 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.114869174 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.16917591 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.226342759 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.261463412 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.115364983 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.115488015 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.116082606 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.120071113 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.254532626 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.115121636 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.115288562 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.12081686 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.240616354 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.191408396 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.116586597 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.115668315 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.240914768 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.115789417 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.116370711 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.114855407 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.122339931 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.116163472 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.166985065 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.247354692 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.122265093 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.218074353 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.115698441 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.118028311 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.252016763 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.123940404 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.117224022 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.268508561 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.117017739 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.118772331 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.118999589 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.233444412 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.116500252 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.121679612 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.116230405 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.246874897 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.11673614 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.116648846 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.263903187 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.116394487 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.115955619 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.268669928 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.216363783 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.116236936 seconds)
  done (took 79.762376266 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.11615581 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.25585349 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29188079 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293399024 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253950717 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.236130832 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255697055 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.253493961 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255042818 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258204114 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252222495 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.218957485 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.223185973 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.221439188 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256957226 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238023858 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.237276775 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241100492 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255554404 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255545517 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.239517898 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297201088 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253286778 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293261715 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.473043347 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.226795636 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254668937 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.256708039 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296800299 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256046963 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.470587917 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.25832289 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254516405 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.299188566 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.470835099 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.251658389 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.11625735 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258642527 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.256729838 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.256134572 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.223448157 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.300626517 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250626731 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.224778892 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239490771 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254347443 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293716557 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.470351878 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.219471181 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257129757 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.253442504 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294450674 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252420489 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240994588 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294637257 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.225483816 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293546603 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295792354 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256626967 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291817561 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298552027 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.223874675 seconds)
  done (took 79.669489078 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.115783111 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.115260328 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.205482637 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.115407208 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.116524554 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.200930927 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.119974733 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.115900434 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.115989288 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.116926417 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.122375139 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201604717 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.478101677 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.121860792 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207123105 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.477133925 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202596135 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204796189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.117187987 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.201087519 seconds)
  done (took 26.775247564 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.117700714 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.116241363 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.115301886 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271012397 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.122006795 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.251824197 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.115786332 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.11542682 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.115248517 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.118516713 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.115200776 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.115869051 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.115997982 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27507056 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.116690526 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.250858571 seconds)
  done (took 19.550396107 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.12027706 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.116809097 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.115792551 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.116452945 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.11548099 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.121712772 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.116911736 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.11582367 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.116815955 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.581440054 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.11869618 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.116443243 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.116755556 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.120634221 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.11666327 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.115450118 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.117280288 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.116487936 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.121746435 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.115642075 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.692982145 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.118448885 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.122206157 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.115881 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.128906189 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.692112591 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.119742002 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.116945729 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.115848757 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.116871978 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.118877656 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.596487784 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.122513924 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.117600367 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.120198921 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.116124321 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.119430164 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.117411677 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.116330031 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.118476807 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.117090619 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.116273529 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.118040459 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.119079353 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.116274589 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.115632135 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.115025552 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.569813807 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.119844534 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.116346386 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.116221711 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.118425449 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.121670646 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.591492569 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.117699263 seconds)
  done (took 65.609882955 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161831865 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.176266879 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.117605314 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.11738478 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.172856128 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.156745917 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.160546074 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.13188158 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155397723 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.120319324 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.175880944 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.1314738 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.155010611 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173885458 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.178553021 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163503427 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.116868257 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.19261225 seconds)
  done (took 21.860616493 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.115704993 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.11632683 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.116515863 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.120619569 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.117650234 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.11535812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.116047932 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.120983247 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.116890944 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.115432208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1158317 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.117132605 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.122115265 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.115992902 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.115326774 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.115659276 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.121797323 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.115998383 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.115648047 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.115964254 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.115528632 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.123397345 seconds)
  done (took 25.687307887 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.149514259 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.163428967 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.119540276 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.116705843 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.116456375 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.139646181 seconds)
  done (took 7.90783004 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181158107 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.179454561 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.155894319 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164859002 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.190975803 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203566029 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200025233 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196039377 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.189568603 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415927128 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205513025 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186071208 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.188439149 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248721278 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185714093 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186301153 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213435225 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207586729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172833868 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197738273 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213725203 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185253915 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211004387 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197557227 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208794694 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246802363 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.184430651 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41729617 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213393164 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185418443 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181415441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199361992 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.189107955 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41375449 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171984237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.181818814 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202061309 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199867645 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182103322 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241399269 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.152429225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.183952879 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.179379733 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209418021 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.184746892 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214502894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20394695 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205431624 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206839071 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422359609 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185946829 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241881478 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182633605 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194405748 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.183127663 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403925017 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412360972 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244619744 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.18209538 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414775309 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244403529 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187627227 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241413095 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417062005 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.183171554 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248664687 seconds)
  done (took 81.956284925 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242976751 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.155455858 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207406997 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419656709 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240935179 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201541798 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205364803 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206992306 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206725284 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179196727 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210636257 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201588475 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241813997 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247190145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20703682 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198398199 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20271875 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240870568 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185057038 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407454011 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200432749 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24257161 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250608096 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243095658 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406550473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186787039 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209701321 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200025582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198804832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203269858 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21277456 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203374707 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244093506 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.156882646 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240812302 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208346122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201978591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208062757 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201311482 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191412364 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246196407 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203134474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201367155 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203109932 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408707494 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206387864 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207157051 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182496537 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203373804 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179050804 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409324116 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410037023 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420343894 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242983568 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204040263 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205133038 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202982884 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205673919 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203214351 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186674994 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24274683 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198908159 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411700335 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204153231 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205414228 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242899122 seconds)
  done (took 82.562258384 seconds)
done (took 2422.507714324 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.154038822 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.144751238 seconds)
  done (took 13.406784133 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.122002225 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.117073331 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.270017976 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.117739625 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.142268922 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.238868737 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.14766841 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.127860489 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.116810482 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.209303009 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.117513339 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.251632328 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.220337959 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.122921805 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.131920879 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.127466035 seconds)
  done (took 39.70077271 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.210107735 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.649698232 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.085666505 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.942878059 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.153425842 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.907549057 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.461352747 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.824776844 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.425526577 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.571169556 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.378941513 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 5.008615109 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.936124806 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.275708355 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.577420434 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.652757977 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.736763597 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.81244396 seconds)
  done (took 60.714406958 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.109194849 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.275427847 seconds)
  done (took 8.516363643 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.111985542 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.139712691 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.151923982 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.12498329 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.119824773 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.123829142 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.137284905 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.135220041 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.145223993 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.117478894 seconds)
  done (took 62.429327025 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.119078278 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.606794041 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.442934533 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.56728454 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.761634873 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.606883509 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.281704708 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.549676352 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.219126144 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.10523326 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.421815093 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.519423471 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.964940833 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.402489994 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.76786877 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.340072894 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.831752566 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.56567123 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.458655493 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.520137486 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.355952914 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.278305915 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.576636277 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.027111537 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.132689159 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.746499905 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.3475342 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.277847374 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.191150369 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.276847206 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.51063948 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.13368886 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.453521423 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.121167571 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.193950288 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.792682355 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.841655016 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.316736619 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.508766349 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468242024 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.505180227 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.818313008 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.186937416 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.815143571 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.275354032 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.531791582 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.201180854 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.363659649 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.202538528 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.244348424 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.654564667 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.297815879 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.253954096 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.234804896 seconds)
  done (took 155.312084846 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.105238574 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.497740974 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.270724954 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.110740281 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.515091309 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.323961057 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.921852324 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.679307032 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.134530674 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.351179745 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.286240338 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.246188798 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.108650191 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.116878942 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.117006329 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.120436191 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.307812108 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.693379352 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.124765767 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.116818595 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.331460135 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.353921384 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.245812666 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.115981244 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.293159472 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.356501249 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.517462875 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.245067493 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.495686723 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.105895644 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.562232509 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.126542147 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.117155319 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.002576932 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.507100722 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.461002604 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.540721409 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.120642642 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.847570224 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.114895724 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.760272452 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.313085493 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.451069987 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.258151909 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.369232943 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.346158911 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.727925374 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.106509196 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.858452045 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.295362102 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.332358455 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.345678737 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.399467922 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.118635561 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.667546876 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.114865906 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.115335483 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.377217452 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.268914688 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.235830839 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.109218464 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.118936587 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.115406494 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.367176973 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.108675408 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.235864739 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.114826274 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.117912919 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.235825381 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.239609452 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.282400306 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.361067778 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.360192027 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.372746452 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.118128049 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.354116041 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.52922335 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.357392362 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.109157586 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.123939281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.530106184 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.552298947 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.27971746 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.355864421 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.423947238 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.401670751 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.668096926 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.105867678 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.347529164 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.283953535 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.474337271 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.375947691 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.480827219 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 1.992324928 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.108115743 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.118226646 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.41260536 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.249355247 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.11175839 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.634918655 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.386126783 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.727205971 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.293296836 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.571936487 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.224314164 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.108833922 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.679521263 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.1114613 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.337144941 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.427342614 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.11668758 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.118173975 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.275611343 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.071718186 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.110127647 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.526744657 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.497663769 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.117745313 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.281673374 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.111778749 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.375439742 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.899339807 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.351958844 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.986855159 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.391246889 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.30101676 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.396828997 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.114074854 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.372956146 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.380633523 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.517615546 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.438488447 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.110397976 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.11515869 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.427061071 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.111899547 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.116229032 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.295517035 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.091833313 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.297762848 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.115387649 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.489277578 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.276768023 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.492545083 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.112334991 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.391073423 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.362098351 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.481948678 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.1080505 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.253760988 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.107537873 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.071330454 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.277918626 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.107277729 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.116437346 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.95274861 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.118506465 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.265949585 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.343705484 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79587362 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.490170698 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.469940738 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.106106386 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.534941082 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.31310157 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.541565899 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.649354099 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.299218942 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.844903881 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.353563891 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.114806293 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.36485354 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.413517918 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.108748888 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.116564479 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.865826932 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.255978597 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.111345216 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.285834183 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.787557562 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.568876744 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.326929212 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.115802658 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.486974238 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.109288121 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.367214389 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.624648858 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.452824398 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.115687769 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.119008918 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.115609232 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.114769946 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.337996714 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.356925362 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.680138618 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.262628059 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.415626671 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.334237391 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.432949624 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.569176135 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.124101931 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.449117736 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.109874094 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.512702162 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.119548 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.282045801 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.366140781 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.113872274 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.340575173 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.469812601 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.179332449 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.51599468 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.114536638 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.118047265 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.699588233 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.295866825 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.533220858 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.107513695 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.230144147 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.485807777 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.240299647 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.30886852 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.362066161 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.115754645 seconds)
  done (took 730.385200456 seconds)
done (took 1071.566307389 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.105926007 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.116983813 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.119020392 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.156802577 seconds)
  done (took 25.601599429 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.090700657 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.186742853 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.300688446 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.11918692 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.469827145 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.178957819 seconds)
  done (took 11.477521382 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.112567084 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.117883238 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.118687339 seconds)
  done (took 19.453761439 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.40937088 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.569086174 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.276082453 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.20796663 seconds)
  done (took 6.577303869 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.138341039 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.139433805 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.119031976 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.140143936 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.123440498 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.130300114 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.153641197 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.133842708 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.120686707 seconds)
  done (took 11.310766616 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.632458568 seconds)
done (took 81.163693626 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.435980657 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.409448336 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.119762238 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.43848791 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.247739398 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.427660841 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.233148881 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.134434055 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.403503296 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.512435904 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.590161646 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.20294051 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.559873392 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.530664884 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.337007596 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.140437562 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.126950101 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.178105343 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.758850737 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.292522753 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.529227217 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.255565425 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.106720703 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.145050609 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.972209358 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.255714851 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.365400277 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.146844994 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.081983005 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.141488831 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.203189112 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.598807953 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.309653863 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.444102592 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.215221686 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.910068482 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.539145277 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.244824324 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.252193316 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.621777111 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.411035782 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.243623261 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.10537529 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.285072379 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.46923636 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.139741765 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.088482051 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.276807855 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.742558165 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.280640808 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.633232287 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.122909522 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.717964326 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.194150653 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.243950679 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.112668642 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.047643515 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.584552068 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.276482859 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.427862121 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.127408227 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.233935651 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 1.970630212 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.146419685 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.495568094 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.3962026 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.533504715 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.260154285 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.554355436 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.14255682 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.13319657 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.14417857 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.803548949 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.260351685 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.107058997 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.267094562 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.442233399 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.206793319 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.12067296 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.324226007 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.348757881 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.111528248 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.257012658 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.419753308 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.280376467 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.421946453 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.592301545 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.575062603 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.565487408 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 7.157553877 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.708654174 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.033869009 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.218271102 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.132448518 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.518212896 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 6.233191836 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.278755265 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.565915926 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.256876802 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.611500059 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.145280273 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.133144991 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.533479837 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.397122406 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.85589602 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.150726126 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.273006952 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.107891755 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.418961593 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.985472102 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.219443644 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.673500858 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.121701617 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.17829893 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.597770215 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.119555691 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.442898078 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.5542358 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.151226792 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.113972247 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.419817521 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.121130101 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.244608211 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.608344156 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.494142587 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.333494378 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.111236506 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.211594437 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.120168037 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.307532644 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.124171582 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.699241079 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.63419925 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.148522498 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.369285134 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.24502053 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.106931235 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.477636363 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.170168023 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.34469366 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.419835386 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.43027796 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.238599236 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.111079746 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.469779366 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.120107734 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.36050377 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.449475411 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.28117628 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.432653563 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.248904169 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.13000047 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.058839027 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.534484262 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.720769436 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.651495926 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.387320382 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.253415381 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.627235879 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.467713955 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.940413151 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.209899161 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.168129151 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.12015452 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.137766764 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.17907196 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.10807459 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.120835256 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.426354757 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.402091663 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.651347333 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.89810691 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.825941742 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.442179598 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.273202009 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 1.971955333 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.683688473 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.122233847 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.404172532 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.601837486 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.289625752 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.145544762 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.109347958 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.168849563 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.874786331 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.152153058 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.392705107 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.677837679 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.486059034 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.471520197 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.297050217 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.155100791 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.437047637 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.378134735 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.431909149 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.33121003 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.55050055 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.259448993 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.419672734 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.147319441 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.44045141 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.120816497 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.027937685 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.3589263 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.611179421 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.440178023 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.351959827 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.286096807 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.457269543 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.119451921 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.554648038 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.220288432 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.504305614 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.148634499 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.539155938 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.219433007 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.430577914 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.022354159 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.237600532 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.535511296 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.269918626 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.175742239 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.673638156 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.133902928 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.419666948 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.28616024 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.255353414 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.363010047 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.154549846 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.247417954 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.313847107 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.251406671 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.380037389 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.025850901 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.445935543 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.873639823 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.24863785 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.107314355 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.527981606 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.144009456 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.128804573 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.394723523 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.281557149 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.432578009 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.216369135 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.285600081 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.179377383 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.144743501 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.618313237 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.943041133 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.679476256 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.036797255 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.142722905 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.10746214 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.524355952 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.481947002 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.183340589 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.254040882 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.684871003 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.151825288 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.279203033 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.1257237 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.122103888 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.931769737 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.258668911 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.361168313 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.665106259 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.121821017 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.207941883 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.124664745 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.542431701 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.581878994 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.170151609 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.243132366 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.392598075 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.143534448 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.50844444 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.14530798 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.288258928 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.442443776 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.240214442 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.229271262 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.116670889 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.154074254 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.657189216 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.417989797 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.613132538 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.148077502 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.577673293 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.120465266 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.991696203 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.145422019 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.245513354 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.461360391 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.27679222 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.461746589 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.122719655 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.285246131 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.400576819 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.141716052 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.135992664 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.256385098 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.906833659 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.513961624 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.409539655 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.251476033 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.065582639 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.362235282 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.118198534 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.558513514 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.261385356 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.24479971 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.722687072 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.617255047 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.121229071 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.297634274 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.116891388 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.473684861 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.145057153 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.139361622 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.252612642 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.202037739 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.106776353 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.762225563 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.303145989 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.611129586 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.165237092 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.975677335 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.206644584 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.296273994 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.235008253 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.525406512 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.12044245 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.135153184 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.26098467 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.730337162 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.273017051 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.152018263 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.374117931 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.124999603 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.724984927 seconds)
  done (took 870.139178596 seconds)
done (took 871.416760963 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306030376 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.497129308 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.358686909 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.013980824 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.9174053 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.760013761 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.377821709 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.348378622 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.191522701 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.37077261 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.012659159 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.915003699 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.209242357 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.234161409 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.204216587 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.213613841 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.296652661 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.359624819 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.240456523 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.289564314 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.510521097 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.295821551 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.540145036 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.410628775 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.490624004 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.216940311 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318339672 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.54720977 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.549741931 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.302021568 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.313123001 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.347076831 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.947208375 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.361858057 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.209126636 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.195962586 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.922062849 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.212083759 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363554093 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.197712143 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.498002133 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.241353482 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.837396687 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.987121098 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.892551537 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.530048098 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.002440272 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.218493138 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.216061218 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.324131483 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.31214603 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364913977 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.546176687 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.329647485 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.961479562 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.986807619 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.547249029 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.927311924 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.863414044 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.322372048 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.636369708 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.217346743 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.321250231 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.346217276 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.236253518 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.414544304 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.529298269 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364003582 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.346123163 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.37889382 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.360731157 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.339740234 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.235165569 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.248734546 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.240067079 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.37196513 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.982917012 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.355117684 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.909492268 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.213060423 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.07187595 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.074494972 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.06903652 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.200012061 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304820368 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.888558631 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.138436679 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.078556106 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.230859338 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.341806777 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.006438716 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.354229187 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.571841494 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322756963 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304777141 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.359524024 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.153843592 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306119427 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.273417165 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.345593599 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.896150763 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.320306008 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.113326427 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.205169063 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.21836342 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366946901 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.318235961 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.534831363 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.341060939 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.273030318 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.492032018 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.240466404 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.339762452 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.23052494 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.19142626 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.897435338 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.402521575 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.921666595 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312435783 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.787244237 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.415369713 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.209836884 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.492996725 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.415179984 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305904704 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.206889649 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.220186473 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.067072301 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.218302776 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.211482752 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.301579631 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.569419428 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.323191499 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.989420409 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.345641578 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.794845923 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.355710374 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.34116272 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.189777012 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.99388808 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.214053287 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.258776259 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.413558196 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.495234784 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.356336124 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.410862413 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.23864472 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.407958817 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.307009655 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.24604326 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.34115771 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.229095668 seconds)
done (took 247.139153703 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.454822071 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.286087742 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.423205888 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.40915503 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.46574849 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.471762722 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.189351043 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.597748222 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.230480148 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.532869016 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.373450727 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.993293965 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.276145992 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.325221763 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.463429812 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360810551 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.229689223 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.382432225 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.584536134 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.471892711 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.893460439 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.369730189 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.27548918 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.542914628 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.109095238 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.868695858 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.478278318 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.247772396 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.381874238 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.866715143 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.877955136 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.389844704 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.47222286 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.869927556 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.547182739 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.839142727 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.471601455 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.926754291 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.461771607 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.457365815 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.409806849 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.984450182 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.875250081 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.883708381 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.280814893 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.47864092 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.179953671 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.035680407 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.119244605 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.84074158 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.378419943 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.929142601 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.981476784 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.466744226 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.315529333 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.765417308 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.641840802 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.639611517 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.472460751 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.418265475 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.459920647 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.538821822 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.534918284 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.317523311 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.89780414 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.420708775 seconds)
  done (took 148.246644233 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.542538412 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.411113071 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.525117173 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.509807586 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.725138554 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.522738152 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.618255046 seconds)
  done (took 13.966954477 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.186301665 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.164385229 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364103178 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36820627 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.167721366 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.298561433 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.254979787 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.914740417 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.391312779 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.20917702 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.482186125 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.384473708 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.820074002 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.915212367 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.256224126 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.411528821 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.13978131 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.23407023 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.230286096 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.424298024 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.91715345 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.873293579 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.358427279 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.256746075 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.173749809 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.210579171 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.167187585 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.13902239 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.216728541 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.149087121 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.17306907 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.283222904 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.164022204 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.870692819 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.200619998 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.479474711 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.168112801 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.219929399 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.31006013 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.112637958 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.154523794 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.170583786 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.310079908 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.172383124 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.153402808 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.353964605 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.155508902 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.176294688 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.147451632 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.160166209 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.357991131 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.166509481 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.193262789 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.81627591 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.380240582 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.86339122 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.239298465 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.162816451 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.161730174 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.221848739 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.170559843 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.42634539 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408965769 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.14928514 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.383368271 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.465872047 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.168870972 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.149897943 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.146450032 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.408836037 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.159620833 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412596889 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.16967268 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.214546921 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.224999472 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.310089638 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.354846782 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.956045161 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.926812002 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.827249074 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.135654688 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.154807349 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.503480327 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.102341427 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.821147908 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.158662249 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.220785553 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.805680728 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.080986897 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.163366004 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.475565228 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.15347869 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.223104151 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.214704622 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.198156104 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.223705661 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.392169658 seconds)
  done (took 153.334621071 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.403212495 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.708398274 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.391569518 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.229803134 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.332898072 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.51703565 seconds)
  done (took 15.689328952 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.469040461 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.981363329 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.184882891 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.18082337 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.221167844 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.162697445 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.159143729 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.391018056 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.320221683 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.172016296 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.163657601 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.181920397 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.166043725 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.299823945 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.1660063 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.172184668 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.163277761 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.187508247 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.172631273 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.228462231 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.47019712 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.220239291 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.23260427 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.068628334 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.224127095 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.182684167 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.163222275 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.168771716 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.170965714 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.481362021 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.353345216 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.163163647 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.009331323 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.525977516 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.939548344 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.075200797 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.319230216 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.194022046 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.225975191 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.168824583 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.185150368 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.229480761 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.181504984 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.187034478 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.793769664 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.999927228 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.246853564 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.434066348 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.165241998 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.181770309 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.18328043 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.183303404 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.162410161 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.187292079 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.628665134 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.737998251 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.155134933 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.164588996 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.219344591 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.079929535 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.245311416 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.163646944 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.524304548 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.117640499 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.837125503 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.189579053 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.073409937 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.306422361 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.235128058 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.182919738 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.192597154 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.183528987 seconds)
  done (took 119.228219105 seconds)
done (took 451.57376961 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.118002234 seconds)
  done (took 7.223201182 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.177854709 seconds)
  done (took 7.434093052 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.109047228 seconds)
  done (took 7.224592139 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.112712232 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.163660187 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.136776465 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.140532919 seconds)
  done (took 25.709597903 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.32003513 seconds)
  done (took 7.43568417 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.110570642 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.134205105 seconds)
  done (took 13.464061884 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.291377724 seconds)
  done (took 7.421950251 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.47854885 seconds)
  done (took 7.599391422 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.111718226 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.143872641 seconds)
  done (took 13.401245856 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.108334905 seconds)
  done (took 7.227985877 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.578005639 seconds)
  done (took 8.788915627 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.114792101 seconds)
  done (took 7.265914558 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.115485397 seconds)
  done (took 7.231596949 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.177097528 seconds)
  done (took 7.293849606 seconds)
done (took 135.828094717 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.111708856 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.120544503 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.120953613 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.119775339 seconds)
  done (took 25.579504358 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.445565248 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.445558747 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.423978375 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.508121103 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388679365 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.388975517 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.445791526 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.449785753 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388955209 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.492886395 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.450543166 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.487939306 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.596379856 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.423652106 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.422913279 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.490906396 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.495729374 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.449184509 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.38949323 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.421999385 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.492391923 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.497295401 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.867052163 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.8627611 seconds)
  done (took 36.845248452 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.331872789 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.567219313 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.27956205 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43998094 seconds)
  done (took 6.726704852 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.155766676 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.496500433 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.480346599 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.43768757 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.480731436 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.291092666 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.477307708 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.329894943 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.271029035 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.300508908 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.745967444 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.275048225 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.284448822 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.536678335 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.290220717 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.122938794 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.120473864 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.299472997 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.494167899 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.323585928 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.387144092 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.479727742 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.477388254 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.483820866 seconds)
  done (took 34.148462699 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.876366622 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.056074653 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.479453297 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.034523784 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.820414065 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.916995126 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.407362528 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.617726978 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.389911905 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.364513625 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.920354147 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.918754124 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.263163879 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.013176952 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.881402828 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.299535405 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.299146706 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.974720061 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.726244232 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.420671324 seconds)
  done (took 38.788588766 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.108281573 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.378096962 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.369146985 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.285958125 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.115843154 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.119783869 seconds)
  done (took 26.489798964 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.246316842 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.269583864 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.43295744 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.396614171 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.277236921 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.255404124 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.771581376 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.342900205 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.867201028 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.896542826 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.752067376 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.581267311 seconds)
  done (took 22.206509439 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.108703243 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.15623396 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.119152494 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.289563173 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.938574621 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.985900749 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.435936723 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.115640417 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.182014092 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.318838638 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.977139629 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.285292278 seconds)
  done (took 40.043683171 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.319082751 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.327122029 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.464348336 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.920953279 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.649748076 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.20917484 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.539867909 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.627692471 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.885712486 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.235894182 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.650525996 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.176105448 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.655078746 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.088593201 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.114554527 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.423415888 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.946778802 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.155483348 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.561253951 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.194296177 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.081171271 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.26726464 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.118645817 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.667354452 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443667834 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.115420682 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.338626426 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.359309142 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.108858538 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.354119837 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.129439773 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.593733789 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.311229245 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.418620948 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.644401152 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.21101324 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.22819018 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.239167782 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.681746205 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.410594566 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.261902955 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.274209206 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.640819881 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.237778451 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374904219 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.92645745 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.123037467 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.759700537 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.097651369 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.232879626 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.011475845 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.002458145 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.443990292 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.072787976 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.262060146 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.410587263 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.273288171 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.23501841 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.415258766 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.141267003 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.317501671 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.230211671 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.327432881 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.081264501 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.342739369 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.461320064 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.432490887 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.441964239 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.416162623 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.421521269 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.472232289 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.216193146 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.939489537 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.259706231 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.643768158 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.032816662 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.482597488 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.11269929 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.847095826 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.651523966 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.094540855 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.234192614 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.789068553 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.082658095 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.111341541 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.28955413 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.98353814 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.093128499 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.20909725 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.161409527 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.529403012 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.252724688 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262380826 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.374280742 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.819050003 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.093536882 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.884217951 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.409884332 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.081133802 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.683255544 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.125650709 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.088922769 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.128772364 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.683835068 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.529285727 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.169313304 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.850770308 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.737780627 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.421321759 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.73759666 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.282137037 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.113601401 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.477693409 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.445411162 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109790327 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.87478756 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.239481797 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.200143597 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.474737156 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.113357983 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.092216441 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.520066806 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.306844094 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.140651811 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.340307113 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.117606141 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.267841428 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.113121175 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.881184237 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.173461336 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.362885257 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.641781742 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.338594881 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.206327858 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.080872595 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.262916637 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.617243969 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.21089365 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.456377775 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.55339887 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.718029579 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.600078279 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.104686249 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.975649832 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.595033651 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.384686433 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.453918847 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.732125283 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.302084258 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.205168677 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109332736 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.280877837 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.126073818 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.674724099 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.131755201 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.811898227 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.841419504 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.469068751 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.113113539 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.100808687 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.257245357 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.354474905 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.760778662 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.165422224 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.284838764 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.394483454 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.333622187 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.11049541 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.093339122 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.495865117 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.391848553 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.637439395 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.377148953 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.773241504 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.481100061 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.628389955 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.328936342 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.486655767 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.891189203 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.544815719 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.468941861 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.75705552 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.137959905 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.11828249 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.178835596 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543466726 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.340320268 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.89803871 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.239530659 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.165071541 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.148905329 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.702584316 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.09326659 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.267387504 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.601099097 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.15160847 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.687760984 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.28369915 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.31303934 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389488635 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.147143315 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.458923725 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.933202857 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.534670395 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.48697973 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.426518192 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.094475249 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.767058933 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.627039853 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.613809569 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.260400545 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.510234985 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.374710471 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.176071639 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.118344937 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.467484602 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.050983308 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.91434713 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.421639891 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.885566203 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 3.805208813 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.275160133 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.115656398 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.139557551 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.047442181 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.292247763 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.160797537 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.287670209 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.66723874 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.388300163 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.441413282 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.111148879 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.127592053 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.401089781 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.424615285 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.393377105 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.619829088 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.732438982 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.800898679 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.224978337 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.734943258 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.28632639 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.153763246 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.772695562 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.428089314 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.063651069 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.295923938 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.933715092 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.248758355 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.186168489 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.407355162 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.11164995 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.599659866 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.738420781 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.115164285 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.144646776 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.262340508 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.118696502 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.355620828 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.877413289 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.354683945 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.853432429 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.41287524 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.360509832 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.296697904 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.529745089 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.652532704 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.890715763 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.09383934 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.272742232 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.204302586 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.416050272 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.115960234 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.405857633 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.80497693 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.785456425 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.904374139 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.667776297 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.347818821 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.309955798 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.591412089 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.376151816 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.457139353 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.081818705 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798120375 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.104087278 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.260508711 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.080683412 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.181663137 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446321174 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.490111027 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.595556942 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.188145914 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.649691817 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.507813151 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.1710261 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.30364322 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.377294605 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.11155875 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.394992652 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.113346526 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.522937185 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.524777969 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.118898178 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.891490355 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.317272502 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.442989382 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.269155223 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.677010261 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.160076957 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.262780056 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.872205012 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.293167604 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.25170611 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.453648054 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.192836864 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.158015552 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.177272108 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.680751476 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.752142153 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.596550192 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.700210022 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.714673642 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.50705452 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.845716359 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.114440492 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.338435307 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.274104727 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.057578361 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.30763381 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.523004178 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.156183523 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.331377068 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.444369157 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.35499071 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.643284593 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.094487915 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.724413668 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.353230193 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.635832005 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.644940352 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.890440898 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.591601544 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.493887163 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.634252883 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.098599132 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.283939628 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.507425101 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.844529432 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.163569913 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.959818096 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.910356797 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.246125962 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.552359648 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.192412793 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.896838692 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.277324777 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.351985504 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.331353099 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.251570957 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.080387144 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.771218977 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.90222543 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.395419319 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.283893592 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.295389989 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.243637686 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.620399686 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.667427205 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.430408582 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.840208293 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.596289367 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.362574885 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.083176646 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.118855806 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.395728899 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.307542076 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.208183979 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.4219147 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.556407814 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.175810411 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.160868787 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.493956679 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.422353806 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.896432567 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.841386609 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.465706322 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.65800991 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.598379271 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.115138261 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.850534205 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.336353157 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.475902687 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.544875573 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.054184601 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.514589066 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.41941935 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.272681871 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.084766545 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.306879642 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.132929576 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.21598991 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.908303015 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.421302829 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.175935068 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.97125427 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.760366188 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.435159018 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.159114293 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.171265882 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.345257924 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.308438857 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.116325724 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.769757985 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.539135509 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.274025575 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.100201052 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.880407829 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.084045659 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.338164655 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.432454708 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.319832669 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.993987277 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.192988148 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.784104585 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.661513822 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.49755732 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.326139565 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.089192433 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.191367023 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.135708531 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.795923674 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.897617081 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.363019951 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.634058563 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.300583346 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.115267172 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.44847595 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.256023663 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.444447932 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.400366274 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.601091126 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.539268896 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.493707947 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415452859 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.592236206 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.269519006 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361717151 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.083351597 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.119357293 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.18856097 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.490385188 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.495043163 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.111844365 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.680272516 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367909631 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.236673723 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.301785067 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.214505507 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.731113481 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.324882108 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.248560027 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.286830041 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.363696978 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.477222044 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.117173293 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.362011488 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.11309445 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.142004926 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.33861172 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.363733449 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.50328523 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.434413744 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.016542327 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.272506023 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.832037218 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.075948897 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.651855748 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.116700915 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.949963425 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.476846955 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.116643223 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.598276809 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.780970127 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.303347726 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.38849039 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.16911574 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.905901897 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.309197938 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.626747813 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.12342549 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.764335956 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.530395168 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.116144459 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.604409293 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.194192454 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.286403623 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.900649859 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.611601429 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.114851502 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.894401326 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.210324047 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.661544108 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.39536483 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.280402558 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.126030384 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.893465455 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.098105308 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.120187647 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.219156566 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.654037357 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.122713931 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.692579238 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.255583769 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.284118304 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.126704631 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.261121268 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.117759035 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.338104455 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.713996728 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.361613705 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.388410746 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.301341999 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.121351726 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.689932319 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.806381623 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.189791066 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.327682582 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.06366227 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.506259828 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.069594713 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.069800603 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.694059866 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.332712749 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.329390546 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551219088 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375614668 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.146995402 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.319274768 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.11225516 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386148886 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.275408373 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.679103891 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.381705106 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.029373657 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.388614951 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.140436284 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.679149105 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.586640449 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.003433923 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.116622985 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.42991513 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.11798882 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.90532927 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.760337341 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.318211756 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.234647356 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.081062661 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.679438851 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.42153032 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.250640476 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.120013337 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.334058604 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.630535397 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.089107318 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.904711658 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.002292114 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.340944323 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.442574425 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.082942494 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.303181311 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.131882604 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.099291116 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.618905899 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.114354863 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.459290683 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.086679345 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.658091915 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.098171407 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.208956942 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.280995557 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.427168828 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.112454022 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.113134434 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.282687705 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.119044723 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.119395291 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.476599155 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.208324158 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.368098206 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.590169101 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.346720029 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.465062516 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.020804009 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.182855055 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.131139996 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.427375504 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.948457895 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.679119074 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.192568624 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.64363524 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.899844855 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.136335386 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.675967128 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.365386637 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.845307125 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.264855085 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.602869768 seconds)
  done (took 1949.270209945 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.113603785 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.214404358 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.200363262 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.217603368 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.277994424 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.279325856 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.200456595 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.171508721 seconds)
  done (took 50.786985943 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.110364163 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.099397889 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.580829021 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.30360025 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.141893736 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.339252549 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.283704765 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.620982308 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.323625013 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.156485699 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.181720906 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.193108798 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.127928419 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.15928877 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.011949682 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.204521254 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.119852489 seconds)
  done (took 91.093949279 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.151218901 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.390849455 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.127944758 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.039760425 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.199214885 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.527966866 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.127913022 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.123883614 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.465054717 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.802668112 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.148796312 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.273089545 seconds)
  done (took 81.532669642 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.151180424 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.156060436 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.151608975 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.150400762 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.15032755 seconds)
  done (took 6.876041924 seconds)
done (took 2411.525250939 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.347928078 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.62906166 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.66941817 seconds)
  done (took 4.40818507 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.186084807 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.245727142 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.337439808 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.26244027 seconds)
  done (took 6.170150256 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.398786207 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.603017171 seconds)
  done (took 4.10954096 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.609381144 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.129007498 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.665630311 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.111497002 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.122567575 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.121041192 seconds)
  done (took 19.489190896 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.145311239 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.146485804 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.14642988 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.14378965 seconds)
  done (took 5.703562995 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.110870201 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.140087392 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.124808753 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.066687884 seconds)
  done (took 18.550352247 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.493093025 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.371146336 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.870562645 seconds)
  done (took 5.863038236 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.93271457 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.493102467 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.921556711 seconds)
  done (took 6.460020447 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.068001312 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.049840246 seconds)
  done (took 5.228218157 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.274443824 seconds)
  done (took 2.388357019 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.60388917 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.602157201 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.970016386 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.002983723 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.141225116 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.44433062 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.486766882 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.465252336 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.815381847 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.687754806 seconds)
  done (took 18.333041698 seconds)
done (took 108.562260576 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.005638482 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.518616834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.276763437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.805910582 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.212957672 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.276064395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.74084721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.594159204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.418980203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41414885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.310513998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.21485172 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.155800906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.51351519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.153223548 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.46028903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.285324077 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.022858203 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.392626932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.829051081 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.749353882 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.701232408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.011326132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.708741231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.285610421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.283243654 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.066451018 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.465757876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.63355579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.073628491 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.28871287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.082957632 seconds)
  done (took 152.061575383 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.111433511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.126652863 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.128450887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.122841247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.103825111 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.127595581 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.121705542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.124628888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.804902463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.825911636 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.129059624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.107976791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.128911787 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.123115045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.129326726 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.121960288 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 4.90772895 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.130450391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.128146197 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.127276231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.126570857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.982629372 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.132882578 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.014376062 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 4.94592063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.128857664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.122034068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.12672252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.12686193 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.127985717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.128953985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.121712972 seconds)
  done (took 187.844051498 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.114179621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.125714846 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.127554964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.122928942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.128211768 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.128952012 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.123809961 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.121813978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.125475298 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.130391193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.127118137 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.126036394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.125607953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.128046935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.128880464 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.123897117 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.124646492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.126584954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.128524722 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.126743564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.126519199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.12265952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.129406048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.126223777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.126169213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.128293592 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.121981993 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.1296362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.12575882 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.126729085 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.128460862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.129323529 seconds)
  done (took 197.163117234 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.420118517 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.153547813 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.081318591 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.865051645 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.0484924 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.150221816 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.881598598 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.422297888 seconds)
  done (took 14.148808057 seconds)
done (took 552.340837385 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.827644655 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.05213002 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.298925073 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.379858014 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.742066456 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.426925185 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.376442037 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.58828226 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.865687068 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.573331813 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.594289115 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.347383699 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.933593056 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.391799575 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.31303234 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.559495375 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.527677086 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.815610641 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.330909091 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.98934505 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.340674195 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.014339628 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.618472338 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.909854976 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.592701681 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.060610577 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.252382175 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.52248435 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.37935963 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.343531227 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.145595334 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.50088205 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.374448949 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.373049996 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.59343755 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.571217162 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.470369874 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.559000701 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.298499629 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.80621724 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.993928924 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.731069571 seconds)
  done (took 75.497073327 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.14482196 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.162449577 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.324169501 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.214515548 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.767526761 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.228163138 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.376846754 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.358638868 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.24736035 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.357282621 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.399402958 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.794975477 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.399935189 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.768130257 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.380682196 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.401586711 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.2240662 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.74353623 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.38127425 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.358622315 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.187235957 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.311125107 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.191211675 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.352365276 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.181739503 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.194641588 seconds)
  done (took 36.590957726 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.194629082 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.305325964 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.402657415 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.521530063 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.382180485 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.174099336 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.485922333 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.310717616 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 3.045666665 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.385178706 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.251458221 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.250025541 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.334178253 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.429797759 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.694972075 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.313132498 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.326384093 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.309756339 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.313995807 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.368931525 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.297116377 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.233299682 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.491162079 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.342168187 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.838081315 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.493619651 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.498704663 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.795637634 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.669069002 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.310448213 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.281412366 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.466494108 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.537905921 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.405495006 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.292145317 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.171934933 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.173765022 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.258625538 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.102113384 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.321922992 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.479582203 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 3.35836416 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.548387238 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.702066183 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 3.224001601 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.40606214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.653175824 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.263058377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.287947546 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.980142905 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.452530414 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.150139742 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.316389577 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.354012793 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.271187374 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.553766219 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.353553391 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.476031625 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.340216669 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.745104135 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.230676466 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.5491013 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.317841008 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 3.230358498 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.46678079 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.359682367 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.32794374 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 3.574454432 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.547667963 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.622860551 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.714230425 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.233097352 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.187443777 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.250180888 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.310108929 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.687330712 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.652196427 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.412538172 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.55756137 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.472369164 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.708290707 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.658749952 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.14124719 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.836124384 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.216821466 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.164392856 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.244855055 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.483699793 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.463835652 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.635564437 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.708397905 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.496583086 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.645295246 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.571434243 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 3.979886667 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.611632964 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.155598007 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.173717804 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.388310037 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.713280943 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.23794655 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.438799423 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.825001612 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 3.591768275 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.467384448 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.421264996 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.555766364 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 3.227864876 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.588914873 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.146863684 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.386922833 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.431689378 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.434223111 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.514134322 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.151763845 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.67859857 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.27427877 seconds)
  done (took 230.886409633 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.116425528 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.128542028 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.124635468 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.128053524 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.126438446 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.745233656 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.195129672 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.120940281 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.752965897 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.19504565 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.123886625 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.125000317 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.126161186 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.12364259 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.727867431 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.70117848 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.770922666 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.124393538 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.121378822 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.127571035 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.833845576 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.11933875 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.122967548 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.12524402 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.123762505 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.121238037 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.12513326 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.170093505 seconds)
  done (took 152.56438044 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.171713571 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.556425801 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.210016712 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.272044234 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.216070995 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.185767953 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.693598012 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.31530149 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.250573191 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.187459747 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.177603071 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.404553037 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.426806557 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.784500932 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.297964732 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.288605775 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.837256169 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.320351619 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.18438337 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.185794251 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.337730992 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.52624355 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.469810575 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.453939334 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.340878555 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.463128064 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.2590079 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.177462052 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.300881113 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.676357143 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.202546441 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.558983378 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.337373593 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.187169013 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.698233437 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.52923956 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.765689022 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.744312124 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.371904478 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.139286059 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.140335808 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.420491178 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.497649948 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.226122186 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.180346401 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.834581298 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.201641012 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.592163301 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.225654261 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.140056887 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.265416171 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.284065855 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.452113585 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.153370212 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.355605483 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.328533728 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.687241286 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.165268966 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.233146301 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.480693682 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.158583155 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.676925547 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.666897518 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.242586613 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.188397996 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.331773963 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.273360854 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.714145437 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.807856079 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.229052996 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.528213479 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.363175554 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.155825093 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.441552903 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.358651857 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.624230527 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.767749978 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.323383458 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.282840452 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.256573281 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.459189643 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.175920966 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.72685139 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.285304408 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.155500834 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.685356664 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.570992108 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.154946864 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.189259878 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.285731443 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.33868905 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.385007783 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.473119952 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.252910525 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.071559687 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.441173321 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.490944566 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.190990898 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.309275474 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.173400661 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.55012372 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.365098884 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.163881406 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.517180815 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.570924105 seconds)
  done (took 157.871607631 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.92498219 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.23097877 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.353082175 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.748062506 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.518770615 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.584118461 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.449922059 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.255667046 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.459521748 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.388919947 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.37856944 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.262534868 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.886760304 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.928516409 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.23066254 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.37723499 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.247705545 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.877607638 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.490959481 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.146555946 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.464618935 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.876840658 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.47666624 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.609896863 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.621582281 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.667009605 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.846949098 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.321695983 seconds)
  done (took 48.752231833 seconds)
done (took 703.2778588 seconds)
SAVING RESULT...
DONE!
