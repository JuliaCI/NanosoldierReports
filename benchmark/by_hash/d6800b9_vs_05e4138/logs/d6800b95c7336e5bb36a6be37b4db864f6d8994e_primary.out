cset: moving following pidspec: 678370
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.356179174 seconds)
loading group "shootout"... done (took 0.845823991 seconds)
loading group "string"... done (took 0.222186058 seconds)
loading group "linalg"... done (took 3.283399265 seconds)
loading group "parallel"... done (took 0.021616917 seconds)
loading group "find"... done (took 1.210883218 seconds)
loading group "tuple"... done (took 0.740946175 seconds)
loading group "union"... done (took 3.095065816 seconds)
loading group "dates"... done (took 0.156302858 seconds)
loading group "micro"... done (took 0.057912665 seconds)
loading group "simd"... done (took 0.366590501 seconds)
loading group "io"... done (took 1.445509856 seconds)
loading group "random"... done (took 2.351527836 seconds)
loading group "problem"... done (took 1.200021019 seconds)
loading group "array"... done (took 4.63346257 seconds)
loading group "misc"... done (took 0.986250861 seconds)
loading group "scalar"... done (took 3.508010971 seconds)
loading group "sort"... done (took 0.308744319 seconds)
loading group "sparse"... done (took 3.604645323 seconds)
loading group "collection"... done (took 6.140159219 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548460463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.075513892 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.257762796 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.076818221 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.287036686 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.084507249 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.088824501 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.074661593 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.146937533 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168789818 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.219466846 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.398601931 seconds)
done (took 5.161528941 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.330588941 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033962457 seconds)
    (2/2) benchmarking "String"...
    done (took 0.12991176 seconds)
  done (took 0.765251872 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.143876238 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.01596787 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022940258 seconds)
  done (took 0.77781132 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020724264 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.100238749 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021846601 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022453866 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022403299 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021788845 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021561118 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021526932 seconds)
  done (took 0.828495899 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029646961 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023161614 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021138061 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022570228 seconds)
  done (took 0.692355554 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.023128163 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.09472928 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.027544523 seconds)
    (4/4) benchmarking "different"...
    done (took 0.027239496 seconds)
  done (took 0.764449822 seconds)
done (took 4.792281919 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.202378623 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.773178705 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.99202324 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.186599856 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.35676379 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.310641881 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076484215 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.243646216 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.157130299 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.033214296 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191444223 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.040069138 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.525255586 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.476483853 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.029114363 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.146090512 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.566633328 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039105099 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.068954806 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.185809368 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.041107222 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039256701 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043402583 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.028341049 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.086754088 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.133806929 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663122576 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.069170015 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.02533688 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.043706575 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.027945168 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.03057833 seconds)
  done (took 9.468917414 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.154951139 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.1492765 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023895488 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.058248598 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.050767478 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025063098 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030456102 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023523401 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.043341634 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.086953626 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.046520648 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.163219782 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021498812 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024874252 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143539228 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.112691435 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.038011256 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.037555372 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022732057 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036655417 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.048640101 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.035108468 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.033094215 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032732767 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.067613224 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.086010903 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.044027973 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.062098507 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.023075598 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.035060944 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.050141299 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.062371437 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.023084714 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021832137 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.064889213 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.039702913 seconds)
  done (took 2.651074438 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.729314498 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.051561251 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.147695448 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.134356263 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066717793 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.049338709 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.186527162 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.079625268 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.056244372 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024393826 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.215156928 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.667246033 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.17548886 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.055368966 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028683346 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.189500031 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.928963549 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.9199479 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023924917 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024190271 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.140347976 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026660389 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.180911951 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.02505614 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.249567682 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.702082022 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026032665 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024523484 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.053396428 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.147301247 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021161372 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.098496701 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.047097472 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025383333 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.559109079 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.022066942 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.02007942 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.040933612 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.051451462 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022408512 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023417946 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.031297032 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021463032 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069520689 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.033202291 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.526658181 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025562884 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.716526772 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.852026023 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.032612749 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.028651244 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.058436899 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.020404162 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.024065669 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.581933966 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.11671512 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.023270257 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.291906649 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.026018783 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024751589 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024850739 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.056924661 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023739678 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.025144605 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.027005756 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.041824576 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.040120787 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.033289628 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.042894297 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.022031121 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.023100665 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.0217198 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.529115927 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.033140577 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.024765347 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020483193 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026095883 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.02259827 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022054624 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.061587614 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.047697301 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.045383364 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025967027 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.022821398 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022171361 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.538954668 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.906035288 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025165629 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024110204 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.491762153 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020605089 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022535419 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024152987 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.043712867 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.022696301 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019954754 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.056606666 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.024447991 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.130706871 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.539845614 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.023878158 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.019949723 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.472493907 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024367806 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.053554979 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.077340329 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022616054 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.064072823 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.02300858 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020299149 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026301811 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020119945 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024319658 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021265612 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.022609938 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021402439 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.023026409 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.02394924 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022972229 seconds)
  done (took 20.029583494 seconds)
done (took 34.477887709 seconds)
(4/20) benchmarking "parallel"...
done (took 0.761881649 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.220110416 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049588878 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019568342 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.167782694 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.046445306 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.142486658 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.183109173 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.133829511 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.048000632 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.047701574 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.047768533 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.189810694 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.2001071 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.04899195 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.123861451 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.200572379 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.049707418 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.020173027 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.04891028 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.049931561 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.050832123 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020346031 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.050359877 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.051323058 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.126214523 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.049637484 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.020029578 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.126271171 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.052561035 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.129439318 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.052421251 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.051323873 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.052093746 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.127739895 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.052514589 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.128232254 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020430626 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.052265856 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.052176847 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.053014473 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.052208226 seconds)
  done (took 4.117581582 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.047980371 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038717491 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.04088617 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018491778 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.02844621 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038717677 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018388784 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038242305 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041609553 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.038730379 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038649009 seconds)
  done (took 1.146100286 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041772496 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039443694 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.040854308 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018252735 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.030137138 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039254801 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018161077 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.03888266 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041607729 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039262938 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039353597 seconds)
  done (took 1.072062819 seconds)
done (took 7.000193556 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.157276668 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.126077028 seconds)
  done (took 0.958184204 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.585897126 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.219498115 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.13538144 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.258803023 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.129033655 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.16085577 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.350887241 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.300343279 seconds)
  done (took 6.870513669 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.075901247 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.146301608 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024489198 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.023061499 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023321664 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.023298529 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024779425 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023564944 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022745939 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.025258986 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024953684 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022983962 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023792475 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025001379 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.02308954 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.023304483 seconds)
  done (took 1.307661397 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.02920821 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.02588969 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.026812473 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017263995 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.0277557 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.026458492 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.027492037 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028524282 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.02718382 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.027104004 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.025169953 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027925099 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026483871 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025201243 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027919153 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017292304 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.028092828 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.027075656 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.029001378 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.028095663 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.027488799 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.025080675 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.029246927 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.0264148 seconds)
  done (took 1.331091633 seconds)
done (took 11.151913442 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.142513476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029682498 seconds)
  done (took 0.855203321 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.131902279 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.130549127 seconds)
  done (took 0.955866352 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.029046565 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.01624178 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.032339436 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.02452465 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016494743 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016190774 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.031454983 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016470799 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016260901 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016415294 seconds)
  done (took 0.912848466 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.01982371 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023365099 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021215777 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019421943 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020982641 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017322582 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019606854 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017568328 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022964548 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016635512 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020279375 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.038378711 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019791292 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.038826376 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019720237 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020233938 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021985929 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019877133 seconds)
  done (took 1.093962694 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.018111456 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.017199157 seconds)
  done (took 0.733783275 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.021010749 seconds)
    (2/7) benchmarking "second"...
    done (took 0.01734603 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018896334 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018716283 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016793504 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.016230881 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016765768 seconds)
  done (took 0.818388082 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.394443185 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.090131277 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322647095 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.024937131 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.038715219 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.237209426 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.020056072 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.024342976 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.024253656 seconds)
  done (took 1.875604309 seconds)
done (took 7.941631881 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.045342052 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.144417182 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.153430322 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.456714681 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034521812 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022837486 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.056058477 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.237172291 seconds)
done (took 1.858354881 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.488210058 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.277749354 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.19210253 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.024028507 seconds)
  done (took 2.19556062 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.315080747 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14565701 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.03226835 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023192598 seconds)
  done (took 1.231080643 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022181211 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027771145 seconds)
  done (took 0.759109722 seconds)
done (took 5.387084781 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030419643 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.017056911 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023320911 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.01842402 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018165746 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017618372 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.01772198 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018603989 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016583176 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018591632 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018615748 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018589031 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.018301249 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018238634 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017852839 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018627755 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016707296 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.018199849 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018265408 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018245613 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016711647 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018904369 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.01805439 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.018544313 seconds)
  done (took 1.146826223 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.038416661 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022682698 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.02261623 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.022370003 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023597496 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.022468909 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022499839 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022457765 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.022763036 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.021486265 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023673567 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.023758366 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.021379659 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.02388213 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021516759 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.023814596 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.022732894 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02256952 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.02145979 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.02378204 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.022595206 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022527595 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.023977473 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022883285 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.024051495 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.023962224 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021748098 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.022971074 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.02286647 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.024030185 seconds)
  done (took 1.411003414 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.02331482 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015299154 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015513357 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025715779 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015184592 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015406928 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015822124 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015017373 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015365238 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016252166 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015726086 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015146941 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.01596844 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015066667 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015312703 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015822701 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020517856 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.036183509 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015479236 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015208815 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019969391 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015501221 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015207671 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015270541 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015662179 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015334204 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.015077918 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015593443 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015302426 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015901915 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015303644 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019916757 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021431801 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.01574553 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025695986 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020514325 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.015873818 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.020020891 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.016368089 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015275523 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015285311 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015292281 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015477437 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015520762 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.026156185 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015738323 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016633873 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015996979 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015680085 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015323547 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015473807 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.017097714 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021295674 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016619311 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015362523 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016638789 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015343318 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.01610576 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015498937 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015300789 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015293673 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019465222 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016836085 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.016130825 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037606657 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016875792 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.026127052 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015505701 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015991546 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019679478 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.016035556 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035594591 seconds)
  done (took 1.993716586 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028187441 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.02575744 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.034498051 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.025141597 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018689038 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016102361 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019329656 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016233806 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025497947 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019660742 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016155718 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019314789 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025518433 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019731923 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017256334 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.025460326 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.01975625 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.01897308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.01629332 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020043533 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017545149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019654734 seconds)
  done (took 1.181676462 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107470826 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.022806925 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.069401874 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.022589521 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.021254845 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.022451843 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022936826 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.022828683 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023032049 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024168583 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024099481 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023008215 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021382481 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02434896 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024475976 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.02422207 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.023395725 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024265142 seconds)
  done (took 1.259878333 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.034819971 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021370026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.049155636 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021118556 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021252429 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020854401 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.02512615 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.02481112 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.02091547 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021399759 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024925973 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021053032 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.020989144 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02148259 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021057224 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021479537 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.021034511 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021500961 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02495673 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.025441196 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.025422485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.025123323 seconds)
  done (took 1.248340584 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.037420029 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021370137 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.040443345 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.023507781 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015648623 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015716104 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.023491705 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.022203245 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.023516124 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.021370257 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.02250892 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015887108 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.024525782 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022508813 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.024639955 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022428373 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021409155 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022463445 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021386851 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015837488 seconds)
  done (took 1.170898347 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13587567 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017941631 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017767327 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022046694 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017692034 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017785992 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022325884 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017759712 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017809218 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.04230872 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.01789707 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017821813 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.022357683 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020674809 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017778622 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022280299 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022496269 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.02255427 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018012295 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.018077005 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.042806571 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.018061264 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022712343 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.018005772 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.01804689 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.018039812 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018034614 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021040204 seconds)
  done (took 1.418678696 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039854031 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015178962 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015342107 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.01920483 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.01918132 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.025098571 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019150782 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019254845 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015045563 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015396481 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017307821 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.01501926 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.01503903 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024645009 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.015008176 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017325359 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024649254 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.01926171 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025353644 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.027287652 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.01739314 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024500707 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017448559 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015554493 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025744269 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017614197 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019602636 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020467377 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017607514 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.01560388 seconds)
  done (took 1.313312957 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.030100892 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026762556 seconds)
  done (took 0.771886831 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018816435 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.034303105 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015128562 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028779251 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024545563 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019427273 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.023965511 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024467455 seconds)
  done (took 0.898434908 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.130441941 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.154317034 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017365674 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017534802 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.127378346 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084859838 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.138793401 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028749867 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.03080495 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.020016982 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.017396191 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.140231123 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.017036427 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030720615 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018630722 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026816393 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024252304 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.035049104 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.030091951 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015920283 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029628414 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017712493 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016834158 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017736153 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.018114968 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023908985 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032998846 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029555122 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025297361 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.015251116 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035755364 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016131103 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016747161 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025237219 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.129938407 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016345607 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.054194691 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.01630106 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020595214 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015831398 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.028298294 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.037653212 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030551125 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.034220068 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017512141 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.018002627 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015934791 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017738496 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020122989 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025368067 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016206705 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023400731 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015875637 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.01752793 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026650541 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.016221881 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020791416 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025270103 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029613586 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026537092 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028544172 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031520499 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024906476 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.024672269 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016811993 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036166143 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017839065 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029499319 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031144066 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017391338 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029319429 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.016037515 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015342971 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016199879 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.050439819 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017651183 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.017160296 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.016358658 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016422766 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017681619 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025756356 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.02111269 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023551288 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019415763 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.03218395 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.025338627 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.016088423 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023653863 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034804425 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020296531 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.01629157 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033470203 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020173321 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.016056517 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.034473392 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026749401 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017806752 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.01722217 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020525225 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030684761 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.018248714 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015730934 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.025128563 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.018397303 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.133657843 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021922177 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024910007 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016551683 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.027130949 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.02360028 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.018373417 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015704162 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021442067 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017595921 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015723129 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026265055 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016824107 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032317032 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023665789 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.031531818 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031952028 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027496873 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.033057127 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016553654 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015783905 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035683286 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.02626105 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.018081443 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035360895 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016738623 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.027635424 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.01698852 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.018579137 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.026341615 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.016240383 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018868451 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.017142157 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.024146689 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.01869314 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018839041 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022889349 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025413678 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.029585929 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.018200209 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025776154 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.017256773 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.033214593 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026653212 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021833213 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.02063658 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.01776742 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.029393529 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023912319 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.026184149 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016808737 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017825085 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016982614 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.028168398 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026679834 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018872218 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.027291949 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021871661 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017824605 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016976352 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.018095994 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020842935 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020879538 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017667905 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02474355 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025789558 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.032028197 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.025353812 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.026204406 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016346045 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016882677 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018980404 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016833982 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021801112 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.026315173 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032920083 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.029153428 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.03894818 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.017210466 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026805023 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018852982 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.034597158 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030559202 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.018100236 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.022266468 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.016059152 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019099155 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026430395 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028718421 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031803177 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032332973 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021990405 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0218399 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016902138 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032388324 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.017446079 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025412082 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.026346726 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023904274 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016899476 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018969111 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.026089787 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021893284 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.018135981 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.03308961 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.025544802 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016942158 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031643534 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.017346133 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.177247172 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.015843314 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020001034 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.021525823 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.017478873 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.025382164 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.030982544 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015059909 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016131693 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.031234612 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.017269711 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.017139406 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.02386102 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.030846993 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.020786377 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.023546585 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026134484 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.026445612 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.020696671 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.026101538 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.01658 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.024837393 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.018531543 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.027179517 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.015739322 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03351949 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015000247 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.030903995 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.016374604 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.026577187 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.016156362 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.02499509 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.016387362 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.032625549 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.01708299 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.016445542 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.027106723 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.014996139 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0247071 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.015624578 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021192802 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.022643743 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.024765856 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.01719371 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.024857283 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.017029598 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.024593832 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.020750563 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.024287385 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.024644153 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.020601096 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015500225 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.023819339 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026192449 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.023661906 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.016948789 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.016962653 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016023798 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.024766747 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.016952465 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016530593 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023645226 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020710163 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021830369 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016958529 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.017117907 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.01698595 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023959447 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024960737 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033406277 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024036968 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.023022096 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024624619 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.01551424 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.030974677 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015722571 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.02332717 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.015236502 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.022744373 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.025059159 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.016145682 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.035135871 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.017481544 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023745655 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027865964 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024409692 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.020052415 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.034097881 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.019178116 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.02426492 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023882464 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.021006478 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.023111538 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.017620829 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.024335656 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.025382741 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.026575494 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016757426 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.023442084 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024958838 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017741613 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.024969793 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.017635117 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.024500375 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.017839095 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015513316 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.021127558 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.027409618 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.021317248 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.021460096 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.016385823 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.015302608 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.016356718 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0237363 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.021262354 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024715129 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031740134 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.01544168 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.017092933 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.016067356 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.020159678 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034576999 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025800805 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.024064932 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.021304508 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.015619448 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.017646587 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017815685 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.016259605 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.01940446 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015632129 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.016046343 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026725987 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017812402 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.021006375 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016395378 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.017305573 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.026240927 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.021746822 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.017129371 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.023827762 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.016473591 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.022049949 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015994634 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.018374006 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.021527356 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.016371934 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.020587905 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.027169099 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.03436196 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.023806936 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.025566435 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.017667841 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.024613702 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.03236186 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.026244115 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017672571 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.02605536 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.016178908 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.035931384 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.026088698 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.025145337 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.02653547 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.017611281 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.034022553 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.021508073 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.02679982 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.032390557 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.01773427 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.026263768 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.016803276 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.033037109 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021737173 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.016755791 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.025701421 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024618852 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.023245754 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.028963335 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.017783378 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.025683629 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.022695454 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020981686 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.018823726 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.018773859 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.02571621 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.033564555 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.017811844 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.0234617 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024974885 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.025312758 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021811093 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.02944411 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.025088811 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017940546 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.018754412 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020730579 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017757147 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.029327563 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017266889 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021695285 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021671229 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016743633 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023949108 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033853785 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.02633296 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026602973 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016841511 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.016164946 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.035601066 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020785977 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.020666444 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.02507071 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026705217 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.02935955 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.026251415 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.034316664 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.01742539 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.023164628 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029421731 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017829569 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.01662598 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020751254 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018645424 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.026034402 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026777946 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.024208189 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019007277 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.024152842 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.030700706 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.018646645 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021880749 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.024020868 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017987191 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027736842 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.025043732 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.025553459 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018901514 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016825791 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020527315 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025801156 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.024466133 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.026001792 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.018020533 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.026707921 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.031883379 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024510249 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020828953 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.01688039 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020716415 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.026059503 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.02425839 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016853492 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.022008913 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020794917 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.026868395 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.026485649 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021848349 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016840438 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.185671969 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.024382093 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.024800698 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.017244015 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.017273115 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016033967 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.015598479 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.026670621 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.015687112 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.017095131 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.020935657 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.017176871 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.033324576 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.023749115 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031383948 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016460985 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.02062445 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.01557773 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.024978877 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.020711187 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.015608986 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.025970786 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015214745 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030875173 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.027097511 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.021364363 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.015511669 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021214683 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.024010384 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.030595695 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025024579 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.024411742 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.018477284 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.024986282 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017036297 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.026345305 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.015566396 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.014926246 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.025318362 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024084223 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.027432332 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.015493863 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.025391867 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.01706182 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.023697318 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.023887228 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.016918859 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.016944383 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.016859932 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024708721 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.020756645 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.024556152 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.020645992 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.032437669 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.016345276 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.026404018 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.024356928 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.026182105 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029285252 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027212662 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.023826627 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.015916616 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.022830409 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.023801342 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.016430336 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.020926542 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.018300793 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.036930038 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.016967783 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.016936372 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.02918989 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.02260802 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.015886833 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.022822942 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.020876785 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.025721492 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.016725065 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.026070141 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.020838644 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.016684732 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.020846713 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.020891287 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015222154 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.015845728 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016209631 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.025492677 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021064455 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.01606889 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.035007387 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017310208 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024601239 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.02670349 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.022938536 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017320134 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015181873 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016772114 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029226415 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031406445 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020246825 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024455865 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.01765969 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.025142677 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015322918 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024627625 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023928567 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024523852 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.016233199 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016358359 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030970297 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031511714 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.021087753 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.03293899 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.025010235 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.017613607 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.038311578 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.02499859 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017022544 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.02689164 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018137038 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015664949 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015446416 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.017637831 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027550239 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015954673 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.018210907 seconds)
  done (took 15.376298508 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061826373 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016933967 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015481808 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015517027 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022358334 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016710195 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015446622 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016681597 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016785791 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017755812 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015545585 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015582497 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020973557 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.03058278 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023295048 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019213864 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015589054 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.01682425 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015564156 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016766876 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021531093 seconds)
  done (took 1.199138286 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020093629 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.020013302 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019171935 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019424862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018729472 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015754159 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019017917 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015683278 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.01956045 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.01613699 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019599746 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015850435 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016088135 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016135745 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016146137 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017180502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019659072 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.01883782 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.01583494 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.01921172 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017157964 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019196404 seconds)
  done (took 1.143476688 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018466757 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016338991 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.02414137 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015205079 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015096346 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017872393 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015049979 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.01986293 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019804065 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019783166 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023972111 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015871314 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015095243 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021125266 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015108178 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015829744 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.061351314 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.016035748 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.016060874 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015391376 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017460852 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024271455 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.01540614 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015507039 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.01993385 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017991454 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015355876 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017649941 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015924944 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020087527 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016233165 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.01524271 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024193746 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023458983 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.02011388 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020056306 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016730461 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.016151594 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015523682 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015471462 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.02375117 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016726716 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015707595 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016535978 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.02420917 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015620218 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015299377 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.02433243 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015373678 seconds)
  done (took 1.678120588 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028623886 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.069109065 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023260795 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050670286 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.028344863 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020659866 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.02225704 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053435157 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016542773 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016933549 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.02897012 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.02982323 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017995755 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.019278053 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022597604 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018156475 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018793477 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017580733 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.02052376 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017820422 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.020646801 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.023747517 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.028677395 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.029804479 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019126407 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017632363 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017784939 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.019352456 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.029604003 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.021003881 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.01954164 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.020035558 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.029279172 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.024985899 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017909553 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.018049776 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.030037582 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.01853549 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.018279437 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016794688 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017994272 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.019492659 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.024027948 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.030105573 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018516172 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.025036454 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018300159 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016423581 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.029927549 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.018124433 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.021593299 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.030760305 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019201013 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018447047 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019558172 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.029272351 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.018335551 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.017207723 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018519416 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.029750841 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016734914 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019068128 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.030502782 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017857697 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.021295167 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.031107885 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.025272901 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019439263 seconds)
  done (took 2.479998526 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.027969627 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.022679517 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.026736933 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.026605781 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022546567 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.022709708 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.022607331 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.022619998 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.022464676 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.025301693 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.02267179 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.143015668 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.020255663 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.02400968 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.023303137 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.023331208 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.023243014 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.023235831 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.023180834 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.023047974 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.023223134 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.027727907 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.023276131 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.027911131 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.056346213 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.02006734 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.023068906 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.02329191 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.028170782 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.023306915 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.030271914 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.023443088 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.023490318 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.028356705 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.030426719 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.023216976 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.016241543 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023101974 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.023350556 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.023248269 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.020072751 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.028161406 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.023224693 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.020057746 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.023411543 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.023216006 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.028150238 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.030412573 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.024252406 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.026800324 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.023799576 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.028794655 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02357658 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.024389196 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.03122231 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.064339779 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.031144051 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.031201531 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.025480672 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.03089075 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.031851257 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.039671598 seconds)
  done (took 2.514803108 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.031581439 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021215701 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.026436585 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015339872 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015260604 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.021036339 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015347865 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015381739 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021055408 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.021046823 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022432151 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021244498 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022911423 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022497052 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.02122608 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022959557 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021351872 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.021449096 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021546772 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.021517716 seconds)
  done (took 1.205846442 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019267949 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.02072159 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016041761 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.019852816 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.016010659 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.019314927 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016021983 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015979747 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016049636 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016088176 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.02048839 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020408566 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016147466 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020038513 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019488797 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019584281 seconds)
  done (took 1.046859066 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020554014 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.026445853 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.130299005 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016684563 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018492511 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.016115233 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016912642 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.01576553 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.018025946 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.029941863 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016850711 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018864546 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016835966 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015612522 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016193769 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018747222 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018044763 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016898239 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016845469 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132379349 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025745067 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017799847 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019322856 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017900462 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018874424 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.025388566 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018521711 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018894818 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.017064702 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.019333056 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018866991 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.028294752 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018845423 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017671122 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015856076 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016696898 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.017189282 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.019296079 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.019234049 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.017146618 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.016001342 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018829485 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.017152792 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017489838 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018257096 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019208802 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018390581 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.027580551 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.017106235 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018914079 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.017175026 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018369666 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017647603 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.028464526 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.019222429 seconds)
  done (took 2.028919521 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036170111 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022062087 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015276252 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.01515553 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021527988 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.022825501 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021712514 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022167641 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022727671 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015223641 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023014954 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.021267641 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022968605 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021958362 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023047489 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021930507 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015300904 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022776888 seconds)
  done (took 1.154942804 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024653895 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020877067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.021090738 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017140357 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017094357 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020895654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015533044 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016809864 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016834438 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017271273 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017205715 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016882254 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016845743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.01678357 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020734232 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017174194 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016834008 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015752404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017211842 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015671094 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021170247 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.01575916 seconds)
  done (took 1.152759094 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.192477721 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.151701339 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038959056 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.034126085 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025834304 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.05208929 seconds)
  done (took 1.252885654 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.054563946 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025652948 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.02201023 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.047632653 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021191729 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019885142 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020018037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020313441 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02339418 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029019532 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020444063 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022981271 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023322772 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024998723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022017847 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021794696 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02072826 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020696225 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022424138 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032409077 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020866225 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023447004 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020916947 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020554917 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020754697 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025551146 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024007724 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029683904 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020539986 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023548274 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021876095 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020831606 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023661995 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029788764 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022333384 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024156157 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020900579 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032779322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022085892 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025867935 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.022100586 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022707129 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024107103 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023629603 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023654596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021044016 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023646477 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021030413 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020963919 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.035234237 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022178172 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025662773 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022696655 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023852332 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024137287 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.035839842 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.030410111 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026387563 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023084595 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.031733494 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028396187 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023936709 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028028233 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.032280623 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024645197 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028400582 seconds)
  done (took 2.422175858 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.031541264 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049907183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020258189 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028716395 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024520891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020325309 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020321785 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020258177 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020293919 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022534856 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.060611441 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020582046 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024784827 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025013014 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020818869 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020614147 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020631998 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025243514 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022858327 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034843792 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02074618 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025303829 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025376277 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0253016 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029614278 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021970071 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020742367 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020630935 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020640587 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020661219 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023652569 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020899846 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02564673 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.139654748 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026629307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021393057 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020996216 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023953434 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020914612 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02213124 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025746736 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.032158942 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020850577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020807915 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029821422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020841276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02081753 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022865414 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020853008 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022959014 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029913941 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0298073 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029878904 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026014634 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021452086 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021542437 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.025668458 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.021160044 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021339061 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022387992 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027538711 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022629093 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.03861315 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022588858 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022461555 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028159202 seconds)
  done (took 2.54331661 seconds)
done (took 51.71811898 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214919039 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.177280212 seconds)
  done (took 1.139853338 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.14187438 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.139150816 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.168122221 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023910692 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081552816 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174808621 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.126782838 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026436999 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024105307 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025529464 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023709233 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025241741 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025473254 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023603942 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086089481 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026367537 seconds)
  done (took 1.911176589 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073631219 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.277751675 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.05875222 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022926915 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103490614 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.028970199 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024398422 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028379236 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028855028 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023172767 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069904246 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.045488206 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.028207094 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028394079 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024278643 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.028147013 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028343575 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028925338 seconds)
  done (took 1.718452962 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.086548182 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.033790032 seconds)
  done (took 0.887021117 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.138573923 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.062439409 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.104339552 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.311060848 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.09782486 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.295800687 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.101299206 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.097381877 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.069174496 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.094206419 seconds)
  done (took 2.133156452 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.06239863 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.05674754 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.284640851 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054464161 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.03485551 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029849851 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.0302728 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.030314724 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.03056823 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029454848 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075194198 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028002689 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024398994 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.07213325 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.049643072 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.059371707 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023873242 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.02982554 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032924858 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023718661 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028598271 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.03058186 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136194732 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.030102368 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.051489979 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.028127195 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.029754209 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029787703 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029683204 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030693354 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.031307486 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.054646675 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.03026354 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037796488 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.02920332 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.051221536 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024866897 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.050947568 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.02764563 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024716664 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.028162276 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.031542986 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025317506 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030981642 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.031112113 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.03076936 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.031067276 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023949033 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.031087452 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027756066 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024767271 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.029208385 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028944232 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.030016075 seconds)
  done (took 3.035234443 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.077841234 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.066821999 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024256159 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073985501 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06546563 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024462482 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079542815 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060371786 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077922365 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023892249 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023562914 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.02354452 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031364398 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035366857 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076984575 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.069933989 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025816238 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024462822 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.069155294 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.069088282 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023087729 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.081098239 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070437285 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.068064999 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022816305 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.02440437 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023017742 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023706905 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.031972883 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031778383 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023482937 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034253282 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035861417 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.031099973 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022853671 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023123546 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023059479 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031922975 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033313237 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.033279052 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030475923 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022779617 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023182479 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023753516 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024257503 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022724205 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033524137 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.031932748 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.033584905 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023784477 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.025368994 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.023091125 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024003566 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.03096513 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029911299 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.031374718 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034655183 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023522968 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023565385 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024940118 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035179843 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.032032557 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031883669 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024540895 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.033014916 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023348215 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.03388954 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.03710507 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023293669 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023923397 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.02353273 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023517863 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023890762 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030135968 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.030300537 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023970262 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023815662 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02319869 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.032171611 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030451147 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023286272 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032535165 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022952083 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023665017 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024032499 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024247104 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.034827569 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.03347016 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024752094 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.024203402 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.024205613 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024182105 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.023350384 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.034512745 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.033134568 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.033539112 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.035437846 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024789661 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.036318976 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.033994226 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.025129073 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.032489752 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024290042 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024654414 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024602873 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032399212 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.032076579 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.033974339 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.024513581 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.024089591 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.034165895 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.036523694 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.024387793 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.032610052 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035507923 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.033245992 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023841042 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.03589531 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024342162 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.036075747 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024620768 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035473441 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02466996 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.03322088 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.02457398 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023687477 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024440475 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.036889431 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.025118765 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024484277 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024813682 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024405143 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.033275668 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.037754099 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.025167016 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033638263 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.033772827 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.025138697 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.036050682 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024711756 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.036052431 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024816539 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.025042136 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02371862 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.038224999 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.024408216 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024930689 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024460238 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0354784 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024451987 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035138049 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.032447032 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023832499 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.03676985 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.034876962 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.03255406 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.035471842 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.025274959 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024696355 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024310695 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024565601 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.035811761 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.037500199 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.172636577 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023515776 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.028930716 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.032018077 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.022737914 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.029063751 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.028921868 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.029309237 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023314974 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023222119 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.032424103 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.03342845 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.029354566 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.031683785 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.030335324 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022977539 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.029061413 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.03176947 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023006791 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.036105257 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022915817 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.032510664 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.03210284 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.028435811 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031709501 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.03299714 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.031634916 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.031390082 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.03339384 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022575188 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.022808861 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.029260222 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022800413 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023042204 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.029022731 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023502433 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023532122 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035651232 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023182575 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.031960238 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022536652 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.030097695 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022475666 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023514398 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.03428984 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022878687 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023487154 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029593759 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023055218 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.029174263 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032349908 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.029416619 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023161031 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023906615 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.033989917 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.033250067 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023410462 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023214224 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023897583 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.032842582 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.032165655 seconds)
  done (took 7.885545947 seconds)
done (took 19.491780488 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.146262774 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.073193855 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.144317641 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.085054862 seconds)
  done (took 1.208673955 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.058057078 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019571885 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.145360003 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.157519641 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019828387 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.140799425 seconds)
  done (took 1.321528092 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.263494616 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.155965863 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.167381304 seconds)
  done (took 1.36987756 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.152266922 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.28007218 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.549966317 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.146691885 seconds)
  done (took 1.919831365 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.173674631 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.169049783 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031449174 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188057523 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.039648728 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016518587 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.110399502 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017402821 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.053647168 seconds)
  done (took 1.644826405 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.100309057 seconds)
done (took 8.350106601 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.199995668 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.142640769 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033904905 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.027991504 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.124920822 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.136244659 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.142924825 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030426296 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.133796155 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.313654681 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.182689266 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.04951407 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.160371653 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043633919 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.267444603 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.031548527 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029900927 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024999399 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.146531058 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.132988562 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.248450449 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028815487 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.097647627 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.031265049 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.101739036 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.080862598 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.18959187 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.320602437 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.284022552 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.031721529 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.120690672 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.043086682 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.116764971 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.125275698 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.140707337 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.049420676 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020485018 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.249171502 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.107218364 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.330530713 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.168010351 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027747367 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.145437259 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.026370902 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.020273892 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.153656444 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.033784487 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.027683999 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.044061631 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.02790702 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.043456535 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028935499 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.134959002 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024456738 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.094392641 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.148704402 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.186559268 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.10354371 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026837289 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.040368001 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.030685524 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.161336136 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.039387808 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.026745124 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.03314203 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.02085404 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.145629501 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.040646028 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.021105505 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.031881678 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029702318 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.100796341 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.16313231 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.067527388 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.032546558 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.120210624 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.098741993 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.047401667 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.050515518 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.030309448 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.020369806 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.193515678 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025969788 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.039202662 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.02756147 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.054275184 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020515038 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.036117499 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.32911182 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.145804806 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.084855329 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.02039327 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.229852631 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.021150479 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.044305554 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.020636901 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.019959803 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.183382052 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.019811127 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020054347 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.029928883 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.028824458 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.021549115 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.163501258 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.099104363 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.028150822 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.026860048 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.020227806 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.025756483 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.02116867 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.020163911 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.019956114 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.094415854 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.036616595 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019360624 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.102877771 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.116982598 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031159267 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.035937349 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.084983157 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023360806 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.029886825 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.02714454 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.134017156 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.026489118 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.1310344 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021481524 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.042417862 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.119387104 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.096343992 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.102095389 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019833193 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.138103326 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029779354 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019419486 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.027296021 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.047921949 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029470876 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.036730698 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.028119973 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.139288191 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.031106669 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025938002 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.120286967 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019527745 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.11705069 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.098803517 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.131118827 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.025615594 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.031015893 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.093149314 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.044493271 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.050454185 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.043396663 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024783533 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020445074 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.020080039 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.033311513 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019544762 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.020311736 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.033525197 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.027055644 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.036048606 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.250359003 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.030310685 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024576542 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.26116121 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.03269599 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.094364449 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.040820487 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.02060928 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.102195605 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.02203542 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.040581877 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.085321104 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020512623 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.097288083 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020876784 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.020340989 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.02632218 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021891888 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029774446 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033811928 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020808417 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033470303 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027899074 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.020244559 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.101274972 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022119298 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.189694288 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.100147605 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.09685817 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020408149 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.039045074 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020100453 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.133365217 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020454006 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.070740879 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.111887717 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.035593165 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.04130409 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021927897 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.100192163 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.035476136 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.025790168 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.100814978 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.133609189 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.095730309 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.027189174 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.258155816 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.029996957 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.021633922 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.026899291 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.029817538 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.021472198 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.102324025 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.025680924 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.020347849 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.020572628 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.022630094 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019936648 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.045847714 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.02010674 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.028812804 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.026508894 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.023976862 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.022789473 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.020124337 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.029249381 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.102584231 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.124950151 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.02723736 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.041142118 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.034630309 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.032665067 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.071128299 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.029100337 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.162740669 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.020255045 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.030899937 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.043703373 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.020531066 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.025762856 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.026401408 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.038944787 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.024362787 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.022302749 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.030026827 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.021131602 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.021083368 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020918425 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.021015823 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.029736355 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.022409142 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.020374658 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.020357202 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036938805 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.025763154 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025977068 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.032247156 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.041165342 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.653522611 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.023579925 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022363121 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.033321657 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025899904 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020628216 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.022309569 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020073836 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.02193082 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020234 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.01962379 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.048510588 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.024275555 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020814924 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.040383386 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.02583319 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029974867 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.117494947 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036282427 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.024128214 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019213472 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.261356452 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.093157881 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.040320316 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.038798013 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020082254 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030343445 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020011968 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020367819 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019207074 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046605423 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.024201557 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020121465 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019148252 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019448448 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.067778795 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028132332 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019376845 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028100943 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.019733979 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.019694917 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046462057 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020298589 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.019639764 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.036864044 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.031360902 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.102254577 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.031066334 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.022824338 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.070903255 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019167891 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.019756703 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020047969 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.116678701 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.032952238 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.021193619 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.019740026 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.027203218 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.028977727 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.073413913 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.025953391 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.02248277 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.027535014 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019047334 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020048243 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.045687337 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.047573615 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.020954661 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.023665159 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.019853711 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020282476 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.096320353 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027694813 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.024989309 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.107058527 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022020394 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.0281209 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019326012 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.489433833 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.025074871 seconds)
  done (took 22.587703149 seconds)
done (took 23.387349097 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164538868 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.034553713 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.040057641 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028523981 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.032058996 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.032691378 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.042219619 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029397576 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032596627 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.039536697 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147368989 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.020040761 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027696828 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.035119674 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028428432 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.036171451 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.032465785 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.035473856 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020505026 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.03561438 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.031158046 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.031202989 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028950262 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.03532871 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020638835 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028640582 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.157099007 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.040594725 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.024087361 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029794345 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027885591 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.042310381 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.028070467 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027423509 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029588523 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.02550059 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.030328375 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026551784 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.156530551 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025791541 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.021152204 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.033232721 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027374102 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027858887 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028642736 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.031481889 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025406154 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.033928626 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.020166666 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039861846 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.15659637 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.029193348 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.023998201 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028475952 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025498859 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.029384022 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.023713892 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.031913757 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025333423 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.039164003 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028576098 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027879827 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019859727 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028554885 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.02738077 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027725963 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.019164114 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.03438301 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019937756 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019898524 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.019576289 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.02862129 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026989033 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.025091201 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.019631082 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019986636 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.019660884 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.039339594 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.027221899 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028801865 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.020328363 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025503554 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.02508181 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.02050121 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.029084712 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031376053 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.028986401 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020421153 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.019586919 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.039319044 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.02660291 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019933397 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031431187 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.029003225 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028817639 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019957138 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.019692837 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028772979 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027896898 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019897485 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.019155433 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028830191 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.025172671 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028712455 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.020343435 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.02878296 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028810816 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.01933177 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028582036 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.027356395 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.029095086 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.03090093 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028635947 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.031254563 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020410649 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.01923109 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029746753 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.020338297 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02904174 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027978295 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025448217 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027765661 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020479713 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.019577532 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028880711 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025960285 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.020357697 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.02038477 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.020246116 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.02882317 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.027371351 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.019277276 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019892897 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028695486 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028554254 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.019677575 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.019503746 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028679673 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.02040642 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.026079326 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025396208 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028708638 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.020041507 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.02030783 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.019523461 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.020007152 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028927897 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025414736 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.029143703 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020554885 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028645271 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.027211922 seconds)
done (took 5.668853961 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.077641792 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.064406479 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.182890259 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147004214 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033766018 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.034423319 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.025349911 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.04105499 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.027288143 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.046087947 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045718417 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.043375484 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.169764039 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.041375324 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020462745 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.032529288 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020918013 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.050085037 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154944209 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.045626467 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.064536372 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.019211216 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.037452494 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.039503676 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.033665354 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.039930678 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.044913928 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.0214851 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.038791558 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.038522414 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.047684773 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022964743 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020884047 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.040908857 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.037301076 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.030029582 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020239115 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.027652979 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.032803137 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020364511 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065884083 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.039665963 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027757715 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.028101388 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021295011 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.036108353 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021290508 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.029188143 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.035577264 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.027508582 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.03389013 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.038591396 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022725099 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.039381018 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019449753 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.028621285 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.028168449 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020215447 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.021190367 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020307346 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020233721 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023266368 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.033719824 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.040602979 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024505217 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.028420698 seconds)
  done (took 3.61160488 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.047665897 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.067078342 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.034851657 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.035203017 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019921185 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020432128 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020398147 seconds)
  done (took 1.13949247 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093539514 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.142216358 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150107618 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151860255 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.162262058 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.148864269 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.03327672 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.051056563 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.05614464 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.164532213 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.160357558 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154556388 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024784938 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.033411723 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.053746184 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.158075291 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033908642 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.02845367 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.149830115 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.156195399 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026058328 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.052876275 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.03401264 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.023872341 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.155210426 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.146698114 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.02492576 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063542631 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023545872 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021375945 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.02130459 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.044479855 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146006808 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.036874673 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021698919 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.020293393 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.143189361 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021867932 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.146081478 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028636345 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.145837467 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023888232 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.024003224 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021675326 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022637249 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.148952621 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022701814 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.021331193 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020934634 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147679786 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.032515355 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.146137996 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022890642 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.026557942 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028407038 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.028216201 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028535444 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021772231 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149199637 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031806016 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023222723 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.157770787 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.157075414 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.147218764 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.160043439 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.0312081 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151247667 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.151312726 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021938087 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.029929765 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.022600679 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.163041064 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025872162 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.024279116 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.020276604 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.029129968 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.166966437 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.166840023 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.167435653 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.036572294 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023588014 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.022882102 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.165833451 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168808672 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027925752 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022180765 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.02240815 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.038560359 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.047753701 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.024439247 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026851027 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.02213013 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.032862476 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.024527367 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023996844 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.305777569 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.020285848 seconds)
  done (took 8.171998061 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.036372643 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021702609 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021194789 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.02164458 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021819441 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021580311 seconds)
  done (took 1.063391245 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.050350999 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.022240256 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.034870899 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021963695 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.044938662 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.140228153 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.140485079 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.02325768 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.038761155 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.034247428 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.140303647 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143711528 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.144257105 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.023553765 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.142003502 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.03419622 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142149487 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.027186 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.033504056 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023545881 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.033211719 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.023090505 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023371035 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.156777313 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.017358278 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.033818108 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.03208775 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.033757178 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.033237202 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.023060458 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.023045943 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.017073614 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.028397135 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022972284 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143658942 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.028693343 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022512432 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.0182927 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.026818254 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.017073197 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.146506329 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023942731 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.02732755 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.018375118 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.023116536 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028440203 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.018254851 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.032793745 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144769164 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.018490325 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.01821227 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022866752 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.017082877 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.018079656 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028403028 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023214818 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.018181128 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144829462 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.023495823 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028644536 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022514413 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.017157599 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.02314809 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.017061662 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.02756815 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.018119766 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028416713 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023464396 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023434561 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.022337235 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.018196087 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.022350779 seconds)
  done (took 4.15592529 seconds)
done (took 19.038555542 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.525690028 seconds)
  done (took 1.424498551 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.028140177 seconds)
  done (took 1.963615316 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.051322778 seconds)
  done (took 0.978094811 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.308796266 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.531098361 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.746923976 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.093755064 seconds)
  done (took 2.592131231 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.866470483 seconds)
  done (took 1.804680797 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217327908 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.179086534 seconds)
  done (took 1.359674759 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.493666329 seconds)
  done (took 1.415455998 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.342340463 seconds)
  done (took 2.272289704 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.204653761 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.13504201 seconds)
  done (took 1.27189005 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.612391262 seconds)
  done (took 1.538318202 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.482051642 seconds)
  done (took 5.410973718 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.190745399 seconds)
  done (took 1.178281868 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.193962536 seconds)
  done (took 1.124609597 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.716588354 seconds)
  done (took 1.644052469 seconds)
done (took 26.922250708 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.044198311 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.03747265 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.037438411 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034781854 seconds)
  done (took 1.072066577 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031312885 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.025367961 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027609159 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.028172766 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.025328047 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.027114047 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.02782987 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.024042028 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.025172996 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024441637 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.022926641 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024414597 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.027075718 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.024167057 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.02678232 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.028121753 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024574938 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.025035756 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.026421289 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.024134004 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.027056116 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024479391 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024465862 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025928174 seconds)
  done (took 1.55348091 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034723061 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.026061519 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027815378 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024858755 seconds)
  done (took 1.047613249 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.033570011 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.031258698 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.03989909 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.044328053 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.030888572 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.031452385 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.038004109 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.038400402 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.045230008 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.041079876 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021916543 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021715858 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020868943 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.039862571 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.038367424 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.016186983 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.01769974 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.031650552 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.030653461 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.033559257 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023930688 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019509591 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.031023534 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.031388995 seconds)
  done (took 1.682984363 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.038301112 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019830613 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.036275372 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.045045008 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.045460744 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019580192 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.033508531 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045726902 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.083858668 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019676267 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025719631 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.01963169 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.058459742 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019697208 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034755337 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.065284412 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.067927396 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.02377363 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.050780292 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019625973 seconds)
  done (took 1.711188533 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.02894756 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.024551585 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025241941 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019428933 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.030721809 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026959427 seconds)
  done (took 1.094920238 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024496893 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021582605 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021371779 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025712841 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021168116 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021168742 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.02122184 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.020048768 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019921701 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020766497 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020740946 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.02117924 seconds)
  done (took 1.192816837 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.16669638 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026682903 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.026064737 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.020040085 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021724927 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020845017 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.03604317 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022721601 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.039156015 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020801153 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.021114121 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.023361023 seconds)
  done (took 1.379553301 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061409183 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066238058 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101589209 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076639346 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081284901 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051102433 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.204355676 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033806975 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.123352041 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.094466848 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080616496 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046893129 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.041010307 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.024029994 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05640626 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074791779 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092950097 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027338348 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07789805 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.249366497 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091888943 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095103733 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107783472 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082058293 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.048990814 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107863166 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051800294 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.06021184 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080512929 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085210496 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077448314 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.05918537 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025990721 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.025641319 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120295874 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.066492701 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079219039 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.050044756 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.062326128 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.044924577 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085025592 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.025052529 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.038278342 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.07115592 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044536634 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097026597 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.049897119 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076703005 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037668827 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104205032 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09512849 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.187229949 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.044064943 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065158282 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110645671 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.220527654 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089765033 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062188254 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036703596 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.075059447 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.061451193 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055406078 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061511855 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034665484 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134844849 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043344137 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.079313213 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069663224 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.049766747 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049347064 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.065328463 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092077516 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081488881 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.083522384 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096077963 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.047846967 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088893258 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.057058839 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.082352348 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060552232 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.027317708 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.081877821 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086280855 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.056111097 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057080266 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094034304 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048625732 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030787406 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.057697905 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.077057166 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035132793 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.071326273 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036142111 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.088176517 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098609361 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055002338 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075615498 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.076319871 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033523547 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132199237 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.066212855 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028472122 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075753663 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074333478 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120213066 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057724309 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.030748407 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059877784 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065470992 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.118646691 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071875416 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.038127577 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.231390305 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.0963599 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049170992 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.254982338 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050316979 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096723099 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068152952 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040622908 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.029510634 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.048269551 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067843839 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061680028 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075185706 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048614187 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.038170623 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.04025469 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071573183 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.047620179 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034920151 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072206798 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.057523154 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.028831432 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04276154 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.031127799 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11116056 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.033984148 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096171911 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092372238 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.030281423 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062815776 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.051878785 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061818142 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.057460997 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076082585 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099752717 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.143210386 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.04660072 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.050944493 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064745134 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10442183 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084843472 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047220325 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.040593984 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056732228 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068257201 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.057062194 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083337287 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.050319973 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071423476 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060487848 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103438228 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111064488 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061488141 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.064405871 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070214529 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.087116521 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.03087787 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126362822 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066128073 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084742147 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.044394781 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.26556164 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.070700252 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060753307 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040703567 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058224925 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.058499146 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060903204 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099220303 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.049783674 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026226616 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047398821 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102200797 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031237215 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07278299 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.044479991 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.047287983 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072255527 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.047663404 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036235384 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022643992 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08127165 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112788524 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.024209846 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.071001081 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.062159897 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.057739106 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.078198354 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.023999221 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084441605 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.096287445 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083366453 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104645339 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152432134 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078041911 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075732295 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.081189665 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070576924 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.034390649 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.084431417 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094358774 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053106802 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04854495 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095251092 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075786348 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.09948372 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.081246119 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085429721 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.067255655 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066575506 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064933361 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.066493576 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111978368 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083610829 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.088972201 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.040784963 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076415973 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.233065492 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090698896 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.035258685 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096244085 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.038895228 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096203182 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.032154486 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084689448 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.0303439 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.124814636 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033690677 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053835498 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.023746725 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.027887484 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.097563726 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.079240195 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.060615071 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054082011 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.092831791 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092140317 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.031761333 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066266671 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068513654 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.059422755 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072584193 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.064092295 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.044990343 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051988253 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.064226412 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.040544265 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.037092596 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084115174 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052060553 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093028428 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.038238787 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029412432 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098709426 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068696966 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051976012 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.031073917 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064355225 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.082062945 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047706356 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041245501 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076743593 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061217443 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102721696 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.045877957 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.058511948 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084517591 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.036977644 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.052855293 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.02451071 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.045113282 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031354813 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090540931 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031302315 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.080199489 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.023953878 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093420956 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047788784 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.055596243 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.06571434 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073389348 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101048535 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.052160906 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109478514 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050007314 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.234116853 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062319643 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068135322 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.040693809 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.057211971 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.058555482 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076749516 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.050080577 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076403825 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097389758 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056854156 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.097483415 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044481301 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077091838 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060575569 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.078262362 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.065626562 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14766812 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095204745 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067440191 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.065048304 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029996663 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05115558 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069687067 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070165117 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137624357 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084108306 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026995638 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.061965183 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.049115593 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066916087 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066598196 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037529166 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104149043 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059239167 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.042319474 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069156847 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.048039826 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.060789638 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031393114 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058625387 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.058187958 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.051393325 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0536866 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071812205 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.088476516 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07076805 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.104731424 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.058598216 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.048423218 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.079816906 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079398939 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.077351818 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042704608 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043374122 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10969909 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083626742 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.088423763 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.057455511 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.223743283 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06620521 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054105285 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085374943 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061056367 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.081461268 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034110462 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.030965728 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022663186 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.026010181 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078574374 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06691986 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064102279 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058661909 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026088811 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.060222392 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061416554 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026122474 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.03963057 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048292017 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.052748302 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.04587132 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06001478 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.069279944 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.050171993 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057693413 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059563075 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105068992 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.053830953 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044494861 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104964853 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111470024 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044263217 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04955718 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025843176 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033850723 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081291299 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105804544 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116593118 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.034059756 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041252023 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.041742603 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042903387 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025857242 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.048501278 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.0459076 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061521737 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053688732 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.071720928 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061330628 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030782846 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.065973842 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056612575 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048583958 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.064464306 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07988242 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.086606815 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.105111973 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072473348 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07660174 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032434041 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.038445587 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.032396858 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.035879329 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.067109593 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.035320056 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032978932 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116056284 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.049688067 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.224132515 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068856028 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.042105995 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029635343 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089813685 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023678354 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090401998 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025150692 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036153327 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.035785102 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032557385 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04767035 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092108841 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063137527 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065628372 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060700429 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065000184 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141304537 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113919055 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035034559 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.096709603 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029665044 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.030376482 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030318487 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065249281 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044441276 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072741912 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102588381 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044066144 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057835143 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033517647 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104246374 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.058415133 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060820589 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041136107 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.034258249 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104175457 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034534448 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.042688347 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.045094927 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.066741355 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.026879275 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058013102 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038207601 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034338573 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148545698 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.668094823 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052267387 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.0306817 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.052437463 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.101700814 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097887156 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05323558 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065999884 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.077356677 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.061731777 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.050410873 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07551347 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.15756999 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029084214 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054781522 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.063266988 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.063364919 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071327594 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.05896925 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.050495869 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.056463532 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.195288749 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034126559 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069842757 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040710084 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.050951031 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.060087165 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037278941 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.041379524 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085663943 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.056502533 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.03686497 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042223411 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.058466753 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039834405 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059456408 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.023731472 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.064881111 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043167661 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072822979 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.049670188 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.064793953 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.08033089 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047787614 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090998092 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.061133435 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076940106 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.04091759 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032507335 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08100645 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.045087238 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032050237 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105031977 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.054008964 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.059914508 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066166381 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.050594625 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070350895 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.074686343 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068894295 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.058367977 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033225401 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057741364 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.068595305 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042735317 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034816655 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.029475922 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.030019357 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064516779 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042707984 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041370471 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073912983 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.044873959 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.059671287 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.056630769 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081438894 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044158466 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.326511938 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.070408555 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050607447 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097301313 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059216277 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091435742 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144220425 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099917672 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093869574 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.245825434 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.032365062 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.033966795 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023250268 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068860889 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033773246 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.043097018 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032953856 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089256672 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.038186534 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064967679 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.213312338 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.034449811 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.048193217 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050329007 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.023997227 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037402077 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06147521 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040446595 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034056328 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070258509 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.035545368 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082804033 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064267814 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052434817 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048882571 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034863515 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066871387 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.058872246 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.085499622 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.053422437 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.029585256 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.078650044 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.06172279 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101709746 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.029375892 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036279575 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088896261 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060007195 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090969582 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036530054 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119504963 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.102384027 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.060846104 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094877952 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025787058 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044176525 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045637128 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.079874147 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040490435 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068533179 seconds)
  done (took 42.612371789 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.138922608 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.13042758 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.076777708 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.089497699 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.246469538 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.256081764 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.111575755 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.078586733 seconds)
  done (took 2.202664173 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.02480202 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.054178835 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035474837 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.299441887 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.054867195 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021150654 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.028769156 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036429885 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.021134708 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020541248 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.059673174 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.021045005 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.0249918 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.47868919 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020295927 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025695194 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.02492256 seconds)
  done (took 2.319240096 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.310138404 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.586907029 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.355213532 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.379271391 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.103875431 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560879031 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029039185 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.034321305 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626055912 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.162477382 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.09766594 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.174407857 seconds)
  done (took 17.473460588 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031669889 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.160967926 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.159200331 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028090352 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027742869 seconds)
  done (took 1.540446256 seconds)
done (took 77.891196845 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.04121021 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.12466465 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.0210031 seconds)
  done (took 1.228590151 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.163131122 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.15810269 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.159207356 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.161624498 seconds)
  done (took 1.691498281 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030987142 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030262718 seconds)
  done (took 1.117472786 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.197059504 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.263938274 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.044547226 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040612999 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.03503705 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035274379 seconds)
  done (took 1.171422231 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027448631 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.025230694 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.025187975 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.02571221 seconds)
  done (took 1.154264441 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.141075952 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019901806 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022488943 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.024101622 seconds)
  done (took 1.258911811 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.041356855 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.04034723 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.070641683 seconds)
  done (took 1.207976528 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.040380319 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.03911394 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033753399 seconds)
  done (took 1.167677932 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.064720729 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.050405965 seconds)
  done (took 1.166605139 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.036659755 seconds)
  done (took 1.090344361 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.049390491 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.052637398 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.225429803 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.191102745 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.234027 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.212853062 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.034383795 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031673342 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.026975264 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.036391019 seconds)
  done (took 2.144210313 seconds)
done (took 15.999170928 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036926691 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.152277721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.269821767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040572065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.608925401 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.266645078 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.678322561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043303887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053685392 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.02214885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038832761 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.586738436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.681820642 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.100273728 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.66851145 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.088640455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.515545186 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022183432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021542158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022169311 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.662409652 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021854972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.02214913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022803608 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.513755569 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.287136879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022779564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.089912769 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021773235 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025679619 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.269393431 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022818945 seconds)
  done (took 11.945743678 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026458308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076566427 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026695644 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.037683397 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023858043 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.02379549 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.025694385 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.02233446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.06495046 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022147003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039254712 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021603441 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026321036 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.02315095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042389268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021924543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.02401564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022514998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021869895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022399068 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041174861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021854137 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022534803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022535775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022427315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037099913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023313926 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022000753 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022274841 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026047971 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027266939 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.02338387 seconds)
  done (took 1.991072639 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078743342 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.078308616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027475279 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.061883754 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073667211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024595049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104828779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.04416751 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.067669379 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022611464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039730934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.02223981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.058410638 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023628113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042670056 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022425447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024500574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022710813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021896311 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022463642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041200391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.022076091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022510314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022905611 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022710629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.03909304 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023368237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022226854 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022218657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026196656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.02810948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023315423 seconds)
  done (took 2.26367328 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.026205736 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.026545729 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.03208919 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035755589 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020616785 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.02318797 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024294838 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020655012 seconds)
  done (took 1.273967899 seconds)
done (took 18.544633404 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.036043523 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022579015 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.025449887 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046519648 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028656402 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.148164701 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.024955685 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027486239 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.026131581 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025302315 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027672876 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019885715 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024598951 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024746383 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026531271 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020541371 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.151954087 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.02493454 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.149793359 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.151212548 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.02325259 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026200542 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.028985112 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.15036318 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.150317379 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.150606422 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029984612 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026583118 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026182301 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023505082 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.149827411 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.153120647 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.02382861 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.147981428 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.021093782 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.02084892 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.025266235 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022278526 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.155011325 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.030246218 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.023163422 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029905004 seconds)
  done (took 3.519229442 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.154642047 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.159559958 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.152442094 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033150799 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.029334876 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032438732 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.158523755 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029727921 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028396844 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.158129908 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.024174753 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.02821036 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030503574 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021217639 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027929488 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024613668 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029972106 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022427576 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027918742 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028276199 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.158363352 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021679958 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029081619 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029503122 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.024091425 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.02997928 seconds)
  done (took 2.577881563 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.030999052 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043812013 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045874749 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109891606 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.063116728 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.043695266 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.037204228 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047670522 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053376031 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021417543 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.044038624 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.050763619 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.050009244 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028614108 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060501319 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040462104 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034475127 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.023010692 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.028002359 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.056056368 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044941988 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040819492 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054427344 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041371665 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020470047 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030437259 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025940891 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.038463626 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.032953668 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.034054437 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025191778 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.024917193 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022183903 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032270303 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025159393 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019892968 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044845374 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034471237 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036325198 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060529957 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031718136 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022708558 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048082372 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.081244791 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020302567 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024381456 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025684661 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034179925 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022855802 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.063650191 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.03656602 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020908507 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040903543 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.02344992 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.023033012 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.042613696 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.023191764 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023668474 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.042030701 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027897148 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043417151 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.027050226 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.041824358 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020701195 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.033487036 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.023067911 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.023421393 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020408795 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.056105761 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.029157362 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.069308618 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.023008879 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.020273916 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.034497237 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.033476279 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.029210289 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020665725 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.040503163 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.034575825 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.02571664 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.040439956 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024581883 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.02540748 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.066434272 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.021127688 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.020263486 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.020114294 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.024383244 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.025390392 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.022455228 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.035027887 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.021369052 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.025242685 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.049283996 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.021595982 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.02265949 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.024577114 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.023668623 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.021200662 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.032070861 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.025539604 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023586968 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034686344 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022465918 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.025382352 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.037463315 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.031310055 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020501559 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.023165733 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.024550412 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023439239 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.023359779 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025308021 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023664842 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.027250371 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.029578707 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027717475 seconds)
  done (took 5.031194341 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.247420714 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.236528286 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022651752 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.233160528 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030428096 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.164622965 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.235834772 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.237118944 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022425819 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023132344 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021394901 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178929492 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.174457645 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187034697 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.165936941 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024438438 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.055475881 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.186003442 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.24419412 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.238989831 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.054844414 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029707177 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.025040635 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023795992 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.023023566 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.031329048 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.039456775 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.031138877 seconds)
  done (took 4.282721742 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.031313062 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.066810512 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025881089 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.047099205 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.039462994 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022727367 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023960661 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022748642 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.039053714 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.02793527 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022442237 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.026354005 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025687629 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024485548 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022358171 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.02854615 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.029057193 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.021007242 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025683761 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026841575 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.0334725 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.046619139 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.026105373 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.022004598 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025608816 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021954128 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.027464424 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030912326 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021762223 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021900003 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019329294 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030815852 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.037330126 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.02335908 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021907523 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022747959 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022484344 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022498678 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022338042 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020599948 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020543357 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027480717 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.02099167 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.027289887 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.040012752 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024662998 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.024149473 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.02498794 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.025276284 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019374195 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025552183 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025716126 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.025148733 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030790092 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024715834 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.025306038 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023694026 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.037183882 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.028358333 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.022294258 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021720881 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020899717 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.02467791 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.029437575 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.039084549 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.024895844 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020920561 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022796136 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.024199337 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.036120338 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.022068941 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.029275353 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019990705 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022845206 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.025288811 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.025400908 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.02428685 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.02092854 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.022505777 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021957742 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022655906 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.022150322 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021795061 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.025237262 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020453151 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.021048715 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.023499191 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.024380332 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.028381247 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.02141151 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.026349165 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023996185 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021229199 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.025098173 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027960377 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025495009 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.040837659 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.030578424 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023615772 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020783762 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.039821353 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.025224833 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021918679 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.02465035 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.03132175 seconds)
  done (took 3.897209194 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.053144945 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024531677 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.042118874 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.058117623 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.032722619 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028174101 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.036059175 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023693025 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.043990197 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021482263 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.03163325 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020714275 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035355765 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.031176196 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024308079 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032257578 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.025210207 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.043077748 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.037345826 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.021121624 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.031086136 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034897471 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034893799 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.040160936 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039381987 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040664845 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034588591 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025125582 seconds)
  done (took 2.0459911 seconds)
done (took 22.414286474 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.153444959 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.319270773 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.122023157 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.90319659 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.182769832 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.219393146 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.331699888 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.098907681 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.216869661 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.206594491 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.769111247 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.796921785 seconds)
done (took 60.480145799 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.103043412 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.241567712 seconds)
    (2/2) benchmarking "String"...
    done (took 1.328395716 seconds)
  done (took 3.652488913 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.524077252 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.085693552 seconds)
    (3/3) benchmarking "different"...
    done (took 1.119033606 seconds)
  done (took 4.802516365 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.464755015 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.074099759 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.425442049 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.07460082 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.089469023 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.87166803 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.461195289 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.915835954 seconds)
  done (took 27.996022241 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.168119655 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.34078184 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.501448957 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.598599782 seconds)
  done (took 17.805765614 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.532272095 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.639678086 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.640255014 seconds)
    (4/4) benchmarking "different"...
    done (took 1.823175927 seconds)
  done (took 7.842638957 seconds)
done (took 71.756320132 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.073918197 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.226244159 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.084772318 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.269497151 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.115323526 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.169292142 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.086355812 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.116648194 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.083758896 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.087725516 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.033934855 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.093478325 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.087614539 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.162774033 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.090398724 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.101914771 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.222757994 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.08567889 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.115883413 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.698763019 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.406833517 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.078745517 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.084244352 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.158707786 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.308996766 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.138623585 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.375210674 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.093254619 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.684336847 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.093760566 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.091699417 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.084113035 seconds)
  done (took 180.679866119 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.073633825 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.864960628 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.874315557 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.09562708 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.412899135 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.432611242 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.891022184 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.430035741 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.083357845 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.083781136 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.247790138 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.076992737 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.143331381 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.620468332 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.119425551 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.11781172 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.971139076 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.931829899 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.130776856 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.968931094 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.079468921 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.624583729 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.602647851 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.91465626 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.096763639 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.101702017 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.0927303 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.130273457 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.576210695 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.991085481 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.088654915 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.107264963 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.266870141 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.320364959 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.087234185 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.094043155 seconds)
  done (took 151.830359591 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.349262848 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.082896328 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.119195057 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.192510859 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.854725508 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.744318068 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.084060272 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.073562055 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.073730288 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.080118843 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.075136622 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.139190733 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.083706427 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.422306083 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.11424005 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.075387078 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.074512621 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.407695236 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.09537946 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.074113176 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.073784384 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.17109959 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.425054627 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.184494464 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.083465543 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.082143299 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.182432343 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.090222174 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.075080719 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.073708422 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.182122377 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.083713078 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.200086138 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.191813624 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.088987441 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.129078888 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.090850603 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.171764767 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.085769634 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.074171778 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.075146308 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.118034503 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.083387304 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.889818788 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.182176129 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.086878962 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.092652246 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.655797468 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.670832147 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.086412324 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.073767252 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.073274828 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.076964356 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.07521269 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.483156821 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.087969734 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.107671198 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.158806079 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.091448484 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.07429369 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.073525189 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.073721106 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.074113529 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.080067245 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.109877581 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.639868469 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.353813486 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.435975871 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.70573436 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.084116207 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.074391368 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.073737683 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.489517606 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.146546281 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.075755374 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.074011444 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.238675193 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.083167824 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.073653069 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 2.930208738 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 2.934151007 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.084818175 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.182801173 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.083863559 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.073882165 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.486174132 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.438024698 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.095395741 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.09306502 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.129013138 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.077094034 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.073642739 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.080727046 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 2.931330424 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.085423402 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.085766825 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.261976535 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.084508158 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.074128712 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.541714654 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.426866349 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.084238568 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.155973292 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.456763564 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.872537172 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.084049865 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.07336623 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.092892896 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.075104202 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.086593597 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.086192399 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.074961133 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.074015361 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.078236825 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.074196866 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.073721742 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.073736941 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.092699443 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.075199255 seconds)
  done (took 321.857133787 seconds)
done (took 656.943221776 seconds)
(4/20) benchmarking "parallel"...
done (took 1.073295977 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.333490268 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.100429317 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.286658864 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.327034495 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.285417153 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.260268288 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.28905917 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.377237804 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.313412977 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.251998592 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.312205006 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.256971811 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.362447478 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.341349001 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.375714108 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.344419168 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.282737109 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.774956321 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.297273413 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.256486114 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.278975351 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.259001667 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.240096593 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.312610114 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.379269766 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.258941772 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.484244652 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.322309337 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.291611343 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.334569354 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.354440162 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.371815045 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.300735067 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.36172001 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.321836513 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.394728118 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.274754727 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.346197784 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.261858325 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.295035779 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.306652316 seconds)
  done (took 62.255898933 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.523365225 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.264576457 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.39735673 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.400567971 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.951037446 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.375180354 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.49495574 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.264565674 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.28262009 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.389010854 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.40169922 seconds)
  done (took 17.847654325 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.351421327 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.264934937 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.406185064 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.410692023 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.495527558 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.378452939 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.447892899 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.26434611 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.275413603 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.432629565 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.438986342 seconds)
  done (took 17.266958276 seconds)
done (took 98.443675338 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.671968533 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.157315837 seconds)
  done (took 3.903255221 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.107115837 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.095087881 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.086635997 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.091104409 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.088572077 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.087521161 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.138333272 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.099532445 seconds)
  done (took 9.868103041 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.086813299 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.086759039 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.087373932 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.086783437 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.086836986 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.086443815 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.087034131 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.086580738 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.086420258 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.087048552 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.086664272 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.086932227 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.087200886 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.087532761 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.08693323 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.086704713 seconds)
  done (took 18.466304249 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.086390408 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.08725822 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.086459453 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.086450596 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.086969787 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.086223539 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.086794884 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.095279159 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.087370107 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.086944696 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.086590685 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.087032598 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.086808084 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.08689413 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.086778564 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.0868438 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.088944473 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.086542612 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.086598264 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.086657317 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.086674718 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.086324298 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.087571453 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.089727137 seconds)
  done (took 27.171233086 seconds)
done (took 60.508406463 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.93678795 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.321844536 seconds)
  done (took 7.33295671 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.091372794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.087443421 seconds)
  done (took 3.37936082 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.087440081 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.086708421 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.086672902 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.086449451 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.08646542 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.086577272 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.086650165 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.086294785 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.086840936 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.086668254 seconds)
  done (took 11.940931548 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.086286512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.086798288 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.086387505 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.086116479 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.086891809 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.086398823 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.086483522 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.08632661 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.086587433 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.08631009 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.086655633 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.27466782 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.087011889 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.313496475 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.08659269 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.086622431 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.085745708 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.086311046 seconds)
  done (took 21.046481637 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.086190689 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.086416167 seconds)
  done (took 3.246579223 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.086140825 seconds)
    (2/7) benchmarking "second"...
    done (took 1.086371968 seconds)
    (3/7) benchmarking "month"...
    done (took 1.085958565 seconds)
    (4/7) benchmarking "year"...
    done (took 1.086092885 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.086834937 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.085892751 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.08646626 seconds)
  done (took 8.677787433 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.537770607 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.253015795 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.303391858 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.545189888 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.757652211 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.0109402 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.758407313 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.00401864 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.912058762 seconds)
  done (took 16.156479328 seconds)
done (took 72.854357709 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.872988258 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.101820576 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.751117584 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.227990493 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.123017901 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.438350267 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.107908347 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.654082493 seconds)
done (took 37.38094675 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.354255394 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.074955635 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.126443782 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.127267224 seconds)
  done (took 19.403014516 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.074316961 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.65828825 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.115786264 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.179220608 seconds)
  done (took 19.201220339 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.597218412 seconds)
    (2/2) benchmarking "read"...
    done (took 1.514861913 seconds)
  done (took 4.206206595 seconds)
done (took 50.240542606 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.086678161 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.08700596 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.087154076 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.086745372 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.087225683 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.087556366 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.087093005 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.087577358 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.087066849 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.087184738 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.087273263 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.087454271 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.087296877 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.087222548 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.086922496 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.086989536 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.08696816 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.08715945 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.087491725 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.087107083 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.087348047 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.087132978 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.087055784 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.087444433 seconds)
  done (took 27.167790155 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.160205094 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.149383872 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.162596263 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.164543075 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.184967073 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.165513023 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.159039768 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.12105415 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.16742903 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.135587531 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.126149504 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.178814 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.127728621 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.183024391 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.126650179 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.183141838 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.163991878 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.121212984 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.12638673 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.185123833 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.1586393 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120802354 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.180205827 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.120231883 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.176480677 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.120931244 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.13575698 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.147336584 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.12606892 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.176790233 seconds)
  done (took 35.631436293 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.120253237 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.087321797 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.08699481 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.176197093 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.086431929 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.08724061 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.086865185 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.086776842 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.087537475 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.087380773 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.086787823 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.087042427 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.087119445 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.086505555 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.087081805 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.08753878 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.120590307 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.267002173 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.087079806 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.08733891 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.139173525 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.08721802 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.087009278 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.087771443 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.087208318 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.087330398 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.087058699 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.087183348 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.08760644 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.087466938 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.08690472 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.132734702 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.123259752 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.087391412 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.204238144 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.146232825 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.086972521 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.119621035 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.087097321 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.08690314 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.087376885 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.087085704 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.0870595 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.087312606 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.144261049 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.087789494 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.087134786 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.087394003 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.087275435 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.087378244 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.086881526 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.086901707 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.10248964 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.08751186 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.087143939 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.086902507 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.087106988 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.087361314 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.086638204 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.087196287 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.086817505 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.152927958 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.087392148 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.087088402 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.456115201 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.087407789 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.153090503 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.087152435 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.086966503 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.306651251 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.087521273 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.288532767 seconds)
  done (took 81.024096558 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.086973298 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.087680362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.167532927 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.17067954 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.087811177 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.087255482 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.087696697 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.087477779 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757342528 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.088307072 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.087650883 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.087761158 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747199364 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.087476567 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.087183029 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.170303092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.087125047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.087299957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.087967914 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.087867591 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.087725677 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.087187134 seconds)
  done (took 26.577414435 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.128774228 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.102763198 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.124073696 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.08792318 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.087274604 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.087468581 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.123830066 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.102919873 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.123689731 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.123759754 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.123806941 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.132546546 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.087476673 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.124354045 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.129668984 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.102365612 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.126656613 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.102479632 seconds)
  done (took 21.097661757 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.264828821 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.252345699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.168818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.131537834 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.34907592 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.322319698 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192138488 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.26295008 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.13051637 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.252696388 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.262709276 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.129975429 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.322642433 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.129891566 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.130267791 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.349002977 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.169099358 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.129713125 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199978517 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19155984 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.265942368 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199263889 seconds)
  done (took 27.882925151 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.123682741 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.133009858 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.165046159 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.161060303 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.087476197 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.087836831 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.146830385 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.123908674 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.103203435 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.129862723 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.127722308 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.087927191 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.102396345 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.144553988 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.176005189 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.123963191 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.133078947 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.144303126 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.129226727 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.087305944 seconds)
  done (took 23.593854146 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.088184937 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.088426783 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.088637789 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.088068783 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.088314986 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.088842518 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.087775185 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.088456336 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.08848642 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.343930495 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.088913866 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.088518075 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.088756198 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.088590247 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.088421331 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.088719527 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.088308273 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.08863879 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.088103797 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.088450104 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.343237806 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.088655663 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.088642789 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.088934763 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.089016505 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.08854929 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.088995981 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.088862274 seconds)
  done (took 32.065216755 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.148709959 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.08777538 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.088239 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.08795567 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.087483568 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.162352013 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.087534691 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.087784198 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.088174162 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.08808833 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.087663908 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.08745225 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.087882018 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.148287398 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.087435921 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.087734029 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.178231329 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.087818508 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156064458 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.076509376 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.087576565 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.187223621 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.087956482 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.08730881 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.07533428 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.087768876 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.087994437 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.088091391 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.087387329 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.087945452 seconds)
  done (took 52.140021623 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.105804315 seconds)
    (2/2) benchmarking "in"...
    done (took 1.109346615 seconds)
  done (took 3.290722033 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.087231195 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188552539 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.088107884 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.287313993 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254847611 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.263555834 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254069055 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183576633 seconds)
  done (took 10.683027049 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.087999844 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.344306292 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.240691474 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.088833611 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.087590979 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.442777038 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.171522854 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.956293197 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.868594952 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.997185444 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.205533112 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.780155549 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.11631489 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.394072403 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.210153939 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.917045639 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.283749802 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.61728158 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.115450709 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.207650812 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.792512268 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.173116829 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.088256464 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.088253177 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.087928763 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.014167653 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.90625359 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.570599405 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.246337395 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.207537957 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.834958237 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.152636844 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.088178378 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.351691257 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.200762235 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.089025487 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.246129895 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.189738981 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.088271378 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.08823882 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.841831902 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.725581886 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.34391308 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.312189707 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.170266996 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.088713351 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.088256742 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.08790037 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.334462558 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.73800742 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.116100195 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.060117126 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.233303609 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.089168925 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.615354171 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.227920088 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.088559653 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.012417496 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.579029061 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.298124495 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.470401576 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.236586715 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.116352646 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.21182445 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.087922895 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.302866021 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.959385827 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.863106798 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.823139481 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.19629924 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.496104997 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.256195926 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.088621348 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.088193257 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.044217158 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.404578473 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.093885825 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.088456872 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.089149634 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.088397032 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.344692725 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.202012016 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.912191843 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.234650777 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.286815798 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.582080035 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.212047482 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.089052813 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.731447291 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.948934 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.105937821 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.758240905 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.297484835 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.233696038 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.064785044 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.356066983 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.132996365 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.088731858 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.934951912 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.578176492 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.243717188 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.089089038 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.449286603 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.174552355 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.097984103 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.088162527 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.765406129 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.211257518 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.212101752 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.126320584 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.088684394 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.088511808 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.709511158 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.109748236 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.095334514 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.600680363 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.121492463 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.490642219 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.498403639 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.293831715 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.431271519 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.025481404 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.339226508 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.958476966 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.098236074 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.437190012 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.322436774 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.733765716 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.325060862 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.208053565 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.899423228 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.124916432 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.089527304 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.202943375 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.149233023 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.089236933 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.088346594 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.08844385 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.089359892 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.088609606 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.218247496 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.463143212 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.725191943 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.224869466 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.341860837 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.215574436 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.889967714 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.302592745 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.775877626 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.233373305 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.089522927 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.634703514 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.457188905 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.777631247 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.212064142 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.08930256 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.088331653 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.919891389 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.087696385 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.181429425 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.089119177 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.724302791 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.110778598 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.095954313 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.088482911 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.601855538 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231937106 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.089253226 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.159478683 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.855019604 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.77917 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.231102326 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.395719406 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.211418371 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.088793846 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.088892883 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.088601254 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.873371172 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.758475656 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.236192631 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.729401911 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.890682569 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.164872224 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.236528049 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.17789578 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.337840885 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.312130836 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.234254057 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.088622809 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.089410923 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.089350615 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.596286144 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.994139865 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.93547546 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.059089395 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.107313376 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 2.99934017 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.101225014 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.921771663 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.103187897 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.778687052 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.046140828 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.186714712 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.089788695 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.089384485 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.249920745 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.274374189 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234883625 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.492357092 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241238159 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.089269801 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.739919797 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.212244873 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.727258096 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.190533753 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.905827725 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.168962402 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.211581508 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.230998203 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.692865061 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.188699362 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.089273381 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.741177192 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.206006553 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.089297495 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.117928063 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.599443556 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.026359143 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.834308816 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.579463942 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.178601512 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.699250179 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.336365608 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.235689949 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.901696415 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.185137513 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.359485562 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.19561783 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.422971137 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246782208 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.850230909 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.103000553 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.633157995 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.227043947 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.059439101 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.20761942 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.53984987 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.201722617 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.089593521 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.243593588 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.179540166 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.733281616 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.211526875 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.214416247 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.426473217 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.946415162 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.185472842 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.351195185 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.192669586 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.006037223 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.0946974 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.434402972 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.999484886 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.099289272 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.100726928 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.858853816 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.254523854 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.383227063 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.233854365 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.093161642 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.094307702 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.366816255 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.202899802 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.180609241 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.467648177 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.147404653 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.212486961 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.194457889 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.13622565 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.130854426 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.36897351 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.271078743 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.373915142 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.612283598 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.779384879 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.942186665 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.260880731 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.747342635 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.214562907 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.82036467 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.121637942 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.133685272 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.773476705 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.285329743 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.505223028 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.24119927 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.209510808 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.649629681 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.349616554 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.381994141 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.226625892 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.226857067 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.876650445 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.700884297 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.356547773 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.546281662 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.150124765 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.706849582 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.218179362 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.720523729 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.29760827 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.969092262 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.237490864 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.15623506 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.102171514 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.100377402 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.675950301 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.21691565 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.145776463 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.877628705 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.796097507 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.18462332 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.872380499 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.128811403 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.117275514 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.108703653 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.108951086 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.036903107 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.101485259 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.398766448 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.231209762 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.109566666 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.134937569 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.062150597 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.454065148 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.905593223 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.983855129 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.082978786 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.25223377 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.113269253 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.111746755 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.111910282 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.112059644 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.136451532 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.109861638 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.514675667 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.260674116 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.737802289 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.130999546 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.126383747 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.308177086 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.166973036 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.109376001 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.280668934 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.17300639 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.243039244 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.239872424 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.155179342 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.669024727 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.306133837 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.159466487 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.367382959 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.435519375 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.401708292 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.710204173 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.186097051 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.647741309 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.505931856 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.984417677 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.156674852 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.106955876 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.180518167 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.928781752 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.151364547 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.495497886 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.744470485 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.147897044 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.36956135 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.996789494 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.532521063 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.301016373 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178980816 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.115027956 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.108881946 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.212588233 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.359657036 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.150180762 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.420116066 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.304165953 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.172915693 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.374913831 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.259854012 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.387581847 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.17539846 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.177928882 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.176420976 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.166032489 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.629933164 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.021427571 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.225445931 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.17095425 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.076985539 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.958987197 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.05501183 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.834600216 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.117041639 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304018105 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.175959777 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.387740236 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.224311813 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.790379086 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.324428067 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.953304644 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.480028805 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.17427424 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.307714672 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.503348277 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.924224705 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.570583222 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.231595541 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.165900369 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.507763487 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.09956503 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.301514557 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.118428052 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.436565063 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.737922673 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.691136866 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.457553898 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.275162804 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.072208647 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.658510611 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.209143615 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.178668411 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.001527931 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.312977706 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.447695154 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.138810878 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.408343113 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258611285 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.773583753 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.775318268 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.261209025 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.794261756 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.247465941 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.168483541 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.69053825 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.170050885 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.178363826 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.260316732 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.137537414 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.157196771 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.804003065 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.817839864 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.338205603 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.189023783 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.100171352 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.723148573 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.974678486 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.112291743 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.097730637 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.106191359 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.514297794 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.109443844 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.090553117 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.586251467 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.800781553 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.272684326 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.638094988 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.252852818 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.236395084 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.339205388 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.522424939 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.347033237 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.212662526 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.153536036 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.135742958 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.101279748 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.510424772 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257317777 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.098253211 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.692376239 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.242576743 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.866945704 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.062717228 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.313767939 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.155833994 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.539367359 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.234161668 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.613021104 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.027739302 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.099800356 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.381397256 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.197748556 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.230950913 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.806212575 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.189122495 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.091235761 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.003239304 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.383614389 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.397478948 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.479998481 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.372850516 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.171329226 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.753226234 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.193963679 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.687325467 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.248764048 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.090599237 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.602293224 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.262831567 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.502875658 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.233469899 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.542885295 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.199410272 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.439185007 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.382789316 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.195478393 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.09038215 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.089746031 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.092516266 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.127181972 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.60765935 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.077142059 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.525144938 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.214722519 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.951774781 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.665113675 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.726435803 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.416590658 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.32333688 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.493050984 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.10783962 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.070177764 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.41877653 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.154655468 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.257996043 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.18957971 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.844931143 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.145151736 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.091217178 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.480210114 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.244227861 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.090892456 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.09028904 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.011606298 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.751353403 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.188414493 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.281606685 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.180710865 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.091142251 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.698268305 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.38585139 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.136161227 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.1034952 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.107924756 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.95333523 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.194632142 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.090731838 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.426473299 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.23581691 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.384776908 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.919001595 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.534750069 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.18702904 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.090432036 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.090578547 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.818140992 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.491359889 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263931304 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.445022918 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.175536972 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.617916829 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.119653036 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.549073799 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.667322548 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.07023852 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.207841937 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.091130307 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.126710064 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.827388224 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.176857163 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.865002023 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.424857235 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.175745878 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.8535757 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.06460258 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.147451575 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.215958797 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.142960778 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.091279693 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.090746793 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.090835312 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.58866829 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.127881532 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.10020076 seconds)
  done (took 1429.616659762 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.367245302 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.090982902 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.090878899 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.090203003 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.090835782 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.089794269 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.090474299 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.090549025 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.090094674 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.090101723 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.090301305 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.090548481 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.090735887 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.371904276 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.090749125 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.091011835 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.090464713 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.090184453 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.090294218 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.091153563 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.090551989 seconds)
  done (took 24.537601171 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.090931785 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.090080358 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.090832438 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.090273032 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.09053551 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.090426999 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.090609783 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.091067145 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.0902976 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.090686737 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.090750521 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.090855237 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.090498916 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.090623721 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.090470311 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.090674229 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.089973346 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.090985182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.090744538 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.09064582 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.090640803 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.090711143 seconds)
  done (took 25.071993737 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.090426044 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.091134084 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.781479406 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.208185113 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.091192229 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.090725027 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.091289334 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.301493301 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.111573036 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.997759082 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.4644009 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.181021935 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.100392561 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.272328645 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.191902667 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.091155767 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.215862515 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.090733193 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.090426594 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.090374813 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.091134674 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.288286514 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.220786315 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.09154807 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.910564299 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.237239688 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.092144833 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.091217099 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.091655792 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.07274571 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.097311356 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.09834693 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.924864828 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.822184585 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.389585445 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.00373629 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.109432121 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.098626158 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.090138931 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.091095562 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.309444321 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.915532571 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.099785158 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.090972812 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.371897171 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.20109088 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.091696076 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.461950545 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.180039433 seconds)
  done (took 87.358724513 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.098903432 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.227646268 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.144871167 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.091086835 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.223403398 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.090591848 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.14473146 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.090983219 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.091295212 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.090917374 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.235951363 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.246991825 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.090840347 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.09140746 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.155104268 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.091135372 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.090880644 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.091240131 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.091162845 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.09077143 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.091343522 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.142230584 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.212970903 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.248226138 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.090999788 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.090667269 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.091058628 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.091306473 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.242113688 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.09091237 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.091043628 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.091250959 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.228643327 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.201458118 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.090810046 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.090646401 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.226012902 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.090689873 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.090827615 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.090588962 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.090825765 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.09081052 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.150336685 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.23171237 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.091129959 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.191927724 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.091008531 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.091042716 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.238967626 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.091456559 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.091427103 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.258521366 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.091452804 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.091201481 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.091196838 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.219292108 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.090903296 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.091125354 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.091292165 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.235114358 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.091401578 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.0912707 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.247436545 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.091400316 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.0912158 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.258301981 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.192746898 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.091205705 seconds)
  done (took 78.202772691 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.090918735 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.091037687 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.090980913 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.091248467 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.091226628 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.091327837 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.090733961 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.091561839 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.091096135 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.091353181 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.091251407 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.091542169 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.091074759 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.091200274 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.091290147 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.091070786 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.091281381 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.090897889 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.090679832 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.091149485 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.091320982 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.091391851 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.091079864 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.091218075 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.453368642 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.091577194 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.090926859 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.091130033 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.091149616 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.091575946 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.45363625 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.09139277 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.091280074 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.090572679 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.450213205 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.091509791 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.09167234 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.09127121 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.091171635 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.091415681 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.091290119 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.091043243 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.091324654 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.091432136 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.091379319 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.091453936 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.091010594 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.451545755 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.091361918 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.091182897 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.091343373 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.091840034 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.091141049 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.091431299 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.092080353 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.198216415 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.091635785 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.09144105 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.091589598 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.091447023 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.091457923 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.197980981 seconds)
  done (took 70.397331517 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.091513133 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.091466504 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.091287022 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.091763385 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.091364989 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.0916131 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.091680476 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.09108457 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.091683487 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.091795242 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.091302389 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.091522826 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.091435587 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.091819546 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.091198067 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.091454092 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.091165671 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.091254957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.091684806 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.091158619 seconds)
  done (took 22.908375658 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.091079245 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.091196814 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.091707221 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.091110185 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.091895207 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.0915614 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.091485969 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.091624341 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.091470129 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.091377391 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.091270145 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.091942812 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.091242346 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.091325708 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.09167763 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.091034347 seconds)
  done (took 18.542286707 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.091589567 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.091231425 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.091891392 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.091793363 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.091138165 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.091268161 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.091709178 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.091429124 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.091586311 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.548808375 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.091637554 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.091400284 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.091562812 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.092077607 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.091272341 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.09078264 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.091306867 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.092086691 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.091428754 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.091211021 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.668733876 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.091116935 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.091473224 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.091651253 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.091662639 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.662922572 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.091926581 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.091667931 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.091521127 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.091496995 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.091808043 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.565239687 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.091692168 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.091133652 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.091615492 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.091623815 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.091364616 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.091706498 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.091604 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.09146694 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.091402967 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.091011473 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.091553488 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.091603455 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.091475826 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.091441156 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.091244119 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.54590401 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.091317685 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.091617092 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.092008656 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.091553463 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.091556556 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.562794953 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.091277055 seconds)
  done (took 64.119249033 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.136490816 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.148928122 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.092007003 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.090621777 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.148182788 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.127854449 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.133486653 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.106639182 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.128690989 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.091582301 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.15404893 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.106603683 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.131732427 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.154136859 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.150861823 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.136783242 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.091712078 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.160060388 seconds)
  done (took 21.370162387 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.091345675 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.091317894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.091422418 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.09189878 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.091529741 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.091568733 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.0916198 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.091923366 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.09163615 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.091270923 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.091914795 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.091404601 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.091677909 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.091638695 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.091443863 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.091117113 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.091460013 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.091921787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.091376918 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.091729003 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.091687908 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.091558416 seconds)
  done (took 25.094258708 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.122032202 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.137560288 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.092361971 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.092827176 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.092173975 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.113712652 seconds)
  done (took 7.729634054 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.156146787 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.091369946 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.134733373 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.136918095 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.091659977 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.091632551 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.091745129 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.091582184 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091557355 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395736465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.092061027 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.092110148 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.091958133 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.091527728 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091881876 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.091721763 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.091588951 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.09187464 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.148549036 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.167524396 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.091645593 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091960398 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.091404013 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.091279305 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.091388676 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.091771885 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.091909811 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398476716 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.092089145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.091718452 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.092162508 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.091867764 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.091647515 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394472824 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.136815255 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091636616 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.091916878 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167551387 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.091803102 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.091975099 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.125641019 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.091694044 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.091542425 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.091304458 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.091744013 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.091951524 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.091302799 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.092228631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.091369731 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40690709 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.092152578 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.091974331 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091817455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.092244698 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091704032 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398187211 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398340517 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.091621355 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.092005938 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395272768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.091866958 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.092087846 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.091562807 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398783762 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091780411 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.092749437 seconds)
  done (took 76.051074274 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.09175882 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.130252907 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091717682 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400123746 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.091566267 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.091979134 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.091806035 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.091738112 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.091212274 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.160443746 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173472782 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.091391367 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.091323085 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.092036193 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.092369751 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.091627479 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.091895496 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.09168517 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.154813135 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399656569 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.091649488 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.091608663 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091945035 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.092030521 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395313222 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.09184829 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.092045166 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.092226535 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.092340075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.091828806 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.092051304 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.092243847 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.091521827 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.130965834 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091629817 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.091954797 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.092368657 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.09225081 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.092250768 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.092468179 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.09190446 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172770899 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.092256492 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.092133289 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395228069 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.093198855 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.092696089 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.161001173 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.092432286 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.155461276 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395142947 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395261837 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403057448 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.092854152 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.092658918 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.093185431 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.0925371 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.092357944 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.092603189 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.092848111 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.092477998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.092680258 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403683497 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.092400047 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.092265281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.092078225 seconds)
  done (took 76.114032847 seconds)
done (took 2369.344031137 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.197643049 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.17397964 seconds)
  done (took 13.451710539 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.092810646 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.092131985 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.248758682 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.092412059 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.095139633 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.193748337 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.094262282 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.102955531 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.093303151 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.177121741 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.092915197 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.225674458 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.195871762 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.093496397 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.113969073 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.102838524 seconds)
  done (took 39.200913319 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.189547229 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.641114455 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.027715213 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.855995502 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.121780054 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.793101816 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.379974383 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.846650272 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.398626968 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.556008843 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.355951712 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.934752397 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.858630971 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.242338971 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.525712945 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.553668428 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.633575612 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.699659276 seconds)
  done (took 59.695316717 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.094776772 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.243325901 seconds)
  done (took 8.433584537 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.088052923 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.106217928 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.112654849 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.104671573 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.101096591 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.125739154 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.122820851 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.116608857 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.106368306 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.122232971 seconds)
  done (took 62.205907772 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.10514777 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.705400723 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.45169521 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.719035945 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.755817878 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.579088077 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.25289727 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.43220701 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.178376674 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.08060097 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.331837108 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.492976696 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.95341453 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.379973705 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.73271424 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.561055393 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.769288768 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.461517598 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.42400461 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.646190968 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.310925336 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.204313804 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.521600995 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.907402033 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.086544264 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.770591361 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.208958533 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.230667016 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.16648211 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.254794347 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.432556035 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.110821155 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.405737613 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.096382499 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.155059031 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.633469017 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.818602593 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.28945086 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.476798091 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.416107672 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.482571139 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.785292619 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.160505165 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.769492118 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.248658049 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.477297971 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.083990202 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.342270094 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.179119012 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.22300366 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.534339692 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.260001223 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.228595828 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.20946948 seconds)
  done (took 153.586934784 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.08059081 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.478765198 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.236530876 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.085343437 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.497709913 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.297509814 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.608217909 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.54589686 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.098043275 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.293608721 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.262171036 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.22307889 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.083183332 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.084829907 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.082329281 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.082304455 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.276386271 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.560885765 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.101707716 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.082424349 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.289407558 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.322971613 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.220199023 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.08529819 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.254952963 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.33441809 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.490963583 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.225967676 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.486585573 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.081686043 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.528838343 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.101063058 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.083610422 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.988896641 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.474011213 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.436538333 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.541385402 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.093034645 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.79007134 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.084636342 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.703384178 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.290161699 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.420695622 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.231393177 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.340620509 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.321654804 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.708305542 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.080588627 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.845604272 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.260165891 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.31324062 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.299625084 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.366865486 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.089627608 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.619405074 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.083236127 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.081830722 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.344223828 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.24807787 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.212098154 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.083074642 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.082756679 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.082871122 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.333609235 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.084063484 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.206089383 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.083075416 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.08568141 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.207668168 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.212673854 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.250707799 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.332327121 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.341857673 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.342517188 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.080922776 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.321372626 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.503714967 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.333392169 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.084501941 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.082427953 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.531498832 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.534828316 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.249247238 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.329196081 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.397586631 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.377486923 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.626325625 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.081703294 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.302603085 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.246936128 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.438373936 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.352643296 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.452967054 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 1.989324723 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.081775298 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.082562345 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.988283345 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.215051654 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.084210367 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.603885303 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.354290797 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.910340543 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.266769416 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.579027097 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.196096618 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.0849295 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.660084712 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.080376901 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.306994066 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.378656888 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.090996948 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.082492439 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.239293308 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.080496619 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.083283849 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.496090482 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.502369085 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.092963012 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.242086722 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.084254668 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.341010923 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.936962819 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.320925728 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.084552231 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.361685334 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.282071803 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.36908324 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.084969214 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.43369591 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.357195244 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.492047561 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.414942735 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.083819719 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.083916041 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.396626259 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.08359457 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.082228099 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.262021505 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 4.802905484 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.26466964 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.084831372 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.450592515 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.247937345 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.466886713 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.084065012 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.331246156 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.336950046 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.455347363 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.083994463 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.222426115 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.083986545 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.146177484 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.252512355 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.082867201 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.082477041 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.911975083 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.085936732 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.2443921 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.319581337 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777517255 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.460861676 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.420244481 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.081183359 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.536204371 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.288825789 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.554292707 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.608832297 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.259988767 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.801006989 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.319377138 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.081562789 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.329297479 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.388730592 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.085498149 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.083927509 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.808407923 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.021960629 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.083247311 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.251744421 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.744967457 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.340491786 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.297133313 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.084647794 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.450985137 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.085959165 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.264879887 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.592132817 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.110823061 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.082937052 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.084154465 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.081141014 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.084488019 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.30616114 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.349431717 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.742754354 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.237233952 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.38923606 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.306766057 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.402316951 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.55503114 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.092868757 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.412301755 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.084421167 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.480362003 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.089897511 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.25770387 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.341570557 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.085189975 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.307551273 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.443496203 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325782213 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.480470163 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.085343929 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.084128473 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.699692469 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.261851833 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.505383998 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.083212837 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.364178863 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.449849714 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.215826478 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.295596758 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.132584127 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.090977159 seconds)
  done (took 722.859330843 seconds)
done (took 1060.51331584 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.08094837 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.084842593 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.08806786 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.089016144 seconds)
  done (took 25.424163426 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.063540768 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.171411475 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.273766657 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.09439335 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.471000307 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.149965483 seconds)
  done (took 11.312711148 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.680875371 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.086378648 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.087623055 seconds)
  done (took 17.935825744 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.361417189 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.55018015 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.263272178 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.185218337 seconds)
  done (took 6.448501505 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.095297851 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.094985345 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.094904317 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.093955671 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.093849119 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.094628112 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.093829152 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.09365151 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.094394546 seconds)
  done (took 10.935475887 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.858536865 seconds)
done (took 77.997003535 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.499715395 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.395056294 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.095915472 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.402316042 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.221364882 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.406720432 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.210187781 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.112643411 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.438777558 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.51920167 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.607444622 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.292265418 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.579612276 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.557731718 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.333262863 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.118726241 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.109924682 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.154605153 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.801691265 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.30430398 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.097795574 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.228152359 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.730883229 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.123476905 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.077869328 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.210993591 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.341247706 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.237114569 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.167131372 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.119779524 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.184230187 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.658802062 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.314680186 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.389935857 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.190765714 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.044073051 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.606612433 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.095844415 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.370960012 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.651536983 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.357207025 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.171823424 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.080914837 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.457979266 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.5049813 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.111876688 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.047665307 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.256320781 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.695966415 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.260809619 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.465556703 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.096769167 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.739594264 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.171012589 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.177398822 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.083515308 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.260921581 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.557749368 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.306303227 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.386531476 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.110210446 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.081748527 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.124828787 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.123097371 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.54489415 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.411977752 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.509728734 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.182760444 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.585514031 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.122051512 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.110231309 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.124352687 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.89766742 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.267487271 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.08228347 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.212340734 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.392925561 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.218448958 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.093534935 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.578329776 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.330307199 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.085441469 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.378102989 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.446672042 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.257667873 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.533213429 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.604350361 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.512524223 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.694831572 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 7.353770594 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.818194641 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.181055575 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.194565166 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.095482612 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.231043458 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.8621882 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.147403209 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.620215718 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.229908991 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.798981629 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.125523887 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.110229092 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.632730683 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.451574817 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 2.032861668 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.131610333 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.223813401 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.083321142 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.365487546 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.236856599 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.19676618 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.679474379 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.094115605 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.155784669 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.610901754 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.095918444 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.394309792 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.522973228 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.250451664 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.095226383 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.418966135 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.097507517 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.21532863 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.712748049 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.480899631 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.356606187 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.086635108 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.1648142 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.095644552 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.311508032 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.097103304 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.761430113 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.718571338 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.128670044 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.344722195 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.218238292 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.082424922 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.343206051 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.145336809 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.229205612 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.39254938 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.420295675 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.260028792 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.082298065 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.421311366 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.094505135 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.329352038 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.408417635 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.257384771 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.40592101 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.176472637 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.10586561 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.129001467 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.540838614 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.678200805 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.820810482 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.36406081 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.22642765 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.690933895 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.413862856 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.936543889 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.198312136 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.144285899 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.095176061 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.111313584 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.156472321 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.083256058 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.093912933 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.421173473 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.481590823 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.844371802 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.977664186 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.100076611 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.392417061 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.246194428 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.02779448 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.767298853 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.120300337 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.446056365 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.579485824 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.24051889 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.123183999 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.085249248 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.132812068 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.8555301 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.133741465 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.435471642 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.750401352 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.551556713 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.446431893 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.320979474 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.134556558 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.471285615 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.353699239 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.376032196 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.297480707 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.736611753 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.213523528 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.538029771 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.256627221 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.376782918 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.095068861 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.923847823 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.333046029 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.573902622 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.424393682 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.33260887 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.320291376 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.406923731 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.094882028 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.63835577 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.193615485 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.445315054 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.124114614 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.620123522 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.194375964 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.37289317 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.104565373 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.268333891 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.559788456 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.213822659 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.219020674 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.556920228 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.107537975 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.424484308 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.315394411 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.294599794 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.296588714 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.127024708 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.268967004 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.267214925 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.230915367 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.348845911 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.101979407 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.514813421 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.082386821 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.682374087 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.085491371 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.400841465 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.127039031 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.10517853 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.368482855 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.293169148 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.398987476 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.31837074 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.256217743 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.083617871 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.258820919 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.657971743 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.951565529 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.645938411 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.058155278 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.124944829 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.168514915 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.523799923 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.51551711 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.160122503 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.230135018 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.761623006 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.134315886 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.29068872 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.098184971 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.097200612 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.934721256 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.225151051 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.338840731 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.793895677 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.098465971 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.109156933 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.221105216 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.670636399 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.631818038 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.146326457 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.216098624 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.558657029 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.193463448 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.50691123 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.123330411 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.249156417 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.428925331 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.213930368 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.218406535 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.085430688 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.135534376 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.715406427 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.51587667 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.614027673 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.131600365 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.505752697 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.357002291 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.317250159 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.112894415 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.176950685 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.504665883 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.220971558 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.439072974 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.098282878 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.222718133 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.346106365 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.120783116 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.082736726 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.35539015 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.991863338 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.702908758 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.416652471 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.336056354 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.117842193 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.331119218 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.092562446 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.279360785 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.254240657 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.191200519 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.671067507 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.662561807 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.097120177 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.343680043 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.20120198 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.454789617 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.12057084 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.110441172 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.2488134 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.185250584 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.083021197 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.384248994 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.261960129 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.618192876 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.307939134 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.071610934 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.100814124 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 3.013080924 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.210794991 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.43143337 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.777053796 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.109979579 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.258638044 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.692838935 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.282727157 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.124505469 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.334872794 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.09707729 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.787528551 seconds)
  done (took 872.101233791 seconds)
done (took 873.356849916 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.156036665 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.485260904 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.313798043 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.080538986 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.91387096 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.756041299 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.333149487 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.347058464 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.189727208 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.333029036 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.019001029 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.911905693 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.206705047 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.230858233 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.191825886 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.229783119 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.304351355 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.353338657 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.229291542 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.92460953 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.478148703 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.927519963 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.535855322 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.409499863 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.486483241 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.2110035 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.178731656 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.467301591 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.466324083 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.10020653 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.29154771 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.313712404 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.957371171 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.354859292 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.191789887 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.195881426 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.962047688 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.205896299 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.142164366 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.196200981 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.487601356 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.237222108 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.80593709 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.048718551 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.891978178 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.539354883 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.996133216 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.216230946 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.214939088 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.290617407 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.143588229 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.139609095 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.467231589 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.117709155 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.005974509 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.058703758 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.466556224 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.960200985 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.839217003 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.290691616 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.485806304 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.218386239 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.290905236 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.345678068 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.235097575 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.408898439 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.529894319 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.141065986 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.313279495 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.341560828 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.358820357 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.338329939 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.232092226 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.290139406 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.232065743 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.333340086 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.842486258 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.314064153 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.903293798 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.21040484 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.035906517 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.020156534 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.069660998 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.190947029 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.156048468 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.893284536 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.203704106 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.037648774 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.232749451 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.313272363 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.01697929 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.314443289 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.57469271 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.179825123 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.155853328 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.314581603 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.215337933 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.138345976 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.076013852 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.313776623 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.898614724 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.17910364 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.145550975 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.203672001 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.218355305 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.139623498 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.179864233 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.531490994 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.339898735 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.269813182 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.486718033 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.232178873 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.338311073 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.231514639 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.190652992 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.893141809 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.397994734 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.971215281 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.136951865 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.793181048 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.412522362 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.204527914 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.487624868 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.409339047 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.156103093 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.211879673 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.217560088 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.028097377 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.216642917 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.218075149 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.29581074 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.589887945 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.291784842 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.076870574 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.338548538 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.898792441 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.350980544 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.339556538 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.190948723 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.995174099 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.211693703 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.057296491 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.410710574 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.488528478 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.353874975 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.409809871 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.231967301 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.364282298 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.136351441 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.229959313 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.339653127 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.240663308 seconds)
done (took 241.907845874 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.462162509 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.28423361 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.387266853 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.311961982 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.483237352 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.367975084 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.159510875 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.542315184 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.142834203 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.509976288 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.288995117 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.04782558 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.376547701 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.326186622 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.451519724 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.327812191 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.143281355 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.34600441 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.553232291 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.480525828 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.94337047 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.288453615 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.231661113 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.477389131 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.083543602 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.955088611 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.390785604 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.205099151 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.358232962 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.843559115 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.905048927 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.348851589 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.390886509 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.790169393 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.489880803 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.82984086 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.423017586 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.885940299 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.342489683 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.460142583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.281299229 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 6.084469302 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.859229856 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.973541134 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.194425915 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.361094675 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.16192049 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.982692161 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.083363584 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.850375644 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.379837645 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.941525737 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.064315411 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.351445241 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.331345184 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.858555289 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.471726683 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.495519404 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.486207572 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.397961033 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.343227731 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.509245009 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.472319743 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.213768152 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.880760604 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.386098381 seconds)
  done (took 146.138148791 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.494184475 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433118273 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.532006513 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.547965775 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.700018388 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.546203933 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.616443463 seconds)
  done (took 13.95332566 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.153410677 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.135693531 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.339446678 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339267673 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.146035469 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.263747583 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.228859718 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.843020224 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.387636752 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.186188555 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.460214265 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357258367 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.7659446 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.86971146 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.229217716 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.414288802 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.116483075 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.207703019 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.200576024 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.403164037 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.851738462 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.852268655 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.294272091 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.122753444 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.149376606 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.184429855 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.140401003 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.112230712 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.138453151 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.120694883 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.150358493 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.252376943 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.140284565 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.860905256 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.125864227 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.460021805 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.143872867 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.141616861 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.279870469 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.087022529 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.123498061 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.145685277 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.27836894 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.144252719 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.12662397 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.329363193 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.126539855 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.149640611 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.120996975 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.137462044 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.328768401 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.139964234 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.125916122 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.761934465 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.349392189 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.848482972 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.20855905 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.13248972 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.140269482 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.198213376 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.139435219 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.39958736 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.357976538 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.127374342 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357681568 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.446592777 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.140053244 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.120991316 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.121314313 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.385186023 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.138683732 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.35718149 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.140834539 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.191729871 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.148583113 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.274588602 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.329843461 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.9349254 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.907383088 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.774728617 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.463279976 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.124618052 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.608185333 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.072865271 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.767950714 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.125094097 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.144269614 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.780858412 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.047615088 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.138473549 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.450483795 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.121580687 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.197612004 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.189690028 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.121169787 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.200558502 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.355506232 seconds)
  done (took 149.546932838 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.384422034 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.715678061 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.365554983 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.227073222 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.286694026 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.506268133 seconds)
  done (took 15.568769947 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.457560824 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.904776684 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.157685323 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.158237875 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.194608309 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.095412334 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.095774835 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.333156216 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.319001749 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.148380621 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.096583565 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.095992394 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.095376328 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.276070425 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.096046168 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.145066544 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.095448044 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.157131515 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.150285804 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.205542076 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.444835229 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.195240676 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.204560315 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.03317172 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.191810902 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.147957676 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.856145154 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.144792499 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.144938666 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.471317884 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.328750262 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.096979484 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.96631498 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.502842717 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.822749444 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.025402769 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.32300113 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.097861787 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.142311396 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.095685409 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.096465964 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.205138755 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.162440762 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.095990004 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.48877349 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.988385084 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.190800226 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.432962699 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.096423279 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.096086497 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.096293995 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.166845588 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.096171694 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.095398097 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.599101052 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.576893452 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.087089789 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.097871863 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.194884149 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.042527537 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.248700932 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.09919001 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.474995206 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.079531527 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.838783672 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.096426079 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.043380118 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.311182195 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.207192356 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.156178787 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.095853374 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.158529214 seconds)
  done (took 115.377875673 seconds)
done (took 441.667587749 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.15145335 seconds)
  done (took 7.234527869 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.207552582 seconds)
  done (took 7.445226359 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.088445052 seconds)
  done (took 7.182865236 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.097403617 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.135461645 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.105839029 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.117445797 seconds)
  done (took 25.581576332 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.296886169 seconds)
  done (took 7.383708442 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.08440275 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.105519994 seconds)
  done (took 13.38450759 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.163014182 seconds)
  done (took 7.270916442 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.568093833 seconds)
  done (took 7.670860774 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.104150216 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.0932268 seconds)
  done (took 13.331357582 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.087677589 seconds)
  done (took 7.172235351 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.367618814 seconds)
  done (took 8.546899955 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.096374039 seconds)
  done (took 7.211753266 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.146133603 seconds)
  done (took 7.230537526 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.192467796 seconds)
  done (took 7.276684319 seconds)
done (took 135.007009785 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.084195008 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.087991625 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.087880572 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.087372269 seconds)
  done (took 25.430888747 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.420041218 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.420587268 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.397832617 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.570799384 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.364159207 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.364156225 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.419939519 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.420267162 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.36342453 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.465555507 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.419901633 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.46308239 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.570012926 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.397686075 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.397829886 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.486115974 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.570690411 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.420256664 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.363674663 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.39743572 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.571187617 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.571020873 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.855604538 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.831294472 seconds)
  done (took 36.610493925 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.305356369 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.460499576 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.263643611 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.414150584 seconds)
  done (took 6.527472572 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.126411813 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.469830942 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.452949122 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.511228254 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.452094839 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.265123132 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.452338641 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.30519567 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.275012155 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.275004229 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.717789887 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.246449445 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.25959986 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.512072239 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.265888045 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.095968451 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.096142033 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.275388759 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.469532614 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.295701299 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.359560908 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.453249804 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.451998073 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.452818412 seconds)
  done (took 33.621642865 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.864851194 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.023188834 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.45305399 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.012308821 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.811013738 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.891705705 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.374836698 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.60240243 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.361911396 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.344804909 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.830973508 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.855392489 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.240072015 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.989113806 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.864905458 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.272601151 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.273164545 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.949124622 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.5131236 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.394345302 seconds)
  done (took 38.007219596 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.084351028 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.084886305 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.318152013 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.262753686 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.085675023 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.088059123 seconds)
  done (took 28.007671426 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.408142521 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.230201662 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.386565899 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.360416812 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.253456987 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.221116796 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.64206946 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.321103603 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.851585882 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.785097611 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.530185816 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.518946727 seconds)
  done (took 21.598133315 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.084761701 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.130623057 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.092495925 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.326550858 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.133716176 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.764133364 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.099607659 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.083978043 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.618240357 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.351394242 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.228277024 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.321668349 seconds)
  done (took 43.33768763 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.280202087 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.275660997 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.438980452 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.142565776 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.620752981 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.183237302 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.45588158 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.050189283 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.918679539 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.977803332 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.632209142 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.150057786 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.617907847 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.058187849 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.829805637 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.38228804 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.91274559 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.054594858 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.532930639 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.170449494 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.053521552 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.238801847 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.090012513 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.643547949 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419973649 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.090344675 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.29435902 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.334716444 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.084702481 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.32795615 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.085692446 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.624877116 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.267564472 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.394014292 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.622335442 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.182264169 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.183829625 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.770107503 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.661104279 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.382209635 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.230278746 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.250465843 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.333884544 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.102919089 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344876939 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.869852624 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.093428302 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.718000102 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.06835368 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.230509732 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989304637 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.733312203 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.413645124 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.76125518 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.230949779 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.38140841 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.251305844 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.08462807 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.349610619 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.159642839 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.278043558 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.185637135 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.280723586 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.056457623 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.327302189 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.434693336 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.350244935 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.424670468 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.386071966 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.384379118 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.4223537 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.224277119 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.920852034 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.227776315 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.650455712 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.000940471 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.43893223 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.086446671 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.79686465 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.620894366 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.06677018 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.200349832 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.795498805 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.05491485 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.084735462 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.264952434 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.955031532 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.056243133 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.181213623 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.166874934 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.489655703 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.227678749 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.238889383 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.282633568 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.789551892 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.100292764 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.087010597 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.379018749 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.055410599 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.646545881 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.084601191 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.071062237 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.085718434 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.647923298 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.506299302 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.895872226 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.858214831 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.685384901 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.385384424 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.695176663 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.252313835 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.084761431 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.427600271 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.41560237 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.085112463 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.844726054 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.086537854 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.170843593 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.44306289 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.084946457 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.058157093 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.508928529 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.268422327 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.086036798 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.319547729 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.088013374 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.232264852 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.085198688 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.661263579 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.057202922 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.331168444 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.61930706 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.210056403 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.171812553 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.055882882 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.228688815 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.603338805 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.182242841 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.427443117 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.53530689 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.325552123 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.535061553 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.079778792 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.91113041 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.570135539 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.360849733 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.424892345 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.783109943 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.271743918 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.180208097 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.084587311 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267915988 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.095017483 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.644721358 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.085232745 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.834080775 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.833410526 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.342811301 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.084931017 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.249831004 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.086902875 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.313376149 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.773259523 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.146925684 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.249366872 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.348580136 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.277482136 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.085809914 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.056394582 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.47114639 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.356597671 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.622075219 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.354109928 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.767443909 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.422564151 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.568633182 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.292076347 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.443527356 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.888887066 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.753661253 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.447439918 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.142970648 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.116433457 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.086183965 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.192048472 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516719222 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.31413207 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.864116009 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.764015519 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.721841594 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.138901217 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.091095887 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.056828662 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.235852646 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.57308171 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.129225857 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.657738806 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.188119938 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.333743295 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.371662114 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.115355238 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.409650399 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.972470053 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.495165754 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.452729566 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.417178937 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.067012705 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.682357745 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.511868553 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.541108498 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.233811706 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.369687955 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.106587407 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.146708214 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.085929505 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.433383149 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.018847216 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.817289318 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.403870373 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.622191829 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.063454295 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.253078107 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.475181272 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.10536202 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.060764326 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.26186139 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.16215591 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.949683285 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.644262159 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.356652274 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.414679627 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.085183564 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.090866056 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.352912276 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.395555289 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.363376594 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.607764691 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.340108648 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.787275831 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.202398619 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.699624076 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.255501639 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.127789941 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.688280753 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.331661474 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.038111065 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.256797595 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.822873544 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.266598866 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.789848874 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.355999163 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.085548142 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.569905252 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.712520646 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.087922847 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.143699699 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.242217189 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.087134716 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.294110886 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.85124072 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26183572 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.269894857 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.375720852 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.32059088 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.257183677 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.50593493 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.633709101 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.453856982 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.058028656 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.247112707 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.174002016 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.379411828 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.086037096 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.364896246 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.726267979 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.775243789 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.911521042 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.637990796 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.331738 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.854286629 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.567293325 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.346273783 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.390346929 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.078050106 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735283602 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.07021005 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.228316457 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.057098684 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.914677992 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414444284 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.468574068 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.575967237 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.160202544 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.622545517 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.472277172 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.15266451 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.275105344 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.346793401 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.085512231 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.365726039 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.08544417 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.468698359 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.473549895 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.094749665 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.587191021 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.282540561 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.41569268 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.251015065 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.846150888 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.131794735 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.232897285 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.849886425 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.265158618 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.226750405 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.430790305 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.957593343 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.13158764 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.112011934 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.59704813 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.72750611 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.569077548 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.684329141 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.685785025 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.437115557 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.856103851 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.087291489 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.294082546 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.253064226 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.085513132 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.290670161 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.512272616 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.129999918 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.283648434 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.435875537 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.265968059 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.647090917 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.132088946 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.774999607 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.250048456 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.605496654 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.638711563 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.869258741 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.591759886 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.130561319 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.667578263 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.069764596 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.252677893 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.373298914 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.829129426 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.17334986 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.943164089 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.881325701 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.26260002 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.526450583 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.193675147 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.850757675 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.25543069 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.324229121 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.294677628 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.223475643 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.05602647 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.691174352 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.864340123 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.364464327 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.251307489 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.255742871 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.251774857 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.26364956 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.614730429 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.399828029 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.855091301 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.567662852 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.332594681 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.058108701 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.087063266 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.787931916 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.445844613 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.182320149 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.384462625 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.529446516 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.152328414 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.133982215 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.095390874 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.358657905 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.831054022 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.809805879 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.439708511 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.637918911 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.697755215 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.112194419 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.858105735 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.295266042 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.442896072 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.508572112 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.016573386 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.522052569 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.379631916 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.242104822 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.057190084 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.258953333 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.101080175 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.174671743 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.882077549 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.385333443 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.168835894 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.929389743 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.722565774 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.087044595 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.153633014 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.507996733 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.309755539 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.28575287 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.085619478 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.688696976 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.450099389 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.241526286 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.072499001 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.850130498 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.056647918 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.297577106 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.086722425 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.27162262 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.920384443 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.178187756 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.764515234 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.642446018 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.170823033 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.263424966 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.057558787 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.91964096 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.108863358 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.76729359 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.907629069 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.336318342 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.610894582 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.257565447 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.09280937 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.41539956 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.226499588 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.435228994 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.390650473 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.575693129 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.527804907 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.468865785 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390104812 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.847863897 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.236755776 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33026426 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.056774578 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.086693195 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.119525731 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.461860545 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.448683298 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.085958072 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.632983734 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343104806 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.249983352 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.262662744 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.175581547 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.666422762 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.296876778 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.226285277 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.256554007 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.260992703 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.454986624 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.08698387 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.283589982 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.086916346 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.119785232 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.295834679 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.335458814 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.470975304 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.39611611 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.983503928 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.246762621 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.566720615 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.779504719 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.61828943 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.088542108 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.986094605 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.442645187 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.087364612 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.571585639 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.756615668 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.25749968 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.362000575 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.16796813 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.105871169 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.260929295 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.591716082 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.100169185 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.730390389 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.493894919 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.086994096 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.572566591 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.17161518 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.253265147 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.866984806 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.585375422 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.087356913 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.92047507 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.217777458 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.642012126 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.361209036 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.117975904 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099113664 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.656093788 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.065002166 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.087834174 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.170660469 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.619821186 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.093999595 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.663536562 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.263781249 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.2549984 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.09401065 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.228400378 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.088161817 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.29464816 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.279064661 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.334104298 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.343789232 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.256113985 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.094377311 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.69594407 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.798666868 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.204015968 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.279054939 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.089762161 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.451393663 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.919796775 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.090286063 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.646061986 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.279902686 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.210870659 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528228774 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346892604 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.121669333 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.281153371 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.086746624 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39666965 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.249730607 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.669295198 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.36260134 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.663955684 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.214885674 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.114078606 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.626702167 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.569246637 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.978376142 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.086111666 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.395995032 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.08608832 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.939251626 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.741113193 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.28940119 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.261784816 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.118282295 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.681809617 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.342796964 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.227329968 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.088491314 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.301089098 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.600614714 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.057506568 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.926987653 seconds)
    (567/608) benchmarking "2d"...
    done (took 1.97700094 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.284832853 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.417712482 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.056869004 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.257391034 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.104255069 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.06942163 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.585582242 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.08693861 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.433152918 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.059984585 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.651073483 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.097834544 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.223705755 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.254753593 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.405406952 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.087779343 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.807950909 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.26046195 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.086427942 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.086067142 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.42892445 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.178155996 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.337705028 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.568126097 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.353368044 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.440717001 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.974061333 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.930045445 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.106369281 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.396049536 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.086781764 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.640253506 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.212455184 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.606598862 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.935269482 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.106181606 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.62598801 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.335910968 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.817405741 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.234596814 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.589804733 seconds)
  done (took 1941.040168148 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.110445645 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.221306196 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.148949703 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.154940607 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.114329272 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.146941506 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.132096693 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.173434015 seconds)
  done (took 50.288502694 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.085968639 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.13789789 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.638426222 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.272832636 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.120461911 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.331304489 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.249668535 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.62531045 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.295217636 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.157693179 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.152977539 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.203901346 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.100093318 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.131898762 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.034681596 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.17923437 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.09153544 seconds)
  done (took 92.907453902 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.112520232 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.107809067 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.123756512 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.11535154 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.124781224 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.519234996 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.106571844 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.087657355 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.454218547 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.37562705 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.104838917 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.180717639 seconds)
  done (took 80.543888673 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.126914659 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.125950535 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.12658116 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.12593985 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.126667406 seconds)
  done (took 6.718121296 seconds)
done (took 2405.751061113 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.340154419 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.576345438 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.660957534 seconds)
  done (took 4.32276426 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.156384549 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.220840013 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.285992026 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.236079199 seconds)
  done (took 6.011860843 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.375512047 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.572894781 seconds)
  done (took 4.033764253 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.606232169 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.12247273 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.665305813 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.087244303 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.094616574 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.096145349 seconds)
  done (took 19.381550318 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.116702315 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.119370105 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.119511181 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.113199454 seconds)
  done (took 5.563232823 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.086960158 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.124955346 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.097479475 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.079024508 seconds)
  done (took 18.474201334 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.408446004 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.357909767 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.847499666 seconds)
  done (took 5.712375927 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.904516139 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.224873546 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.88924162 seconds)
  done (took 6.104426497 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.041224508 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.036643964 seconds)
  done (took 5.163820537 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.266773218 seconds)
  done (took 2.352720639 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.575155308 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.577719128 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.958636138 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.984090322 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.474381313 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.410622963 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.464538892 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.374176025 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.795921958 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.685480072 seconds)
  done (took 18.387619069 seconds)
done (took 107.328102588 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.96131394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.487200545 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.248009729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.787401066 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.188404971 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.247490816 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.704276569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.581586166 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.696492364 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.697278925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.806832129 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.188169388 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.110148657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.471839221 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.113176354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425167762 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.494177623 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.976453547 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.142313921 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.327832548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.719374104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38971001 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.527954361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.404769374 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509275509 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.231716536 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.984814376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.439859075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.384388281 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.997627596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.245883133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.572782715 seconds)
  done (took 151.15055346 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.086819528 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.102082581 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.102271733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.097868026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 4.941323336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.102904149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.100784664 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.096630317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.02668212 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.025144307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.102750063 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 4.941738738 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.104877864 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.09669571 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.106033193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.097411738 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.250804121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.103132687 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.102781949 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.103155444 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.103469644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.723401769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.103235462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.728526889 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.261791963 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.105442209 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.096411341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.103466956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.102153562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.102817191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.10293689 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.097824064 seconds)
  done (took 187.427318965 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.086368864 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.10125263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.101328398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.097791833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.101640624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.102650481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.09763191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.097724742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.102029419 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.101857389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.101674212 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.101096173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.103186443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.097484676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.105543101 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.097321022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.102590189 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.10228921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.102332404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.101560479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.102573102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.109833616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.09794572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.101843409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.100980633 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.104829752 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.096947916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.102507311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.10037344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.102540248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.102927721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.098191883 seconds)
  done (took 196.330359529 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.396143652 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.128931876 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.012782279 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.83991641 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.99834789 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.120299923 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.848354643 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.397180907 seconds)
  done (took 13.843974201 seconds)
done (took 549.853159666 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.756603015 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.024119018 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.274928237 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.358955298 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.709590929 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.391702305 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.351831804 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.575535934 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.824485604 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.522936431 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.565939424 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.29940902 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.896581244 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.355547617 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.284446667 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.623733105 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.530063056 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.822831734 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.310025152 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.957317234 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.321818083 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.959235467 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.567620211 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.886994869 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.571455471 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.011351437 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.249835935 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.531116281 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.341394093 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.310872687 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.177049278 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.54419664 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.330075101 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.325094974 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.606181294 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.579401819 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.479049943 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.542813848 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.274868487 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.764918091 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.992601031 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.707070431 seconds)
  done (took 74.599238895 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.120445735 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.140707444 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.283544885 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.190879555 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.785533681 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.196751354 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.368067288 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.339326315 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.205693073 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.327094384 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.375652898 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.794880853 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.367423604 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.758974202 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.355126111 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.381824633 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.198231925 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.749762185 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.35569121 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.336639155 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.163400707 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.286845452 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.161736576 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.311980897 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.155080213 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.168215863 seconds)
  done (took 35.99583479 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.167442558 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.307273073 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.364075404 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.181098687 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.346391135 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.113517589 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.467096818 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.286768714 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.942320872 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.480927692 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.232597321 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.248551118 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.309602525 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.395981061 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.431376099 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.233627847 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.285659017 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.292652598 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.315492925 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.361999387 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.274982049 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.205450118 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.471854073 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.299524421 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.801117201 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.714146156 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.346609058 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.708455199 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.417020637 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.24943479 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.265168449 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.449730536 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.521762943 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.365754357 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.261662153 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.139753863 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.142142196 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.23752734 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.029113786 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.296814469 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.464630888 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.554816305 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.414755442 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.692034183 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.446390084 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.290600058 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.587899991 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.246304886 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.252452024 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.932352627 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.42243402 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.864508997 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.23962088 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.320081698 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.256331497 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.448721411 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.307799704 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.453071043 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.215741156 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.848118073 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.205538452 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.514933562 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.317858383 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.453140925 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.373644377 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.332443632 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.310343534 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.793421105 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.416697006 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.17816608 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.834021207 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.219896866 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.162181783 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.232124192 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.312282871 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.625248392 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.125836102 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.365334287 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.541691552 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.454397657 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.364736056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.730020119 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.120601708 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.687143106 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.150554828 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.126621798 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.215483331 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.475248172 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.447649628 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.630289166 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.707567534 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.471005217 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.712984498 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.276761389 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.789101037 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.492426699 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.124669469 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.142620856 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.351098894 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.706410409 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.222863355 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.362228642 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.826460519 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.501806417 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.614327063 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.27457422 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.485408825 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.449673215 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.485360686 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.117524364 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.345066248 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.214174618 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.47917203 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.401184136 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.117962839 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.674298055 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.255888257 seconds)
  done (took 236.632054963 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.086320976 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.103812206 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.090697394 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.10437949 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.088108594 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.696254572 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.165275211 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.088334191 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.696270624 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.164422278 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.088019942 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.087875319 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.089464536 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.088304581 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.684146863 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.650792869 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.917618972 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.089351826 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.088558227 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.09873965 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.918261641 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.090245784 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.088876951 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.099248895 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.090182786 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.088171079 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.093914767 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.144090824 seconds)
  done (took 151.874173734 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.155287411 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.516912673 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.177000411 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.243173752 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.191141661 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.17667529 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.656496268 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.293386052 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.225504533 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.165758442 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.158625452 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.378556841 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.454784746 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.741587054 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.289694122 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.376404542 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.803213668 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.297088375 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.162938841 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.157491271 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.314053731 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.510710842 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.413867133 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.415840053 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.302858245 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.415865493 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.231105533 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.154070135 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.265326673 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.626732941 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.172270643 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.51326876 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.309149102 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.163952753 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.64190759 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.504866353 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.727940622 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.790917844 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.346921716 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.115566126 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.118045122 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.387412969 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.448297559 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.205845307 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.149419026 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.791752249 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.173754834 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.410079198 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.173180962 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.114284588 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.260889124 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.273927151 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.396593618 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.164390391 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.345868697 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.277411541 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.740929996 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.137723796 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.218004987 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.456446885 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.131075848 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.634982519 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.106359674 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.213981814 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.159550797 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.00560207 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.242930064 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.669576856 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.769046483 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.20052588 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.492584895 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.355513659 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.130697361 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.411978537 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.329837529 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.58791007 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.729714972 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.294849223 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.259293338 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.236646809 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.42445657 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.145380437 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.698287914 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.26735936 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.129540608 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.633969835 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.543284704 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.130528489 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.148246108 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.249222327 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.317254585 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.37123104 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.423065626 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.230287946 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.057869491 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.413649821 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.431782468 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.171458684 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.277592066 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.144253776 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.564139451 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.341588289 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.136535465 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.466666996 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.552157162 seconds)
  done (took 155.13067804 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.847794609 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.209500682 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.33430204 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.667451303 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.485763451 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.572362842 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.425034832 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.223672739 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.452098975 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.373440602 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.350423806 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.244041429 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.832294955 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.906481619 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.211060404 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.376123762 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.222416041 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.845253981 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.445458489 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.160632935 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.457009766 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.88503746 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.455727719 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.554438505 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.562593262 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.665482682 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.82799271 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.263439506 seconds)
  done (took 47.958127374 seconds)
done (took 703.276649083 seconds)
SAVING RESULT...
DONE!
