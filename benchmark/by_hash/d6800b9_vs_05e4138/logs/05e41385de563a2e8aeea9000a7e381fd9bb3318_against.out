cset: moving following pidspec: 679355
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.362589213 seconds)
loading group "shootout"... done (took 0.852924193 seconds)
loading group "string"... done (took 0.225991021 seconds)
loading group "linalg"... done (took 3.273051369 seconds)
loading group "parallel"... done (took 0.021473218 seconds)
loading group "find"... done (took 1.187881808 seconds)
loading group "tuple"... done (took 0.722028952 seconds)
loading group "union"... done (took 3.078165556 seconds)
loading group "dates"... done (took 0.176975335 seconds)
loading group "micro"... done (took 0.058645627 seconds)
loading group "simd"... done (took 0.367519588 seconds)
loading group "io"... done (took 1.424331721 seconds)
loading group "random"... done (took 2.351257349 seconds)
loading group "problem"... done (took 1.192114728 seconds)
loading group "array"... done (took 4.633117816 seconds)
loading group "misc"... done (took 0.984670738 seconds)
loading group "scalar"... done (took 3.5111266 seconds)
loading group "sort"... done (took 0.308939302 seconds)
loading group "sparse"... done (took 3.603075474 seconds)
loading group "collection"... done (took 6.129007293 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.547599675 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.075234457 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.257178528 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.076577122 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.286264486 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.084698057 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.088612849 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.074212223 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.11733584 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16846957 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.219754502 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.397509293 seconds)
done (took 5.124360204 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.317808404 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033808903 seconds)
    (2/2) benchmarking "String"...
    done (took 0.129564503 seconds)
  done (took 0.761304004 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.143320433 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015859045 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022882804 seconds)
  done (took 0.773490454 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.02061342 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.099931556 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021790708 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022428625 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022329481 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021693125 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021553195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021461387 seconds)
  done (took 0.824267893 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029707482 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023199059 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.02114401 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022541576 seconds)
  done (took 0.687719262 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.023082323 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.087984841 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020533795 seconds)
    (4/4) benchmarking "different"...
    done (took 0.020332455 seconds)
  done (took 0.739862816 seconds)
done (took 4.733441334 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.202394677 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.773802565 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.988627702 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.18614335 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.35614625 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.309456197 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076558546 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.243721885 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.156796336 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.03321845 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191074279 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.040094557 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.524826346 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.47500987 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.029200164 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.146588096 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.563615933 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.038851279 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.068992546 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.16768176 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.040912544 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039230311 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043396736 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.028305711 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.094447296 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.13568206 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659934183 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.070321901 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.025303415 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.04390561 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.028100241 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.030574293 seconds)
  done (took 9.44424491 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.154814109 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.149322561 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.02382697 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.058296575 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.050675347 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025048669 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030329517 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023125362 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.043215505 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.086907573 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.046559994 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.163039626 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021455359 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024864184 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143301705 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.113365167 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.03826463 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.037623259 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022774203 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036643738 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.048465871 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.035238004 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.03314127 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032783677 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.070585033 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.087176716 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.04106695 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.06217998 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022973061 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034987974 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.050188101 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.062637954 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.023134139 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021781554 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.065038872 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.039733795 seconds)
  done (took 2.647958923 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.725973155 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.051624318 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.147634475 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.134376196 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066711229 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.04957553 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.186628673 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.079574941 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.056031942 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024332067 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.214416428 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.664974285 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.176815817 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.051097594 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028633108 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.188937488 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.926418766 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.924549749 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023817292 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024137132 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.139951017 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026629355 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.180662526 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.024869799 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.248712995 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.699970122 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026001517 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024501747 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.053293919 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.146853571 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021069157 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.098059189 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.046999075 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025267049 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.555622296 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0219545 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.019953067 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.041008143 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.051219011 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022378398 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.02333396 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.031201215 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021387864 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069735638 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.033208914 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.531110857 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025586781 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.7142117 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.849421615 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.032365041 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.028567451 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.058299906 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.020397283 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023947378 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.58982803 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.1154462 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.023170011 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.290631375 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025936451 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024643086 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024848242 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.056837353 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023624695 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024891476 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026875509 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.041439421 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.039160995 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.03292018 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.042851578 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.022060544 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.023005052 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021468635 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.523166062 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.033143823 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.024832418 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020448951 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026219653 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022566435 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022134079 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.061510087 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.047463642 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.045464981 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025995591 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.022899222 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022032854 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.539262164 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.906625053 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025120847 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024176734 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.490029813 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020565066 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022561669 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024172321 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.043648295 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.022602762 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019902369 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.056708796 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.024493512 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.130929607 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.486884016 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.023605218 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.01996389 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.473553675 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024318474 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.054862943 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.077565588 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022677827 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.064117952 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.023000998 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020276579 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026293168 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020023109 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024264121 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021200707 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.022065124 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.02116612 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.023062626 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023916111 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022905082 seconds)
  done (took 19.955802964 seconds)
done (took 34.366189739 seconds)
(4/20) benchmarking "parallel"...
done (took 0.757591807 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.218888479 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049496191 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019610066 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.167321907 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.044549842 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.140923208 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.181415345 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.131521766 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.046023166 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.046018098 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.045934178 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.188015999 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.197899392 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.047497261 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.124381829 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.198903896 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.047616384 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.020145593 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.047065822 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.047988373 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.048047875 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020251021 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.048302911 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.049268925 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.125977011 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.047773858 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.02008837 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.125520227 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.049613223 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.129087851 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.050348283 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.049179337 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.049942018 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.127111022 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.050360731 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.126817523 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020371707 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.050062719 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.049915169 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.051123674 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.050793344 seconds)
  done (took 4.052506876 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.047494495 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.03873207 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.040856144 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018360054 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028344584 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038644161 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018290764 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038250739 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041615897 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.03868928 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038673164 seconds)
  done (took 1.135933261 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041764165 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039503336 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.040845027 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018253615 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.03008875 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039305377 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018236736 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038886762 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.04160972 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039262728 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039313326 seconds)
  done (took 1.067745108 seconds)
done (took 6.914858948 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.157182199 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.125786995 seconds)
  done (took 0.953198148 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.583092236 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.218809236 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.13506314 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.25727614 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.128452715 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.159797355 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.258722386 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.297699085 seconds)
  done (took 6.765111277 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.075719615 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.146188715 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.02448103 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.023107846 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023309731 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.023194139 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024679959 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023481196 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022730995 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.025242863 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024873552 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.02292541 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023740256 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024937287 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.023028405 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.02320722 seconds)
  done (took 1.303382112 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.029087157 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025818101 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.026830862 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017287905 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027707665 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.026456588 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.027509687 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028351398 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.027155461 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.02677639 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.02474774 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027828561 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026406461 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025224729 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.02790507 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017231571 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.028066072 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.027250818 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.029149141 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.028013907 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.027445008 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.025056342 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.029137093 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.02647339 seconds)
  done (took 1.327266622 seconds)
done (took 11.03011995 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.142287057 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029633256 seconds)
  done (took 0.85227583 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.131680349 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.130231277 seconds)
  done (took 0.952457989 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.029012506 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016195265 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.032312371 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.024479428 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016444607 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016143339 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.031318988 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016378626 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.01619959 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016301381 seconds)
  done (took 0.908647647 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019663598 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023205681 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021176054 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019348145 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020941985 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017275018 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.01951433 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.01748178 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022859551 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016565361 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020205794 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.038310668 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.01966678 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.038596954 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019578851 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020181138 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021811589 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019751093 seconds)
  done (took 1.088849792 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017986362 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.017045744 seconds)
  done (took 0.729566626 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020819492 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017096704 seconds)
    (3/7) benchmarking "month"...
    done (took 0.01878691 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018629057 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016657 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.01613424 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016670507 seconds)
  done (took 0.812982034 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393330917 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.090069093 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322011865 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.024890489 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.038572971 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.236112867 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019978747 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.024285472 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.024231153 seconds)
  done (took 1.864625856 seconds)
done (took 7.902938236 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.045234194 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.144060391 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.152967558 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.455822112 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034413573 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022719776 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.056180032 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.236048337 seconds)
done (took 1.851247933 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.488934721 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.275531216 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.192093369 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.024025673 seconds)
  done (took 2.190191926 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.314670543 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.145420369 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.031127051 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023189093 seconds)
  done (took 1.224178288 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022277462 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027738922 seconds)
  done (took 0.755734253 seconds)
done (took 5.369504264 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03042776 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.016969116 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023269846 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018428209 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018121852 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017582149 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017806618 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018615349 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016619033 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018586564 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018599444 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018555592 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.018302532 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018219985 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017829943 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018577577 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016718564 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.018251908 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018258861 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018207443 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.0166279 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018807731 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.018083655 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.018514488 seconds)
  done (took 1.142446299 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.036411628 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.021144671 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.021736011 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.021609943 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.022158387 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.021567396 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.021494008 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.020799179 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.021788051 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.020566096 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.022160212 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.022235549 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.020467334 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.022304881 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020519738 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.022383378 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.021785184 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020999649 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020548275 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.022283058 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.021678176 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020970122 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.022208078 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.021677239 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.022236922 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.022202049 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.020687401 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.021204629 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.021950066 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.022430459 seconds)
  done (took 1.368358116 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023321441 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015301576 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015581161 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025858271 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.01518273 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015379425 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.01581629 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015002573 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015365283 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.01616434 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015720206 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015096839 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015963721 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015085893 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015237155 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015826661 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020513162 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.036207369 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015465254 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015185482 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.020013277 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015478994 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015223935 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015292806 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015727977 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015239387 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.01507139 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015612743 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.01523356 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015847097 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015272777 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019935022 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021484069 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015701997 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025728954 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020453714 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.01574885 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019947733 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.016338461 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015254369 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015261347 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015276949 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015450417 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015440355 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.026169755 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015634117 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.01659103 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.016003929 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015607225 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015342545 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015485599 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.017097578 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021335416 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016741945 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015312267 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016708592 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015365444 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.016125263 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015524624 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015318437 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015294877 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019521148 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016800633 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.016320538 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.03740164 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.01680273 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.026197092 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015520142 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015893453 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019697584 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.01609199 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035518898 seconds)
  done (took 1.988331826 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028121211 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025741978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.034560839 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.025177327 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018692254 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016168931 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019303101 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016127057 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025462698 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019630758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016187433 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019290927 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025597609 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019664529 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017292518 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.02546302 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019732052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018953164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016188287 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0199194 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017458572 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019601976 seconds)
  done (took 1.177851299 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104358322 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021446232 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.065754183 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.024960347 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.023751211 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.024762292 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021593295 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021591505 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021667931 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022354937 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022281622 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021650404 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0237476 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022224241 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022217494 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.022138358 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021847223 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.022269914 seconds)
  done (took 1.238684827 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.034099302 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021424441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.048880871 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021121093 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021253779 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020773335 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024568666 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024772292 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020894296 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021309574 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024869878 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021026205 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.021061235 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02147637 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020974237 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021408972 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.02096859 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021385933 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024925594 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024873428 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024957831 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024857125 seconds)
  done (took 1.241609989 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035464807 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020439775 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.036927247 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.021962047 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015638607 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015628625 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.022020748 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.020733167 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.02185781 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.02032898 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020904782 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015806408 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.022858934 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020890864 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.02304665 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.02092162 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020373926 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020901103 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020323811 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015761598 seconds)
  done (took 1.141939299 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135392887 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017912749 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017667391 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022028786 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017646482 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017713118 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022158082 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.01773692 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017675057 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.042287528 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017831536 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017757808 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.022320197 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020478919 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017687008 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022165357 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022354893 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022602348 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017997702 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017937903 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.042624966 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.018066434 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022637714 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017980815 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017939614 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.018004527 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017975556 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020975958 seconds)
  done (took 1.411677676 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039683138 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015132611 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015338792 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019218589 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019137386 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.025020882 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019147226 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.01913108 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014982369 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015369068 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017268343 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.015005825 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015034671 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024617925 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.014950124 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017323145 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024624031 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019267583 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025242368 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025185507 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017337297 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024418995 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017320296 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015467405 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02573143 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017587879 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019624152 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020464309 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017568676 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015517662 seconds)
  done (took 1.305869589 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.030185023 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026737744 seconds)
  done (took 0.769483397 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.01885091 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.033726629 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015143633 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028737838 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024042413 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019492855 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024002312 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024022423 seconds)
  done (took 0.893094797 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.130191465 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.153795158 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017392187 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017516736 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.127971354 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085126748 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.138344837 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028697284 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030692493 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019955454 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.017155205 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.14031585 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016904069 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030580371 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018537394 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026729575 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024213813 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034938463 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.030078458 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015911574 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029582228 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017664787 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016832268 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017722309 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.018076493 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023761407 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032855109 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029463446 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025300606 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.015162538 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035802579 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016058271 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016662549 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025122945 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.129810846 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016278394 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.054137846 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.016152323 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020515829 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015806212 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.02853413 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.037248953 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030417389 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.034100835 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017422162 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017952034 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015872091 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017631086 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020081225 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.02519198 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016141426 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023407643 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015738577 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017558227 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026570939 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.016211751 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.02081662 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025331366 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029539327 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026486558 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028436208 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031615948 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024898526 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.024582907 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016775027 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036171396 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017770138 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029417291 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030994982 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017349459 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029288919 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.016052988 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015291504 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016180398 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0502671 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017530749 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.017027788 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.016269614 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016358976 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017509509 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025718258 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.02111358 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023513282 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019326432 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032130839 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.025290718 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.016021244 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023631788 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034689366 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020186945 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.016239172 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033381849 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020182108 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015997237 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.034368212 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026664573 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017722807 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.017375412 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020492867 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030565421 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.018184936 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015687479 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.025121302 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.01833058 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.133361485 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021810852 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02491853 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016443267 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.02704284 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.023495636 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.018340464 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015689158 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.02146237 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017508503 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015791594 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026245961 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016708499 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032134138 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023668974 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.031455353 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031816617 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027411064 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032936707 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016469795 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015654479 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035486058 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.026162525 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017926511 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035233156 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016703721 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0274942 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016894428 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.01852454 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.026329573 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.016198707 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018744745 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.017106146 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.024197854 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.018557396 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018746092 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0229532 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025365319 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.029512849 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.018000815 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.02566629 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.017192553 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.03317018 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026676184 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021750881 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020512105 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017749269 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.029394664 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023804956 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.02606833 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016688753 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017618033 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016869135 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.028061837 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026463787 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.01867434 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.027028415 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.02185018 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017731601 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016909023 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.01802371 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0208179 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.02073401 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017585662 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024666107 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025755856 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.03189594 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.025207706 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.026108399 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016222839 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0167925 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018868507 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016725272 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021723648 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.026256396 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032766426 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.029271693 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038891814 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.017090304 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026641401 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018707922 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.034558667 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.03044942 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.018039224 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.022140031 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015984678 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018902986 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026364929 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028673772 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031717156 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032296667 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021923617 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.02176252 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016796628 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032349074 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.017367853 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025423749 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.026269484 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023789942 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016789608 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018885745 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.026154528 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021806673 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.018037587 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.033052996 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.02541501 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016829678 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031579974 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.017243852 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027919885 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016779731 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020696049 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022395178 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.019110168 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.02671243 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032571914 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.016004334 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.017327241 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.033009019 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018930516 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018883488 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024970839 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.032381761 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021819092 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024869563 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.027698058 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.027590239 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021807881 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.027236162 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.018158367 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.026392844 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.02076551 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.029302462 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.017096849 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03612951 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.016042557 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.032609364 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.01778496 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.028464122 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.017495317 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026574597 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.017914614 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.034957825 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.018755283 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.018000962 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.02917344 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.016006654 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.026229931 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.016800684 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.022225667 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.023987964 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.026391824 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.019007283 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026544152 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.018810468 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.026076511 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.021946807 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.026075709 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.026253269 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021927077 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.016754818 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.025087115 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.02820724 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.02516059 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.018788312 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.018873672 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.017444689 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.026529776 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.018764599 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.018198455 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.025201066 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.022086248 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.023194723 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018880167 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.01891415 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.018821193 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025466425 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.026554694 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.035952268 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025466151 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.024270141 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.026225256 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.01686903 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.032876507 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.016853274 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.024301047 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.016005642 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.025800325 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.026367571 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.017213171 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.037581858 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.018815083 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.024845366 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.029788297 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.025449244 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.020770233 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.035938043 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.020763132 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.025131217 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.024859632 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.02172837 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.024068443 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.018892042 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.025184271 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.026525333 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.027858252 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.01795961 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.024424337 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.025785354 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018968004 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.027934507 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.018846931 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.025351018 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.018957431 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.01626411 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.021943707 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.028727317 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.022100031 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.022418377 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.017288869 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.016025661 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.017219888 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.026392632 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.022081653 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.0256209 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.032803917 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0160708 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.017893386 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.016796111 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.020748383 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036167186 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026704134 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.02472841 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.021940711 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.016245807 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.018646744 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.018807355 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.017048628 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.020820246 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.016319039 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.016817295 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.027735278 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.018798218 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.021728279 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017205561 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.018233148 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.026960424 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.022196763 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.017390428 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.02411973 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.016731335 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.022275939 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.016231145 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.018723951 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.02176808 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.016524361 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.020898898 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.027328614 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.033950433 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.02401918 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.025838388 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.017901108 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.024905438 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.032803028 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.027227637 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018045629 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.026497513 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.016440261 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.036499781 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.02649581 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.025445828 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.027008918 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.017872235 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.034580153 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.021810623 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.027188493 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.032752382 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018039545 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.026831453 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.01687997 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.033204884 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021807625 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.01679121 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.025862654 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.02463894 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.023290958 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.029238357 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.017929236 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.025833914 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.022882323 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.021088101 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.018885187 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.018905438 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.02577986 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.033559159 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.017943481 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.023628648 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.025113431 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.025293303 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021961153 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.029576447 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.025198083 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.018062369 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.018958009 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020797752 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017804473 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.029606431 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017282315 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021827284 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021737276 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016821071 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.024105621 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.03393765 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.026351305 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026599502 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016804078 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.01625811 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.035791467 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020961085 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.020770615 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.025047484 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026894839 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029607213 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.026362873 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.034612286 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.017449432 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.02321022 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029540463 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017899712 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016656062 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020883587 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018703335 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.026120867 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.027019805 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.02443273 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019015402 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.02415533 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.03066294 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.018487118 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021923125 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023959137 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017978639 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027633864 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024966787 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.025504335 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018600117 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016803718 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020578972 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025778776 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.024298055 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025953343 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017946127 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.026578084 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.032048495 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.02448556 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020761208 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016953 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020635947 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.026087184 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.024158443 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.01690031 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021987401 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020734944 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.026827312 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.026503451 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021783425 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016816834 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.349500365 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.02469585 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025094824 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.017359265 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.01738961 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016194365 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.01576995 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.026836313 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.01581563 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.017257213 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021181175 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.01736727 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.033780752 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024150815 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031934556 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016763645 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.020961914 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.015857782 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.02548383 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021050817 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.015918919 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.026458407 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015426189 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031716158 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.027860426 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.022095973 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.015938961 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021812 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.024809588 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.031400339 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025701332 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025059716 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.0190694 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025655849 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017567727 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027132829 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.016014001 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015335764 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026104768 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024762869 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.028606336 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016198541 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026365227 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.017956256 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024675631 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.025031627 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.017726103 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018006198 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.017732057 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025864795 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021461244 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.025643919 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.021845319 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.033632256 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.017150585 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.027511579 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025327503 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027413401 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.03038319 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.028417052 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.024929472 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.016651548 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023813437 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.024901612 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.017231016 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.021709368 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.019237591 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.038594956 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.017721598 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.017742939 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.030607318 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.023553708 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016256571 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.023151003 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021396859 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026259504 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017033237 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.026612002 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.021211589 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.017041326 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.021342135 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021399058 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015488743 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016119836 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016399259 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.026036488 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021502071 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016344357 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.035798874 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017588856 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.025019858 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.027107946 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.023392259 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017597391 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015412781 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016966662 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029664947 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031843724 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020500871 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024803455 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017804534 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.02539089 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015414669 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.02507329 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.024170207 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024706029 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.016063564 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016382031 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.031367029 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031963263 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.021338617 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.033348315 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.025349079 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.017791152 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.038754488 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.025249672 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017165998 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.027206607 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018254896 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015815001 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015620833 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.017892962 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0278296 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.016100396 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.018396246 seconds)
  done (took 15.636722783 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.062972771 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017011973 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015590554 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015616269 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022417509 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016782883 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.01557592 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016877048 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016965799 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017822011 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015731891 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015712375 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021091838 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030806015 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023460988 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019312683 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015663787 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016883675 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015679246 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016925854 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021595221 seconds)
  done (took 1.237492875 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020324294 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.020078342 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019330609 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019583904 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018740381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015764638 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019080474 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015770378 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.01970677 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.01621243 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019686021 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015899953 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016157236 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016178095 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016163651 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017310105 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019778071 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018940599 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015894964 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019290096 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017202563 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019301901 seconds)
  done (took 1.158394922 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018562655 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.0164109 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024312352 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015251067 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.01518184 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.01784746 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015127835 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019959017 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019873278 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019880313 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.024040029 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015950902 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015089348 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021355189 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015144509 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015976754 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.060296765 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.016077124 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.016140507 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015483561 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017586277 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024485399 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015454511 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015645522 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.020007437 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.018028754 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015380459 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017660385 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.0158889 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020157875 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016325207 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015374379 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024415154 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023675546 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.020216297 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020192826 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016756146 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.016322668 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015618915 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015554075 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.024193475 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016872167 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015830443 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016611589 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.024399665 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015728328 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015616739 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024449846 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015429873 seconds)
  done (took 1.694668372 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028626289 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.068228381 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.021730885 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050713286 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.027414498 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.02075927 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.021457792 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053505419 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016538757 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.01704331 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.028233985 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.028421068 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018049636 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.019265968 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022690638 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018165661 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018791286 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017527376 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020535155 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.01787983 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.020689435 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.023020605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.027980001 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.028576457 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019171541 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017698042 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017925503 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.019500638 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.028147732 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.021248098 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019594971 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.020070018 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.028387406 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.023526109 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.01789792 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.018047414 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.029192566 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018662455 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.018399793 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016879385 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.018077987 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.019485948 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.023024938 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.029364823 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018517945 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.023547125 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018416709 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016508031 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028636605 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.018210794 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.021822845 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.029413097 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019342124 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.01856998 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019644823 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028601983 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.018406089 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.017202809 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018457248 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028146867 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016755827 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019103799 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.02901204 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017874761 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.021267381 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029131625 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.023542937 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019219052 seconds)
  done (took 2.467169792 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.026006143 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.051935522 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.029197457 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.029247257 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.02488591 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.025244156 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.025198509 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.025187438 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.025063106 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.027832196 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.025246317 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.171323349 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.022486124 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.027292823 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.025716903 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.025665338 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.025689279 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.025742121 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.025628336 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025588079 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.025662538 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.030162318 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.025681276 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.03026467 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029987988 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.022447585 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.025613158 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.025590425 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.030442914 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.025681121 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.030066188 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.025671545 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.025841485 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.030648832 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.030218663 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.025680015 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.016312414 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.025653542 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.025898003 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.025803633 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.022517661 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.030720794 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.025745807 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.022500575 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.025877703 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.025689638 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.030619003 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.030297687 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.027580808 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.028739778 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.025886364 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.030585156 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025898014 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.026127172 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.031031698 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.033992292 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.03077543 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0310126 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026142972 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0308981 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.031088598 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.034055168 seconds)
  done (took 2.629891017 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030754368 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.02118281 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.034343592 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015319872 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015204261 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.024320501 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015348201 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015370324 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021087848 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.021073073 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022591494 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024595833 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.026299271 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022482223 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.024546813 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.026279314 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024473884 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024635722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021457299 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024833008 seconds)
  done (took 1.239026774 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019278184 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020673593 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016058298 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.031777835 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.016066115 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.023371377 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016045517 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015941347 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016122443 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016168156 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020518922 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020448034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.01616565 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.02417763 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019513721 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023617279 seconds)
  done (took 1.082985187 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020558013 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.024449913 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.130711199 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016693103 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018686627 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.016064553 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016922641 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015864996 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.018046996 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.029978256 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016842446 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018891998 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016952385 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015620408 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016193799 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018945489 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018037006 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016974165 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016960913 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132470476 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025705969 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.01772582 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019279663 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017851997 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018913466 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.025329441 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018514404 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018827021 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.017125854 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.019222339 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018845219 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.028370481 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.01881584 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017668245 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015855506 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016698859 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.017134863 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.019300036 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.019281533 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.017115254 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.01601931 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018868758 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.01728835 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017482353 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018394172 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019334906 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.01835232 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.027457819 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.017098584 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018965028 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.017154991 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018382858 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017595697 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.028523004 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.019164173 seconds)
  done (took 2.040086585 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035048102 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021034381 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015183704 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015195986 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020495306 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.021280955 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.020650618 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.020839285 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021211462 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015097559 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021206005 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020350527 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021431998 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020935284 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.021456017 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020920383 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015242552 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.021126347 seconds)
  done (took 1.149502196 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024471048 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020873295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.021062749 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.01708398 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.016997218 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020863572 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015490866 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016830172 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016850519 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017219881 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017213154 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016827614 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016758744 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016785253 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020705348 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017182381 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.01688945 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015835435 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017167214 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015640926 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021117941 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015792168 seconds)
  done (took 1.165606864 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.192428285 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.152017054 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038891223 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.034183022 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025852746 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.051998091 seconds)
  done (took 1.266022928 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053281075 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.054137073 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020854876 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021012032 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024648214 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023152966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023154245 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023478449 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026313972 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029002248 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023519513 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026598765 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026340613 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028062964 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024817523 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024831572 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023765493 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023778447 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021137873 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.031264423 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023919749 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026929632 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023935961 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02372403 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023844096 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028588364 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026867154 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029613274 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02368564 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026958407 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025346158 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023879406 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027151748 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029659953 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021099489 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026801963 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023977028 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031708368 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025490288 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02885057 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.02112597 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025581434 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027085487 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026762973 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02721533 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024091742 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026836214 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024017445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024094816 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.035147064 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025682879 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028757275 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025566817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02722078 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026991761 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.035086629 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02988955 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028859561 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025618444 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029892656 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029018647 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02587869 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02906886 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030270875 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026121339 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030085846 seconds)
  done (took 2.566722394 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061366183 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021166434 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023313589 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028491331 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027577839 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023346966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023469878 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023435846 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023437319 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021169385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.059986641 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023635397 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028025591 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027976089 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023648558 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023465338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023753795 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028501993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021547407 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034640159 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023842851 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028463142 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028488682 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028444497 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02953321 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025433443 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023898121 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023900463 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023778832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147812461 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027585416 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024169134 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028641292 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021442316 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028647464 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024243962 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023923868 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026806622 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02389424 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025511388 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028812558 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031626496 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024006265 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023947042 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029816859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023904596 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023992312 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021513473 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023908252 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021485838 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029684031 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029686101 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029764443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028735635 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024129657 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024083758 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023975636 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024028593 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024111006 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025506709 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028778653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023954958 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.035530333 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024254756 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024183056 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02913347 seconds)
  done (took 2.68198572 seconds)
done (took 52.395715571 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213928265 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169597653 seconds)
  done (took 1.142965373 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.141992314 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.139082734 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.168274139 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023835613 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081907801 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174487259 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.126818907 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026552144 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024201642 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025483271 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023736505 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025151139 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025361458 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023579699 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086252858 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026449646 seconds)
  done (took 1.92422584 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073924804 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.277484467 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.058451445 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022914711 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103713416 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.029022039 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.02438715 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028422846 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028821732 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023197697 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070048526 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.045577154 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.028151766 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028403395 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024314385 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.028147942 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028449463 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028953507 seconds)
  done (took 1.731452796 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.096069889 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.034690916 seconds)
  done (took 0.909567538 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157206712 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.070814014 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.111928679 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.314269839 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.098233785 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.302644661 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.111750381 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.111132788 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.079058017 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.095886375 seconds)
  done (took 2.227331305 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.06234562 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.056856441 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.284424949 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054406285 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034808001 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029857435 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.030241481 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.030283625 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030485454 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029420963 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075169024 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028064408 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.02436915 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.072093128 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.049453618 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.059274426 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023810883 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.029964512 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.03294746 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023799448 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028574309 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.030531337 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136071588 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.030217606 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.051566594 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.028361587 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.029858506 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029729385 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029700016 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030706934 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.031254849 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.056089905 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.029934239 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037621846 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.029106664 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.0509733 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024699585 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.050664198 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027571084 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024557434 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.028051952 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.031439449 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025194969 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030707971 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.031004399 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.030592376 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.031048374 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.02390209 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030972729 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027730117 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024760157 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.029200772 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028903524 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.029984462 seconds)
  done (took 3.0452047 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.077883181 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.066690169 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024229495 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074034479 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065532253 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024489103 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079643795 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060295915 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077996204 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023838322 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023553522 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023530896 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031261881 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035406508 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076564538 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.069780715 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025767974 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.02438321 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.068986726 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.069012474 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023095856 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.081206731 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070313097 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.067925704 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022742388 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024318488 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022973745 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023668336 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.031843816 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031578356 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.02346674 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034110568 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035737533 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.031019914 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022802264 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023084937 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023012386 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031859249 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033383324 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.033362577 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030435026 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022786075 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023078006 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023764258 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024273996 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022667871 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033467751 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.031419298 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.033372608 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023751031 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023720024 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.023029799 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024000905 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030924038 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029748289 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.031442394 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034469589 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023559311 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023536744 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024915394 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035157574 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031932739 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031831458 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024498952 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032989301 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023312727 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033864292 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.037080828 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023334712 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023872852 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023508155 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023498288 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023793881 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030121341 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.030191454 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02394216 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024108822 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023742757 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.032534893 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030406631 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023150256 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032491282 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.02290641 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023490604 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023824971 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024116721 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.033306973 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.031981429 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024017528 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023935581 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.024113706 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024089365 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.023289409 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.034435709 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032941209 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.033170988 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.035253894 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024627492 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.035995469 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.033458753 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024819461 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.032386596 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024239297 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024608384 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024548902 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032286688 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.031896527 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.033517069 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.024178116 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023756104 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.03315157 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035293344 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.024015332 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031868478 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034775671 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.032992948 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023744881 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.035683077 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024306143 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.035830544 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024591438 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035349612 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024662032 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.033065224 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024535672 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023600806 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.02437803 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.03666832 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024936711 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024410045 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02484963 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024336101 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.033044022 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.037469739 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.025071473 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033500415 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.033309432 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024986684 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.035473486 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024537054 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.035572215 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024593883 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024801049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023545157 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.03769739 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.024279262 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024696264 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024325867 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.03499177 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024244445 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034997552 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.032185572 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02383775 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036411685 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.034532217 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.032214329 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.035309195 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.025262339 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024551985 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024105324 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.02453003 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.035456878 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.03719451 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164420863 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023523777 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.028807213 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.031858962 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.0227074 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.028988544 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.028888205 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.029370034 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023332874 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023240408 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.032511907 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.033598193 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.029375029 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.0317032 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.030205134 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022984006 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.028998272 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031723259 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022948763 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.036086968 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022951037 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.032572905 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032157912 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.028390757 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031697889 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.0330645 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.031654787 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.031238616 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.033345239 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022541942 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.02279587 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.029302391 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022787662 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023098188 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.029037188 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023471938 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023546834 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035465123 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023103035 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.032094656 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022416344 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.030038207 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022393703 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023414098 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034307471 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022928466 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023423295 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029565667 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023032075 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.029037048 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032280856 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.029447243 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023055138 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023860681 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.033737616 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.03303296 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.02327521 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023138618 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023833126 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.032615467 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.032178815 seconds)
  done (took 7.858761421 seconds)
done (took 19.626598473 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.145508681 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.072854056 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.144386572 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.085133042 seconds)
  done (took 1.219412133 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.057942391 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.01961169 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.145546107 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.157608047 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019916158 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.139731976 seconds)
  done (took 1.332962518 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.262569618 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.15571417 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.166559018 seconds)
  done (took 1.379877899 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.15192079 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.280111134 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.548231033 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.151446542 seconds)
  done (took 1.935482298 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.173363636 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.169134546 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031373392 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187498518 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.039448092 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016452951 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.10966473 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017374448 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.053453488 seconds)
  done (took 1.654775876 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.100455823 seconds)
done (took 8.419150656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.199284847 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.142611901 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033790763 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.028042965 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.124817863 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.136142285 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.143084672 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030217014 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.133745113 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.313266141 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.182244147 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.049302432 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.159947178 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043502921 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.26675812 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.031470823 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029867849 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.02506037 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.14180952 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.132870416 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.247874816 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028792649 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.097041579 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.031192936 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.10103281 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.081419882 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.189482877 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.320295521 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.283417645 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.031598115 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.120405696 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.042980807 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.11642457 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.125174984 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.140136025 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.049150105 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020450781 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.249018121 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.107164331 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.329446918 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.167408687 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027545977 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.142392091 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025634272 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.020170421 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.15295976 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.033674337 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.027453604 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.04405873 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027607154 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.04302671 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028651855 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.133551679 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024303122 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.093767506 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.147180105 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.185863939 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.103255096 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026836939 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.040354379 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.030649924 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.160776546 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.038999312 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.026474237 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.032571543 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020571902 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.144326914 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.040319386 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020897384 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.031526269 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029486123 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.100585567 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.162823294 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.067363187 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.032364141 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.119830816 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.098213526 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.047314752 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.050256575 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.03011145 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.020188346 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.192742974 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.02588968 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038961226 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.0274534 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.05415031 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020412992 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.036024408 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.320999443 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.145303049 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.084640325 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.020345374 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.229394412 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.021090608 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.044325388 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.020538554 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.019943659 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.183281243 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.019806649 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.019969267 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.0298989 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.028811861 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.0215515 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.163216188 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.099458423 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.028138795 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.026902564 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.020272564 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.025878747 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021018741 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.020246333 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.01996442 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.09421357 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.036861818 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019469343 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.102952921 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.116831457 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031222825 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.035938892 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.085013695 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023267377 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.029832061 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027149419 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.134037591 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.026528734 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.131144606 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.02141831 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.042442743 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.119233319 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.096435051 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.102117563 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019763745 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.138025995 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029749956 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019396875 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.027210108 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.047900098 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029471929 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.03666881 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.027984694 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.139224712 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.031118427 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025875383 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.12037508 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019500568 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.117061528 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.098620676 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.130710441 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.025575733 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.03084458 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.092847506 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.044401021 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.05033729 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.043303069 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024602949 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020381884 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.02003345 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.033265113 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019429512 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.020246403 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.03340541 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026886891 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.036061805 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.249917497 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.030283897 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024421691 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.261307315 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.032789842 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.094647982 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.040900953 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.020637997 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.102048573 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021989431 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.040650624 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.085718789 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020547978 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.097460162 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.021017027 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.020361726 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.026418287 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021933587 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029809466 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033793507 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020816608 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.03359131 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027906394 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.020338129 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.101230818 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022041539 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.189460311 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.09991553 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.096530215 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020415895 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.038955354 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020139612 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.133130994 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020430989 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.070543704 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.111219292 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.035092229 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.040463058 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021446476 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.098783173 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.035373692 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.025755011 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.100027147 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.133067057 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.095133128 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.027086026 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.257411675 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.029697645 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.021119453 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.026708989 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.029534182 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.021094405 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.101431166 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.025419814 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.020123728 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.020414769 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.022334726 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019859729 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.045337871 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.01990013 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.028546262 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.026247575 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.023598759 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.022511129 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019836726 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.028977633 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.101703783 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.123588095 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026881594 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.040812001 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.034476125 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.032466046 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.070470379 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.029010722 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.162234379 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.020208014 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.030759475 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.043674947 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.020396221 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.025683698 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.026277971 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.038859582 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.0242113 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.02216072 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.029815861 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020990606 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.021007118 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020696146 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.02098171 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.029678896 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.022292266 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.020270678 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.02028972 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036865747 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.025678716 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025891212 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.032062023 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.041013681 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.64546381 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.023395722 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022299146 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.033266266 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025876856 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020482305 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.022281223 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.019977664 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.021808003 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020182167 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019562883 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.048393062 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.024254412 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020765547 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.04029042 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.025771528 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.02983092 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.117436823 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036245274 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.024020379 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019139364 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.260835037 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.093201326 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.040484749 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.038908087 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020144948 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030383055 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020029873 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.02037048 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019179694 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046573748 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.024212417 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020076976 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019162501 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019419543 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.067653919 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028108881 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019462034 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028119468 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.019740383 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.019763899 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046360176 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020301803 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.01967883 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.036896099 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.031360016 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.102280084 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.03096172 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.02282444 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.076346807 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.01916655 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.019739478 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.019985128 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.11675419 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.032929599 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.021165985 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.01972484 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.027213793 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.028934442 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.073353885 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.0259959 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.022516799 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.027514984 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.01911474 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020012714 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.045692777 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.047578197 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.020991201 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.023541102 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.019824971 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020249629 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.096148368 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027661175 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025037231 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.106970194 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.021966132 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.028250062 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019402766 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.489076037 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.025105675 seconds)
  done (took 22.5298953 seconds)
done (took 23.343608163 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16414523 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.03436989 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.04012607 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028441869 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.0319583 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.032648031 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.042120013 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029475526 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032507624 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.039602786 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146633066 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.019919594 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027472261 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.035053924 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028311982 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.036099809 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.032346548 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.035286612 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020422622 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.035579387 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.031107534 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0310409 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028819743 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.035229912 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020540734 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028601122 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.157033496 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.040387802 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.023978609 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029725032 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027927473 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.042178081 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027924551 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027414124 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029501812 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025933177 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.03021428 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026486093 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.156128381 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025760005 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020485884 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.033069541 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.02728912 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027793024 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028618548 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.031351482 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025424384 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.033918692 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.020053839 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039654771 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.156537398 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.029163805 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.023923756 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028382442 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.02538347 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.02939367 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.02374375 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.0319055 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025289037 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.039107643 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028500246 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027747527 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019782676 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028442641 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.02731024 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027643733 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.019087228 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028911157 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019930749 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019825023 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.019423997 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028516403 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.027016385 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.025028305 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.019565079 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019842371 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.01956703 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.039164071 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.02713554 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028705915 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.020390961 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025501056 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024988426 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020426045 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.02895655 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031262145 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.02882565 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0203229 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.019508564 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.039345958 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026541196 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019867386 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031286694 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.029002593 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028706912 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019970172 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.019598652 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028616893 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027782008 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019975874 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.019200232 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028829501 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.02515832 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028658866 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.020267389 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028757872 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028675974 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.019254776 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028583872 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.027241108 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028883461 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030791514 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028571342 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.031268783 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020428904 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.019113356 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029766297 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.020254226 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.029047496 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027937622 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025347786 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027748068 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020375289 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.0195561 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028875443 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025858922 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.020282766 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020318769 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.020210443 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028688249 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.0273127 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.019142935 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.01982413 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028744124 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028545798 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.019641335 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.019462869 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028630065 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020385664 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025938723 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.02540733 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028635723 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.020006265 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.020220552 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.019383508 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.019906376 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028784363 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025344785 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028958275 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020467608 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028658058 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.027212118 seconds)
done (took 5.663798455 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07746658 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.064415414 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.182602157 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146818838 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033592791 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.034317881 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.025279035 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.040983125 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.027253219 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.046032454 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045701293 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.043266944 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.170011874 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.041268969 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020404386 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.032504661 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020885699 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.048663441 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.151556047 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.045390636 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.064460873 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.019174819 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.037387186 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.039487948 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.033714923 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.03979265 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.045073158 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021486844 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.038712641 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.038534947 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.047696686 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.023061067 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020858264 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.041010674 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.037375787 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.029927885 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020216696 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.027669526 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.032777448 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020278506 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065712437 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.039666033 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027587629 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.028010066 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021279496 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.036119188 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.02117849 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.02909469 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.035455857 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.027373533 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.033734714 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.038474415 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022630921 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.039166163 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019373133 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.028514032 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.028180349 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020145773 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.021173088 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020313342 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020216915 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023233176 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.033820446 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.040728896 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024603155 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.028479444 seconds)
  done (took 3.615350294 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.047729666 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.066963989 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.034751387 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.035137627 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.01984337 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.02040849 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020314705 seconds)
  done (took 1.149499217 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093460565 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141892203 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.149807104 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151522882 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.161711807 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.148600631 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.033323529 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.050948051 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.056013225 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.164401188 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.160513943 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154788076 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024781382 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.033375681 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.053596485 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.15810253 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033958687 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.028390111 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.149687646 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.156225076 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026079162 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.052841736 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033993622 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.023979463 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.156154538 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.146423849 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024842792 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063328585 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023408076 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021277821 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0212431 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.044277584 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146228137 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.037075462 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021763032 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.020271288 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.143326516 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021770754 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.146416836 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028652655 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.145877418 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.02384779 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023961965 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021681123 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022659203 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.148745882 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022692951 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.021286517 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020879759 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147770235 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.03246384 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.146015831 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022955265 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.026550223 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028446942 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.028196559 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028420449 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021768722 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149154904 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031777026 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023203253 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.157412764 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.156757723 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.146302262 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.157095366 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.030889633 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150412617 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.149085445 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.02172913 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.029656128 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.02233103 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.161623002 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025692975 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.024089266 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.020125296 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.029008504 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.166565877 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.166633292 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.166316178 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.036342988 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023392845 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.022333746 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.164358799 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168237355 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027861033 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022101805 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.022287101 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.038357177 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.047512568 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.024365129 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026813701 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.022054281 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.032683327 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.024354516 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023879893 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.299256778 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.020229634 seconds)
  done (took 8.158265019 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0357547 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021624712 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021145097 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021520117 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021717438 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.02158391 seconds)
  done (took 1.071469796 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.049193863 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.022110181 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.034639315 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.02184773 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.044722752 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.139859064 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.140036027 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023132263 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.038761864 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.034093473 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.14002547 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143385832 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.144073809 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.02348587 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.141852385 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.034215242 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142323864 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.02716824 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.033572986 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023530735 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.033143772 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.023071357 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023277639 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.156850018 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.017325213 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.033923976 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.032121316 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.033794965 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.033245401 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.023148249 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.023124642 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.017009827 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.02826449 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.023011575 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143570984 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.028668377 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022486585 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.018157625 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.026710451 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.016994046 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.146525306 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023852656 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.027304881 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.018234531 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.023134263 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028352985 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.018280977 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.032606709 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144132195 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.018413857 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.018164016 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022801605 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.017060199 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.018010215 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028392261 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023160683 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.01801369 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144665413 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.023405654 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028605586 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022520186 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.017104067 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0231165 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.016999138 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.027446202 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.018120537 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028366155 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023417678 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023381679 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.022299633 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.018145012 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.022301549 seconds)
  done (took 4.158965582 seconds)
done (took 19.060022501 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.526813879 seconds)
  done (took 1.435196002 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.025332878 seconds)
  done (took 1.968635539 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.051155874 seconds)
  done (took 0.988526523 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.311140947 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.545101012 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.74047802 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.093286556 seconds)
  done (took 2.611823227 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.865082811 seconds)
  done (took 1.814505481 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217190499 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.17907975 seconds)
  done (took 1.367273053 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.487437912 seconds)
  done (took 1.42149532 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.338987621 seconds)
  done (took 2.280562633 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.202916017 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.134893523 seconds)
  done (took 1.281043838 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.611981317 seconds)
  done (took 1.550154747 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.45704572 seconds)
  done (took 5.397693961 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.189786565 seconds)
  done (took 1.181847463 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.192623844 seconds)
  done (took 1.135134668 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.70136491 seconds)
  done (took 1.641830933 seconds)
done (took 27.027989062 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.044123315 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.037463754 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.037363511 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034742411 seconds)
  done (took 1.083399891 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031298583 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.025326513 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027692406 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027988909 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.025261629 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.027035035 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.027779068 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.024040676 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.025197239 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024433053 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.023004966 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024408301 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.027013817 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.024184587 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026716633 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.028083416 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024495992 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.02507417 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.026437013 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.024116917 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.027027624 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024435646 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024479636 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025872981 seconds)
  done (took 1.564735262 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034562214 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.026014033 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027723196 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.02482301 seconds)
  done (took 1.057604617 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.033539866 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.031222107 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.039830789 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.044363896 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.030804289 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.031435535 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.037915272 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.03825382 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.045202256 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.041242313 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.022026892 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021712943 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020830732 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.039919739 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.037621478 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.016196504 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017741406 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.031756299 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.030672348 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.033595436 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023979157 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019616645 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.031089485 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.031451612 seconds)
  done (took 1.692992102 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.038241565 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019827288 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.036270852 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.04499978 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.04522091 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019477843 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.033499531 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045746367 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.08357502 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019664275 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025685525 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019644177 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.058501358 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019622761 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034733204 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.065241063 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.068227471 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023810225 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.050800895 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019680704 seconds)
  done (took 1.721266818 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028966528 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.024535371 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025218231 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019393555 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.030752872 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.02681936 seconds)
  done (took 1.107011777 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024376912 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021495882 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021341301 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025609928 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021197413 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021220709 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021151508 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.020004995 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019941999 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020759981 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020715626 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.021118101 seconds)
  done (took 1.20491591 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.16600341 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026654783 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.024579588 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019959164 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021660985 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020828111 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.03591877 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022578997 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.039170526 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020724135 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.021049191 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.023265785 seconds)
  done (took 1.388698955 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.06110977 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066021841 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101422388 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076501172 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081003981 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051230867 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.204482862 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033932855 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.123530224 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.094449886 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080751584 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046993629 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040966857 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.02400831 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.057338942 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075096803 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093521322 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027428266 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077973946 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.249273104 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091611681 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.09505215 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107685501 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082098823 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.048900795 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107856787 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051614539 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.059819055 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080529078 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084744952 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076923091 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.05845964 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025681963 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.0253628 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118596596 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.065434333 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078403438 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.049345673 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061698072 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.044391378 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083719422 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024319876 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.037671179 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.070093052 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.043817548 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095956692 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.049466136 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075786615 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037405892 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101654117 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091266929 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.185834833 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043729417 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06458387 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106214604 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.214298456 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089161206 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.061934773 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036486836 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.074768381 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.061172545 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055179065 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061459593 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03461282 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135213261 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043449951 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.079492615 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070044723 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.050099428 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049348243 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.065359282 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092026802 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081386237 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.083498149 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096121394 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.047759791 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088857057 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.0568477 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.08188107 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060401521 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.027101021 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.081547549 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086020348 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.056083612 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.056693305 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093872589 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048428988 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030804636 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.057404704 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.076769679 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034946397 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.071402812 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036186192 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.087535387 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097698497 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054956905 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074788352 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.076138197 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033319422 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13053075 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.06594346 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028216121 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075386762 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073623441 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118219734 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056813707 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.030711857 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059659512 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065199899 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.117831599 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071919798 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.037807316 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.224965322 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095638081 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049053731 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.252659786 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050265024 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096592531 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067651734 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040418789 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.02931483 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.048174418 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067848554 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06181565 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075489434 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048590996 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.03812092 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040339735 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071626799 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.047387846 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034901338 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072202885 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.057342704 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.028890027 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04272216 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.03107658 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110614669 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.033587386 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095918497 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092462166 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.030277111 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062974284 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.052090657 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061940315 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.057680646 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07611733 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099513092 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.143234067 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.046473149 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.050865188 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064930896 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104323516 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084938478 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047173961 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.040616826 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05638542 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067628436 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.056807727 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083476168 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.050162859 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071192598 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060439959 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102565457 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110887922 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061485134 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.063898674 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068845926 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.085254034 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.03070406 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125964991 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065638991 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084894419 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.044416825 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.260484023 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.070654038 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060468944 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040553872 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058136571 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.058315313 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060670294 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098990234 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.049673716 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026170237 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047070746 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102130873 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031319806 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072902503 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.044494619 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.047268059 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072574146 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.048043558 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036443469 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.02264845 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081546927 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113038744 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.024240553 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.071105337 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.062281291 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.057763456 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.078345995 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.023969654 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084324509 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.096216872 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083154787 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10433393 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152425794 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07806705 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075827672 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.081608937 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070492417 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.034164818 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.084389369 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094255736 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052930728 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048421995 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09490992 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075623889 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.098283467 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.081349144 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085496993 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.067589718 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.067637773 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065088537 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.066201701 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110124952 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082828543 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.087875493 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.040806321 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076434529 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.227279555 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090366706 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.035337194 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096127647 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.038932598 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095953644 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.032146135 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084742491 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030385176 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.124886955 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033594331 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053968365 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.023639195 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.027938632 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.097825748 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.079439707 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.060751526 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054485897 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.093263872 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092149659 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.031817421 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066403268 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068658693 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.05948611 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072639767 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.064101037 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.045078383 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052014096 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.064213201 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.040587972 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.037073597 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084264836 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051852638 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093106709 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.038136787 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029307821 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098640243 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068934247 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05202609 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.03114802 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064498208 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.081988885 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047762156 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041300852 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076704982 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061359065 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102151766 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.045821931 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.058360375 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084299976 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03681468 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.052824405 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.024445219 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.045153202 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031413278 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090329849 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031310555 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.079020058 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.023949073 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09316272 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047130685 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.055114089 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.064964183 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072465496 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100661939 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.052074979 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109221818 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049997415 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.228793975 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062249218 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068113947 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.040613233 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05718417 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.058425282 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076554621 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.049948188 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07623073 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097325706 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056769538 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.09777877 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04457461 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077111112 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060769761 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.078670549 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.065923345 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147671382 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095443196 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067504666 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.064986916 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029938081 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.050967859 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069735364 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069896518 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137550619 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084279289 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.027011631 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.062123565 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.049203641 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066853379 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066672792 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037496338 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104527258 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059413225 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.042339938 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069423985 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.048170526 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.060539238 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031187061 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058329163 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.058172526 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.051581706 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.053634389 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071823965 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.088284144 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07077667 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.104507379 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.058033262 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.047809473 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.07967119 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079122415 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076607812 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042197671 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043161093 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108510732 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082862976 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.087948814 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.057166028 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.21879639 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.065738885 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054228256 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085300306 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061404437 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.081349288 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034022771 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.030747696 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022605421 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.025990651 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078429978 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066868009 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06397073 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058627725 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026135126 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.060453768 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061465971 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026094075 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039663687 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048408467 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.052810068 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.046212902 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060328384 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.071925591 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.050432551 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057664424 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059757962 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105132782 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.053832448 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044400425 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104897725 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111625579 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044335122 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049772404 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025883683 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.03381396 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081533994 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105625913 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116490378 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.034000952 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.04133322 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.041811414 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043053159 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025862735 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.047687485 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.045699228 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061793735 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053926826 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.071671653 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061146922 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030548246 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.065434425 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056245672 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048621038 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.064310871 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079176551 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.085815923 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.104339728 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07255593 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076710772 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032396533 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.038054394 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.031926981 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.035302192 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.066523282 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.035073528 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032430639 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115100425 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.049517022 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.218940062 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068532355 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.042011607 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029625413 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089794941 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023635362 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090288158 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025088153 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036078759 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.035777485 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032573352 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047850155 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092106287 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063116239 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065708154 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060971098 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065346647 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141455487 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11414355 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035255947 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.09710288 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029773216 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.030526452 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030239343 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065546309 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044487175 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073114814 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102587389 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044140278 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058065599 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033599827 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104675256 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.05842267 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060975799 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041138908 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.034287969 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104040954 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034478434 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.042694798 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.045085044 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.066910172 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.026798767 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058037409 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038203903 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03435148 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148615126 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.667920557 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052430996 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.030751864 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.052145252 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.101224851 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097765018 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053204992 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065950084 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.077601987 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.061778854 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.05053608 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075099154 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.156491494 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029094962 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054700821 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.063046808 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.062206741 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070285691 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.058477117 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.049794779 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.056454604 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.190431214 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034025815 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069628676 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040600367 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.051001763 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.059983084 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.03724318 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.041347382 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085474362 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.056539112 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.036856663 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042162393 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.05830494 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039869118 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059504999 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.02353682 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.065222783 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043123632 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073218637 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.050006549 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.06525876 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.08049021 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047884204 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091547655 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.061293608 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077562114 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.040927194 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032504446 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081210984 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.045167025 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032198647 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10544126 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.054036025 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.059919182 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066233535 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.050830655 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070207685 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.074954401 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069131101 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05848516 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033354401 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057939314 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.068855285 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042705997 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034979109 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.029561871 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.030055898 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064790201 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042656012 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041260582 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074108141 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.044751902 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.059326105 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.056517692 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.330589416 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044625079 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.063999051 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.070115663 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050560318 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097311107 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059416559 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091245983 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143638393 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098667484 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093441853 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.240813131 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.032099394 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.033854852 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023211773 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.06875434 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033668031 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.042926968 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.03295617 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088948635 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.038054582 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064803771 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.212844115 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.034301213 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.048123139 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050347659 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.023982611 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037370543 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061302939 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040341276 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033986138 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070532551 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.035628126 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083057755 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064594339 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052635528 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.049111718 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034966326 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067304791 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.05890684 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.085586701 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.053305701 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.029612607 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.078809539 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.062112376 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101474661 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.02923872 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036209943 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088403493 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060006381 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090780685 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036316637 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119020239 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.102209841 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.060673988 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094823728 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025856083 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044397096 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045800322 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.080187301 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040654929 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068522088 seconds)
  done (took 42.488713842 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.100599901 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.129269056 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077913833 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.089488684 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.245298024 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.253775794 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.111437522 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.078484089 seconds)
  done (took 2.16797677 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024865244 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.054119465 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035554478 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.298749782 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.054813347 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021113848 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.028514321 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036268544 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.021052156 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020497062 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.055870445 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.020755861 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.02119424 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.471080365 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020202261 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025662255 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.021320735 seconds)
  done (took 2.303590285 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.308860781 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.598317011 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.348330966 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.384744071 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.104283974 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560534698 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.028931361 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.034199282 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.631494567 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.16295475 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.097397008 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.174392887 seconds)
  done (took 17.495461534 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031289894 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.159825127 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158621109 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.027996574 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027523626 seconds)
  done (took 1.462499837 seconds)
done (took 77.751888593 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040881957 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.124018535 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.020908491 seconds)
  done (took 1.23371833 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.162621533 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.157545885 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.158857897 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.16110404 seconds)
  done (took 1.696581121 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030774391 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030062905 seconds)
  done (took 1.124889008 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.195991533 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.262371882 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.044364372 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040542317 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034835336 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035075698 seconds)
  done (took 1.177732804 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027327386 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.025036747 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.025082554 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.02554923 seconds)
  done (took 1.159977984 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.14059485 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019866592 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022398094 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.024000965 seconds)
  done (took 1.264269068 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.041223393 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.040241228 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.070460238 seconds)
  done (took 1.213427345 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.040166683 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038895145 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033554426 seconds)
  done (took 1.175749225 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.064437578 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.050086111 seconds)
  done (took 1.175109284 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.036466729 seconds)
  done (took 1.099173198 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.049244895 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.052315801 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.224871874 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.190574153 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233797393 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.213177144 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.03458527 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031602514 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.026829715 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.036225464 seconds)
  done (took 2.150967197 seconds)
done (took 16.075144574 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036534459 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.145881911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.270327635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040329726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.78033267 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.266307707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.678166755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.042916684 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.05343815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.02189677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038689961 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.758242069 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.682282075 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.098173945 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.668264469 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.088457275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.515265352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022015411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021145234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021720316 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.661004353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021329342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021580751 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022004757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.513381742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.286948384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022544035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.0880722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021460867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025344608 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.269001624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022549736 seconds)
  done (took 12.277990722 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026319863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076325535 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026648846 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.037573854 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023733734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023688458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.025644953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022273905 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.064838046 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022032471 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039105422 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021505803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026188352 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023017825 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042178738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021883361 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023864717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022320636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021764876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022203141 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040830938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021568879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022234753 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022279439 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022149396 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.036800691 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023038612 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021771577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022001339 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025881932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027024387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023157611 seconds)
  done (took 1.995749724 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078553069 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.077959342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027303428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.061714711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073350799 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024384725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104455708 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044111869 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.067248451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022444105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039451535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.022117303 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.058012625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023464311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042445991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022243089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024382376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022529776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021866812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022255253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040896459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021932154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022332165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022643926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022546739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038609262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023107841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022062083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021996446 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026023514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027788056 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023129504 seconds)
  done (took 2.26701478 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.026090568 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.02643054 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.031936472 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035343597 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020583407 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.023115986 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024247944 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020563762 seconds)
  done (took 1.283292625 seconds)
done (took 18.902727536 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035974083 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022423714 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.0252508 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046407767 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028568902 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.14803099 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.024906968 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027372722 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.026038708 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025270908 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027421625 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019786979 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024437628 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024652218 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026445517 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020366802 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.151930876 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024955258 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.149728721 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.15081985 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.023101533 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026091882 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.02892384 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.14993882 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.149996089 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.15035579 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029826857 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026466563 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026038861 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023423763 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.148549479 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.15140365 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023585553 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.147115974 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.021002279 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.02073508 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.025140769 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022278014 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.154556224 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.030099767 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.023090901 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029737816 seconds)
  done (took 3.519256246 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.154470772 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.159094882 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.15236829 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033094582 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.029307515 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032386756 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.158506566 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029653394 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028384136 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.15755628 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.024076154 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028120388 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030482281 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021088964 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027839699 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024472036 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029931773 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022251692 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027834329 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028149319 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.158359096 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021624182 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.028994012 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.02934323 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.023970032 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.029933417 seconds)
  done (took 2.583694521 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.031028379 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.04372887 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.046128691 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109439638 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.063069087 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.043553286 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.03716079 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047679484 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053416376 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021365919 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.043842071 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.05068077 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049960924 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028421052 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060339726 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040478443 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034413252 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022893486 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027945874 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.05626616 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044824544 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040813964 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054344314 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041248975 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020436333 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030329256 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025853899 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037906973 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.033073472 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033914272 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.02521474 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025037263 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022236513 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032430945 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025128815 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019901472 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044845588 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034603824 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036268753 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060510195 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031765933 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022709161 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048179087 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.081194938 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020303352 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024423485 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.02572915 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034296479 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022903749 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.063842244 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036780304 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020956492 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040885738 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022947008 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022974167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.042530365 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.02317242 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023608384 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.042025755 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027864859 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043401796 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.027109789 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.04177404 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020541885 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.033096911 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022801312 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.023140246 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020204044 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.055691624 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028784697 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.068681778 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022657688 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019989196 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.034021322 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.033206389 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028901451 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020263766 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.04012413 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.034286802 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025440571 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.03995759 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024358411 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024881671 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.065483862 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020815524 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019891426 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019790853 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.02412264 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024832538 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.02214165 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.034236401 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020953288 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.02500422 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.04852034 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.02120107 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022137997 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.024331457 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.023075007 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020850427 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.031373283 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.025040996 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023303132 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034330217 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022180902 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.025019876 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.036656105 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.03108228 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020214796 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022993524 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.024226886 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023209003 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.023129712 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.024921933 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023267162 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026946132 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.02907123 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027434399 seconds)
  done (took 5.015970899 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.247071458 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.235903068 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022538179 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.233912261 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030354738 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.164446133 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.238672662 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.236491774 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022287768 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023203358 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021366748 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178918592 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.174548058 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186583187 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.165698651 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024450916 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.055525973 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.185688963 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.241872791 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.237266874 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.054475838 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029542266 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024462792 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023479087 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022926478 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030868295 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038529431 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030977603 seconds)
  done (took 4.286046212 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.031205939 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.066673765 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025763079 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046823086 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.03932345 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022601649 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023862385 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022700364 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.038972785 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.027890942 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022373986 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.026171291 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.02565566 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024281934 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022207076 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028282142 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028721908 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.020915714 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025551805 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026707211 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.033289832 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.046487968 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.026080633 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021848099 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025440107 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021824554 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.027318939 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030720501 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021689211 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021659888 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019216382 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030696784 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.037140239 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023208171 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021644197 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022647952 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022293087 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022304665 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022198657 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020398396 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.02041531 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027209708 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.02078229 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.027039797 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035398644 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.02435182 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023822199 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024594349 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024614469 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019157681 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025095905 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025297047 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024568994 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030464549 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024319614 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024719941 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023601076 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.036784978 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.028208907 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021670978 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021473358 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020677973 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024257575 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.029165411 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038435307 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.024330939 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020662802 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022527559 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.02385577 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035613926 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021642065 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028780477 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019332977 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.02256848 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024749448 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.02517071 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.02365258 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020667282 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021852886 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021642422 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.02237768 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.022119321 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021586021 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024936258 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020364175 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020736119 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022883331 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.024156595 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027865992 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021204806 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025860567 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023726904 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021001112 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024808704 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027707731 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025136953 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.0403324 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.030390837 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023009028 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.02016672 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.039376252 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.024966156 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021660734 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024297025 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.031050572 seconds)
  done (took 3.870370015 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.053124587 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.02445147 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.042043379 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.058007141 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.032530418 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028047945 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035986579 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023517584 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.043881839 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.0213477 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031487364 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020612421 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035295649 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.031196767 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024280471 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032243902 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.025148006 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.042982233 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.03734287 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020990173 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030956971 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034848276 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034860529 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.03996656 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.03921552 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040557339 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034527965 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025047559 seconds)
  done (took 2.051714064 seconds)
done (took 22.39722986 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.140308376 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.306465327 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.106662086 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.806236762 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.167606452 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.118348646 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.3061151 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.084861488 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.18394233 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189749925 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.921944178 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.776726423 seconds)
done (took 60.291053981 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.24201324 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.248892427 seconds)
    (2/2) benchmarking "String"...
    done (took 1.347279396 seconds)
  done (took 3.701785284 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.535862156 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.097894775 seconds)
    (3/3) benchmarking "different"...
    done (took 1.131854753 seconds)
  done (took 4.847724655 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.438011707 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.757700644 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.36004287 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.08789916 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.10239893 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.469323044 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.463319213 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.923781019 seconds)
  done (took 27.256688888 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.181129506 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.361637007 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.478214968 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.601212904 seconds)
  done (took 17.821190898 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.544668873 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.606203012 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.606668914 seconds)
    (4/4) benchmarking "different"...
    done (took 1.847429387 seconds)
  done (took 7.815959837 seconds)
done (took 71.235063981 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.087345533 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.248427581 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.118755632 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.282576545 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.180630576 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.18087205 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.098227658 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.109528521 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.097212473 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.098646152 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.032309071 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.097863991 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.102452043 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.174741481 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.100719205 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.102422606 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.237506772 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.103686652 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.114877361 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.739800685 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.418720702 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.095455094 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.103542923 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.171485668 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.31215787 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.133800788 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.391973179 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.109415563 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.69848764 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.095006592 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.103544232 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.097196655 seconds)
  done (took 181.122828849 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.086375224 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.937878926 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.912346856 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.105836958 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.425457438 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.458927015 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.89570497 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.443814234 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.096421394 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.094349472 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.076670599 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.089463095 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.104707526 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.624872628 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.132388951 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.109354371 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.962640242 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.927509801 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.143234027 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.987944527 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.092576636 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.591474967 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.527616701 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.891574455 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.108388652 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.105377816 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.104502462 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.1413062 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.564877507 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.94543447 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.096433272 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.127282894 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.279805484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.335445057 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.094605202 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.097974039 seconds)
  done (took 151.814117124 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.332799895 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.095261433 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.131519709 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.205816592 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.899038758 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.7681189 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.096950154 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.086024221 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.086507826 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.09302289 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.088109374 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.152514725 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.096810573 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.433032215 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.126574176 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.087802179 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.087150385 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.423135165 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.107600934 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.086322481 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.086027961 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.18500047 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.438023256 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.199233902 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.096486126 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.094811946 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.196072107 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.103728397 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.087904992 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.086356455 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.195797542 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.096580148 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.212785289 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.205903192 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.102602858 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.141936745 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.103829125 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.183006522 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.099147819 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.086165565 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.087921296 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.132572829 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.096759847 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.936781744 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.19575228 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.10036177 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.105309038 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.681772999 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.682577896 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.099476468 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.086709554 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.085939444 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.089863209 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.087902278 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.400016019 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.101148671 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.120038218 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.171468177 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.103778076 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.086543569 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.086540804 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.08673171 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.086839863 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.092986364 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.12222003 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.655726622 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.324828831 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.449612081 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.750154951 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.097226111 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.086252 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.086514838 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.537710028 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.158315176 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.088374185 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.086193225 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.253514886 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.097020338 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.086660019 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 2.943307243 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 2.945879052 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.097642497 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.196403012 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.097182379 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.086810168 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.49756193 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.444769335 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.106750359 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.105735748 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.141714006 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.089885151 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.086058981 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.093317776 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 2.944613851 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.09884872 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.099283981 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.277591487 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.097960113 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.086020927 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.552822144 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.438610071 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.096864786 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.168956544 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.475205133 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.886933824 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.097439821 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.085930819 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.105203194 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.087528061 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.098305515 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.09809296 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.087772754 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.086734361 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.091154935 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.086269855 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.086133634 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.086512668 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.105315777 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.087939853 seconds)
  done (took 323.401391064 seconds)
done (took 658.912946334 seconds)
(4/20) benchmarking "parallel"...
done (took 1.098379287 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.343990414 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.107912464 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.25292272 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.339182081 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.297936554 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.273589798 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.301683799 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.389253347 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.325643451 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.264756688 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.325262986 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.273736732 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.381860176 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.353238204 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.386246539 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.356264174 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.296140545 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.795022021 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.313934624 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.27398211 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.298839249 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.258765672 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.256568846 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.325801596 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.389270514 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.271708527 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.499402245 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.332876933 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.305088907 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.343201287 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.364318836 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.382885881 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.312135684 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.378670095 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.34121405 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.393736399 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.258106516 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.358774313 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.282008613 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.307912245 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.319654998 seconds)
  done (took 62.717254211 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.565938064 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.282862387 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.405427181 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.433773159 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.822267934 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.391157171 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.49545591 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.277659138 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.29239848 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.398827722 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.413367634 seconds)
  done (took 17.891633517 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.348851252 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.286336497 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.403366514 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.423359374 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.566036595 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.396168847 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.45381093 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.280908241 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.295434918 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.402295254 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.429013462 seconds)
  done (took 17.393493835 seconds)
done (took 99.101103478 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.684982165 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.168728337 seconds)
  done (took 3.936418786 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.119498325 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.10977175 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.099120321 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.10390192 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.10293747 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.099122517 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.151061983 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.111821028 seconds)
  done (took 9.979978364 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.099826849 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.099663743 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.099136948 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.098639443 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.099363127 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.099185248 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.099631566 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.098780233 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.0997441 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.099441476 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.099970167 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.099047345 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.100219289 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.100364454 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.099253149 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.099488174 seconds)
  done (took 18.677422098 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.099141166 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.10034349 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.099742792 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.099509872 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.099182454 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.099385609 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.099320901 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.108147984 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.09948095 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.09984491 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.09895068 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.098861791 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.099142675 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.098820912 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.100611777 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.099130719 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.101221163 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.09957214 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.099884947 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.099543918 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.099272752 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.09949398 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.099943953 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.101941778 seconds)
  done (took 27.484084887 seconds)
done (took 61.202431921 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.920327452 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.266066627 seconds)
  done (took 7.269035732 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.103888805 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.099262392 seconds)
  done (took 3.40769079 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.099391947 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.099313792 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.0992246 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.099299616 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.099830489 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.099555376 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.099592479 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.098890415 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.09905275 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.099276321 seconds)
  done (took 12.07661244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.098468081 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.099152501 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.099718411 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.098711388 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.099525086 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.099533181 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.099465374 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.099751871 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.099550978 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.099466809 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.099599483 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.3058774 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.100114283 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.32649513 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.099255512 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.099613504 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.099443446 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.099624666 seconds)
  done (took 21.307319409 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.099556012 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.099794687 seconds)
  done (took 3.282662937 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.09954222 seconds)
    (2/7) benchmarking "second"...
    done (took 1.099904964 seconds)
    (3/7) benchmarking "month"...
    done (took 1.099469256 seconds)
    (4/7) benchmarking "year"...
    done (took 1.099550497 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.099811617 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.099436614 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.099371286 seconds)
  done (took 8.780164949 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.550506201 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.264559905 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.311759911 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.556286891 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.736071851 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.031692589 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.734330757 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.033158569 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.920328 seconds)
  done (took 16.222021275 seconds)
done (took 73.444669923 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.854731662 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.088646913 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.74563644 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.210182928 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.102572571 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.452467865 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.084958187 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.682613067 seconds)
done (took 37.350328155 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.340641362 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.087051208 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.136780355 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.137280695 seconds)
  done (took 19.444128299 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.086246021 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.649919908 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.127547727 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.145289625 seconds)
  done (took 19.195982592 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.613630949 seconds)
    (2/2) benchmarking "read"...
    done (took 1.526382337 seconds)
  done (took 4.243070075 seconds)
done (took 50.325686831 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.099234024 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.099989142 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.099628179 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.099773425 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.099529993 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.099444645 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.100193009 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.099864306 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.099901978 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.099937935 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.09953759 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.099503391 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.09944259 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.099793948 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.099734689 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.099924404 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.100056833 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.099089972 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.098673706 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.098873169 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.099491264 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.099539631 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.099455652 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.099331954 seconds)
  done (took 27.473806933 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.174519373 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.164900914 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.177129565 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.176838844 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.197257053 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.177001491 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.171528043 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.142075471 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.180011502 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.148316962 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.136041317 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.191856414 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.138223634 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.195694484 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141333009 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.195522996 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.17584197 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141544539 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141150195 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.196692598 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.171454654 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14171608 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.19143849 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.133174981 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.188780609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.136218102 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.14793279 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.165305808 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139523411 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.188655983 seconds)
  done (took 36.052383824 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.133747045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.099459027 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.099247885 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.18939344 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.099075666 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.099224099 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.099938784 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.098933872 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.098700747 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.099384353 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.099316863 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.099154433 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.099134624 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.099327514 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.099276718 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.099304403 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.135894138 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.274574782 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.09937059 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.0989149 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.144337705 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.099266699 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.098875334 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.099085031 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.09969845 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.099546445 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.099439599 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.099880895 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.099347531 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.09937321 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.099310967 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.15171773 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.133091111 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.098998222 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.224380905 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.159168923 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.099385947 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.133273379 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.099749078 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.099201339 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.099159578 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.099290857 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.100015543 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.099497464 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.158803649 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.098916561 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.099616844 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.099587089 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.09902984 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.099321558 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.09951144 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.099271198 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.114425945 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.099072401 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.099257825 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.099360063 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.099422514 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.100296165 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.099086091 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.099804632 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.099944344 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.172112542 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.099776494 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.099855407 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.475717672 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.098993095 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.162035156 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.099444225 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.099472572 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.322497622 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.099484109 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.304037253 seconds)
  done (took 81.940020221 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.100020648 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.099657827 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.180363239 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.183459105 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.099633445 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.100290202 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.099577413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100260133 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769417251 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.099656269 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.099946884 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.100116754 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762742089 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.100516155 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.100295645 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.18299968 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.099954182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.099698012 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.100478883 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.100160686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.100345937 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.099892656 seconds)
  done (took 26.863375735 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.136860144 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.115752334 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.136244676 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.115078896 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.115175398 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.115597471 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.136550902 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.115358289 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.136538718 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143966394 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.135850953 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.136698771 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.11491493 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139901053 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141780041 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.17458642 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.136515355 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.174476918 seconds)
  done (took 21.506180266 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.275885087 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.265663966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.180217984 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.142918194 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.360991149 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.334637297 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203859371 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.275426159 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.144502605 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.265021869 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.27494674 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.142113985 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.335050643 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142516838 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.143416162 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.361044515 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.17962643 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141435181 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211999707 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204465893 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.278125929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212109315 seconds)
  done (took 28.159973514 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.13651427 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.145714518 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.17786561 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.173678371 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.100230222 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.100132532 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.159237814 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.136601202 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.115273289 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.142819768 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.139800359 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.100320497 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.18921272 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.15300603 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.188922319 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.140059149 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.151324572 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.152466966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.138580675 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.099946391 seconds)
  done (took 23.926184566 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.101471052 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.101881769 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.102123708 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.102184324 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.10154362 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.102066886 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.102630455 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.102450032 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.102025709 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392539174 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.102666709 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.101657516 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.101767314 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.103038667 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.102055152 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.102292073 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.101414045 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.102152879 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.102208395 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.102206049 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.392182658 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.101457554 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.101642267 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.102208302 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.102330078 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.102062167 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.102094647 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.101381777 seconds)
  done (took 32.522002322 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162904946 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.100955421 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.10074141 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.100181583 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.100351775 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.167611839 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.099599396 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.100258944 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.10073616 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.100363353 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.10010849 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.100242822 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.100633787 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.160581492 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.100307935 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.100387096 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.236152981 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.100733438 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168259327 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.08817566 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.101195001 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.240601401 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.101054943 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.100474672 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.088654006 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.100592305 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.099988932 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.100425149 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.10089322 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.100715914 seconds)
  done (took 52.608788495 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.121875727 seconds)
    (2/2) benchmarking "in"...
    done (took 1.121563294 seconds)
  done (took 3.327908485 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.100498163 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202362992 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.10059296 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.299985492 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.267388856 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.275976346 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265814864 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197387959 seconds)
  done (took 10.794555923 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.100561478 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.328877589 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.244005475 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.101313733 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.101528614 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.411963433 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.181605794 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.965158683 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.813246361 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.018404138 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.215202661 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.78974331 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.148649074 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.40128655 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.216104354 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.927468717 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.293826503 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.551535226 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.078461267 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.215013381 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.757588327 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184688757 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.101266386 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.101269922 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.10020772 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.023002097 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.923920035 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.571728305 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.202305239 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.215170932 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.808225643 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.163381162 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.101603422 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.313866347 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208416205 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.101446501 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.218377149 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.199901915 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.101498691 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.100929822 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.826752158 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.647646712 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.334723429 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.290872025 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.18061743 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.100813977 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.100717956 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.100569877 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.34964034 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.741887339 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.151377006 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.051818941 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.236948615 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.101621975 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.602087534 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.233454209 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.101614376 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.020933634 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.542365305 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.27350993 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.480510001 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.25736549 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.081256427 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.219015057 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.101717049 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.310783202 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.994560876 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.859437052 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.804020423 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.205171052 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.443183655 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.257806723 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.101412784 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.101408419 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.028292058 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.415634509 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.107014882 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.100727163 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.100980037 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.101315942 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.313271208 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.209979863 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.930129716 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.23772289 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.296222394 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.578345886 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.218806341 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.102054139 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.716094307 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.950009914 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.143025463 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.711889414 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.295617665 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.23746627 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.041579537 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.36146205 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.144538846 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.102213887 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.935573474 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.553628 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.246538585 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.101373203 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.459726937 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.210356726 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.111065562 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.101430239 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.754030458 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.218075475 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.190160198 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.139115272 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.101820841 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.10112185 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.722553914 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.147247397 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.108216837 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.604725301 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.157083454 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.484229423 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.474733339 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.288711488 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.414325429 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 4.982243536 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.347629654 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.995364565 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.11116892 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.435290208 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.119504815 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.765781805 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.320664713 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.217007936 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.887079041 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.136667839 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.101478173 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.158637442 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.160108641 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.101618417 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.101553119 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.10156535 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.101087469 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.101890068 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.222200895 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.445052179 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.717966419 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.232647877 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.333063453 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.2240222 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.869235506 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.247461479 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.773370229 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.239373992 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.102211313 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.623725925 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.453095852 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.749420697 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.220713388 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.101791761 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.100902764 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.927742505 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.061188312 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.193422008 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.101667856 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.729939252 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.147481591 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.108723433 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.101578956 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.609443787 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239198509 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.102089781 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.17030979 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.826751596 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.753336411 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238342494 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.399075947 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.220476593 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.102578573 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.101518414 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.100838756 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.875706179 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.743299408 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.24098854 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.716226383 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.883864565 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.174480862 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.213478941 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.187354377 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.315862387 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.308647115 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.240310108 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.102068709 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.101443705 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.101753752 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.602870164 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.022888132 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.90506886 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.034567807 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.115956085 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.037208605 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.137680198 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.902387064 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.115617335 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.778988689 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 3.998508674 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.198046154 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.102078646 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.101360141 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.244733469 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.274930054 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241071477 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.557036311 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.247681126 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.101707673 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.717627812 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.220653946 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.721204528 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.201535226 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.920974828 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.156643429 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.219723263 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.202838469 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.637489382 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.199145006 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.10199932 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.687703547 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.215234512 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.101504345 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.109496384 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.607117737 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.02662305 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.819247041 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.555005137 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.185307908 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.694779626 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.340102189 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241498266 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.87535126 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.196350797 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.365957098 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.230918243 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.428882968 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252932787 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.85275287 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.115200092 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.618399024 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.235626244 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.0392063 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.216454427 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.524923711 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.212436485 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.102074814 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.236099818 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.190672228 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.714767875 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.220161433 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.227513859 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.419172404 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.927648889 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.196038983 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.359535989 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.230175209 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.992790835 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.098387865 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.438704699 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.963867118 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.108354072 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.137545786 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.843899258 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.237700181 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.382336268 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.23739948 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.102624929 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.102924901 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.260833904 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.182226322 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.102252092 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.397838868 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.050345082 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.155538286 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.13863082 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.109649827 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.102637775 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.267567874 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.181697787 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.302689262 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.557995968 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.728020789 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.863672319 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.219833152 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.634836185 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.20173013 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.802561978 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.145549216 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.109638461 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.727104042 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.220237556 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.340788393 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.236366729 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.209055267 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.583858311 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.334239879 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.379694212 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.178629384 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.217032813 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.843986525 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.666814679 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.342157684 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.457631593 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.121427077 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.635557839 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.184809025 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.663271089 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.175616318 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.818724008 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.085693086 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.153012215 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.102921107 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.102172879 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.642524145 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.148610705 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.11215848 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.869111165 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.628757318 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.192787067 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.857181569 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.147174502 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.109879271 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.102793248 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.101913099 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.020408082 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.075700449 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.356400957 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.216972585 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.102601161 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.10267794 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.046783222 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.350786517 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.862597949 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.944844199 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.04496331 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.239056579 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.102917419 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.102127264 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.102559931 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.103146049 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.102334412 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.101925119 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.41784954 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.2544746 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.733007589 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.148513021 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.108810765 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.266876466 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.160269821 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.102639265 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.266455183 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.165554181 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.218341564 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.175362001 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.102880027 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.555344885 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.240602978 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.080143287 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.294666822 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.335987508 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.326683804 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.580957632 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.122242554 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.560496338 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.416692143 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.954172483 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.113278189 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.021272579 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.137047409 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.839054316 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.12197171 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.477936415 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.713990789 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.170607366 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.32344992 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.990936909 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.495218921 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.262353804 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.163843384 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.103208257 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.102861433 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.115918481 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.343613319 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.154591453 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.351304277 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.278380913 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.099991168 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.298174143 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.190642791 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.284540809 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.118739441 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.120830978 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.10298635 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.102211555 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.521938906 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.915048176 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.172451902 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.1030957 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.015175209 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.882954888 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.982829484 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.755043887 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.104246594 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238440242 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.10367256 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.311269977 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.159549055 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.715578438 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258664016 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.873498878 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.435709718 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.155908547 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.228152562 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.488963032 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.841470516 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.445434712 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.211045685 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.102926088 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.430050675 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.0778433 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.242789915 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.041867961 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.393846146 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.669055991 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.637834695 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.367794874 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.210746397 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.015685317 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.644470348 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.170221226 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.112424718 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.940594602 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.243268581 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.368441276 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.025627877 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.360832311 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242611683 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.750392651 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.733948766 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.240236937 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.714141687 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.240994591 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.103149682 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.678587021 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.151229014 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.166679651 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.215193838 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.103576003 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.121130494 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.728871155 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.743847965 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.254243534 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.172460382 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.103047564 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.684385763 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.946170937 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.146044358 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.109715516 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.102539813 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.471387652 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.121656553 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.10256343 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.570774719 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.753295078 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.242042347 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.61273966 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.277046779 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.242887224 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.328593173 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.463527564 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.291105695 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.169088392 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.103470637 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.102800322 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.102687007 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.480585117 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.250386746 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.103534444 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.680962011 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.241664 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.889821959 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.057923043 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.29122611 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.166791124 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.552262842 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.240963845 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.617210018 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.063564334 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.135282895 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.387718385 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.234420829 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.164504546 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.797577746 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.199730055 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.103381649 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.006596886 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.369319297 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.402341016 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.439671583 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.350057644 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.182019897 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.723685435 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.206292155 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.702158499 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25533572 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.103978998 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.588395486 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.276542315 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.497874981 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241597851 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.532024947 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.211034484 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.434682342 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.414566677 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.198783948 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.103672468 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.103671099 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.095012265 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.137071761 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.63851374 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.110121124 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.519894783 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.224671345 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.963226211 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.674375188 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.716433709 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.417684243 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.286291086 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.494115716 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.120276481 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.049147457 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.407898691 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.165223438 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.280548506 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.200826808 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.837428336 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.156900942 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.103128787 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.480504425 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.249649515 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.104199125 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.102749272 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.015887623 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.775059648 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.200312275 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.270250896 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.19174883 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.103716908 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.714080353 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.385213364 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.147152248 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.10345318 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.102854769 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.918311784 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.20552187 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.10491203 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.406076038 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.243193507 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.381999123 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.914656459 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.545803498 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.198113363 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.103892313 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.103982284 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.817240521 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.504112084 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270944226 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.455404903 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.213880553 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.622051603 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.159411776 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.539928756 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.664844967 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.03906899 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.217236227 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.103281634 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.133807333 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.838307255 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.188149425 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.867695668 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.463992894 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.186911265 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.839186771 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.049113927 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.158994812 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.187471022 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.154917349 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.103678633 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.103646975 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.103161452 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.596490243 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.167274047 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.113894038 seconds)
  done (took 1420.871501565 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.380321714 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.10291174 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.103388954 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.104103718 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.102948714 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.103397245 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.103758389 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.103214646 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.103211392 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.102804277 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.103698098 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.104865772 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.103695782 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.386976946 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.103085985 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.103337872 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.103775196 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.103164011 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.102978886 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.103671151 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.103115397 seconds)
  done (took 24.820513195 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.103363919 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.103571636 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.103309805 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.103589319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.103390602 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.103381977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.103736197 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.103566888 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.103587906 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.103153055 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.103843792 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.104151038 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.102675203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.102991662 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.103859639 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.103733367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.103868863 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.103777179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.104267061 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.103229948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.103163205 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.103451027 seconds)
  done (took 25.365300324 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.102901016 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.103651503 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.793007388 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.218387436 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.103936075 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.103898716 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.10359577 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.311737141 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.110805897 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.991416032 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.488993508 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.217389259 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.114094039 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.282388994 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.202410575 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.104199622 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.228288446 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.103413158 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.103370144 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.103035646 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.103388027 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.275632206 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.228756955 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.10379591 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.932553706 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.243887866 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.104086967 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.102908468 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.103342194 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.080016042 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.134107265 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.111423187 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.893509259 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.784720594 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.410874354 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.999716216 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.145195592 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.111658051 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.103580397 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.103097204 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.311671657 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.954581066 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.126212886 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.105383956 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.368089467 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.211697234 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.104185933 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.464056287 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.217244708 seconds)
  done (took 87.919242512 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.11095156 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.2389085 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.160236564 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.103561547 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.238341578 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.104425958 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.157680146 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.103568363 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.103260877 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.103420746 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.250792651 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.26251116 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.103412082 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.103416459 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.196445595 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.10288302 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.103421566 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.103068548 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.103114503 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.103543413 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.103596193 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.155013544 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.229183974 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.260004213 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.103885955 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.102779385 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.103433815 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.103577071 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.255050461 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.103265919 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.103471739 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.103714775 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.244347125 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.211219039 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.103248811 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.103702605 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.242342137 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.102913803 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.103358865 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.103135301 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.103897768 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.103183933 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.166731735 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.248966659 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.102917969 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.206600866 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.103611765 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.104213004 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.364530331 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.104468902 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.104261442 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.271364746 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.103950062 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.103258827 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.103933298 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.237052076 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.10331319 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.103265209 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.103664313 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.247425134 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.10323573 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.103801635 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.263357306 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.103454138 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.103676106 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.270804971 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.206578144 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.10369078 seconds)
  done (took 79.239205454 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.103990769 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.239910096 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279592014 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280925799 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241254855 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.238855125 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243613783 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.240507393 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.241067478 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243483782 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240335817 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.194176316 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.210817361 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.196891118 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.243577093 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.229824432 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.233283385 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23042554 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243562959 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243725457 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.233981006 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279936959 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241122425 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280977628 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.491964082 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.211475071 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240504732 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244159591 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282655738 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.240770722 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.493034667 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.244387095 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.241146759 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283030871 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.489908372 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.237831097 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.103993908 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241170699 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.244296931 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240768485 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.210802939 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282447762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237712168 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.211649146 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232373716 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.23817427 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280742574 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.490573357 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.197027346 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243991078 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.241207171 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282499315 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237616398 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238016211 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28167776 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.200603658 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279461598 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281684532 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244198695 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279718544 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280948526 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.202065105 seconds)
  done (took 78.95137197 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.103563588 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.103432961 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.188378697 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.103904134 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.104200078 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.188863573 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.104054447 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.104182486 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.10414835 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.103700064 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.103878219 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.188262755 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.465985177 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103396964 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.188247149 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.466902573 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.188618682 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.189141299 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.104055968 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.188800389 seconds)
  done (took 26.483670631 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.103871943 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.104239487 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.104307745 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259052258 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.103649027 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.240981885 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.103851688 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.104212303 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.103805679 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103540453 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.103870945 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.10425939 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.103618594 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259061589 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.103993289 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.241307665 seconds)
  done (took 19.336169631 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.103803085 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.104075668 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.104383445 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.104241171 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.104349746 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.103846 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.103781762 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.103706835 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.104186329 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.561447745 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.10409406 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.103946244 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.104052652 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.104367856 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.104161352 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.104604686 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.104084457 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.103851843 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.103758496 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.104416312 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.680661196 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.104096021 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.103800719 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.104342933 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.103556516 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.675090412 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.104223914 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.104115187 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.103840972 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.104569869 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.104020894 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.586962325 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.103838278 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.104193545 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.10459367 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.103532268 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.104160428 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.104343673 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.103922481 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.104117861 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.104245636 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.10422996 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.104117766 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.10441412 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.10289498 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.104947306 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.10448074 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.558413587 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.104212216 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.103971314 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.103869871 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.104817787 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.104617907 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.577008021 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.104601827 seconds)
  done (took 64.831784486 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.143257284 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.158435126 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.103814351 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.104165975 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.160314151 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.140649747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.145432918 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.11912408 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143766548 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.105040814 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.166815406 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.118988536 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.140416947 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.157931268 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.163075641 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.141272082 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.103865544 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.173075012 seconds)
  done (took 21.578325785 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.10419686 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.104058924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.104296208 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.104225768 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.104423537 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.104083076 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.104189224 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.104581265 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.10480334 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.104634332 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.104178372 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.104721509 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.104916259 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.104362799 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.103850315 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.10414855 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.104225006 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.104519012 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.104075361 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.103804776 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.104659479 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.104532619 seconds)
  done (took 25.384171458 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.136126023 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.150682339 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.104551269 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.104605381 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.104946262 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.127646479 seconds)
  done (took 7.816688316 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.168572914 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169714157 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.144836581 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.153708702 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.176130117 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187798668 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181962927 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.185935246 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.178182785 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407305642 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187851632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182621357 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182854923 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234712361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170545992 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175483025 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187898315 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.187748369 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.160612419 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180794908 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193579874 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.174248816 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192214479 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181786973 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187965584 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235115489 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182545179 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411310315 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188425487 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175341113 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172196354 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.188901721 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182363459 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406921236 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.150266249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17941618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184940354 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181778892 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171640419 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229518159 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.142219178 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171190465 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180664706 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196812393 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173218414 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195429182 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197539556 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.186698545 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190837133 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42032183 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.176517869 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229370054 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170163535 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179489673 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177530762 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410830301 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411365386 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228211398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172284323 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407549307 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231242681 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.175897974 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229376318 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40958243 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170504123 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231192979 seconds)
  done (took 81.15382946 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230551703 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.147158973 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19109834 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413650616 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229810008 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187517767 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190917112 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18237685 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181916849 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163735818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185379999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192264626 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230543854 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234808829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193054741 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181924428 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.190783426 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229080533 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.158659627 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412258544 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.190215109 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230071925 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232033805 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230494276 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407552967 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.178082896 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191276871 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187694906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181524961 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.188945388 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193400515 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191951027 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232140474 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.141023374 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228928631 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194509857 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187847544 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193890634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189927779 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.175537542 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233922217 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182317871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188146469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182881109 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407455658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182187498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182002138 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.158624573 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.190132835 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.158640558 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407077841 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407178612 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41386027 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230215638 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194919638 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19488532 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190485948 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190521028 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193885886 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173840197 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228427518 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182026789 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415549849 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192024289 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.191180796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231022747 seconds)
  done (took 81.668351897 seconds)
done (took 2391.696021425 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.102889426 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.191807891 seconds)
  done (took 13.383072842 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.105094594 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.104347261 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.261363709 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.104778583 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.143333533 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.201478281 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.112884805 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.115773473 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.105389696 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.186379414 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.104994169 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.234870742 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.210454055 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.105003275 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.095881285 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.114859723 seconds)
  done (took 39.412408709 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.219004037 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.641924987 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.029272306 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.863278657 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.132271553 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.791023206 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.375217784 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.793901622 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.408743701 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.563315171 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.364212285 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.924957766 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.846666473 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.27426279 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.533390066 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.536294958 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.614235148 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.675091176 seconds)
  done (took 59.675987575 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.098224777 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.249188035 seconds)
  done (took 8.448720488 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.112734607 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.107188245 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.105694359 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.104933075 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.133029741 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.115623494 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.14472047 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.146578779 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.11374286 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.120943161 seconds)
  done (took 62.313186243 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.105419844 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.713502769 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.456551512 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.712857696 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.724187366 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.590165129 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.26338219 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.44272702 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.190562868 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.092547967 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.314286768 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.497355039 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.948070778 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.38541283 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.727287782 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.572697541 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.78258132 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.468002363 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.419958316 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.658560406 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.323716135 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.200850027 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.528218242 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.859761334 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.102113657 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.723922283 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.207450388 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.241988465 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.179110912 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.262084494 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.431827992 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.122006095 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.392028372 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.111574891 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.143557142 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.650138972 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.774208897 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.297088581 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.499192215 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.420857759 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.479918949 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.789033346 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.172221162 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.763518862 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.261402941 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.490789566 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.048249128 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.325141606 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.191029903 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.213357072 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.492318212 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.272750087 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.23933991 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.213039349 seconds)
  done (took 153.590783787 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.092880132 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.485932426 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.245194065 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.096790459 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.51200232 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.308346793 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.606518501 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.512882688 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.101708555 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.305497155 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.27084093 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.233712896 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.096262198 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.094448941 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.096220522 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.095485532 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.28708786 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.503421575 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.099687882 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.094488611 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.301042257 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.33373536 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.231472996 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.09649827 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.264093509 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.344858507 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.489786893 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.234451846 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.491401978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.093873843 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.492347878 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.101027859 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.093376767 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.990046008 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.466534006 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.426646826 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.524817252 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.095021285 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.819593594 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.095545608 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.749829594 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.30005712 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.430864607 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.242700638 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.351014508 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.333855296 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.717947272 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.09380689 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.869727951 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.273690475 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.325448012 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.311584267 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.377814183 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.101578846 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.64365564 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.094757809 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.093939137 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.355997937 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.254927801 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.223652618 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.096953826 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.093526171 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.095639575 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.344790489 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.095899364 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.217423708 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.096310683 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.099035502 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.218034637 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.223399089 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.256487539 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.342751886 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.358207559 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.310947953 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.083093418 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.334227738 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.48448732 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.339892199 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.097486081 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.094259922 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.538083847 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.555687721 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.258764379 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.335589364 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.410110716 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.388980839 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.638753214 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.094586649 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.314323878 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.257936308 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.484479416 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.36399565 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.467476123 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 1.994568688 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.094271561 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.094704706 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.001216677 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.226534978 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.096998992 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.608152811 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.36583818 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.179930848 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.278901495 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.580870145 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.207727641 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.097253663 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.677179488 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.095394554 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.319328405 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.39209732 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.103558526 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.09553174 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.250098772 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.041773404 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.095063914 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.498702959 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.50585217 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.110811591 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.255271211 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.096738384 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.351308405 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.096358268 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.332607435 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.096460944 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.372913155 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.289180914 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.378931123 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.097191956 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.438695207 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.368529988 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.504552819 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.424927519 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.096304887 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.09552769 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.408809993 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.096374341 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.094519446 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.273394582 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 4.783815669 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.277313979 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.09710971 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.508186807 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.260454044 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.48208573 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.096137265 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.33990054 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.349159314 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.499726887 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.104987694 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.232929998 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.096213841 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.206072165 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.263891782 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.094812452 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.096004696 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.929035156 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.096997118 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.254228051 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.332157077 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793763772 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.508581238 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.441201759 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.093678608 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582090798 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.308125812 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.533862162 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.618802416 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.269504838 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.817362484 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.326098942 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.093890129 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.340177227 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.40031955 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.096413127 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.095756813 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.827264923 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.025620293 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.094755927 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.263205031 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.758037151 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.317684723 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.309304107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.097550864 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.469364646 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.097672257 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.275801348 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.593911025 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.143686669 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.095697379 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.09515866 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.093922293 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.095232103 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.311279829 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.356457524 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.74846375 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.248712494 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.40077592 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.330395371 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.416407745 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.568226598 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.107274477 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.418474446 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.096500567 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.528280323 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.10575127 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.277888082 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.353013783 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.099633089 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.319472022 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.457320624 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306344399 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.490954709 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.097684792 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.095398645 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.705877014 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.27772426 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.531866016 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.095329003 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.256792835 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.461027245 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.228033451 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.306297177 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.130835873 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.103845206 seconds)
  done (took 725.548958479 seconds)
done (took 1063.47743463 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.093166794 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.097371385 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.102552773 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.101128331 seconds)
  done (took 25.483592868 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.082329724 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.18043109 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.281738768 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.107391478 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.479509967 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.161639316 seconds)
  done (took 11.389927136 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.609424791 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.098250669 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.101575197 seconds)
  done (took 17.898757742 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.375387398 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.567200972 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.279178556 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.194562674 seconds)
  done (took 6.512894256 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.106600821 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.106466339 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.105731062 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.106529238 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.106571489 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.10603755 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.105811957 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.10634995 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.105832533 seconds)
  done (took 11.050238387 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.848454266 seconds)
done (took 78.290559258 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.512035529 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.406544297 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.107471339 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.402923729 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.233571901 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.421617328 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.224627428 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.125410262 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.452534805 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.535977248 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.620848101 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.388720255 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.6107248 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.567107221 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.350601097 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.134064064 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.122325656 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.16797168 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.817062654 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.316444115 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.109146148 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.24028058 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.851893394 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.13639154 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.085492308 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.22431349 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.353990601 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.17514798 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.241578068 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.131952793 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.196208394 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.673992789 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.352052542 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.40699661 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.202954642 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.021506667 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.61880757 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.108650602 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.392708748 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.57992573 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.398165803 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.228380466 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.094377197 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.471489673 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.514868543 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.125422005 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.05905176 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.268520118 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.707551907 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.294493038 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.473501709 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.109755095 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.762341024 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.183662237 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.18895685 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.207329158 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.14411368 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.564277527 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.318671097 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.407091573 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.121947704 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.093891071 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.163432079 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.137081287 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.557564367 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.417594069 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.518914225 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.194436285 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.725901594 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.135280087 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.122546909 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.136693953 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.907331775 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.28051274 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.094694864 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.235450821 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.394886407 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.223216445 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.107007431 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.708143355 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.337660952 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.096373279 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.387303533 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.461504153 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.27042935 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.54309522 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.612479722 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.526714123 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.708523533 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 7.244050922 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.825644311 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.199727782 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.20762019 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.10851861 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.24408216 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.817976237 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.17554974 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.636504803 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.241909049 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.819099448 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.138348964 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.122793484 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.653005568 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.463680733 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 2.003925696 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.144976364 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.235770622 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.095286934 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.386833963 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.115299657 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.209249777 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.692787858 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.108945374 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.167602714 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.628437702 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.106865268 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.408392679 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.54441461 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.259424419 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.106987509 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.442293823 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.110240513 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.226594776 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.716527453 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.494166324 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.367116109 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.099079613 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.205102273 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.108193343 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.32400079 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.110704876 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.788907722 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.747056963 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.141978172 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.357143524 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.230397294 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.094428794 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.371368075 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.156839518 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.241488128 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.403658362 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.431127181 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.272080739 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.093686351 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.424291569 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.107664743 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.340298357 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.423960265 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.270817715 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.423766274 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.188670186 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.118961384 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.144833872 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.553870702 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.750557359 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.85540887 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.374259911 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.237214537 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.709274159 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.396461445 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.953536078 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.211294732 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.154889754 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.107060093 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.123997412 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.168227181 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.093921483 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.106804898 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.442401598 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.487582714 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.849792825 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.98592615 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.092212494 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.396016366 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.259269133 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.056358214 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.796978282 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.125147416 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.45920233 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.597111173 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.272621446 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.136211758 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.098362078 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.138127359 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.868081744 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.147026343 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.445112601 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.747511729 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.569895606 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.463784048 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.330294667 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.147084785 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.482190362 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.364887141 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.38721015 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.307031056 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.740670168 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.226990049 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.550729849 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.268157337 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.388377728 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.107317216 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.949410972 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.355499418 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.588672157 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.464704237 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.344067495 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.333434563 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.414235588 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.107538709 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.65141458 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.201293372 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.46963482 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.137580605 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.646556836 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.201711931 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.441007308 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.120710792 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.280988622 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.566891739 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.226297375 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.228250835 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.571823983 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.120921714 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.436742955 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.328891737 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.286741553 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.306236583 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.139992577 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.273158205 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.279310958 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.244366725 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.359445438 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.072786848 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.539108242 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.923320578 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.23151644 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.095632823 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.485494041 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.140848498 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.117811579 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.380431313 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.304336269 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.410609726 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.330080118 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.269935294 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.096368226 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.271885332 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.598746659 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.96663294 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.66756685 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.177106481 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.13983516 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.176531145 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.526149245 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.525917321 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.171694521 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.242847244 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.791053628 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.148119683 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.303323154 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.110859337 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.109909468 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.972427647 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.237264819 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.351591175 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.804693921 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.11102424 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.150320328 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.235384282 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.645200494 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.653375293 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.159698016 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.228502014 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.692091485 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.249146329 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.508348721 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.136118651 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.261657132 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.47163234 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.226242467 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.230605444 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.098186884 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.148970848 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.732341313 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.529594827 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.628529637 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.144901895 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.513398147 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.403634774 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.332613684 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.125414826 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.189146597 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.512376784 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.233302649 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.449124959 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.110876641 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.245795275 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.357899197 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.133911835 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.095380799 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.368852065 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.92426491 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.849856059 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.425262003 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.338326974 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.127157964 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.343279561 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.105683076 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.311292233 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.267522675 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.20398675 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.740515889 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.674891165 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.108950192 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.448471429 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.224810736 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.471433565 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.134300267 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.12361791 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.261135252 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.197987467 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.095600925 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.32298804 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.274335675 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.631452569 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.32689897 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.080987818 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.113456252 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 3.028582244 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.22341865 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.443409315 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.789974449 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.124316871 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.27111936 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.765530557 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.318882828 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.137863518 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.34754669 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.109871932 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.815454688 seconds)
  done (took 876.679500345 seconds)
done (took 877.956714802 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.142111878 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.480829031 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.298990786 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.071078456 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.900793472 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.74228104 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.319056008 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.33227639 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.176001376 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.31933705 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.005323886 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.900463194 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.192174117 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.216712906 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.177484672 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.203596489 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.311849499 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.339740873 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.214554541 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.907728116 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.46441327 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.908908024 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.518628935 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.39521451 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.477430064 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.196345787 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.164393754 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.453027581 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.452349571 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.080331349 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.313526584 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.298794047 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.921908084 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.347672907 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.177198573 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.182227682 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.91701169 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.192315401 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.128168217 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.182841965 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.506321604 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.2220541 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.813710048 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.947933163 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.877797115 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.515869517 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.982560282 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.201722329 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.200490687 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.276587507 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.128896273 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.124965044 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.453271511 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.101374233 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.991162103 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.975270112 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.452425213 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.91856734 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.832218057 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.277653751 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.470757054 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.205072369 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.276625361 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.331262788 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.2196712 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.396443893 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.519174265 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.126338961 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.298573603 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.32595096 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.345053259 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.323707044 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.21941874 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.290340782 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.217451925 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.319348167 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.826660342 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.299668976 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.889216935 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.196076636 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.019257353 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.052252591 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.054282991 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.1767714 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.141178203 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887196665 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.051108363 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.015917639 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.216541197 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.299249395 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.999739583 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.299581077 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.563580727 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.164847955 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.141198154 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.299936284 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.060255448 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.123920719 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.071145154 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.299179691 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.884216639 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.164816407 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.122745156 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.189791558 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.203338171 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.124739222 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.164709573 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.524026723 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.325361402 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.255949202 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.477076404 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.219400223 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.32411243 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.217160002 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.175047279 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.887202128 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.38500596 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.925003035 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.122689021 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.762220025 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.401839744 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.190347166 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.474275767 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.395428883 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.141598301 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.195297751 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.202975539 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.023182559 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.202461283 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.204756151 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.293852422 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.552940131 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.277583973 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.06294056 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.325035052 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.882350196 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.33592591 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.324494029 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.175493504 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.027651798 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.195118432 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.049546121 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.395628721 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.530216848 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.33961325 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.395524888 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.217216831 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.35287449 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.122772521 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.214966519 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.325009487 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.226088169 seconds)
done (took 239.500664717 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.433183432 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.308000601 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.383594859 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346829436 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.471915874 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.384984022 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.172722621 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.543112329 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.155705103 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.517566803 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.31471011 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.984323325 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.361179833 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.321218364 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.458297226 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.345738213 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.155172267 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.36013258 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.548715531 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.457520221 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.855311119 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.315551757 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.249241398 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.495192383 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.094761898 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.853924869 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.404822196 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.223130357 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.368698491 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.859700085 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.896585838 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.365971752 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.405043116 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 5.000600282 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.545225459 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.831775035 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.411279544 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.926185789 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.354807987 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.432217338 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.31476326 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.944498148 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.871715437 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.887731219 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.219148587 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.411258556 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.166744228 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.166361953 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.096664202 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.825176743 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.364972057 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.954888578 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.998116964 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.433634066 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.322783481 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.833853433 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.563411835 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.542741926 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.456939266 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.403456455 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.354201563 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.518160472 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.488492533 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.232225783 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.862722335 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.39647059 seconds)
  done (took 146.638915703 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.531728126 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.41404924 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.506303133 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.499555499 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.717410826 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.504000972 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.597733206 seconds)
  done (took 13.862307497 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.166748977 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.153595144 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.39709605 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396108525 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.159986734 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.280713961 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.240510334 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.893044297 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.37523103 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.194538517 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.474655066 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396244924 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.785314484 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.873558143 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.241520447 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.392022731 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.129866726 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.220648529 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.2130877 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.41199649 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.889810089 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.859378498 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.303769788 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.134400466 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.158053305 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.195261506 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.15011382 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.126428173 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.150772272 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.13975578 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.159548648 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.266114792 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.14743425 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.844409624 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.137923896 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.478463659 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.159184943 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.156970857 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.283355696 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.09756945 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.133038883 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.157903066 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.294189135 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.162151534 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.133411467 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.34193317 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.140183354 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.161979495 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.136549879 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.153283371 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.344192404 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.150648938 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.137517016 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.807570721 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.361159562 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.87090966 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.21982544 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.14723754 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.147827991 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.210306358 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.149913911 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.413472589 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395792803 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.133370097 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.396293322 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.442196962 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.149936506 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.139242168 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.135732141 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.371789071 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.14453157 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39569283 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.15578774 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.201123148 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.157646087 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.286997139 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.342456577 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.944289592 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.915294369 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.78823446 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.476251579 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.13616009 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.455483414 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.087699715 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.79838437 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.136379443 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.156917991 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.818040438 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.061052798 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.153510375 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.462313934 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.138509989 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.20802244 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.201656568 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.133340065 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.212528014 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.315243644 seconds)
  done (took 150.733183548 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.366676441 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.712413037 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.378321417 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.188904914 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.310568947 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.489203675 seconds)
  done (took 15.537609258 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.463886289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.905469095 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.168644458 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.170244029 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.207997043 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.107747951 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.108206354 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.352022133 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.327562402 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.155452861 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.107607245 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.107716157 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.107227471 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.292856777 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.107103289 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.160821564 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.108079485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.174011214 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.158090134 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.217753743 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.453058185 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.207119481 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.217470874 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.034501199 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.195405233 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.154713595 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.976819195 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.160486368 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.162887151 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.491350195 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.34427944 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.108311489 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.977537537 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.519307893 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.829202646 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.03562208 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.329472177 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.11035192 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.156354911 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.10755071 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.108394947 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.21789572 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.166025278 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.108217711 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.493651579 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.991140844 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.197277854 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.403100444 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.107512616 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.107700206 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.108263551 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.172785537 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.107790367 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.108337549 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.605190497 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.580519697 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.090685453 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.111488053 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.207396987 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.036585099 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.257549368 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.110998166 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.499552111 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.08354293 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.83239167 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.108503126 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.04098916 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.315636144 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.220249771 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.172855076 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.108168551 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.165880315 seconds)
  done (took 116.182378724 seconds)
done (took 444.061714385 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.158075781 seconds)
  done (took 7.249335496 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.260316451 seconds)
  done (took 7.503293174 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.098560391 seconds)
  done (took 7.201878853 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.117879644 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.142180042 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.117815307 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.121620984 seconds)
  done (took 25.633658574 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.315613951 seconds)
  done (took 7.410424463 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.096334911 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.118645124 seconds)
  done (took 13.419761187 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.226695256 seconds)
  done (took 7.342904482 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.548820026 seconds)
  done (took 7.664670762 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.095531939 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.110210752 seconds)
  done (took 13.348085887 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.100022225 seconds)
  done (took 7.192384976 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.380802384 seconds)
  done (took 8.564718142 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.105291989 seconds)
  done (took 7.22938163 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.150319473 seconds)
  done (took 7.243609288 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.219319518 seconds)
  done (took 7.311374409 seconds)
done (took 135.423410092 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.096048459 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.101809642 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.100746331 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.100213339 seconds)
  done (took 25.490684926 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.433080391 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.43214041 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.409617834 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.58273192 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.376212432 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.376052577 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.432060465 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.432415878 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.375772005 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.476845422 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.432038332 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.475482357 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.582381566 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.409757482 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.410060749 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.557053241 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.582745183 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.432074136 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.375652975 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.409715213 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.582863199 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.583280011 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.868938764 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.84273225 seconds)
  done (took 36.969062341 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.316793501 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.47304927 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.275362512 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.425633849 seconds)
  done (took 6.58324373 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.138338395 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.482943785 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.464488994 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.523084379 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.464070832 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.277279167 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.464781098 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.316841892 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.286208825 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.28764576 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.73318783 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.25896638 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.272097145 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.524042911 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.279588195 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.108143971 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.108496302 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.28771225 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.482056996 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.308219544 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.370412705 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.465376253 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.464652419 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.464910141 seconds)
  done (took 33.926643408 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.867074241 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.035637618 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.46559445 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.023906898 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.807494549 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.902935433 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.386663726 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.606906357 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.374238362 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.350671809 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.828741506 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.8630035 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.251120119 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.999081714 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.866892446 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.285304637 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.284731661 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.959750889 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.525106576 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.406793499 seconds)
  done (took 38.184713801 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.096961279 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.096965562 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.340422922 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.274668486 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.096705354 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.100072328 seconds)
  done (took 28.097917882 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.430571333 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.243242515 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.403687008 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.374017811 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.265817033 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.23411377 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.652056638 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.333705859 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.862726724 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.814801493 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.643468558 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.537404326 seconds)
  done (took 21.892811677 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.095447059 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.142546066 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.104087475 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.338243282 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.148656155 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.789859188 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.112082873 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.096999672 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.630978032 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.364230989 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.239279783 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.334211896 seconds)
  done (took 43.50662435 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.310672488 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.279834223 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.450303075 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.155196967 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.635960679 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.197234168 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.464071506 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.063572595 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.923867931 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.988741124 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.640945603 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.163644077 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.630561316 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.071538781 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.842176587 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.394188507 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.930608323 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.147368132 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.546077313 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.182507981 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.061033294 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.254024978 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.096284087 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.650880839 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431175681 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.105992274 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.300810795 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.346741621 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.096500928 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.369185174 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.097359819 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.577832043 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.299227948 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.407856053 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.634531719 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.18871211 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.202666329 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.116073583 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.645732917 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.394851259 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.247089718 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.262846939 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.096943303 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.106864792 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356835363 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.881350514 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.110250214 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.735960077 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.081906957 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.23200941 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.996056524 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.980068856 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.551178817 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.065109073 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.241451412 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.393766602 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.262257192 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.096765345 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.366458501 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.154022528 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.295449091 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.191705041 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.310611 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.070152681 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.351182752 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.446303988 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.355780957 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.430412243 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.398650712 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.391999684 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.435640964 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.237785335 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.933367688 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.237050187 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.616846098 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.01011367 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.451530672 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.098687475 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.809426067 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.632345531 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.078553741 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.214764945 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.737710107 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.064697083 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.096522223 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.270736955 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.333915661 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.070071654 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.193022912 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.183585923 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.493869141 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.237053747 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.253810994 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.34063535 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.804898528 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.079998586 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099604839 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.39406728 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.070406081 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.658831753 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.096870556 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.088544113 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.151557081 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.67349231 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.515283562 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.154760692 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.867455315 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.734807505 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.399172262 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.709926719 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.26790628 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.932565018 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.43753334 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.426701968 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.096794052 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.794420523 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.152608688 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.162989015 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.459503895 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.097316649 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.070597495 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.502251819 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.298805012 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.097998733 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.337708549 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.100441926 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.250394202 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.097982996 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.710639633 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.525179146 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.34381932 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.629509144 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.217308117 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.185309749 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.068296845 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.243169405 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.617509819 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.196654416 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.653175588 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.545275145 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.339765818 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.667812179 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.092997395 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.950831687 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.580137756 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.373745783 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.43820439 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.799792239 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.283978043 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.192493062 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.097412688 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281173182 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.110956443 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.640919315 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.097046673 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.765157378 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.085243944 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.397623261 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.09700109 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.260956612 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.098655533 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.308079956 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.775217877 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.160126247 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.268291218 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.365131403 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.278854642 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.0980535 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.068349226 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.48281959 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.363152937 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.636084581 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.366109541 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.769749699 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.434695369 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.593683771 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.300463427 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.436018323 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.880720977 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.335220936 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.456711603 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.845753873 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.12648191 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.131487454 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.188399577 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528565347 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.327370193 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.878468826 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.750268662 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.15120189 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.145603684 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.678823093 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.070520319 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.246574031 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.583511281 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.140082183 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.665402852 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.204585725 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.296840051 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.384518986 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.13093409 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.789938276 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.971086424 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.494966159 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.454362705 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.429230374 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.079748198 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.859732682 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.53110014 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.562227288 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.245961918 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.366443763 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.122041817 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.15950658 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.098647854 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.445584677 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.033404709 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.823910504 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.397419564 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.657020028 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.054641948 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.259274957 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.650991441 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.114651759 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.089434866 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.250296678 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.165322172 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.743024371 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.651634795 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.368014652 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.426997173 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.097544736 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.104431431 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.373636229 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.406575119 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.374693137 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.622533078 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.353474632 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.805325031 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.215722115 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.738450187 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.268153293 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.139708872 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.694861249 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.358442814 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.05129812 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.289718094 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.819577291 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.265725206 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.801815235 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.367522814 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.098199954 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.581040505 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.723430812 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.100731742 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.117357355 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.25339936 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.099966783 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.331870574 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.864604254 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27905424 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.827791775 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.420803616 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.350878369 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.289537296 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.515947803 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.639492621 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.470423576 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.070941224 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.263448977 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.207001916 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.394713531 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.098195112 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.380721602 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.77468884 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.761390934 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.92181452 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.651058975 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.334487628 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.766171421 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.594072719 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.403237349 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.452660072 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.116704252 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81871627 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.148577246 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.315052307 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.162874083 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.01919282 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.493184239 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.552977309 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.655631001 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.246398499 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.711076575 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.544458386 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.183433724 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.347083016 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.399341856 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.152419557 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.416422917 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.140734526 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.722440172 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.498403562 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.111394632 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.615880043 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.32989087 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.457573317 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.284246146 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.712261712 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.207447009 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.264748751 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.583509573 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.398648108 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.394949094 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.604278919 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.175293853 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.281001416 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.140257543 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.364045846 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.77745628 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.608748687 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.750891642 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.722498479 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.52188405 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.894184272 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.123465482 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.329995336 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.359921948 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.116162252 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.328435289 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.536993302 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.16209354 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.338464722 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.47238507 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.29472906 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.68809201 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.107050451 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.813887368 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.305515818 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.683949775 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.660134324 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.900138435 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.587777828 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.162783788 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.673205097 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.121732172 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.296588 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.448193497 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.949480607 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.230968672 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.05219618 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.980895944 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.329922829 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.611586752 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.259544371 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.92964922 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.293655256 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.379797595 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.346314454 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.263304953 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.117388778 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.717856121 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.911662346 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.41472188 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.352721816 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.371364251 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.294459357 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.290368073 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.657779602 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.450703004 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.891040992 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.618915084 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.387464616 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.090065381 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.156522474 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.439787863 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.509311806 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.247473704 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.469431905 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.609907445 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.209423554 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.111744852 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.138157582 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.422023679 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.907120219 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.907959836 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.482652337 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.677610253 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.75380212 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.17901571 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.902518738 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.343632624 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.529510331 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.577880101 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.070478343 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.610152989 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.454891656 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.340434181 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.122537183 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.360367631 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.185550871 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.239186295 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.851536214 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.473133718 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.252246287 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.017929365 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.78844672 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.155438409 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.165464841 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.900304498 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.431596438 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.343519944 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.135927584 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.724088784 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.563639507 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.312461934 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.122540602 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.898974058 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.105421299 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.34097284 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.13143018 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.31522948 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.963711991 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.229950572 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.827914712 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.715303392 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.220415306 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.366856552 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.138834451 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.003482698 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.145495636 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.829394551 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.989945758 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.409724407 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.671804061 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.365716459 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.143546065 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.480493028 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.322993901 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.572909471 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.617694267 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.632165895 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.630880545 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.622208015 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.438595151 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.67662484 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.279312118 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356767759 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.078187434 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.209038958 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.144169198 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.509351718 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.547841782 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.162698474 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.683828722 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390302353 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.244285339 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.301422275 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.211030588 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.669373879 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.333796626 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.261517271 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.379987746 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.364021792 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.4780974 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.117070874 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.350789651 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.14323402 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.154775459 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.322623245 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.360252724 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.484830415 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.469912159 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.763979077 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.32427113 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.624458629 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.809483478 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.647790269 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.124559016 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.989824625 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.450602417 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.100922021 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.588289691 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.762788737 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.290207351 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.376967299 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.170804036 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.117110909 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.282340004 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.585343934 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.113223833 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.752907077 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.505370755 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.100239287 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.591551594 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.187328345 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.274175965 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.87834969 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.598029773 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.102679264 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.930883156 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.220999941 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.651878801 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.373930397 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.118149046 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.112503144 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.729817181 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.088065351 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.102848328 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.210965945 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.633327753 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.104898901 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.676530717 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.272743222 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.283773543 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107965139 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.241422084 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.102330341 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.301487336 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.292120103 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.347387386 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.377715579 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.288309415 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.098455256 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.702813398 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.848070939 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.236715186 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.294610069 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.09892763 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.458263733 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.991106967 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.102500948 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.663178671 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.283918194 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.231319017 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538415632 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360791557 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.134747114 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.310921645 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099450808 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411953705 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.260704341 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.672126255 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.373915094 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.668773658 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.220084481 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.118351821 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.637798314 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.582893529 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.992022025 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.09947311 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.407913891 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.098611432 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.941293335 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.742638969 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.301576074 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.252804573 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.119203086 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.687545183 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.369351874 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.238685874 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.100623459 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.313963168 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.613396314 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.071618708 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.927173698 seconds)
    (567/608) benchmarking "2d"...
    done (took 1.989052508 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.321779326 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.432705507 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.071021318 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.289432661 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.117725035 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.08092276 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.598338929 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.09968402 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.450996667 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.073086289 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.620957053 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.110663907 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.225420132 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.266275876 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.42340446 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.099987939 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.82000349 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.272408096 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.098664169 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.098803796 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.440495948 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.186098511 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.350519611 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.581328863 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.364539672 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.451719057 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.004350852 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.927213191 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.117436904 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.611240985 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.098705562 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.651914726 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.20394621 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.616289184 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.93609586 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.119707298 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.638586601 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.348356454 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.838201487 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.247685931 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.601605279 seconds)
  done (took 1962.758401894 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.136057356 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.223269534 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.158477102 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.200688295 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.166381671 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.195957974 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.182523988 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.132183833 seconds)
  done (took 50.490070984 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.097751781 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.152571579 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.69218642 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.288334138 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.134250684 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.444756961 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.269900096 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.653125307 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.308123437 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.180895096 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.168360236 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.330453531 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.113777844 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.149270482 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.055392144 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.192200474 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.104017615 seconds)
  done (took 93.491665756 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.111626552 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.141271482 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.135173695 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.135504489 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.139567856 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.527220416 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.119269648 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.100007388 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.489979506 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.393358832 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.110251332 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.193087467 seconds)
  done (took 80.738190131 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.138689145 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.137939814 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.138084499 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.138463551 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.138253693 seconds)
  done (took 6.785977609 seconds)
done (took 2430.054589382 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.32845522 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.587164411 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.666107644 seconds)
  done (took 4.347118086 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.238522731 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.233545766 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.301323931 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.250024385 seconds)
  done (took 6.145420496 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.403105594 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.588566889 seconds)
  done (took 4.08562609 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.592854171 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.122647567 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.652021944 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.102766988 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.109570308 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.109442179 seconds)
  done (took 19.434087277 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.129056146 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.131946451 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.131939291 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.125374045 seconds)
  done (took 5.620984744 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.099019478 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.106302539 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.109742288 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.107101426 seconds)
  done (took 18.517157624 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.401049168 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.365176937 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.861669924 seconds)
  done (took 5.736348581 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.917795264 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.237293694 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.900895021 seconds)
  done (took 6.150120623 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.054222095 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.048685754 seconds)
  done (took 5.197294206 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.277004228 seconds)
  done (took 2.371755264 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.591100224 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.589775013 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.976312176 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.002254039 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.13481593 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.425193456 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.479886385 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.383218657 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.81869074 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.700485217 seconds)
  done (took 18.196430793 seconds)
done (took 107.608617781 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.974784911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.500681529 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.264981544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.796684782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.272850169 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.262696809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.722220974 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.592427858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.702522772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.702638043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.816093163 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.272197502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.131674676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.486555227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.131295173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.447776098 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.506447885 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.989881196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.155782948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.461482085 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.737573953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396603204 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.537160084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413134718 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.522172591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.250401453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.997911808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.463037754 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.389940595 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.010859197 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.271635063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.708965748 seconds)
  done (took 151.986244447 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.098196403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.114633698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.115172493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.109510344 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 4.939699185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.115257238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.112783305 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.10966338 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.027719421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.02789767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.11413338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 4.941116586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.114417652 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.109181533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.114097763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.110521844 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.285670999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.115198886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.114596475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.114491698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.114490294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.723205736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.114643181 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.73082136 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.3050293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.116588438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.108956956 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.114207432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.114901998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.115412407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.114491486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.109761722 seconds)
  done (took 187.797787215 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.098781444 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.113714655 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.113290665 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.110057764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.113665161 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.113883574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.110674138 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.110350684 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.11296184 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.114018234 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.114301231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.113124085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.113406046 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.10990989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.117196763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.109923009 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.11475457 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.114484248 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.113660439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.113184005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.11648139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.109675292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.111324746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.113888109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.111067894 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.113715007 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.110194412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.114936051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.112282148 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.113855202 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.116965697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.110271337 seconds)
  done (took 196.711963142 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.40884829 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.141940872 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.041506137 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.851756527 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.977986072 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.132268963 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.881520423 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.409347396 seconds)
  done (took 13.955251187 seconds)
done (took 551.577909445 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.819119609 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.056591111 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.291904912 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.372246201 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.715884631 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.416383638 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.365953607 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.576374848 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.836344898 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.532871316 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.604699519 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.325767224 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.981584344 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.372010303 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.298746757 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.627507154 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.512026051 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.806527551 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.320442646 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.964393483 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.335207123 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.980898141 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.596497688 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.890615806 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.630568372 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.032330164 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.258521651 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.517780109 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.356231285 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.325563841 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.175490944 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.55367846 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.340541935 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.336420785 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.639435046 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.591152559 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.48978112 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.547067933 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.287380336 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.781448194 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.979221963 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.713686896 seconds)
  done (took 75.252821519 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.13331136 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.14544219 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.299118735 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.210259191 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.805282315 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.207706472 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.37489218 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.350111721 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.219848145 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.335426061 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.387467954 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.893824341 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.37809504 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.765890529 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.36501184 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.392784128 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.214132058 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.748468776 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.366035482 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.348671853 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.176127954 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.297296887 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.17469974 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.323252879 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.17119134 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.179871183 seconds)
  done (took 36.389327994 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.179192222 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.289607641 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.396050581 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.225880118 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.381482406 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.13205119 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.47351912 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.256884387 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.889241338 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.304824664 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.239090462 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.26100388 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.318580009 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.427125642 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.432593619 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.246676043 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.296849034 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.299341584 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.295575861 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.354930584 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.308827543 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.217625774 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.479810941 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.301997161 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.828941251 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.722143963 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.284945952 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.723506834 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.413740142 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.256966356 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.276444182 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.458269819 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.523728516 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.399049022 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.274898821 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.151193945 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.154066398 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.242335764 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.03831843 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.296033286 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.472100803 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.554509267 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.456478353 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.728311988 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.449645113 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.305020167 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.597751837 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.252905531 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.270223101 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.948658977 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.458358618 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.899662585 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.25067633 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.323974945 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.268085206 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.547467905 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.323439594 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.417908506 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.23626342 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.875010464 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.218092685 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.527519827 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.300658828 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.44985664 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.359925992 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.336383765 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.320516663 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.80847823 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.451253355 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.1910524 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.860724781 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.232519447 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.173883516 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.237531252 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.295351333 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.635746571 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.140946917 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.347751368 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.542798451 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.46266906 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.388751082 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.741510608 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.185202768 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.674626612 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.163456646 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.13820918 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.219393422 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.444067877 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.456183721 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.661134168 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.731678866 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.443829015 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.66287649 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.353165076 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.795540083 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.458551472 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.136138429 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.157435654 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.383679149 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.732590196 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.235884106 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.387838423 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.854029041 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.485834332 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.579292701 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.271199248 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.521450315 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.452557739 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.473003808 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.129212819 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.359451644 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.259365161 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.418720538 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.427527972 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.12988378 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.701519624 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.263463452 seconds)
  done (took 237.560785737 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.100313839 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.115015428 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.102154734 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.115871412 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.100199631 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.714064733 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.182231694 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.100592698 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.714316518 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.182876238 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.099759968 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.100163704 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.10179548 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.108117233 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.689513031 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.64826703 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.930197197 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.10077276 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.099864122 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.111448388 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.930016632 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.102958034 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.099090002 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.111079694 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.103708087 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.101612264 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.10950282 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.161569128 seconds)
  done (took 152.239616285 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.158996082 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.529743663 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.190051328 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.254752614 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.20369503 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.189336178 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.665485428 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.311701519 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.237841771 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.172130676 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.168828703 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.387524391 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.468788309 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.761836023 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.298579699 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.404017489 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.821774419 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.308925832 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.174291574 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.168654555 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.324147538 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.526464471 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.423503924 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.426513868 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.312422734 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.427818446 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.242638238 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.160222734 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.278380656 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.651522805 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.185195889 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.516292323 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.32169563 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.177491717 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.675547825 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.517844254 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.743542349 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.807216255 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.363095683 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.127897177 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.13052404 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.403596751 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.45995207 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.217677264 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.161479868 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.815766244 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.18531455 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.422182341 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.192205814 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.126763149 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.272939394 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.28536774 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.407303082 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.141630727 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.360306835 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.290103657 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.752644766 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.150646634 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.237551909 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.468650389 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.142986952 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.659277142 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.11975351 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.228650077 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.172562518 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.017934787 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.253803016 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.688968717 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.778868541 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.213224982 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.504887892 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.36566851 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.143907832 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.424525464 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.343123242 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.600845459 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.74148786 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.306150503 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.271118622 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.245064274 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.43802193 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.157609154 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.729125187 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.275064671 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.142231637 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.668432642 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.55539032 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.142622644 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.159437879 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.26146601 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.329851004 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.379290087 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.430344065 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.240381075 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.071276166 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.429230375 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.442867414 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.17780349 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.29098968 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.157197937 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.549414772 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.35450854 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.1485282 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.475912352 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.5560215 seconds)
  done (took 156.457213984 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.8670877 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.223155906 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.349383913 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.681960587 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.491314613 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.614000897 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.436846017 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.238377486 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.464495906 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.380036477 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.458568162 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.254651607 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.845644752 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.91808651 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.223162828 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.388497015 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.233624216 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.758184415 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.449055684 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.165732852 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.460106772 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.89333195 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.467442564 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.566262339 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.570938542 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.65586136 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.839299036 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.274998355 seconds)
  done (took 48.280782816 seconds)
done (took 707.291958648 seconds)
SAVING RESULT...
DONE!
