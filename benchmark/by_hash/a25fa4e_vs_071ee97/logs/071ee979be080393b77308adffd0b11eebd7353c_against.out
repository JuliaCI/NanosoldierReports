cset: moving following pidspec: 2087732
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.220751218 seconds)
loading group "string"... done (took 0.751006462 seconds)
loading group "linalg"... done (took 8.196315102 seconds)
loading group "parallel"... done (took 0.159050111 seconds)
loading group "find"... done (took 2.513622105 seconds)
loading group "tuple"... done (took 1.893373232 seconds)
loading group "dates"... done (took 1.253982381 seconds)
loading group "micro"... done (took 0.194519275 seconds)
loading group "io"... done (took 1.244466175 seconds)
loading group "scalar"... done (took 38.331932606 seconds)
loading group "sparse"... done (took 11.989595413 seconds)
loading group "broadcast"... done (took 0.930297865 seconds)
loading group "union"... done (took 14.492826198 seconds)
loading group "simd"... done (took 4.741496845 seconds)
loading group "random"... done (took 8.924681082 seconds)
loading group "problem"... done (took 1.853109649 seconds)
loading group "array"... done (took 24.738885553 seconds)
loading group "misc"... done (took 1.79062075 seconds)
loading group "sort"... done (took 3.18704997 seconds)
loading group "collection"... done (took 17.630516174 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542635706 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127505232 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135399384 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120338882 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.163665805 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122322624 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123303972 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084600922 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.260931132 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.134963204 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122415795 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.444333656 seconds)
done (took 5.841873581 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.307505199 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089078314 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077677121 seconds)
  done (took 1.280921629 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.086026577 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.07189484 seconds)
    (3/3) benchmarking "different"...
    done (took 0.072851254 seconds)
  done (took 1.33655001 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.063982045 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131111157 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06545827 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065671534 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065415142 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065122504 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065020747 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065143726 seconds)
  done (took 1.629924247 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073761222 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066757736 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064255547 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068773947 seconds)
  done (took 1.380696147 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.067396086 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.063656519 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.063437006 seconds)
    (4/4) benchmarking "different"...
    done (took 0.064092785 seconds)
  done (took 1.364792907 seconds)
done (took 8.486934044 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.792281516 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201682371 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185329586 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.419967019 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135732394 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.175047593 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.605281857 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.095372703 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.218047081 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097106713 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11247532 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.34951896 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.119281639 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.605099622 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.084322572 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096213276 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.168700933 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.231038825 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.074603587 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081935266 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089275523 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.111936332 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087640547 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075101086 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.175488854 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071780496 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146215036 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084361976 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069363285 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220841093 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.183862182 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.61592556 seconds)
  done (took 9.923513189 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102285944 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096491123 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066974047 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.106559751 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098288912 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068666391 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074061997 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066574658 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088279164 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128773992 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091645488 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10664177 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065893726 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068111662 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.080501805 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.158014431 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08210436 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080973273 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066844598 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077505608 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.094738952 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081599037 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078376783 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078375858 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.107762655 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.132488182 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.087498523 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100543644 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06795487 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080490133 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.093900477 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.108384196 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067154433 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066239155 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.112798754 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.083115911 seconds)
  done (took 4.363305883 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.148601624 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.116730649 seconds)
    (2/118) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.113290043 seconds)
    (3/118) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.126831891 seconds)
    (4/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140502012 seconds)
    (5/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063770393 seconds)
    (6/118) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115345392 seconds)
    (7/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064877606 seconds)
    (8/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080310362 seconds)
    (9/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244729861 seconds)
    (10/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.635804368 seconds)
    (11/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.639916371 seconds)
    (12/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.122096153 seconds)
    (13/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11609836 seconds)
    (14/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066492201 seconds)
    (15/118) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104467684 seconds)
    (16/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069690442 seconds)
    (17/118) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068461977 seconds)
    (18/118) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067518576 seconds)
    (19/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.540949634 seconds)
    (20/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104034193 seconds)
    (21/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115128014 seconds)
    (22/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082220266 seconds)
    (23/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070630395 seconds)
    (24/118) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068849423 seconds)
    (25/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064578968 seconds)
    (26/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072308557 seconds)
    (27/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063698379 seconds)
    (28/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068724802 seconds)
    (29/118) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087903754 seconds)
    (30/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075058987 seconds)
    (31/118) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.596320363 seconds)
    (32/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.0880637 seconds)
    (33/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130270318 seconds)
    (34/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068879002 seconds)
    (35/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.99464442 seconds)
    (36/118) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.174540763 seconds)
    (37/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068872078 seconds)
    (38/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095082617 seconds)
    (39/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.157732262 seconds)
    (40/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099936823 seconds)
    (41/118) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149209231 seconds)
    (42/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069183105 seconds)
    (43/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.213880047 seconds)
    (44/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165104246 seconds)
    (45/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063786235 seconds)
    (46/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07040812 seconds)
    (47/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.570138652 seconds)
    (48/118) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067120174 seconds)
    (49/118) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084025301 seconds)
    (50/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102614553 seconds)
    (51/118) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121141492 seconds)
    (52/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065558896 seconds)
    (53/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064083391 seconds)
    (54/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163361884 seconds)
    (55/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065366071 seconds)
    (56/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08329199 seconds)
    (57/118) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.059318799 seconds)
    (58/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149519109 seconds)
    (59/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067993394 seconds)
    (60/118) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.304559043 seconds)
    (61/118) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097629666 seconds)
    (62/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070564698 seconds)
    (63/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06394062 seconds)
    (64/118) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.004102437 seconds)
    (65/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126681796 seconds)
    (66/118) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068369506 seconds)
    (67/118) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067415811 seconds)
    (68/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068874127 seconds)
    (69/118) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06783363 seconds)
    (70/118) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.637071943 seconds)
    (71/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066096813 seconds)
    (72/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.683242637 seconds)
    (73/118) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069769844 seconds)
    (74/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080021195 seconds)
    (75/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072769829 seconds)
    (76/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070769578 seconds)
    (77/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078553689 seconds)
    (78/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078509779 seconds)
    (79/118) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096198739 seconds)
    (80/118) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066612696 seconds)
    (81/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064364372 seconds)
    (82/118) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073242463 seconds)
    (83/118) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066365979 seconds)
    (84/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065267029 seconds)
    (85/118) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066354505 seconds)
    (86/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.063784256 seconds)
    (87/118) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090029402 seconds)
    (88/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064464207 seconds)
    (89/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.405008751 seconds)
    (90/118) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068149157 seconds)
    (91/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071814683 seconds)
    (92/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064411918 seconds)
    (93/118) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097881763 seconds)
    (94/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089612878 seconds)
    (95/118) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068224275 seconds)
    (96/118) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.179147855 seconds)
    (97/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.091161374 seconds)
    (98/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071401681 seconds)
    (99/118) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06580461 seconds)
    (100/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06736075 seconds)
    (101/118) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114999769 seconds)
    (102/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070066953 seconds)
    (103/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.091938397 seconds)
    (104/118) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069068313 seconds)
    (105/118) benchmarking ("exp", "Hermitian", 1024)...
    done (took 0.869601559 seconds)
    (106/118) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097692589 seconds)
    (107/118) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068640862 seconds)
    (108/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102319501 seconds)
    (109/118) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079470452 seconds)
    (110/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069619923 seconds)
    (111/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.482339987 seconds)
    (112/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065773014 seconds)
    (113/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071244266 seconds)
    (114/118) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065712726 seconds)
    (115/118) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066542865 seconds)
    (116/118) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065001037 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.153222943 seconds)
    (118/118) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07639253 seconds)
  done (took 23.087337276 seconds)
done (took 39.632212698 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.215660233 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080865463 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080621613 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08076596 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080814533 seconds)
  done (took 1.681193925 seconds)
done (took 2.860167838 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.5", "Array{Int64,1}")...
    done (took 0.129623697 seconds)
    (2/41) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100619706 seconds)
    (3/41) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063219815 seconds)
    (4/41) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100601893 seconds)
    (5/41) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063169781 seconds)
    (6/41) benchmarking ("> q0.95", "Array{Float32,1}")...
    done (took 0.100058922 seconds)
    (7/41) benchmarking ("> q0.99", "Array{Int64,1}")...
    done (took 0.067816575 seconds)
    (8/41) benchmarking ("> q0.5", "Array{Float64,1}")...
    done (took 0.099572066 seconds)
    (9/41) benchmarking ("> q0.8", "Array{Float32,1}")...
    done (took 0.067830057 seconds)
    (10/41) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097037395 seconds)
    (11/41) benchmarking ("> q0.95", "Array{Bool,1}")...
    done (took 0.103554935 seconds)
    (12/41) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063282008 seconds)
    (13/41) benchmarking ("> q0.8", "Array{UInt64,1}")...
    done (took 0.106244242 seconds)
    (14/41) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096940506 seconds)
    (15/41) benchmarking ("> q0.99", "Array{Bool,1}")...
    done (took 0.067970715 seconds)
    (16/41) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096661077 seconds)
    (17/41) benchmarking ("> q0.99", "Array{UInt8,1}")...
    done (took 0.099505951 seconds)
    (18/41) benchmarking ("> q0.99", "Array{UInt64,1}")...
    done (took 0.067862921 seconds)
    (19/41) benchmarking ("> q0.8", "Array{Int64,1}")...
    done (took 0.067810475 seconds)
    (20/41) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078393679 seconds)
    (21/41) benchmarking ("> q0.8", "Array{UInt8,1}")...
    done (took 0.068108118 seconds)
    (22/41) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100712071 seconds)
    (23/41) benchmarking ("> q0.8", "Array{Int8,1}")...
    done (took 0.099877327 seconds)
    (24/41) benchmarking ("> q0.5", "Array{UInt8,1}")...
    done (took 0.068214664 seconds)
    (25/41) benchmarking ("> q0.95", "Array{UInt64,1}")...
    done (took 0.068129908 seconds)
    (26/41) benchmarking ("> q0.5", "Array{Int8,1}")...
    done (took 0.067967492 seconds)
    (27/41) benchmarking ("> q0.95", "Array{Int8,1}")...
    done (took 0.067895771 seconds)
    (28/41) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063460181 seconds)
    (29/41) benchmarking ("> q0.99", "Array{Float64,1}")...
    done (took 0.06792044 seconds)
    (30/41) benchmarking ("> q0.5", "Array{UInt64,1}")...
    done (took 0.068355856 seconds)
    (31/41) benchmarking ("> q0.95", "Array{Int64,1}")...
    done (took 0.067933666 seconds)
    (32/41) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.21854258 seconds)
    (33/41) benchmarking ("> q0.99", "Array{Int8,1}")...
    done (took 0.069677782 seconds)
    (34/41) benchmarking ("> q0.5", "Array{Float32,1}")...
    done (took 0.068196883 seconds)
    (35/41) benchmarking ("> q0.95", "Array{Float64,1}")...
    done (took 0.067925369 seconds)
    (36/41) benchmarking ("> q0.95", "Array{UInt8,1}")...
    done (took 0.067875487 seconds)
    (37/41) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063475383 seconds)
    (38/41) benchmarking ("> q0.5", "Array{Bool,1}")...
    done (took 0.070629477 seconds)
    (39/41) benchmarking ("> q0.8", "Array{Bool,1}")...
    done (took 0.067946724 seconds)
    (40/41) benchmarking ("> q0.8", "Array{Float64,1}")...
    done (took 0.06783302 seconds)
    (41/41) benchmarking ("> q0.99", "Array{Float32,1}")...
    done (took 0.06783198 seconds)
  done (took 4.563919969 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083709571 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081028653 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067456475 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079369202 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060828523 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079436241 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079288852 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086087758 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078767909 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070212571 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.061028517 seconds)
  done (took 2.003765105 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082933325 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.080778449 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067157675 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079210577 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060607612 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079312306 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0796705 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.083133457 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079292004 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071604201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.061194975 seconds)
  done (took 1.988528207 seconds)
done (took 9.716961189 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.101069695 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.072203301 seconds)
  done (took 1.32161182 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.510863167 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.047178544 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078614934 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.097549255 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189884761 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.105490633 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.227226949 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082229342 seconds)
  done (took 9.667290158 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104625727 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06721082 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.067684858 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067518172 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067244261 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06700043 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068317371 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068172527 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068461801 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06877224 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068146724 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067182748 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068312517 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06738812 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067205278 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066898441 seconds)
  done (took 2.372269109 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094845514 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092832801 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071216676 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072835238 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07089758 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070100676 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073065245 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071556964 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069352663 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070946016 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073592234 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071462821 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071177398 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06263386 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072287858 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074487251 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069329515 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072143528 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072547699 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073614247 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073626413 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06287981 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07183743 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072821943 seconds)
  done (took 3.019777624 seconds)
done (took 17.547483515 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11632487 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076280766 seconds)
  done (took 1.350588196 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078751977 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075822202 seconds)
  done (took 1.325694916 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076654141 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060796888 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079606815 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070943416 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062428266 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061903807 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078622646 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061662184 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061404812 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062233337 seconds)
  done (took 1.847871234 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066068136 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069855646 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066389161 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.064637777 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067539549 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062214042 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.066524242 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063035845 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070833819 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061364324 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065579038 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080372434 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065567418 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081938571 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.066701322 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065720323 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067404997 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065484916 seconds)
  done (took 2.391801877 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064846661 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061748509 seconds)
  done (took 1.304369003 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066871126 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061426903 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063475874 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064324062 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061324749 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060773129 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062384627 seconds)
  done (took 1.612383616 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39899612 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120233406 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324699895 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070153004 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077103563 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260054233 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063931771 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06800047 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067696773 seconds)
  done (took 2.666696826 seconds)
done (took 13.682164638 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08205502 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084441197 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095035928 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41312833 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.079476932 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067262814 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.094731682 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177562431 seconds)
done (took 2.282130456 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.258147214 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.81904974 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.490027483 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204465864 seconds)
  done (took 2.692575035 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348003116 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07941233 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075873884 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065641189 seconds)
  done (took 1.757383711 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068389099 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069337211 seconds)
  done (took 1.323199216 seconds)
done (took 7.219465313 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066314362 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06291727 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063130764 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062521604 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062802538 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062950328 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08761704 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062995202 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06292054 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06300903 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.062915789 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06290721 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062900875 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062871786 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063142092 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06310247 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062784209 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063254717 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064134873 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064042332 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063328259 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062945457 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063201606 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06300397 seconds)
  done (took 2.752211524 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082326622 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065124907 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066214431 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066120756 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066967207 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066445177 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066593958 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065102802 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066616716 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064941187 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066992082 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067053961 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064788083 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067162737 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064796756 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067083449 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066765806 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065188234 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064933502 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067019676 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066540228 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066007162 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067167428 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066752531 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067434605 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068062173 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065199296 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065597536 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066933382 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067430773 seconds)
  done (took 3.200205648 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069601532 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059311085 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059708047 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068332874 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059804954 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059978628 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059989125 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059814995 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060413212 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.059552083 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060608982 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.059544748 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059573565 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060320225 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.060237817 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064055167 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077727696 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059843073 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059618027 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.060255966 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063832463 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059641386 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.059783079 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062272573 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060195724 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060105862 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059955938 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.059583594 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.060369075 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.059831023 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063910821 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064312903 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.059973833 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065541427 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064319579 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.059882015 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065638839 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060581131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.060547354 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059699449 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059719705 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.059828162 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059949863 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069060521 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06008231 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061093862 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060015791 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06175012 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.060618718 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.061891968 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.059672604 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059800855 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.061591289 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.060935459 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06486087 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.059745074 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060754373 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059708013 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060672882 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.059935979 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059589976 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05968874 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063161776 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061137824 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077821043 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069044472 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059839269 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.061151084 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060664875 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063247019 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.061361947 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076145436 seconds)
  done (took 5.66132295 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084957725 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084844711 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064658981 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064323178 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060975146 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060953483 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06803908 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060262951 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064741029 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089263424 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060349768 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064520785 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064620622 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064203998 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060375449 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064769315 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068069242 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061254591 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06035599 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06417356 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060338881 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067831984 seconds)
  done (took 2.67235525 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145502565 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065917816 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104594202 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070712171 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068318213 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070157093 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065841021 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06588389 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065930392 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06658117 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066364771 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06594564 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06903135 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066409384 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066340169 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066987384 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065973632 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066399167 seconds)
  done (took 2.520964918 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078742004 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06522056 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084812157 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06499482 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06521709 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065105595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068839882 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06952587 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065085729 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065421886 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069639712 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065147857 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065148845 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065326312 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065161914 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065445625 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065131583 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065605854 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069513265 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068919416 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069001806 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069608121 seconds)
  done (took 2.695497513 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079560574 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064321015 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07994955 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066193008 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060284736 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060080007 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066031816 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064942422 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065906913 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064323442 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065039889 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061048189 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067056181 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06501732 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067127862 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06494477 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065341187 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064952266 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064520702 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060625317 seconds)
  done (took 2.518256031 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082590158 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063583615 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063327383 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068667104 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063336374 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063582235 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069141175 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063606938 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063650784 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083997463 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063684605 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063568901 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069184623 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067153911 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063590721 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071914833 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069112693 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069972756 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064122344 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064201896 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084931934 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064195049 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06989634 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064224779 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06423155 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064103513 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063972998 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067661976 seconds)
  done (took 3.097197445 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066672995 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063000569 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063846689 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063677616 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062767186 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062926806 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062986399 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063081927 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062972303 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063365455 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063058615 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063031321 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063778282 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06373819 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062939382 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063148547 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063207085 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063386931 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063333702 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064004299 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063817612 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062953872 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063185584 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06333873 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063195373 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0629661 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063390907 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063460791 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063081555 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063294018 seconds)
  done (took 3.109351899 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077110154 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071171396 seconds)
  done (took 1.354527654 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064927889 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076641243 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059513944 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07097194 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06810137 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064108386 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068769849 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068393669 seconds)
  done (took 1.741375689 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085942769 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.072329849 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062346997 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.073812023 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.072341892 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082349149 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128537742 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.062508645 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072852636 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063463293 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080605936 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065314267 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073140558 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067415549 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073990255 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076874168 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060217052 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.06691075 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063118684 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.060734827 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063085434 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076966288 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072760945 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060787324 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068070035 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090889691 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079218366 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061907149 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069605243 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075040975 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072712284 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059569304 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062340086 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.062581489 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060580816 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072523256 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081812044 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069655593 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075570042 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.062964611 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070077968 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060554418 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071218666 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07368393 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079031468 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063297758 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062485044 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061111396 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063539713 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068821877 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06057663 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067298945 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0601488 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075182597 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070283017 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078175488 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061421281 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069304111 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070098859 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069681291 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074012021 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068780972 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073309067 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062043202 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078524513 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072347677 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07415406 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060440743 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059593469 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061341236 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076625636 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092014578 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072122549 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06243271 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.062993133 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060530619 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069768003 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063829219 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071760398 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075063102 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.062416128 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06666012 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075128812 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067334495 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069055962 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06865316 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.061371915 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06666789 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063984764 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083417952 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061798717 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060899308 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063999891 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081581406 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070063114 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06235676 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064038338 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074686016 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060069302 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062802689 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063355504 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068882509 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076364037 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066707786 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066966297 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076536919 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071374785 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068266547 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069673786 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06087734 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063203989 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065044509 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074578346 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060904941 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069905254 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06707353 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063621374 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075138381 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061223628 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063384785 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07580561 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074956071 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061371162 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06006781 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069919199 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062664865 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064996358 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07696773 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061461589 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060910129 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060820812 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070795612 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062980793 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070486282 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066565728 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070069077 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06050122 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061724777 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.066732114 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075260613 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.20609176 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069275231 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072256571 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068366623 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061471608 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074817603 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069259319 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064387624 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071592059 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065996084 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059798096 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064412972 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06863185 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060703855 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069296115 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063777444 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068772162 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062195233 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.060561605 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066572753 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062070624 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06421691 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066998488 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060674856 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077120469 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068334532 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059853937 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059657432 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.068364923 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063231768 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.061242171 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064158277 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068241408 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.061786812 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06070108 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06137149 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06816978 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068924591 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064294893 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.062322856 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070961368 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079592146 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.061416325 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068888624 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.061457693 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.062352508 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062220824 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076917701 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07398861 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066328306 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06947101 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060182525 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071790818 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075157566 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065222119 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060791064 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065145578 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.065826496 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074917074 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065814725 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063027944 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061255539 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068618684 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065662298 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069392419 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.062153156 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065133923 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.067324999 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061162167 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068566943 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063699324 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077260636 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069866269 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060805461 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064603936 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061090029 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074235487 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060806787 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06399963 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065461716 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063385957 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062540907 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069351158 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060031581 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075559766 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075909846 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068282318 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065246929 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06312075 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07551704 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069137056 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071105815 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070433957 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072860108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078999389 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065580926 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070227719 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078758035 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.062854633 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062963732 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072355289 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.061676813 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06182992 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062225052 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.061903746 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070647098 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069586557 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073168694 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060172472 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070371215 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061442234 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065521637 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06097329 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071431552 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069808291 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06779398 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075250754 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063374791 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062981549 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070613943 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062402939 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063212377 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063838248 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07076305 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063074667 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069096959 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065510911 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068922442 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065304598 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060747574 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.0690632 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063015775 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068283258 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071798749 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062383125 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068868529 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06980694 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063072393 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069232105 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06645875 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065525952 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070280378 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068812076 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067650431 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070374937 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061041313 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.219226296 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.062276268 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075379358 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067216445 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059808557 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066726186 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068769905 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.065662774 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.062992389 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062355134 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067704284 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.061314687 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068712548 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07464355 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063470022 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077901382 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07274787 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068009225 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06961999 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067479456 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068433608 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064493181 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066925719 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062070043 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067363537 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061578438 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070353474 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069013222 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066927897 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068144059 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062432783 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068453695 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063039075 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059600774 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064527507 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064723753 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.061495936 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074472031 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.062003315 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06482618 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061333496 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.062591062 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061438893 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059211778 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067733738 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06813498 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.062333851 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072820181 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065358707 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06934489 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078730883 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06035874 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.061363726 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060750944 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065802947 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076017416 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063099374 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076794107 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068183484 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065392548 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060610412 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063157889 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.061616381 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061060999 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060779241 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07092063 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065053257 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062095177 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062954097 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069611405 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063360044 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07559593 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080030325 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067843566 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.062716271 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060042098 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065227657 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065845249 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069344578 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063077118 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063920652 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060263515 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.062054146 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066898036 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068633111 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061930609 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068291832 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075727092 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06219738 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069391888 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064434858 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061015651 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069517393 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062178975 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.062209307 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065063825 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070367056 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070128138 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063274962 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07747258 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065750356 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068855152 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063472564 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060931075 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06215555 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.062517329 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.062503734 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065269112 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.063550575 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076167796 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061025229 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069081794 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068002726 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066412464 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073094609 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063385192 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068892368 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068426464 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064611938 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070093074 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076660473 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066120328 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070227408 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063364812 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0685778 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072595165 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065247063 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074821692 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068090251 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063099489 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068378285 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064012624 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062495814 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062556456 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062689249 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07293383 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062996169 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065127011 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065157472 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0607142 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067097167 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064768726 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076078054 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069584977 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069945445 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060726888 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060439867 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.216097165 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064663866 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068203553 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069162241 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072441715 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068455009 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065542831 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060917938 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077017896 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071385662 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069329652 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063216749 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069420584 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062125639 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068508659 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06689561 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066669692 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06236875 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069483554 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067595259 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064460324 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071863619 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07029401 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.062256008 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067366733 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067721107 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066711424 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060770867 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061859266 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069087908 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070151468 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068380874 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061523681 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076989752 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063158083 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067657635 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063709349 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.060952185 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070174321 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059933437 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069086589 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.062303938 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06272778 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060038459 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064540759 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063219857 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068442565 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064298298 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060068059 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077281549 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076816953 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068843558 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061864569 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062216358 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0617153 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060783974 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065355684 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063241108 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068464395 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077512997 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065082236 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064783626 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060551357 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062410399 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069556751 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070932699 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060820553 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060556614 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066118328 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069340479 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075244443 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061490367 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06215371 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070017694 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069187976 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060732837 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065613707 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059979969 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070317861 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079757288 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.062774697 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068528103 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073170674 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07563546 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.062671791 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060743024 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.062803633 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068691341 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068084343 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063195871 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063209702 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082199798 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070254558 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065110149 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062382911 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069205639 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065409404 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077953015 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.063599151 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066239075 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071590391 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069472186 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069347762 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073495549 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07405841 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069183643 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069238679 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062102417 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067916383 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.061824986 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065576841 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063629865 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063105549 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066500463 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068929255 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06569752 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07906864 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077129433 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065526262 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060517205 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065693086 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065661111 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061003656 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063666184 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061385679 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061507644 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061411257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062570185 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068914347 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071530438 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067136742 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.0629406 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063249794 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060159148 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072754335 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06934394 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068706173 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060275985 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06275185 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063181372 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070975858 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065139261 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064440926 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069203605 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068553583 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068812097 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061140049 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074932378 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062059837 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.221330013 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065827756 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062480741 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063379839 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06955327 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06614939 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062836631 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068835708 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068921331 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063166396 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059975405 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059712961 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070967381 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060774614 seconds)
  done (took 41.793382696 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101452858 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061561809 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060935541 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060224469 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068909181 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061266866 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060542761 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061525046 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061576149 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063142032 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060721877 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060681869 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067357914 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07528631 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069436454 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065128284 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060985564 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061510337 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061320307 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06143061 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067313603 seconds)
  done (took 2.655446039 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070621545 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075435851 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072484485 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076920618 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068923392 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065013366 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073002466 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065111206 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072657735 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070210867 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072626194 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065810874 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070235039 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070179632 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070198203 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065319574 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073404725 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069240638 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065495365 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072830029 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06580714 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072978679 seconds)
  done (took 2.815051051 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065476023 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061493659 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068791434 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059607966 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.060973347 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.059921823 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064293279 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.059992639 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06440666 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064364948 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064258303 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064169645 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068762982 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060198339 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066255965 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061157721 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105318155 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.064808642 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062511492 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.062455211 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060455214 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069212327 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060292989 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060659816 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064045204 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064406313 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.062639456 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.060466783 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062539002 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064320976 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061946079 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060316498 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068620975 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067906833 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064553841 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064250306 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.061633199 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062627155 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060546486 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063311868 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06806416 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060811682 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063049744 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06893423 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.060514667 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.060372948 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0687215 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06204764 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060277814 seconds)
  done (took 4.421458659 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075484875 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106857094 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066424945 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088396355 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073694511 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066901192 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066982196 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089714189 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061762405 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062438911 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07461674 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075337133 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063566038 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065101163 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067952032 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06359503 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06437848 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062767931 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067220338 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064052815 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066548747 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068939813 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074088153 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075841739 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064777911 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063721507 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063356172 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065160505 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074564842 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067237653 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065705103 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065963806 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07466159 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067047657 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063288649 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063421885 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075341575 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064103942 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063661903 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06218325 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063232536 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065113995 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068523026 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075662355 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064074178 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068874513 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063944225 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061742015 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074811648 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063644957 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067727059 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075737629 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064893873 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065171639 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065926467 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074569204 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063938333 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062664186 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064195507 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.0741435 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062056234 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064599756 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07550716 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063317831 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067050181 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075478889 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069617362 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064661892 seconds)
  done (took 6.052325685 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075063601 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092322164 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075761257 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076168618 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070786025 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070989836 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070887693 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070827293 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071595606 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074306479 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071147799 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111959659 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067722188 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072688343 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071051804 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070961487 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071345841 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071500822 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071593197 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07147565 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071563511 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07702003 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071498133 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076959657 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074328302 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067617581 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071178708 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071342246 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076997081 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071404978 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074402532 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071328388 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071475383 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077292301 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074556446 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071364165 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061807549 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071158463 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071500981 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071351253 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06779699 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077121251 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071281922 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067769242 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071567178 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07122252 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07721708 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07497835 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073245405 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074952037 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07143496 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077304683 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071278391 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071476389 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07711966 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079520713 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077043541 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077200984 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072370329 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07703172 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077099743 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079678276 seconds)
  done (took 5.885087865 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078664795 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067237859 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079036723 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060379011 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060166696 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070796421 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063093936 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06048545 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067775781 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067736704 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069598336 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069851648 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072068683 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069568705 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069877734 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072116563 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069868187 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069888704 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068796335 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070227798 seconds)
  done (took 2.682643389 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078037618 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.099644789 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065668611 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069282955 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066216184 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069656705 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065211203 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065809925 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066327895 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065896592 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070955948 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070821276 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066228288 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069844466 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070756235 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070499887 seconds)
  done (took 2.419271529 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.070219582 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068587354 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.074053213 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062550522 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065394213 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060868094 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061373501 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060354954 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060882241 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07563012 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061572387 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072893569 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0623377 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060910229 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061210683 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067017631 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06098285 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061851922 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061809102 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07377907 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068251505 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062821233 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06558584 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061745635 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067079871 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069071051 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06339895 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06564936 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062010219 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062281006 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067555976 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068591572 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061835098 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062472635 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061411208 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061916207 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061988589 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062376906 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067442964 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061897734 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060548023 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066924094 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062103378 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062874589 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061305259 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062455139 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061220045 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067702116 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06231152 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067186179 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061980874 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064296713 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062404791 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069024732 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064282367 seconds)
  done (took 4.83514681 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08024246 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066331882 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060121403 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059859897 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065822292 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06605956 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06545833 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065684113 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06615923 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060290103 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066254473 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065914848 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066372719 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065900863 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06633298 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06566437 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060381988 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065935462 seconds)
  done (took 2.483124794 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074524102 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066076984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069865954 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064838057 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064863102 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064726091 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060482622 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061133435 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06068259 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065223376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065205388 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064817753 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060512469 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064916974 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065839033 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065127549 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064770624 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060613336 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065147138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060677714 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065696404 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060792121 seconds)
  done (took 2.709855884 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095932613 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081732183 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138855903 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078630287 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086340465 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071825345 seconds)
  done (took 1.84867316 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095168565 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096602025 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065156356 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065295165 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070208904 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068114953 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068345214 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068548987 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072376255 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073127104 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068518158 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07272069 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072357657 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074331185 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070596334 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07328947 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068667196 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068576511 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065914823 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077601664 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06901407 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073017772 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069151817 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069499925 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068884763 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074689212 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073022422 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073552421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068872166 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073150156 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072105683 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069840367 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07329679 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073554624 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066920881 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072977574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069003409 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077601703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071147768 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074864228 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066020818 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071942778 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0730368 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072430915 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073228523 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069082579 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072477665 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068993991 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069039509 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079433546 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071161285 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074645872 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071186201 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073198639 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073742388 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079969242 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073741647 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074774514 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071377935 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073581719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074838477 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071098547 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074581787 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073625748 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071229869 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074859378 seconds)
  done (took 6.082492219 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105778968 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067567464 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06822909 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072897377 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073885908 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06865614 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068783568 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068537466 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068537718 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066137803 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103617544 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068944681 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074373012 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074311391 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06916878 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06866147 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068756675 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074677677 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066649373 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079531192 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06988771 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07479757 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074813689 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074727391 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073749707 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071212573 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069017096 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069025489 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068988448 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068861584 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07253034 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06985749 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074653379 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06635827 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074664637 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069126066 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069039471 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072513666 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069076025 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071055241 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074825899 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078305402 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069065077 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068976429 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073673511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06883795 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068853379 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066291805 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069048083 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066402587 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073485599 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073448169 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07346499 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074573621 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069032563 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06894899 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068771544 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068831908 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069677048 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070979147 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074521796 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068832369 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079123059 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068903346 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06894089 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074803256 seconds)
  done (took 6.078026336 seconds)
done (took 125.270390936 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.244814219 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.212973298 seconds)
  done (took 1.741864073 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07546744 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101511235 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080119136 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169026018 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.074032057 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.133434827 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132194187 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085357711 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070547943 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070338877 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070078804 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073438408 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.217271914 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.074283728 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070481291 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072841359 seconds)
  done (took 2.881881925 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118078911 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164152742 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108642535 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067945168 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.114666926 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076587134 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068084205 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08225807 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074556408 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069745662 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075949698 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076806217 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069927492 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073984457 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074583061 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075618016 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069644823 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07570489 seconds)
  done (took 2.843673831 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105676845 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.116695725 seconds)
  done (took 1.532249663 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163419535 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.108287141 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148771036 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.357312763 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157490832 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.145806826 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144865586 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143136914 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116274275 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140135409 seconds)
  done (took 2.932572589 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106029785 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181072013 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298988057 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121398916 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075546123 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.10692396 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122557026 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083332716 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083082801 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082032861 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081772342 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076867608 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102060218 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075521289 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074811969 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077182705 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105835452 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073856089 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075100558 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077457236 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105697025 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06935373 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076511025 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073911807 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079945729 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079877625 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070392267 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06891637 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077327317 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074839242 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078490415 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.103695822 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079912486 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104773059 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07365059 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105998835 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077725389 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075551514 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075008292 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075360821 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078839 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07893066 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07836212 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077141026 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07012144 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077444917 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070211119 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068770251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079295371 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070245789 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079268232 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07839692 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10555904 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070431887 seconds)
  done (took 6.114238886 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111250075 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106143136 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069598225 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111822436 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103729801 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069058989 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104950676 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098298585 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106604925 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069897178 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067890735 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070246928 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078079128 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080538475 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114419235 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107669402 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071993801 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069030842 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107762806 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106901261 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068835778 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101502882 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097693136 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107249784 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06797539 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069568596 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068266314 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069765282 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07491631 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077325972 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068704682 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078181528 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081141102 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076275404 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067518111 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068124711 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068226503 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077643331 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077872661 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076857785 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075114166 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06738817 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067958071 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068936048 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068759314 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06707827 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076036651 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077049904 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076660865 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067910462 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069475782 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06819349 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06899517 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076983915 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074818492 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077555999 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07697443 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068198404 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06798535 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070635774 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078110222 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076749651 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076798158 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069867416 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077684256 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068203586 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077720527 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081670595 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068058897 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072093052 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068123918 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068013313 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069115331 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075098711 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075262722 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069473728 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068774389 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068077818 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077904186 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075746334 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06819878 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07526115 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067525425 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068336442 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069745855 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069788559 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075538015 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077893505 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070114449 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068692667 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06843125 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068279155 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067490791 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075000241 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077675331 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077085777 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076483726 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069729116 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077048827 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076886538 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070044438 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077274251 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069337681 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070063045 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069456686 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077102716 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075414323 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077353857 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068473797 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068556625 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076059329 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079411114 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069818043 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.3433433 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080221563 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076724943 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067806542 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080134861 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068975829 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078239404 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068843092 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079142223 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068403676 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.223216401 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068542035 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067278732 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067814306 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075602242 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068921336 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068220144 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068581965 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067432093 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074866768 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077200029 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069427269 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075743394 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074743628 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068955613 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074513224 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067378583 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076006437 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067649478 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069327552 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06651826 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077429267 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067966938 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067263586 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067351167 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076890536 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068401053 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076148641 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074349994 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066805438 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076813465 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076604757 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074098246 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076550939 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069142087 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067326916 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067314969 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067235988 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074011303 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075834928 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068930686 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068187385 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074390888 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077728724 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067606188 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075850039 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075729167 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076188871 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068359181 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068437133 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078874673 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079125421 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07602247 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075937196 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076123496 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069351684 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07537234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076035947 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068368469 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082875829 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06860172 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079364401 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076485717 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074441118 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076866096 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077877863 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078416638 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077831865 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080520262 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067593612 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068271262 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076483798 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068175643 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068414299 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075496846 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069609841 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069533718 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081510802 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068931827 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077628613 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067710031 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076411236 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068238799 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069469538 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080837211 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069510734 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070137794 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076970744 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068668764 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075929505 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079143169 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076485367 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071562747 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069925337 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077419768 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077454671 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068698848 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069293097 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070177005 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076157645 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075612222 seconds)
  done (took 18.512553654 seconds)
done (took 37.889758718 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215568074 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162033427 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.193896416 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118082536 seconds)
  done (took 2.093490599 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107278875 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097781205 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.085765196 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064349634 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09199938 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065253289 seconds)
  done (took 1.849083772 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312974328 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209744495 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18865803 seconds)
  done (took 2.047337696 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210556867 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192109636 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47923936 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.289990971 seconds)
  done (took 2.608520291 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136691761 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.080415804 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063159117 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.079995648 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.11896677 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.146142726 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.090861507 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.115161807 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074258382 seconds)
  done (took 2.299435757 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150855121 seconds)
done (took 12.415218269 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.201635493 seconds)
    (2/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.161284064 seconds)
    (3/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.155034464 seconds)
    (4/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.135372332 seconds)
    (5/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.186443714 seconds)
    (6/341) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163052197 seconds)
    (7/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.103414653 seconds)
    (8/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.218471188 seconds)
    (9/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104131665 seconds)
    (10/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.076014825 seconds)
    (11/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.136741685 seconds)
    (12/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072925001 seconds)
    (13/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.172438586 seconds)
    (14/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.207964445 seconds)
    (15/341) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083032089 seconds)
    (16/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121479365 seconds)
    (17/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089739144 seconds)
    (18/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098528441 seconds)
    (19/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.174623539 seconds)
    (20/341) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.249598502 seconds)
    (21/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076280422 seconds)
    (22/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.249124981 seconds)
    (23/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119640183 seconds)
    (24/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.084992756 seconds)
    (25/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.237113433 seconds)
    (26/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.087308638 seconds)
    (27/341) benchmarking ("collect", "all", Complex{Float64}, true)...
    done (took 0.141936918 seconds)
    (28/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074574893 seconds)
    (29/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123065075 seconds)
    (30/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07409691 seconds)
    (31/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.151977575 seconds)
    (32/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073352202 seconds)
    (33/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175901323 seconds)
    (34/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076032538 seconds)
    (35/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081425808 seconds)
    (36/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078525017 seconds)
    (37/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090227273 seconds)
    (38/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.078290084 seconds)
    (39/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.150577218 seconds)
    (40/341) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.205915437 seconds)
    (41/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.232032734 seconds)
    (42/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.067932696 seconds)
    (43/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065601602 seconds)
    (44/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.150801752 seconds)
    (45/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077270372 seconds)
    (46/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.135013105 seconds)
    (47/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09907489 seconds)
    (48/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073069632 seconds)
    (49/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.195892349 seconds)
    (50/341) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076986248 seconds)
    (51/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064072079 seconds)
    (52/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073931099 seconds)
    (53/341) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072613945 seconds)
    (54/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.09836001 seconds)
    (55/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075392498 seconds)
    (56/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098675682 seconds)
    (57/341) benchmarking ("sort", Bool, false)...
    done (took 0.135329799 seconds)
    (58/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087980852 seconds)
    (59/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.176463828 seconds)
    (60/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070402443 seconds)
    (61/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065056534 seconds)
    (62/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.138778187 seconds)
    (63/341) benchmarking ("sort", Int64, false)...
    done (took 0.066677855 seconds)
    (64/341) benchmarking ("sort", Float32, false)...
    done (took 0.13291893 seconds)
    (65/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074692278 seconds)
    (66/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084175956 seconds)
    (67/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.172613674 seconds)
    (68/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065992376 seconds)
    (69/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074392032 seconds)
    (70/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07407858 seconds)
    (71/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118962645 seconds)
    (72/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172785047 seconds)
    (73/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.207962449 seconds)
    (74/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.215236834 seconds)
    (75/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.068046791 seconds)
    (76/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06435746 seconds)
    (77/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205920081 seconds)
    (78/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073290915 seconds)
    (79/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.170219224 seconds)
    (80/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.15134547 seconds)
    (81/341) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086127388 seconds)
    (82/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091302256 seconds)
    (83/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.069913584 seconds)
    (84/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076844747 seconds)
    (85/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072404425 seconds)
    (86/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071834432 seconds)
    (87/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0811752 seconds)
    (88/341) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094879202 seconds)
    (89/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130063062 seconds)
    (90/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173770748 seconds)
    (91/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.11079072 seconds)
    (92/341) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078456003 seconds)
    (93/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118334748 seconds)
    (94/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082153672 seconds)
    (95/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.06756524 seconds)
    (96/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074034983 seconds)
    (97/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076288175 seconds)
    (98/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.065161893 seconds)
    (99/341) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.089217557 seconds)
    (100/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085663286 seconds)
    (101/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.180045616 seconds)
    (102/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.239412751 seconds)
    (103/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.228262623 seconds)
    (104/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178246139 seconds)
    (105/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090503993 seconds)
    (106/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.132177462 seconds)
    (107/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066762455 seconds)
    (108/341) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.064760213 seconds)
    (109/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.092924174 seconds)
    (110/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064275293 seconds)
    (111/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.167625916 seconds)
    (112/341) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089331766 seconds)
    (113/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073479628 seconds)
    (114/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.230814893 seconds)
    (115/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.084420734 seconds)
    (116/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064541324 seconds)
    (117/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069251381 seconds)
    (118/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080144065 seconds)
    (119/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071274533 seconds)
    (120/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.170688803 seconds)
    (121/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.132928588 seconds)
    (122/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180838501 seconds)
    (123/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179700536 seconds)
    (124/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091022705 seconds)
    (125/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196138804 seconds)
    (126/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.153200727 seconds)
    (127/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.068519988 seconds)
    (128/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065030048 seconds)
    (129/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173590571 seconds)
    (130/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.070396515 seconds)
    (131/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077791672 seconds)
    (132/341) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065377101 seconds)
    (133/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074004687 seconds)
    (134/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086739896 seconds)
    (135/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066043433 seconds)
    (136/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073925729 seconds)
    (137/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065274939 seconds)
    (138/341) benchmarking ("sort", Int8, false)...
    done (took 0.13815456 seconds)
    (139/341) benchmarking ("collect", "filter", Complex{Float64}, false)...
    done (took 0.163669732 seconds)
    (140/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065630483 seconds)
    (141/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065373259 seconds)
    (142/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.220804247 seconds)
    (143/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074844166 seconds)
    (144/341) benchmarking ("sort", Float64, false)...
    done (took 0.13186132 seconds)
    (145/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074748369 seconds)
    (146/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.128768443 seconds)
    (147/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086444333 seconds)
    (148/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071687256 seconds)
    (149/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.136864795 seconds)
    (150/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065057109 seconds)
    (151/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073487473 seconds)
    (152/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.19574789 seconds)
    (153/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065446356 seconds)
    (154/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072877823 seconds)
    (155/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127070689 seconds)
    (156/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069367846 seconds)
    (157/341) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069423111 seconds)
    (158/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089568444 seconds)
    (159/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.07765618 seconds)
    (160/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073130242 seconds)
    (161/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078812824 seconds)
    (162/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06826393 seconds)
    (163/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071854146 seconds)
    (164/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072646965 seconds)
    (165/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064970318 seconds)
    (166/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216833863 seconds)
    (167/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066291832 seconds)
    (168/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.065598086 seconds)
    (169/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077329211 seconds)
    (170/341) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131774926 seconds)
    (171/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06891957 seconds)
    (172/341) benchmarking ("collect", "all", Complex{Float64}, false)...
    done (took 0.070004054 seconds)
    (173/341) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.117248411 seconds)
    (174/341) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066139281 seconds)
    (175/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123079172 seconds)
    (176/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065343292 seconds)
    (177/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064379198 seconds)
    (178/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065308899 seconds)
    (179/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065852522 seconds)
    (180/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065255612 seconds)
    (181/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066284351 seconds)
    (182/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074890313 seconds)
    (183/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066183229 seconds)
    (184/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089508001 seconds)
    (185/341) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066273613 seconds)
    (186/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065121438 seconds)
    (187/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072967688 seconds)
    (188/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113713709 seconds)
    (189/341) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.178693328 seconds)
    (190/341) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073296839 seconds)
    (191/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152153743 seconds)
    (192/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075176091 seconds)
    (193/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075946603 seconds)
    (194/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119267914 seconds)
    (195/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066449929 seconds)
    (196/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126502906 seconds)
    (197/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086257745 seconds)
    (198/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06962503 seconds)
    (199/341) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064971109 seconds)
    (200/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.126472914 seconds)
    (201/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.084643291 seconds)
    (202/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.077636768 seconds)
    (203/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06542822 seconds)
    (204/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.141308464 seconds)
    (205/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.178951596 seconds)
    (206/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.19847814 seconds)
    (207/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.06661701 seconds)
    (208/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.084425137 seconds)
    (209/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.261048428 seconds)
    (210/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067717889 seconds)
    (211/341) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074791884 seconds)
    (212/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074234733 seconds)
    (213/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073772766 seconds)
    (214/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065058156 seconds)
    (215/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065277256 seconds)
    (216/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068660372 seconds)
    (217/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065379069 seconds)
    (218/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075932526 seconds)
    (219/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.065391981 seconds)
    (220/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064756299 seconds)
    (221/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065291628 seconds)
    (222/341) benchmarking ("collect", "filter", Complex{Float64}, true)...
    done (took 0.067053418 seconds)
    (223/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.14910156 seconds)
    (224/341) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171475221 seconds)
    (225/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065727258 seconds)
    (226/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.076948303 seconds)
    (227/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071690878 seconds)
    (228/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076817 seconds)
    (229/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083204747 seconds)
    (230/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084374284 seconds)
    (231/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170965097 seconds)
    (232/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068491356 seconds)
    (233/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08955189 seconds)
    (234/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065601857 seconds)
    (235/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.080011221 seconds)
    (236/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154947816 seconds)
    (237/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13386888 seconds)
    (238/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146427926 seconds)
    (239/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088831882 seconds)
    (240/341) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.065303839 seconds)
    (241/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076746046 seconds)
    (242/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075280516 seconds)
    (243/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075869252 seconds)
    (244/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.067073412 seconds)
    (245/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144263816 seconds)
    (246/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073530263 seconds)
    (247/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.07927494 seconds)
    (248/341) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.065114023 seconds)
    (249/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.197787861 seconds)
    (250/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176035867 seconds)
    (251/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073137986 seconds)
    (252/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065182015 seconds)
    (253/341) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072926111 seconds)
    (254/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.218882536 seconds)
    (255/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.065854237 seconds)
    (256/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067634571 seconds)
    (257/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182034183 seconds)
    (258/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086623564 seconds)
    (259/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124674586 seconds)
    (260/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065793049 seconds)
    (261/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092295492 seconds)
    (262/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065583425 seconds)
    (263/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067941324 seconds)
    (264/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.067554042 seconds)
    (265/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065489024 seconds)
    (266/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.084422461 seconds)
    (267/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066658209 seconds)
    (268/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065348087 seconds)
    (269/341) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078915002 seconds)
    (270/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064356698 seconds)
    (271/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.083514271 seconds)
    (272/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065747966 seconds)
    (273/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.067565437 seconds)
    (274/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.069741575 seconds)
    (275/341) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.069811142 seconds)
    (276/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073634831 seconds)
    (277/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155436447 seconds)
    (278/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065880838 seconds)
    (279/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065816407 seconds)
    (280/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.0654547 seconds)
    (281/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072052083 seconds)
    (282/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.077404539 seconds)
    (283/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064789098 seconds)
    (284/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.069907924 seconds)
    (285/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066130417 seconds)
    (286/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.138023921 seconds)
    (287/341) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075118413 seconds)
    (288/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066160433 seconds)
    (289/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072227941 seconds)
    (290/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064560068 seconds)
    (291/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.070010186 seconds)
    (292/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065056102 seconds)
    (293/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086730078 seconds)
    (294/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.083448544 seconds)
    (295/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066431051 seconds)
    (296/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.065428325 seconds)
    (297/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065860223 seconds)
    (298/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064853205 seconds)
    (299/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066100463 seconds)
    (300/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0655219 seconds)
    (301/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064566466 seconds)
    (302/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06585379 seconds)
    (303/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065702813 seconds)
    (304/341) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093558458 seconds)
    (305/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.0680593 seconds)
    (306/341) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065396221 seconds)
    (307/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076835313 seconds)
    (308/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065086989 seconds)
    (309/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064258551 seconds)
    (310/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065508402 seconds)
    (311/341) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065726257 seconds)
    (312/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092226721 seconds)
    (313/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068470334 seconds)
    (314/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067145225 seconds)
    (315/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065298979 seconds)
    (316/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.067725232 seconds)
    (317/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108191295 seconds)
    (318/341) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.065445508 seconds)
    (319/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.069944889 seconds)
    (320/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074478893 seconds)
    (321/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065518897 seconds)
    (322/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128777794 seconds)
    (323/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067750272 seconds)
    (324/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066627871 seconds)
    (325/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.065676375 seconds)
    (326/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066315365 seconds)
    (327/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089999087 seconds)
    (328/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072499813 seconds)
    (329/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065584089 seconds)
    (330/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067503947 seconds)
    (331/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.120249574 seconds)
    (332/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065061389 seconds)
    (333/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065640022 seconds)
    (334/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073423824 seconds)
    (335/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065250531 seconds)
    (336/341) benchmarking ("sort", BigInt, false)...
    done (took 0.192266439 seconds)
    (337/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066962501 seconds)
    (338/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.064443577 seconds)
    (339/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064998321 seconds)
    (340/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067309001 seconds)
    (341/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065421148 seconds)
  done (took 35.819750873 seconds)
done (took 37.172906034 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091491574 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095672342 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07249522 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091329152 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080955694 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095563374 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073453333 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078215897 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080714351 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080927173 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078037122 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071620783 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075270802 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07450724 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072341831 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095593588 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079471583 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073257404 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073127462 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064643767 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073141146 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065862808 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064355951 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071177839 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07764922 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07307058 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074394198 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074157888 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064955348 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065316167 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070800228 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073784167 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065180975 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07797377 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074553821 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07360142 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07447748 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077501912 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064962188 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065445711 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075067887 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065299534 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073251013 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071696811 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070329951 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072299233 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073520628 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077595605 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098435392 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070387288 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07515265 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077759501 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076746567 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071081705 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070104767 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073379991 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071767581 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09562566 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073669366 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070448205 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075228716 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074831879 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072180787 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073749826 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073569509 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075686375 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077662971 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072092057 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075501638 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072412138 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065680911 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07335392 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069952584 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065246471 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076919488 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077890171 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064864528 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069688705 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073162614 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073600473 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06483337 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070826812 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064552966 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070129227 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070030758 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071183225 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069879811 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072555371 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06543934 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073316305 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072509747 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072565084 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065432886 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078110213 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065852391 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071636034 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065237854 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065106301 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064548795 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070000654 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064798079 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069934825 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074321836 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064408269 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070416812 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080704413 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065045305 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072871393 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064730707 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065208765 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077839847 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076012169 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065402165 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070458942 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06500506 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072028627 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065038788 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065167638 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065083101 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065471204 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070004717 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065342142 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070301903 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072478162 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078015701 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065223635 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07000374 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070303368 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065371463 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071587466 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065497049 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065358279 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064938806 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079016256 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070462335 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065626377 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071847078 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07024256 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073342876 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064441063 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073723664 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070771614 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069936484 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071825605 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064377038 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076282382 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070432151 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069938764 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064568627 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065133273 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064153081 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064867873 seconds)
done (took 12.453044816 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07261128 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.115662973 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.089439342 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.090341803 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081585998 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065742603 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07270274 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091669453 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067152754 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096849572 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087419819 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087531705 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.106073461 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064660947 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065392077 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066398718 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067604437 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077657118 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.091815197 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087870809 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105336955 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065603443 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085055151 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086821634 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.081526207 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087861026 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066714467 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066568714 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068305196 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087105361 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091527456 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06870264 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066365437 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.091310836 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084304766 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079244385 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066265047 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075076218 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066475629 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065487114 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067273491 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087546408 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077045464 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074380441 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06674934 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073762289 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067505926 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081745014 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.082753741 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074093349 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081552456 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.089875211 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069734734 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082617415 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065580516 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081651859 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075216102 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066136573 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066278763 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071117413 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066107683 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068256917 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077588114 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07533227 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070722607 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080974031 seconds)
  done (took 6.533287012 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08614418 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092817076 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081623772 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081744628 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064922784 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066179865 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066228281 seconds)
  done (took 1.981215371 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069207656 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084756525 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087341941 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087251671 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.078481297 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088348263 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07301847 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065802356 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096300852 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065055341 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084816999 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095725341 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069751422 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078629263 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090058364 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06600894 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089376924 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065759189 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.066364048 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089019296 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070476174 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094214432 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077211944 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065895758 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077587754 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066378351 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096876432 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07379613 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067225966 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067227057 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067110986 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093757233 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.077459129 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078584726 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067155609 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0799105 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.078813724 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069381948 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.076022015 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076041593 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.077883871 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067066094 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065241546 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068008472 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068813029 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076698757 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065184267 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067319182 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066952774 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084301715 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065155248 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078054033 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069722408 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071957954 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071814029 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071264915 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074875635 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067946845 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084410958 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067079721 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082231131 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081500445 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077951724 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081592393 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066211459 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07746608 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078331252 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067012059 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068244641 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067832623 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082376228 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069477972 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068040962 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076650585 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.065916532 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089501991 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090217453 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.065618142 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080229674 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068007184 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067235648 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.076757464 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08944743 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071772146 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066891691 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070851465 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068449001 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069239497 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0651894 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070332508 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067091591 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072462344 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067025293 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070165574 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068910021 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081669112 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065621738 seconds)
  done (took 8.67726691 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071122229 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066802029 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067801993 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066465867 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066202104 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066735007 seconds)
  done (took 1.876565513 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093602726 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066694758 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079939823 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066232703 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102391911 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080914777 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081101627 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075952151 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080356883 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078102164 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080958461 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086615248 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.085391622 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06885986 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081521037 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067705369 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.080945786 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071061326 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077698243 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070130598 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080537467 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069189014 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069419085 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085545901 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071397751 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067843199 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076678875 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079068549 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077905794 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076538338 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069245368 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070747997 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075041465 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076049033 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.081540814 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075040574 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066906483 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073317919 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069790204 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070584061 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083833233 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069457917 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069331539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07328103 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076232375 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074727503 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073154447 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07567166 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08110791 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073243263 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073279912 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067649998 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070549446 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073167988 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075053874 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076146919 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073124741 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.081249006 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069013975 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075001849 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067609863 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070623311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.083452744 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070240064 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075353328 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073045296 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075036223 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069114193 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0693969 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066937543 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073444044 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06687851 seconds)
  done (took 6.838312159 seconds)
done (took 27.371258172 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.561094394 seconds)
  done (took 1.978885812 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.632658827 seconds)
  done (took 2.084775368 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.292167311 seconds)
  done (took 9.737080903 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.421493311 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502636064 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.767578814 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140177313 seconds)
  done (took 3.301074402 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.817542112 seconds)
  done (took 2.275756675 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.243361356 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228659944 seconds)
  done (took 1.943364638 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.40554922 seconds)
  done (took 1.850975528 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.119451231 seconds)
  done (took 2.57110463 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.246391178 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163225428 seconds)
  done (took 1.864379904 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445867092 seconds)
  done (took 1.894713676 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.643670697 seconds)
  done (took 6.095485221 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229660617 seconds)
  done (took 1.729653926 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241931918 seconds)
  done (took 1.692534034 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.326524402 seconds)
  done (took 3.777022105 seconds)
done (took 44.264465459 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087202366 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084275753 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083991708 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079977243 seconds)
  done (took 1.768494836 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076992229 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.06973859 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073197117 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.069827891 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.072948697 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.069353 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070799043 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071843474 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.069162615 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.069717207 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069327962 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070233898 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.072251706 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070777337 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068142037 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.072444118 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.073264517 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.069590121 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072191847 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.06968577 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.067594886 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.072248872 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07239855 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068499321 seconds)
  done (took 3.159067335 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080635538 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071630364 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074052255 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070368131 seconds)
  done (took 1.758352713 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079156331 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.086742825 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.075832993 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076080732 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.087200987 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.082851929 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.065914051 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.065881991 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.067046491 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075959717 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064873804 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092100017 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085234405 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076178103 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.0812159 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062575695 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064700939 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084013549 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076700831 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076905064 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067415534 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076029171 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.065074345 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08572624 seconds)
  done (took 3.277093077 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089532166 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065678467 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084844949 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090580899 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092287213 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064883737 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083547137 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092056778 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127473084 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066107804 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070940483 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065202802 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103796439 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06522778 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084803852 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108327643 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111836173 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069096523 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097792586 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065230857 seconds)
  done (took 3.165436221 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084460222 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068829857 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069405501 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064353236 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074505115 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072496753 seconds)
  done (took 1.903044938 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070388456 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067051897 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065799028 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065582527 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071145073 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066174538 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064939812 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06679912 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066759128 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066261655 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065879448 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065033683 seconds)
  done (took 2.266319568 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205845311 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07271514 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074441431 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064980746 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071054499 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065705923 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081545209 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068347892 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092477057 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065998508 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066108836 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068417128 seconds)
  done (took 2.463184812 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221704871 seconds)
    (2/608) benchmarking ("sumrange", "Array{Int64,2}")...
    done (took 0.094112197 seconds)
    (3/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073917059 seconds)
    (4/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221077274 seconds)
    (5/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144835476 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101469031 seconds)
    (7/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.149701609 seconds)
    (8/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.093257237 seconds)
    (9/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110006059 seconds)
    (10/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112062862 seconds)
    (11/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106856333 seconds)
    (12/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.152643506 seconds)
    (13/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141087742 seconds)
    (14/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09657793 seconds)
    (15/608) benchmarking ("sumrange_view", "Array{Float64,2}")...
    done (took 0.08657039 seconds)
    (16/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153065737 seconds)
    (17/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19047866 seconds)
    (18/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10343664 seconds)
    (19/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128939192 seconds)
    (20/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087590041 seconds)
    (21/608) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120365543 seconds)
    (22/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14432369 seconds)
    (23/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156559118 seconds)
    (24/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098185548 seconds)
    (25/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.1361952 seconds)
    (26/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156140958 seconds)
    (27/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.155059806 seconds)
    (28/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123134654 seconds)
    (29/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097446043 seconds)
    (30/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101368208 seconds)
    (31/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11358609 seconds)
    (32/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143750742 seconds)
    (33/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136377928 seconds)
    (34/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077432832 seconds)
    (35/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072667433 seconds)
    (36/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158942496 seconds)
    (37/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124037484 seconds)
    (38/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.12207237 seconds)
    (39/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143697606 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105428223 seconds)
    (41/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090764628 seconds)
    (42/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167597034 seconds)
    (43/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.088242368 seconds)
    (44/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.145421293 seconds)
    (45/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160204319 seconds)
    (46/608) benchmarking ("sumeach", "Array{Float64,2}")...
    done (took 0.069883101 seconds)
    (47/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133412607 seconds)
    (48/608) benchmarking ("sumvector", "Array{Int64,2}")...
    done (took 0.100798399 seconds)
    (49/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144173855 seconds)
    (50/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.094239495 seconds)
    (51/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.148130038 seconds)
    (52/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083342493 seconds)
    (53/608) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.274636265 seconds)
    (54/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.092892574 seconds)
    (55/608) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128723554 seconds)
    (56/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.118271001 seconds)
    (57/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191507829 seconds)
    (58/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085862596 seconds)
    (59/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.084591646 seconds)
    (60/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15821029 seconds)
    (61/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101085818 seconds)
    (62/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076437106 seconds)
    (63/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122346558 seconds)
    (64/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108443593 seconds)
    (65/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114322456 seconds)
    (66/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10009776 seconds)
    (67/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085974194 seconds)
    (68/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.136882558 seconds)
    (69/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200113228 seconds)
    (70/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136315745 seconds)
    (71/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130878587 seconds)
    (72/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082338418 seconds)
    (73/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115836129 seconds)
    (74/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105396972 seconds)
    (75/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110253951 seconds)
    (76/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115468458 seconds)
    (77/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170265698 seconds)
    (78/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152615562 seconds)
    (79/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122521189 seconds)
    (80/608) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069581044 seconds)
    (81/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108035653 seconds)
    (82/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145350057 seconds)
    (83/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127754244 seconds)
    (84/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107141881 seconds)
    (85/608) benchmarking ("mapr_access", "Array{Int64,2}")...
    done (took 0.138073351 seconds)
    (86/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119413665 seconds)
    (87/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08608944 seconds)
    (88/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12566467 seconds)
    (89/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151959395 seconds)
    (90/608) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119927478 seconds)
    (91/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135390337 seconds)
    (92/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.124721294 seconds)
    (93/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085545554 seconds)
    (94/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.135344119 seconds)
    (95/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.113838978 seconds)
    (96/608) benchmarking ("sumlogical_view", "Array{Float64,2}")...
    done (took 0.123887637 seconds)
    (97/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115838783 seconds)
    (98/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132715881 seconds)
    (99/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121175848 seconds)
    (100/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.143636313 seconds)
    (101/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162264146 seconds)
    (102/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119683231 seconds)
    (103/608) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071284873 seconds)
    (104/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117095841 seconds)
    (105/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096190714 seconds)
    (106/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077800628 seconds)
    (107/608) benchmarking "5d"...
    done (took 0.145574474 seconds)
    (108/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074293051 seconds)
    (109/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170920602 seconds)
    (110/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.29758432 seconds)
    (111/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09519942 seconds)
    (112/608) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.12058128 seconds)
    (113/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12436676 seconds)
    (114/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103751546 seconds)
    (115/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103005354 seconds)
    (116/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145811923 seconds)
    (117/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.099099449 seconds)
    (118/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130729916 seconds)
    (119/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09980763 seconds)
    (120/608) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083037937 seconds)
    (121/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096405188 seconds)
    (122/608) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.112883473 seconds)
    (123/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133098948 seconds)
    (124/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08296754 seconds)
    (125/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102463539 seconds)
    (126/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107074034 seconds)
    (127/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075300825 seconds)
    (128/608) benchmarking ("sumrange", "Array{Float64,2}")...
    done (took 0.0787949 seconds)
    (129/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126111769 seconds)
    (130/608) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072415386 seconds)
    (131/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114643047 seconds)
    (132/608) benchmarking ("sumvector_view", "Array{Float64,2}")...
    done (took 0.088250601 seconds)
    (133/608) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093411049 seconds)
    (134/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1157213 seconds)
    (135/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123109446 seconds)
    (136/608) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078345195 seconds)
    (137/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1191029 seconds)
    (138/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099663007 seconds)
    (139/608) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102710076 seconds)
    (140/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127668639 seconds)
    (141/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15252775 seconds)
    (142/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084983522 seconds)
    (143/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078722864 seconds)
    (144/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160385371 seconds)
    (145/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117780606 seconds)
    (146/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101438386 seconds)
    (147/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137179102 seconds)
    (148/608) benchmarking ("sumcartesian_view", "Array{Float64,2}")...
    done (took 0.098785767 seconds)
    (149/608) benchmarking ("sumelt", "Array{Float64,2}")...
    done (took 0.070603832 seconds)
    (150/608) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11863568 seconds)
    (151/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15210443 seconds)
    (152/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09495036 seconds)
    (153/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13860733 seconds)
    (154/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166928025 seconds)
    (155/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087876568 seconds)
    (156/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15631054 seconds)
    (157/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.09050922 seconds)
    (158/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100675456 seconds)
    (159/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083313411 seconds)
    (160/608) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103345023 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118951111 seconds)
    (162/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117179463 seconds)
    (163/608) benchmarking "ind2sub"...
    done (took 0.120102058 seconds)
    (164/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078677634 seconds)
    (165/608) benchmarking ("sumlinear_view", "Array{Float64,2}")...
    done (took 0.112771682 seconds)
    (166/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116839068 seconds)
    (167/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.122551757 seconds)
    (168/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156050996 seconds)
    (169/608) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072946494 seconds)
    (170/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.08914209 seconds)
    (171/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094913421 seconds)
    (172/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128366715 seconds)
    (173/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079710273 seconds)
    (174/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079027822 seconds)
    (175/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268654045 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098817541 seconds)
    (177/608) benchmarking ("sumcolon", "Array{Float64,2}")...
    done (took 0.092089777 seconds)
    (178/608) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092474866 seconds)
    (179/608) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.091001163 seconds)
    (180/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.097668592 seconds)
    (181/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126703558 seconds)
    (182/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113965246 seconds)
    (183/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099981111 seconds)
    (184/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120388423 seconds)
    (185/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092055816 seconds)
    (186/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151505155 seconds)
    (187/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.129870253 seconds)
    (188/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083333814 seconds)
    (189/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.148241192 seconds)
    (190/608) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098255311 seconds)
    (191/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09989399 seconds)
    (192/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.069512292 seconds)
    (193/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.123816074 seconds)
    (194/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.088355453 seconds)
    (195/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145241327 seconds)
    (196/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075882193 seconds)
    (197/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148598982 seconds)
    (198/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117344981 seconds)
    (199/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112201317 seconds)
    (200/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11390942 seconds)
    (201/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080803973 seconds)
    (202/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131230451 seconds)
    (203/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076595841 seconds)
    (204/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.084926978 seconds)
    (205/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133296553 seconds)
    (206/608) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070715643 seconds)
    (207/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109578309 seconds)
    (208/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.101733257 seconds)
    (209/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.121519179 seconds)
    (210/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10991741 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "Array{Int64,2}")...
    done (took 0.070630807 seconds)
    (212/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110123787 seconds)
    (213/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.145446242 seconds)
    (214/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1242165 seconds)
    (215/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115512754 seconds)
    (216/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126008192 seconds)
    (217/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13471412 seconds)
    (218/608) benchmarking ("sumcolon_view", "Array{Float64,2}")...
    done (took 0.076322885 seconds)
    (219/608) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125415059 seconds)
    (220/608) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105399922 seconds)
    (221/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.087630116 seconds)
    (222/608) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086623378 seconds)
    (223/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111651282 seconds)
    (224/608) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129983809 seconds)
    (225/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.10128953 seconds)
    (226/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.121106193 seconds)
    (227/608) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071328267 seconds)
    (228/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.120451279 seconds)
    (229/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080205074 seconds)
    (230/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099639086 seconds)
    (231/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089818729 seconds)
    (232/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091720061 seconds)
    (233/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081254014 seconds)
    (234/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.147719687 seconds)
    (235/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138052978 seconds)
    (236/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116641389 seconds)
    (237/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108879251 seconds)
    (238/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.098185653 seconds)
    (239/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113344092 seconds)
    (240/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.081384953 seconds)
    (241/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099854868 seconds)
    (242/608) benchmarking ("sumlogical_view", "Array{Int64,2}")...
    done (took 0.288045978 seconds)
    (243/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140932086 seconds)
    (244/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.076255028 seconds)
    (245/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114736715 seconds)
    (246/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.115111601 seconds)
    (247/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.175490439 seconds)
    (248/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089137298 seconds)
    (249/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.1428344 seconds)
    (250/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140317943 seconds)
    (251/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121958978 seconds)
    (252/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095353267 seconds)
    (253/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124534307 seconds)
    (254/608) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069840562 seconds)
    (255/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070705665 seconds)
    (256/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.083879925 seconds)
    (257/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.095851343 seconds)
    (258/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115364381 seconds)
    (259/608) benchmarking ("sumvector", "Array{Float64,2}")...
    done (took 0.093348161 seconds)
    (260/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.117588405 seconds)
    (261/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079615252 seconds)
    (262/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080076049 seconds)
    (263/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106279356 seconds)
    (264/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140525035 seconds)
    (265/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119535616 seconds)
    (266/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129437062 seconds)
    (267/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1184492 seconds)
    (268/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111035686 seconds)
    (269/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150443353 seconds)
    (270/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.166712578 seconds)
    (271/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.11367111 seconds)
    (272/608) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070967837 seconds)
    (273/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137110183 seconds)
    (274/608) benchmarking "4d"...
    done (took 0.117524292 seconds)
    (275/608) benchmarking ("sumlinear_view", "Array{Int64,2}")...
    done (took 0.110807045 seconds)
    (276/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.142288099 seconds)
    (277/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116016827 seconds)
    (278/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.08345476 seconds)
    (279/608) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105648901 seconds)
    (280/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089802037 seconds)
    (281/608) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095821742 seconds)
    (282/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13883792 seconds)
    (283/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100696571 seconds)
    (284/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173405443 seconds)
    (285/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.09499178 seconds)
    (286/608) benchmarking ("sumeach", "Array{Int64,2}")...
    done (took 0.071856634 seconds)
    (287/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110132667 seconds)
    (288/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119441244 seconds)
    (289/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.155257848 seconds)
    (290/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.146727766 seconds)
    (291/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151789527 seconds)
    (292/608) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100088665 seconds)
    (293/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077143333 seconds)
    (294/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101715913 seconds)
    (295/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126501975 seconds)
    (296/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099574746 seconds)
    (297/608) benchmarking ("sumvector_view", "Array{Int64,2}")...
    done (took 0.082716267 seconds)
    (298/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.114193687 seconds)
    (299/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138188742 seconds)
    (300/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096389122 seconds)
    (301/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084391711 seconds)
    (302/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104936075 seconds)
    (303/608) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076889402 seconds)
    (304/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.262499139 seconds)
    (305/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122030508 seconds)
    (306/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110838505 seconds)
    (307/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127010597 seconds)
    (308/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.081765576 seconds)
    (309/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.094419671 seconds)
    (310/608) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106515688 seconds)
    (311/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128390534 seconds)
    (312/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074209534 seconds)
    (313/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105332253 seconds)
    (314/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118023576 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113057642 seconds)
    (316/608) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080266744 seconds)
    (317/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109564047 seconds)
    (318/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154495968 seconds)
    (319/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092132383 seconds)
    (320/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109269909 seconds)
    (321/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138913073 seconds)
    (322/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.086466972 seconds)
    (323/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.096264891 seconds)
    (324/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075393186 seconds)
    (325/608) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133082094 seconds)
    (326/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161496845 seconds)
    (327/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13462475 seconds)
    (328/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081632638 seconds)
    (329/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100310458 seconds)
    (330/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116005598 seconds)
    (331/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121301143 seconds)
    (332/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.128442679 seconds)
    (333/608) benchmarking ("sumelt_boundscheck", "Array{Float64,2}")...
    done (took 0.071630001 seconds)
    (334/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111716709 seconds)
    (335/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131697579 seconds)
    (336/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101029553 seconds)
    (337/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13070929 seconds)
    (338/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10701458 seconds)
    (339/608) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082282534 seconds)
    (340/608) benchmarking ("sumcartesian_view", "Array{Int64,2}")...
    done (took 0.098241325 seconds)
    (341/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083561834 seconds)
    (342/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.116234468 seconds)
    (343/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.181030864 seconds)
    (344/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092638342 seconds)
    (345/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.112654882 seconds)
    (346/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100402021 seconds)
    (347/608) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.114562745 seconds)
    (348/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.111774414 seconds)
    (349/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101435127 seconds)
    (350/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.143145279 seconds)
    (351/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111462087 seconds)
    (352/608) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09400046 seconds)
    (353/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123972521 seconds)
    (354/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100189345 seconds)
    (355/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107925281 seconds)
    (356/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114386682 seconds)
    (357/608) benchmarking "3d"...
    done (took 0.097415248 seconds)
    (358/608) benchmarking ("sum", "3darray")...
    done (took 0.093478809 seconds)
    (359/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092984467 seconds)
    (360/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.104035797 seconds)
    (361/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167466148 seconds)
    (362/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114735543 seconds)
    (363/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160571899 seconds)
    (364/608) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099118969 seconds)
    (365/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.118362793 seconds)
    (366/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.303759118 seconds)
    (367/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14733841 seconds)
    (368/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072077036 seconds)
    (369/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074872577 seconds)
    (370/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076667799 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.083817507 seconds)
    (372/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128484228 seconds)
    (373/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080105867 seconds)
    (374/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120204526 seconds)
    (375/608) benchmarking ("sumlogical", "Array{Int64,2}")...
    done (took 0.121674162 seconds)
    (376/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10918636 seconds)
    (377/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114465153 seconds)
    (378/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128172037 seconds)
    (379/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.089853976 seconds)
    (380/608) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107177486 seconds)
    (381/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091418906 seconds)
    (382/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103150549 seconds)
    (383/608) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067950955 seconds)
    (384/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123547952 seconds)
    (385/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116309438 seconds)
    (386/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.078644818 seconds)
    (387/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091362437 seconds)
    (388/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.098965009 seconds)
    (389/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146212619 seconds)
    (390/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.117698991 seconds)
    (391/608) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115341815 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076377974 seconds)
    (393/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10868877 seconds)
    (394/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111950297 seconds)
    (395/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100739971 seconds)
    (396/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163622345 seconds)
    (397/608) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079379327 seconds)
    (398/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106295558 seconds)
    (399/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074478056 seconds)
    (400/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077250553 seconds)
    (401/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121658587 seconds)
    (402/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14129536 seconds)
    (403/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.126736678 seconds)
    (404/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.123749952 seconds)
    (405/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080414406 seconds)
    (406/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.094002857 seconds)
    (407/608) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10331895 seconds)
    (408/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115154487 seconds)
    (409/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106976398 seconds)
    (410/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122228393 seconds)
    (411/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095278318 seconds)
    (412/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108693521 seconds)
    (413/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126998547 seconds)
    (414/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139748962 seconds)
    (415/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124737539 seconds)
    (416/608) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091160334 seconds)
    (417/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112921112 seconds)
    (418/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1225917 seconds)
    (419/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146473063 seconds)
    (420/608) benchmarking ("sumelt", "Array{Int64,2}")...
    done (took 0.074527551 seconds)
    (421/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099990388 seconds)
    (422/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.126747512 seconds)
    (423/608) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098046446 seconds)
    (424/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197114302 seconds)
    (425/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146120085 seconds)
    (426/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153080567 seconds)
    (427/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085995899 seconds)
    (428/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110483894 seconds)
    (429/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279299533 seconds)
    (430/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105143399 seconds)
    (431/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128784874 seconds)
    (432/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079924914 seconds)
    (433/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.130808096 seconds)
    (434/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14668578 seconds)
    (435/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077579322 seconds)
    (436/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.114912499 seconds)
    (437/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122665796 seconds)
    (438/608) benchmarking ("sumlogical", "Array{Float64,2}")...
    done (took 0.12303802 seconds)
    (439/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.144650502 seconds)
    (440/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095097412 seconds)
    (441/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084106638 seconds)
    (442/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118759736 seconds)
    (443/608) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107504824 seconds)
    (444/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083498881 seconds)
    (445/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133522258 seconds)
    (446/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109134857 seconds)
    (447/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.123202062 seconds)
    (448/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079248596 seconds)
    (449/608) benchmarking ("sumeach_view", "Array{Float64,2}")...
    done (took 0.089886184 seconds)
    (450/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076281205 seconds)
    (451/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105125848 seconds)
    (452/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114218182 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098662732 seconds)
    (454/608) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072313354 seconds)
    (455/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.093661267 seconds)
    (456/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136779034 seconds)
    (457/608) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071866323 seconds)
    (458/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127988785 seconds)
    (459/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160046447 seconds)
    (460/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077767894 seconds)
    (461/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.102979893 seconds)
    (462/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102714404 seconds)
    (463/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092867075 seconds)
    (464/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079399473 seconds)
    (465/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100285053 seconds)
    (466/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097281996 seconds)
    (467/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083090669 seconds)
    (468/608) benchmarking ("sumcolon_view", "Array{Int64,2}")...
    done (took 0.093731174 seconds)
    (469/608) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099699871 seconds)
    (470/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.129309059 seconds)
    (471/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162151519 seconds)
    (472/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085038804 seconds)
    (473/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140716299 seconds)
    (474/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137690675 seconds)
    (475/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110217711 seconds)
    (476/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.122163522 seconds)
    (477/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101411196 seconds)
    (478/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129827752 seconds)
    (479/608) benchmarking "sub2ind"...
    done (took 0.717914032 seconds)
    (480/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077192587 seconds)
    (481/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145094207 seconds)
    (482/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112682686 seconds)
    (483/608) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167904186 seconds)
    (484/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096045186 seconds)
    (485/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114116318 seconds)
    (486/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107225445 seconds)
    (487/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11681312 seconds)
    (488/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304028215 seconds)
    (489/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096277884 seconds)
    (490/608) benchmarking ("mapr_access", "Array{Float64,2}")...
    done (took 0.13286191 seconds)
    (491/608) benchmarking "6d"...
    done (took 0.178032037 seconds)
    (492/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.113864497 seconds)
    (493/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121720371 seconds)
    (494/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.110866444 seconds)
    (495/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.116666542 seconds)
    (496/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076108738 seconds)
    (497/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094973709 seconds)
    (498/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096804596 seconds)
    (499/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084112982 seconds)
    (500/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100406189 seconds)
    (501/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106533143 seconds)
    (502/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105908476 seconds)
    (503/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.089084742 seconds)
    (504/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109921303 seconds)
    (505/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112459266 seconds)
    (506/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.127438024 seconds)
    (507/608) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082113854 seconds)
    (508/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09195017 seconds)
    (509/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143626144 seconds)
    (510/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.098976584 seconds)
    (511/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109461062 seconds)
    (512/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144740659 seconds)
    (513/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131933771 seconds)
    (514/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081808287 seconds)
    (515/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113096267 seconds)
    (516/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.109178398 seconds)
    (517/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135680811 seconds)
    (518/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077550392 seconds)
    (519/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113242601 seconds)
    (520/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141381127 seconds)
    (521/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102043077 seconds)
    (522/608) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097510832 seconds)
    (523/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080081987 seconds)
    (524/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09820356 seconds)
    (525/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164139174 seconds)
    (526/608) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07128825 seconds)
    (527/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150284532 seconds)
    (528/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115831191 seconds)
    (529/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107071361 seconds)
    (530/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109080561 seconds)
    (531/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107040036 seconds)
    (532/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125169537 seconds)
    (533/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.094807097 seconds)
    (534/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10079314 seconds)
    (535/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117160423 seconds)
    (536/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.088986872 seconds)
    (537/608) benchmarking ("sumrange_view", "Array{Int64,2}")...
    done (took 0.106430826 seconds)
    (538/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110663207 seconds)
    (539/608) benchmarking ("sumcolon", "Array{Int64,2}")...
    done (took 0.080188644 seconds)
    (540/608) benchmarking ("sumcartesian", "Array{Int64,2}")...
    done (took 0.072843707 seconds)
    (541/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.117061277 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.083445375 seconds)
    (543/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102391115 seconds)
    (544/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076986607 seconds)
    (545/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106173567 seconds)
    (546/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106261601 seconds)
    (547/608) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095324166 seconds)
    (548/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081011895 seconds)
    (549/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090073129 seconds)
    (550/608) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100170393 seconds)
    (551/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094431091 seconds)
    (552/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14551042 seconds)
    (553/608) benchmarking ("sumeach_view", "Array{Int64,2}")...
    done (took 0.254036558 seconds)
    (554/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099975464 seconds)
    (555/608) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069635305 seconds)
    (556/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108412046 seconds)
    (557/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15600197 seconds)
    (558/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132903735 seconds)
    (559/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079935104 seconds)
    (560/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110306923 seconds)
    (561/608) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101271881 seconds)
    (562/608) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111283857 seconds)
    (563/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112822616 seconds)
    (564/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.124878063 seconds)
    (565/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107462772 seconds)
    (566/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077656211 seconds)
    (567/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076694788 seconds)
    (568/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076541941 seconds)
    (569/608) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097217632 seconds)
    (570/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.124519814 seconds)
    (571/608) benchmarking ("sumlinear", "Array{Float64,2}")...
    done (took 0.070592677 seconds)
    (572/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.1236461 seconds)
    (573/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.113981102 seconds)
    (574/608) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119679632 seconds)
    (575/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110644932 seconds)
    (576/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113482439 seconds)
    (577/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103673966 seconds)
    (578/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151447075 seconds)
    (579/608) benchmarking "2d"...
    done (took 0.082520404 seconds)
    (580/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.078842198 seconds)
    (581/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.114007465 seconds)
    (582/608) benchmarking "7d"...
    done (took 0.229470983 seconds)
    (583/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094078271 seconds)
    (584/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102125024 seconds)
    (585/608) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087382893 seconds)
    (586/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077296124 seconds)
    (587/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.119329084 seconds)
    (588/608) benchmarking ("sumlinear", "Array{Int64,2}")...
    done (took 0.073229257 seconds)
    (589/608) benchmarking ("sumcartesian", "Array{Float64,2}")...
    done (took 0.072623464 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09757654 seconds)
    (591/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092825348 seconds)
    (592/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099937513 seconds)
    (593/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108406355 seconds)
    (594/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163452732 seconds)
    (595/608) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092549579 seconds)
    (596/608) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094758508 seconds)
    (597/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08873145 seconds)
    (598/608) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072647176 seconds)
    (599/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080148132 seconds)
    (600/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12117284 seconds)
    (601/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105413703 seconds)
    (602/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113188354 seconds)
    (603/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.120943086 seconds)
    (604/608) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101735971 seconds)
    (605/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.099465532 seconds)
    (606/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.099741848 seconds)
    (607/608) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080043993 seconds)
    (608/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101061172 seconds)
  done (took 71.195317338 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141920714 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.124809117 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125419007 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.174545139 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150398825 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.299616175 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.178700667 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28790966 seconds)
  done (took 3.089740904 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070343582 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092967262 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103133564 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084855739 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066241412 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071630368 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222688574 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084525469 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066687322 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090548161 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080446753 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07184825 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413270446 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066199762 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070075271 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077662953 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067118147 seconds)
  done (took 3.379035208 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395616794 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.821294745 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.364441684 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073420499 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.322394206 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09299776 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.239385332 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.152245006 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082636362 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.682541111 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.158836769 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.14840344 seconds)
  done (took 19.111983764 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084139432 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074126255 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086943877 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086813047 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076293394 seconds)
  done (took 1.9880622 seconds)
done (took 120.058258684 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.08371979 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.440705004 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069048464 seconds)
  done (took 2.112486412 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091985105 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086229773 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086427772 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08800342 seconds)
  done (took 1.935860226 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076830654 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07580399 seconds)
  done (took 1.728821697 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.22865947 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.171770421 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.097266405 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086003852 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080003092 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079860557 seconds)
  done (took 1.827668881 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074721837 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071248286 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071304807 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074200072 seconds)
  done (took 1.868784675 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070308764 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065384946 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067770753 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069572812 seconds)
  done (took 1.851086405 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.090553879 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.088160111 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.117594843 seconds)
  done (took 1.874282204 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086274356 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084150841 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077862762 seconds)
  done (took 1.829988834 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10316124 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093538511 seconds)
  done (took 1.777160122 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08265381 seconds)
  done (took 1.664457453 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092640357 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099195352 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129724273 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112465162 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136328883 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112238116 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082690504 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.083161865 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076904112 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.084415083 seconds)
  done (took 2.589964629 seconds)
done (took 23.218714593 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080898833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.191750172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.316039629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089317652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.651951519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.313971475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.731201544 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090872472 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139206153 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068524867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085443983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.632785343 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.730963044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.147997268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.717679494 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.134883914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.561242544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067929385 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067013262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067808294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.716580752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067418419 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067838507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068161172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.560233079 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.331804174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0701638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.135687629 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068160429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072476183 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.315819766 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069671824 seconds)
  done (took 13.993650256 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072694201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119933303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072461689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083789936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070111336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069519267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071158568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06834109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118844633 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068331771 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08608866 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067469561 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072565597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069349146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088595366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067941883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070409363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068577131 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068152271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06926367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087715824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068120658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069147035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068862823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068896695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082425581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070362485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06846129 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068690182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072991577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074565276 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07023003 seconds)
  done (took 4.010299172 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119461996 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124224565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073686096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105017642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109966447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070808266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144507136 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091613442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126142858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068904211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086435956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068070104 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10301548 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070013275 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090484379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068613047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071307734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068991594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068141629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069237731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088211132 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068404972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069318681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069166104 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069370317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084290771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070301711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068504131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068517295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073580239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074981083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070586214 seconds)
  done (took 4.272627453 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072796596 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072020712 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080077165 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081024414 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066388028 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068672477 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069989621 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066697912 seconds)
  done (took 2.179031446 seconds)
done (took 26.048844187 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080394138 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066767987 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069585784 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085588275 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072780103 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.076711228 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067159698 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073114723 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070451502 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070819214 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07222983 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066264757 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068967707 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064143066 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070974581 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065017673 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078982028 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069622348 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078242057 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078823962 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068218961 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071169104 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073902557 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078379693 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078463254 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078354423 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074805732 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071254827 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066471181 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069182682 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.06936553 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079147378 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.079601046 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079940325 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06678753 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.0659036 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070068456 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068454548 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079734033 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074900979 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067884777 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074810069 seconds)
  done (took 4.623118961 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087157782 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088502223 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081348856 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078092712 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089711206 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081072734 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085737188 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076378808 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076207151 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08547062 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072570515 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080185326 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077409115 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071219197 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075606994 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073010942 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078263966 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072670422 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076071741 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077054555 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086624963 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071117804 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084472102 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077946502 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073276965 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078903656 seconds)
  done (took 3.663711935 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075792195 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084583614 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091287969 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141589074 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11049183 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079187524 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080764957 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091701381 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096234952 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067114529 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071752031 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091206701 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091950804 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073043901 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07007449 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083439355 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082959919 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068740678 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073835451 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096125263 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088217993 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084621355 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093612979 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083657907 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066172424 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069450479 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071881862 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083470247 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069672266 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078512363 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069735189 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071305526 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068464563 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077489847 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069816985 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06649341 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093172883 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078936958 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080402632 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06780019 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077096103 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068492227 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092319175 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127578228 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066768945 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071234683 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071285947 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079090776 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066916449 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095548703 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079373261 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067013384 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068035298 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06649882 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066631655 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.069799129 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068972521 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069791665 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077347013 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074166061 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089622196 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072164549 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084799507 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066642921 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077879161 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066547284 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06946672 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066305655 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095928854 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06880993 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111135057 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068427482 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066062563 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078566212 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077736875 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073922715 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067115732 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084672328 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078806008 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071580404 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075569345 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070607396 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071055418 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098791736 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07032288 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06676756 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065858137 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071120892 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070831091 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067824678 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079146435 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066975947 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071054825 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085199622 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067134233 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.0683094 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071169261 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069855098 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066802477 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07797941 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071104644 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068644323 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077786254 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067944183 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071001455 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.0807711 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074543804 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066236078 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070952868 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071201461 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068967667 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06908754 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071388832 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069468235 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074701711 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074556208 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073631449 seconds)
  done (took 10.60018252 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165289581 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153921226 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069962835 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145652249 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075986052 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07857212 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14901144 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093074973 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068075807 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068652552 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067313602 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.106736726 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102025933 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.111825767 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079376603 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067995262 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090371223 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.111309289 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152124188 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146280338 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091100332 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076247565 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070687335 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069354592 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069583381 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078105947 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083988624 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077234696 seconds)
  done (took 4.369635398 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078575936 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102391602 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071513245 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089846144 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.085829176 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067744679 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069284741 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068752094 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08341439 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075329844 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067544811 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072719105 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071484748 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070573584 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068129223 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073986001 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074694753 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066682617 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07167463 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072972087 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077867448 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091548183 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07119834 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067125501 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070167409 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06745616 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074811718 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078832705 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067857522 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103064313 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065626024 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072770283 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082395217 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068337962 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067292166 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06791631 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067759667 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068813656 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069041713 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066232013 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066291574 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071384259 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066479185 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074474419 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081047895 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.069756562 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069366308 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07088889 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070690149 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065570573 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070383403 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070470575 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070653125 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075069299 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072054813 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07037722 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068754055 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096297713 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073757448 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067323162 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066780796 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066692018 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069945006 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076388662 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083443831 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06997802 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066615867 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067997494 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.079524153 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081047732 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067129742 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072849851 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065267252 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069358537 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070280352 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070189684 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068417766 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066466866 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06730827 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067743276 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068508759 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067473431 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066759478 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070694015 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065952198 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069515913 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06812117 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069493858 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075345907 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067109591 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071341365 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068721219 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066406571 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070688683 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073309942 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071074717 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08318286 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077714518 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068328893 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067102864 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081898497 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070285118 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067442444 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073774261 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07327721 seconds)
  done (took 9.226880891 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.0926525 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067385363 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083900531 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09085575 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076739277 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072825061 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077411142 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0667266 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083123754 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071788695 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074680075 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065616139 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077766569 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07680622 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067432044 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077791485 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070215762 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085039397 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081682683 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065802677 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076087079 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079634468 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079284044 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081920557 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081291356 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082532144 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078901613 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.076970104 seconds)
  done (took 3.818199902 seconds)
done (took 37.898130119 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.694012825 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.895732661 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.696945328 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.192385404 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.817996413 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.684597875 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.752358747 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.680578939 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.848820574 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.696458174 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.182241411 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.759933314 seconds)
done (took 65.652319073 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.850188355 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.841856495 seconds)
    (2/2) benchmarking "String"...
    done (took 1.934483004 seconds)
  done (took 5.43774612 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 6.669441058 seconds)
    (2/3) benchmarking "different length"...
    done (took 6.672873605 seconds)
    (3/3) benchmarking "different"...
    done (took 2.378307326 seconds)
  done (took 17.320571669 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.337112602 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.194855649 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.945670946 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.664548119 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.673756725 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.149409706 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.813550757 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.30470242 seconds)
  done (took 31.357081407 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.674108532 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.991263049 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.043519008 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.117074877 seconds)
  done (took 20.511706008 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.111866361 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.036198579 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.036495712 seconds)
    (4/4) benchmarking "different"...
    done (took 2.362478172 seconds)
  done (took 10.2516908 seconds)
done (took 96.830656355 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.668228705 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.702286951 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.67407624 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.667535218 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.770064109 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.67787412 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.825759409 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.734024923 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.669843992 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.679619966 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.670327553 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 4.049770219 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.675407911 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.810215558 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.671082925 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.667342533 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.69253076 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.245516734 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.841616967 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.682523243 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.677574802 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.678311836 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.673743965 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.668381789 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.688972867 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.670498795 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.174224069 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.678076013 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.055302273 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.674430322 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.680476305 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.069684158 seconds)
  done (took 200.067349978 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.66601985 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.399568506 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.456599627 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.679571479 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.949079972 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.011409959 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.24232256 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.967371497 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.671328505 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.695344056 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.531404404 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.667977417 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.629883982 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.340804952 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.709137143 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.688282814 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.480736575 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.42014179 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.71353516 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.340979609 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.671159056 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.103705686 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.110011556 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.404474016 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.689322097 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.722438134 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.671648478 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.671236456 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.011858071 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.438542593 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.671065799 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.678857174 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.117810939 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.900263599 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.676410638 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.68016954 seconds)
  done (took 173.094871219 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.92899842 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.669720369 seconds)
    (2/118) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.667260383 seconds)
    (3/118) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.667326252 seconds)
    (4/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.667343209 seconds)
    (5/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.675179418 seconds)
    (6/118) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.667884453 seconds)
    (7/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.795869582 seconds)
    (8/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79984153 seconds)
    (9/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.272192803 seconds)
    (10/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.621708235 seconds)
    (11/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.723363767 seconds)
    (12/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.670988243 seconds)
    (13/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.918250491 seconds)
    (14/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.673235955 seconds)
    (15/118) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.668355796 seconds)
    (16/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.744371339 seconds)
    (17/118) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.691087976 seconds)
    (18/118) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.670727777 seconds)
    (19/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.685946416 seconds)
    (20/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.704266681 seconds)
    (21/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.671267273 seconds)
    (22/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670419707 seconds)
    (23/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809213091 seconds)
    (24/118) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.69151827 seconds)
    (25/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.67043554 seconds)
    (26/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.682817223 seconds)
    (27/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.669739068 seconds)
    (28/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.676278076 seconds)
    (29/118) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.037956466 seconds)
    (30/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.671075428 seconds)
    (31/118) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.07732089 seconds)
    (32/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.672667315 seconds)
    (33/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671975415 seconds)
    (34/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.677669213 seconds)
    (35/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.989382355 seconds)
    (36/118) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.674103671 seconds)
    (37/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.671889861 seconds)
    (38/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.214946769 seconds)
    (39/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 10.462994591 seconds)
    (40/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.815166583 seconds)
    (41/118) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.676525602 seconds)
    (42/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.678492049 seconds)
    (43/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.671195473 seconds)
    (44/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.943460136 seconds)
    (45/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.674868617 seconds)
    (46/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.671829223 seconds)
    (47/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.670655821 seconds)
    (48/118) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.670721671 seconds)
    (49/118) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.670894117 seconds)
    (50/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.119719667 seconds)
    (51/118) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.674536329 seconds)
    (52/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.800216556 seconds)
    (53/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.674486262 seconds)
    (54/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.51622391 seconds)
    (55/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.675514015 seconds)
    (56/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.673453229 seconds)
    (57/118) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.896332404 seconds)
    (58/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 9.074873874 seconds)
    (59/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.675536066 seconds)
    (60/118) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.673472492 seconds)
    (61/118) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.672494265 seconds)
    (62/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.67221783 seconds)
    (63/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.679064232 seconds)
    (64/118) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.924397207 seconds)
    (65/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.759902988 seconds)
    (66/118) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.675189673 seconds)
    (67/118) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.671397015 seconds)
    (68/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.678989228 seconds)
    (69/118) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.671685132 seconds)
    (70/118) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.867889651 seconds)
    (71/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.707975469 seconds)
    (72/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.16106159 seconds)
    (73/118) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.717301223 seconds)
    (74/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.25832931 seconds)
    (75/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.84486986 seconds)
    (76/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.705137604 seconds)
    (77/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.72696762 seconds)
    (78/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766547852 seconds)
    (79/118) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.7399605 seconds)
    (80/118) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.737425687 seconds)
    (81/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.704536791 seconds)
    (82/118) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.671529337 seconds)
    (83/118) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.671037287 seconds)
    (84/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.724899167 seconds)
    (85/118) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.675494999 seconds)
    (86/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.670860117 seconds)
    (87/118) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.543764549 seconds)
    (88/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.681419715 seconds)
    (89/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.764284981 seconds)
    (90/118) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.748760098 seconds)
    (91/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.804686809 seconds)
    (92/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.806477862 seconds)
    (93/118) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.746479005 seconds)
    (94/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.336428214 seconds)
    (95/118) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.676600962 seconds)
    (96/118) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.671619339 seconds)
    (97/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.920925039 seconds)
    (98/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.715955362 seconds)
    (99/118) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.676991546 seconds)
    (100/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.673371246 seconds)
    (101/118) benchmarking ("log", "Hermitian", 256)...
    done (took 3.547188044 seconds)
    (102/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806270987 seconds)
    (103/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.458151891 seconds)
    (104/118) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.675375318 seconds)
    (105/118) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.432449334 seconds)
    (106/118) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.537662976 seconds)
    (107/118) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.764483148 seconds)
    (108/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.162022953 seconds)
    (109/118) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.676979909 seconds)
    (110/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.765991018 seconds)
    (111/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.687332143 seconds)
    (112/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.673694612 seconds)
    (113/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.707593282 seconds)
    (114/118) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.67379844 seconds)
    (115/118) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.691223 seconds)
    (116/118) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.674521046 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.672008925 seconds)
    (118/118) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.025570692 seconds)
  done (took 388.414350115 seconds)
done (took 765.242631335 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.350319814 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.294931258 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.406864082 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.315409822 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.288410466 seconds)
  done (took 13.265015391 seconds)
done (took 14.881843389 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.5", "Array{Int64,1}")...
    done (took 1.758714722 seconds)
    (2/41) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.788053872 seconds)
    (3/41) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.690399239 seconds)
    (4/41) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.786184588 seconds)
    (5/41) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.697990953 seconds)
    (6/41) benchmarking ("> q0.95", "Array{Float32,1}")...
    done (took 1.696045161 seconds)
    (7/41) benchmarking ("> q0.99", "Array{Int64,1}")...
    done (took 1.707258847 seconds)
    (8/41) benchmarking ("> q0.5", "Array{Float64,1}")...
    done (took 1.740679708 seconds)
    (9/41) benchmarking ("> q0.8", "Array{Float32,1}")...
    done (took 1.72166168 seconds)
    (10/41) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.790580718 seconds)
    (11/41) benchmarking ("> q0.95", "Array{Bool,1}")...
    done (took 1.697738473 seconds)
    (12/41) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.683890363 seconds)
    (13/41) benchmarking ("> q0.8", "Array{UInt64,1}")...
    done (took 1.728628096 seconds)
    (14/41) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.786503279 seconds)
    (15/41) benchmarking ("> q0.99", "Array{Bool,1}")...
    done (took 1.6977282 seconds)
    (16/41) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.75090174 seconds)
    (17/41) benchmarking ("> q0.99", "Array{UInt8,1}")...
    done (took 1.696769556 seconds)
    (18/41) benchmarking ("> q0.99", "Array{UInt64,1}")...
    done (took 1.704996627 seconds)
    (19/41) benchmarking ("> q0.8", "Array{Int64,1}")...
    done (took 1.729226137 seconds)
    (20/41) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.704781848 seconds)
    (21/41) benchmarking ("> q0.8", "Array{UInt8,1}")...
    done (took 1.711767683 seconds)
    (22/41) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.744634638 seconds)
    (23/41) benchmarking ("> q0.8", "Array{Int8,1}")...
    done (took 1.721834028 seconds)
    (24/41) benchmarking ("> q0.5", "Array{UInt8,1}")...
    done (took 1.748115813 seconds)
    (25/41) benchmarking ("> q0.95", "Array{UInt64,1}")...
    done (took 1.717051926 seconds)
    (26/41) benchmarking ("> q0.5", "Array{Int8,1}")...
    done (took 1.746432823 seconds)
    (27/41) benchmarking ("> q0.95", "Array{Int8,1}")...
    done (took 1.703541216 seconds)
    (28/41) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.696776115 seconds)
    (29/41) benchmarking ("> q0.99", "Array{Float64,1}")...
    done (took 1.690624686 seconds)
    (30/41) benchmarking ("> q0.5", "Array{UInt64,1}")...
    done (took 1.756267912 seconds)
    (31/41) benchmarking ("> q0.95", "Array{Int64,1}")...
    done (took 1.721195562 seconds)
    (32/41) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.737104284 seconds)
    (33/41) benchmarking ("> q0.99", "Array{Int8,1}")...
    done (took 1.699197184 seconds)
    (34/41) benchmarking ("> q0.5", "Array{Float32,1}")...
    done (took 1.744279394 seconds)
    (35/41) benchmarking ("> q0.95", "Array{Float64,1}")...
    done (took 1.699531086 seconds)
    (36/41) benchmarking ("> q0.95", "Array{UInt8,1}")...
    done (took 1.692581855 seconds)
    (37/41) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.696576727 seconds)
    (38/41) benchmarking ("> q0.5", "Array{Bool,1}")...
    done (took 1.747538286 seconds)
    (39/41) benchmarking ("> q0.8", "Array{Bool,1}")...
    done (took 1.696428937 seconds)
    (40/41) benchmarking ("> q0.8", "Array{Float64,1}")...
    done (took 1.712110701 seconds)
    (41/41) benchmarking ("> q0.99", "Array{Float32,1}")...
    done (took 1.69810881 seconds)
  done (took 72.250942 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.966620946 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.992009535 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.758471678 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.962476261 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.724948991 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.965494502 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.878723576 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.851580886 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.84940994 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.685939791 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.686768583 seconds)
  done (took 21.934116484 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.095807182 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.12285298 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.781689941 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.995498491 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.757422576 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.998839674 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.918014533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.913736796 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.864549578 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.74871673 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.701728669 seconds)
  done (took 22.513638883 seconds)
done (took 118.317410447 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.306366336 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.77387587 seconds)
  done (took 5.741728325 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.69998691 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.835136307 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.682209891 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.688573518 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.679131206 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.691351564 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.682606685 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.703070668 seconds)
  done (took 15.281488437 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.680370919 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.680261844 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.68076955 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.680026398 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.68012296 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.680174512 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.690401545 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.68226339 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.690037549 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.690613089 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.701032063 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.737936886 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.76396117 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.691184538 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.719034332 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.701449697 seconds)
  done (took 28.764941209 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.746650756 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.720278216 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.704100523 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.727611012 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.750225724 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.738951163 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.752085347 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.684054753 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.68368007 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.685440919 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.690491846 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.683081173 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.692283153 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.683332668 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.683847165 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.684231357 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.685349303 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.685319177 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.692449972 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.683849478 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.683085047 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.683765475 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.684578287 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.683232014 seconds)
  done (took 42.424502936 seconds)
done (took 93.845586302 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.211412739 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.856119055 seconds)
  done (took 8.683957993 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.694129696 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.685615666 seconds)
  done (took 5.132928538 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.687566139 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.683429255 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.684254213 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.684257682 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.683885482 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.684802073 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.685815293 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.687009818 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.68934484 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.685498475 seconds)
  done (took 18.474950939 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.683748097 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.68896189 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.684471514 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.68331026 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.685272772 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.683178733 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.684985751 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.685109466 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.68512759 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.683052731 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.685020905 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.685329227 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.684706638 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.685865116 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.685000118 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.684313478 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.684617752 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.684423427 seconds)
  done (took 31.945994364 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.687419931 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.685071791 seconds)
  done (took 4.991530088 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.68515982 seconds)
    (2/7) benchmarking "second"...
    done (took 1.685601132 seconds)
    (3/7) benchmarking "month"...
    done (took 1.686568158 seconds)
    (4/7) benchmarking "year"...
    done (took 1.687171937 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.685463229 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.685841711 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.684501903 seconds)
  done (took 13.41927182 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.685761046 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.833728382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.893563329 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.400772954 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.687562817 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.688288614 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.712245235 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.689762698 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.690499236 seconds)
  done (took 18.90147563 seconds)
done (took 103.172674564 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 5.377901777 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.703855327 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.279303455 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.822559108 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.75703145 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.065927593 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.711361474 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.850382962 seconds)
done (took 43.191156151 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.722853127 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.298017106 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.384677918 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.745333195 seconds)
  done (took 15.067197709 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.69879164 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.379778538 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.730881662 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.653367503 seconds)
  done (took 22.212478031 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.23383345 seconds)
    (2/2) benchmarking "read"...
    done (took 2.112638242 seconds)
  done (took 5.994902074 seconds)
done (took 51.657477118 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.700077502 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.704742156 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.702159628 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.701556922 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.699272007 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.704316391 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.705100181 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.731933256 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.705910815 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.703346992 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.706063645 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.710121119 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70445685 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.700854238 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.705583289 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738967023 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715046901 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.70624532 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.704664379 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.706166997 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709204854 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.707818921 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.70294251 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.705810995 seconds)
  done (took 42.619015811 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.706767944 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.706426649 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.707547929 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.70654723 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.707798929 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.703146351 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.70459515 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.708692166 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.712310782 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.745807782 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735468428 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.713828923 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.713902197 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.726925234 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706344824 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.76588361 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.77457981 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725578469 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706059153 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.709269962 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.71184501 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715726183 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.738927578 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749980249 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.733305799 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731159406 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.738853745 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.752135719 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720987805 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.705907706 seconds)
  done (took 53.327019175 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.709754809 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.717356507 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.704079596 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.703492033 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.703122058 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.704752967 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.704368804 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.704668466 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.706122823 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.704815967 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.708427247 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.707556629 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.705528638 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.70567235 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.703805656 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.710886971 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.703738117 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.702834995 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.70258032 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.708094203 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.710263964 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.704967217 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.705346044 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.706488769 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.707685529 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.706720248 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.704354833 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.703140186 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.705405094 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.71045532 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.707508932 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.704164792 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.704711322 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.706047432 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.708434351 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.707075402 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.709801246 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.716166747 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.709153637 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.703051968 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.704759026 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.708732995 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.711487368 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.709743319 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.706451564 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.704401613 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.727437522 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.714803552 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.69594946 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.716850059 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.73738484 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.714675365 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.701967099 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.706855575 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.701194583 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.702479668 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.717691124 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.691896401 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.703100371 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.715804153 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.707667647 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.690961499 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.692678878 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.692525473 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.694211445 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.692962827 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.69318875 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.706539232 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.694040855 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.692997098 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.693954167 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.741313326 seconds)
  done (took 124.490240699 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.694233513 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.705928732 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.692783925 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.693909686 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692743579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.694215469 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.69320172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692730826 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693641382 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.694740293 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693380088 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.693829647 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693797185 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.692907148 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.692836117 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.696170376 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.693162251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693571913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.693642342 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.693284706 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693276257 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.695658078 seconds)
  done (took 38.900496135 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69309989 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.69388567 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.693281797 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.693675921 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.695657424 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.693712229 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.694186617 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.693866701 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693452495 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.693379427 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694764723 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695455569 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.694035075 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69491228 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.708105539 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.808566879 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819871969 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.738120752 seconds)
  done (took 32.418947639 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.745644939 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.752304127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.74799933 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.749274186 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.74406516 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.746980833 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748094651 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.747695007 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.780260763 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.745027613 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.745381884 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743538799 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.741852447 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736212016 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742161762 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.747261075 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.74728463 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748412343 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747098715 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.747937786 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.763379939 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774999537 seconds)
  done (took 40.144038309 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743467918 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.740883845 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.75642656 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.761692802 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.751842381 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.740582889 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.757460015 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.7725267 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.732229602 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.743079406 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734400652 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.735440909 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.73303367 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.732431359 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.731248831 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.731365806 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.73023019 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.730711809 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730497349 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.731015752 seconds)
  done (took 36.50056013 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.733093533 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730991682 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.731535629 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730958417 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.717159148 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.726825776 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71878854 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.741303715 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.73977612 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.738391127 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.737213043 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.740189134 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.736875447 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.737293535 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.738663799 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.737336299 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.737468213 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.750651803 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.772634575 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746080659 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742105282 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.742155414 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772014224 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.746011922 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.768592815 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.757507456 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763506663 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.776481396 seconds)
  done (took 50.474161683 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767268293 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739561811 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.746179068 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.761902598 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.739284984 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.737218987 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.734205878 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.73535499 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.736768461 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.740547299 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.741022629 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.736741054 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.732227839 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.742530956 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.760035051 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.763366457 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766831756 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.750897232 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.755316316 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747471286 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.750151235 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742904978 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.754696656 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.743284089 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759516783 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.754869224 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745962987 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76818156 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759009955 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.749433601 seconds)
  done (took 54.165888969 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.764801241 seconds)
    (2/2) benchmarking "in"...
    done (took 1.788390045 seconds)
  done (took 5.226989606 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.743960196 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750273356 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.746952403 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.733515527 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.735678029 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.73455068 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.755953919 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767403189 seconds)
  done (took 15.651032804 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.740376852 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.743929797 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.740119117 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.739025552 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.751176978 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.747849434 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.775783111 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.756379224 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.743355673 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.742839335 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.752246075 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.750698455 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.746806052 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743144577 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.739586461 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744655543 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.740335101 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.739196835 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.740444534 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.742014872 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74158249 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74471356 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749808944 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.738947481 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.747607486 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.764069439 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.750050575 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.744555049 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.749231239 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.756171545 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.75233819 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.745847423 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.741509623 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.750467273 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.733013121 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.765431051 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.766004541 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.724419344 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.739478967 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.74530756 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746342373 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.749967827 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.751514081 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.755908579 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753475799 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.746256174 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.757304337 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.753560353 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.745021973 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.768396862 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.775937805 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.742312374 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.746872327 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.753675383 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.748804487 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774311404 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.775067402 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.809923469 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.797682778 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.808970698 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.814716929 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.81733612 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801822003 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.78144269 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784050891 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.793089718 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.762728803 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.758907316 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.754088129 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.776213922 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.793962176 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80132947 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.806228255 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.795222856 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805609401 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.811297914 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782128458 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.821850031 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81800754 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.805115827 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.816274627 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814320316 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813702005 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799749273 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.79052511 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.803919827 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.756379712 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.77040949 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.757596224 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.74867829 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.777254812 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.765112854 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.762937144 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.771144806 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.752772993 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.751479432 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.76049691 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759533297 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.763698599 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.743175186 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.783919872 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.778191737 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.78175436 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777349651 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.750612486 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.754566241 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.765424632 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778401453 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.793809129 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.782700553 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.779828267 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.777365243 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.795130164 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.780183694 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.766698437 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.780812987 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.77557845 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.781471033 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.748127687 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.754209807 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.778148661 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.799088523 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.744024501 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.739121651 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.767816605 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.78836592 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.737285006 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.734754393 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.732270553 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.729626653 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.744026688 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.765534456 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.761585193 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.764392832 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.763342867 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.764685901 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.74442103 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.737563654 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.733111825 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.739859775 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.750741553 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.748620547 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.743740368 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.738991137 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.751676977 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.750932653 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.798245919 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.757357438 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.76802806 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.742941681 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.751238498 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.779912191 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.747424134 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.752624012 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.785003053 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759695885 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.749611404 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.730855059 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736155604 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.741339991 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.755181959 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.732000079 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.794592322 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.735977595 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.739865317 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.739000248 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.758874209 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.763950179 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.756066846 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.759093688 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.76095133 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.746330457 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.747728833 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.774940908 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.740286306 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.738126752 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.74535156 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.764759258 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778894994 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790566579 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.800608471 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.798231294 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.78709927 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.793290251 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.782180303 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781865937 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.779940353 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.78871936 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.793401508 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811720118 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.818444688 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.829133279 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820541031 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801817291 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.802507936 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.80411701 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.798374434 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.783645263 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.792090582 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.816632989 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.779790115 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781351294 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.775902953 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.785606262 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.787055355 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.771689038 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.776828855 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.782934893 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.790407264 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.79661695 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809908893 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.810493615 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.791867737 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.773373856 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771254949 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.775747977 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.766871993 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.752658562 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.75635507 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.763269473 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.757983727 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.753184901 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.766663601 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.752272962 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766866582 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780898863 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.77959969 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.774092554 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.778783949 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.780857508 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.76331702 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763441112 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.761285383 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.77004039 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774121065 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.7538058 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.760944247 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.762623748 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.757525518 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.768771997 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.774335094 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.771044724 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.754762038 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.757579309 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.762325192 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767445635 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759159301 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.772957571 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.755196549 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.757174393 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.757920298 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.759384121 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.754350055 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.756862457 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.759395127 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.759778356 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765249006 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.753430293 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.755083397 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.774166391 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.780732611 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.774156204 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.776864365 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.779726505 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.775073046 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.779985501 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.782814302 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.775900487 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.779631123 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.780448724 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.780704622 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.778378362 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.777170252 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794270804 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.79119761 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783282266 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.762380881 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.759644323 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771015788 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.758175058 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.765117668 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758548525 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.758359669 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.767600823 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.773837631 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.779961128 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.776569531 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.776748755 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76986997 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.766103019 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.765987379 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.755964715 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.77194591 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.779799899 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.775588351 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.777503857 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.778046457 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.758571094 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.768352677 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757359714 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.763414559 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.779716407 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.784178225 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778102557 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.784505574 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.779520198 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.784970886 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.776722083 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.756206368 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.752909368 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.778161809 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.807152392 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.798303629 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.806567454 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.792012029 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799977479 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.795379362 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.793786189 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.799842202 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.780681588 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.768281194 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.782076206 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.771502905 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778727194 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.755197777 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.75668958 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.775250402 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.772515385 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.760987142 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.758618688 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.755102276 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766094441 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.762010618 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779486181 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.309945878 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.782507153 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774137692 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.773791083 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.762110633 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.758177719 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.765618899 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766571745 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.759478097 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.765909179 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.768967326 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.761740148 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.786756964 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.78470925 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.769173099 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.768346 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.774970116 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792402605 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.781182878 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.773325509 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.771802722 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.787742977 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.775833702 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779077049 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.782960817 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.780506701 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.77972862 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.784933339 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.772762826 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.771558572 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.782414677 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.78298103 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.782904731 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.788258662 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.780681922 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.764317829 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.76236267 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.756146701 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.761745647 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.772526783 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.792393617 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.761280048 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.762049391 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.761656357 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.764146546 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.767494205 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.764982084 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.765408118 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.762708775 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77339935 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766662872 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.754587301 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.741899043 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.743000867 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736196004 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.736761821 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.739275771 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.737970732 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.736628424 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.738901677 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.73665188 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742713172 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.736831041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.740702776 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.740358635 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.739098762 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.751308837 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.737367306 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.73909932 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.737616403 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.736412309 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.740215448 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.738927786 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.738369519 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742637789 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.737377375 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.741392072 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.749362803 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.748666803 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.749196354 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.74318711 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.739712555 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.740536188 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.739359481 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737211849 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.739354164 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.747776897 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.763318629 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.737737576 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.739063882 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.736798738 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.736989107 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.738623724 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.736609452 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.742537403 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.749084663 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.739766275 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.738656296 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.737175807 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.735662637 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.737502224 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.739792097 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.74872463 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.74456379 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.75248434 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.749535033 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.743361188 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.746213344 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744351979 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.751182113 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.737581881 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.741693989 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.739897111 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.744008978 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.743473971 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.74575222 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739166531 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.747601085 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.740891926 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.743435197 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.752655897 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.741598319 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.73717804 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.74153348 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.746057708 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.740704277 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.739098863 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.738405339 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.740514864 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74916492 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.742179657 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.73960798 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.744249245 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.737927939 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.741836004 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743272316 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.738448899 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.74425951 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.737539962 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.740794225 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.738844066 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739090384 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.738225428 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.741439057 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.739599476 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.74392023 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.752045978 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.741002819 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.746333465 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.746498486 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.744102686 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741225704 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740448945 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.73827953 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.740297284 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.7425587 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.740327493 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.742041893 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.744591918 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.74035808 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.742661814 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.744101136 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740410088 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.745199162 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.755534376 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.74932927 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.740569397 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.741422083 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.741964404 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.74499096 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.74005732 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.742829956 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743479348 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.743934429 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.739981521 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.741050657 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.739456066 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.745721126 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.764734376 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.740758168 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.742572036 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.743063205 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75023907 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.744115452 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.742920832 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.742726128 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.747311905 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.749426631 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.751847221 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.742303355 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.751470271 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742882697 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.744028243 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.745923086 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.747344415 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.754444396 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.74649514 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.741372304 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.742332237 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.748524169 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.765035542 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.742516178 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755137774 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783914668 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.744326735 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.743368392 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.742733593 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743610447 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.741974216 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.745946741 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.743045644 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.74211143 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.742563627 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.74325018 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.744588498 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.751968038 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.74570074 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.74234327 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.744306556 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.747962311 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.748311315 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.781888882 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.780036046 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.779694972 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.777812155 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.774982016 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.783345794 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.778720687 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79381262 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.788295802 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.776982206 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.774363734 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.77676159 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.786648487 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.780262493 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79408474 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.784004754 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.776389565 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.777841081 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.78832734 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810041189 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.763777945 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.765474513 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.764896404 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.765546268 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.761205825 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.780262684 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.774010977 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.771418801 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.765266369 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.764958453 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.765375974 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766904036 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.764783 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764601179 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.767664128 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.767257347 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772330875 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.763625603 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.765852027 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.769776119 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.778642401 seconds)
  done (took 1052.564425703 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.766172997 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764861907 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.764316953 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.76304299 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813784369 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.777665936 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.790987186 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.784141799 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.781700597 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.775143982 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.777955359 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788737267 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.778801789 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805884781 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776977834 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.787830187 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780445746 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.764686245 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.764213734 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763836871 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.764321687 seconds)
  done (took 39.030197381 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.767015612 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.769010653 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.796281432 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.779903132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767891833 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.763664804 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.763572432 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764738053 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766570839 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765630333 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.765722979 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767184282 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.766314547 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.76699382 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764533985 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764904048 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.764324769 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766223234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.763731006 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765378173 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766217652 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.765008871 seconds)
  done (took 40.589675698 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.766011829 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.76724525 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.766374148 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.765057327 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.765188498 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.764542777 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.766904141 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.764837303 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.764996563 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.767961401 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.765148923 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.768908048 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.775385094 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.775836633 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.771050817 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.765158982 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.886107509 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.767457623 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.766403654 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.766725344 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.765368347 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.775027267 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.766161999 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.767977166 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.768519234 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.766975117 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.767295075 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.768137644 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.769847872 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.769184351 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.773675321 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.775174678 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.800776957 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.783265341 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.793047248 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.789338525 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.812186229 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.791691562 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.784752058 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.782525676 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.796350568 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.802385976 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.777103298 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.807284183 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.776100096 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.788568861 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.809604324 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.78703351 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.771656696 seconds)
  done (took 88.851943462 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.770441214 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.770076854 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.767172917 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.768363679 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.767965507 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.768256743 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.769229162 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.769427937 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.769489113 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.770686615 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.76914188 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.801949892 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791420118 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.781570809 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.779819753 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.753079607 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.752319849 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.751599559 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.751137815 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.751375091 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.752230967 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.750493361 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.75179838 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.751921297 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.751350289 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.751439889 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.752219042 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.751322172 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.751674826 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.753898422 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.752212186 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.75178685 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.751374639 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.751935925 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.752926927 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.752599228 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.75303399 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.750864439 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.751687408 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.750677591 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.752327263 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.75341438 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.752402123 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.752362135 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750922746 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.753313281 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.755064989 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.751797659 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.752685171 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.752774414 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.752188663 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.752608662 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.754491293 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.754647033 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.755183048 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.754601804 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.754654827 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.754083202 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.753563623 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.753264977 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.752531566 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.753024765 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.756193964 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.75503959 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.752796035 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.753925289 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.753809867 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.752498368 seconds)
  done (took 121.211304687 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.753769124 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.754139652 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752385858 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753565306 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.753472554 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.753352805 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.754406731 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.75465043 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.753920295 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.754563235 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.753838995 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.753906796 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.755702871 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.754404862 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.753473411 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.753069559 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.754094597 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75613903 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.758249458 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753228352 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.754970481 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.753673558 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.754940515 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756317352 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.756506831 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.756380202 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.757016447 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.756619816 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756828977 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756948644 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.75534678 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.753841592 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.754384179 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.754931673 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.757549259 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.754892337 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.755237686 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75513014 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.755176297 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.754224533 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.756227264 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.754787381 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.755949117 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.754685941 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756006861 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.755524628 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.756991687 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.755634724 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.755643455 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.754820216 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.755763205 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.757318831 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756620221 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.755987172 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.75617789 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.755243376 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75555909 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.756742756 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.75620196 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.755695696 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.756467292 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.755951764 seconds)
  done (took 110.51166361 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759270822 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.757795071 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.758234845 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.758327554 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.758182511 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.757651043 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759139315 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.7564582 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.75582498 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.756023651 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756409855 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757614466 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757163596 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756322864 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.755885557 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757685182 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756424591 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75834876 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755838342 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.757505937 seconds)
  done (took 36.835485827 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.812884415 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.829814891 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.787876653 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.785930946 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.785007705 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.77538139 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.785215304 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789917628 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782306488 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777781797 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.808639973 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.796919752 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770829118 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.762068784 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.756610093 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.757449719 seconds)
  done (took 30.272654776 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.758039494 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.757671517 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.760904405 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.759455798 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.760340284 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.758718158 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.759565084 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.758362066 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.758841376 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.758565934 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.75767634 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.757414261 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.758809651 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.760911008 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.758496451 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.757926947 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.758539323 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.75803038 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.758907076 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.760392959 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.7814514 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.778156905 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.776793782 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.776375858 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.779793516 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.778525588 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.802065126 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.777528251 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.762270588 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.758537811 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.760271062 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.760609962 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.759738241 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.758556265 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.759447475 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.758290113 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.760668769 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.759223284 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.759835406 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.75776592 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.768878376 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.761194459 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.76244796 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.761991745 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.761116933 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.760807483 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.761121632 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.762174838 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.759914443 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.760566519 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.759518095 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.77532204 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.786686429 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.788145585 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.778582269 seconds)
  done (took 98.742858287 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777934391 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.780018597 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.78000299 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.779864601 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.778170432 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.779103322 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.778761747 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.780840125 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781158663 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.778760701 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.779236865 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.77936808 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779941714 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.779088577 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.77896522 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778514328 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.779426187 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.779513074 seconds)
  done (took 33.738898772 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.780463836 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.781644348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.781236254 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.77992558 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.780051148 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780544326 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783552517 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.782647752 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780575707 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.781988066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782335514 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.783685652 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780147003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.780553816 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.783059009 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804389428 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.79988368 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782477853 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.783619019 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788825474 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.786919555 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784244122 seconds)
  done (took 40.963480997 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.788837267 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.785013596 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.804724798 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.81009082 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.81096376 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.83059902 seconds)
  done (took 12.54413078 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784737118 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782564176 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786061339 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784678057 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786400755 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78505164 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784683827 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785503925 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786366764 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788752474 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783500313 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784468873 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786463111 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787444531 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785401716 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784939798 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787656609 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797265622 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816486039 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840301095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804125969 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800581645 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814946814 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807595789 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792442979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788617005 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790746899 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787518856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803217303 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835613641 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797551431 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786421511 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789086014 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78829328 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790490681 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790097217 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791704837 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805328785 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795713784 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790701495 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.790081652 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789685896 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792680415 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80420849 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813864806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815102588 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790162442 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791227403 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798193072 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794973969 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793747195 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794193419 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795685838 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814040718 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826929893 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802713948 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798432294 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796738686 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795815357 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797107285 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807801423 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77998789 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819168891 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857603781 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842822376 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786372828 seconds)
  done (took 120.367993797 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841102101 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838891459 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833494439 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825163566 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797597568 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80206564 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802370078 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854353512 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796186288 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864250645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824113234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818196547 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79909112 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851354774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80077202 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809792882 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808686876 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792270477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796118427 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787721561 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814254886 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80866836 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83128236 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822783412 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836381093 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816565714 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789264527 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778159045 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851914542 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825663423 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823422935 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797733028 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808538067 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.825402693 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803449917 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815913178 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840400573 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818142097 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773565251 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767375694 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804137343 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802689553 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843886721 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765203399 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760234078 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787640065 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788668311 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824486716 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84344532 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781481585 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796485542 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86127198 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789214891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842105569 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82405012 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825122953 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829192564 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784558642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77753564 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783456483 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840138591 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792953825 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784032938 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786316711 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85050356 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826579243 seconds)
  done (took 121.329126957 seconds)
done (took 2443.122803418 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.91453181 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.883107485 seconds)
  done (took 15.579396658 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.97628841 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.905739738 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.776264634 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.851198628 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.805492061 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.846939177 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.86583246 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.773749113 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.771114821 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.809414588 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.836552775 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.958651857 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.871896289 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.800220058 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.8181017 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.943352771 seconds)
  done (took 51.380197304 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.832020941 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.870502458 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.824149901 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.831268493 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.780840398 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.799446652 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.832632107 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.791604918 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.817503424 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.791988515 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.874676906 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.787058091 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.77386643 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.861112499 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.798480161 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.811089229 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.883813698 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.898518615 seconds)
  done (took 34.654976526 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.874452267 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.793610472 seconds)
  done (took 10.374851292 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.813269153 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.791200015 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.811117619 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.793752781 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.817806997 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.84067255 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.813706815 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.830750665 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.809420846 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.835822934 seconds)
  done (took 69.921132601 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.803836226 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.831097647 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.823459143 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.823439374 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.813452395 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.81879117 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.808512052 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.811541017 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.624522665 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.836340521 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.841501453 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.777866648 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.775633187 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.814254245 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.807359596 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.851038421 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.973651995 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.796388379 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.777370673 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.803042341 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.790073992 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.866259521 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.817679852 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.831687821 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.839617671 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.517954333 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.817677204 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.839598407 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.038255835 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.874580723 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.802152113 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.069576114 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.844997413 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.259043817 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.161949046 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.814998095 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.804666202 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.825048126 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.816247226 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.978946362 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.801153236 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.808666019 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.802423301 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.112191023 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.904130528 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.860050682 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.458749348 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.802722769 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.798648369 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.836823391 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.802009954 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.800227279 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.81800115 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.502687181 seconds)
  done (took 130.667313633 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.796743402 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.214602783 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996142924 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.800220544 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087407657 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004978382 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.802552403 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.85440644 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.816860341 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997519356 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.066282905 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.877139601 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.764755259 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.766162578 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.768018277 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.764042623 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.955714467 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.832597135 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.763689375 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.810382085 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827685146 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047641417 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.94251839 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.784043584 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.864299524 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.969938213 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.896311972 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.874158314 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.922817818 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.76448683 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.828590742 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.765060318 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.767401237 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.765325545 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.93362094 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.86176115 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.851440139 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.765031943 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.767353031 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.764738669 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.354113816 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96131114 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.865477229 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.922179123 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.102910232 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.968833418 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.563813492 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.763589057 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.536597874 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.925085495 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.997015267 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.000872699 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.898785734 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.769460432 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.914528575 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.765700987 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.766429947 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.035124464 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090627311 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.875238649 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.768072008 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.767495556 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.766764213 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.995828613 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.76759279 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.871566207 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.768243218 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.769347226 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.870464568 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.875480138 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.072747555 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980199316 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.797297161 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.993949905 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 5.016984722 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007425019 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.830649794 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040930749 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.769302212 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.767037565 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886674374 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.652602747 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.123436156 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998556242 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.015394121 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811463786 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.471018665 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.78529431 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.017590671 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99555212 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.004958318 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.123159454 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.099526669 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.938289235 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.800668591 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.789389404 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.574380603 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978907531 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.81926905 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.331155278 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002763058 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.247714852 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.803548442 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063048061 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910746131 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.770281409 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.361399375 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.766614156 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.988347145 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.807173849 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.766672333 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.771688916 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.980585238 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.527282782 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.766025276 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.999278195 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.828674659 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.770359753 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045311682 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.792723495 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063760431 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.789777999 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019411028 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.747616923 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815711617 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.945213517 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.117136427 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.78864323 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.017683752 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02567875 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.921194113 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.108894126 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.526865436 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.786064933 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090045726 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.811430685 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.782938943 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.949692812 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.773053105 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.973828799 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.77477243 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.065810648 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82646297 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071447382 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788425959 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.049413009 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.820132943 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.83089207 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.790778189 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.913855012 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.780985836 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.669085221 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.958531302 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.797357238 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.80397265 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.633163615 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.798272659 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.938126237 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.018185568 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842328704 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862430865 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.399526001 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.787511335 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865192929 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.811795289 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.195943692 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.785840495 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.089370759 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.790086277 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.792234623 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.790648379 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.017833353 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.087297941 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.793088193 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.795897294 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.555802565 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.770270764 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.776101105 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.978332786 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.284778019 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.772235562 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972654469 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.772601868 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.911337105 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.77522161 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.565262167 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.306465478 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.771519594 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.772603644 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.773958523 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.832934501 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.787893819 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.988547157 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.83663965 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.3403658 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.954160139 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077444913 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.047860607 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.038986121 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.817901431 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.770851102 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068311309 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.807011676 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.87270742 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.801800524 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83017587 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027411689 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792071713 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006869173 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.074582582 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.678616084 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850080152 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.813011083 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863788142 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.823108544 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967460788 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900008472 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.815760093 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.797176735 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.951167046 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.940098502 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010265079 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.790303775 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.917482948 seconds)
  done (took 889.955910255 seconds)
done (took 1204.268560758 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.793699369 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.797056326 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.811677585 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.798636833 seconds)
  done (took 28.939614122 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.798788553 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.783481584 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.813991527 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.821888837 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.812612067 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.776209051 seconds)
  done (took 12.557074294 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.222099656 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.800711468 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815587504 seconds)
  done (took 20.544727083 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.870726388 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.161695928 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.971267591 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.298266285 seconds)
  done (took 10.017672818 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.787127343 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.803446993 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.77764271 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.777272688 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.81687061 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.841974602 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.827573639 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.823035339 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.778560916 seconds)
  done (took 17.947163886 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.560076496 seconds)
done (took 98.305006656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", abs, Int8, false)...
    done (took 1.900715292 seconds)
    (2/341) benchmarking ("collect", "all", Int8, true)...
    done (took 1.943683941 seconds)
    (3/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 2.986784039 seconds)
    (4/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.823819374 seconds)
    (5/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 3.129886422 seconds)
    (6/341) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.948925121 seconds)
    (7/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.773727074 seconds)
    (8/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.827779551 seconds)
    (9/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.585750478 seconds)
    (10/341) benchmarking ("perf_sum", Bool, false)...
    done (took 1.843664603 seconds)
    (11/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.419118459 seconds)
    (12/341) benchmarking ("perf_sum", Bool, true)...
    done (took 1.826884782 seconds)
    (13/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.775365545 seconds)
    (14/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.016024651 seconds)
    (15/341) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.225562087 seconds)
    (16/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.807110013 seconds)
    (17/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 4.22819572 seconds)
    (18/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.158167067 seconds)
    (19/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.963075439 seconds)
    (20/341) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.795133448 seconds)
    (21/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.791504793 seconds)
    (22/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.180124254 seconds)
    (23/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.812132389 seconds)
    (24/341) benchmarking ("map", identity, Int8, false)...
    done (took 1.858303623 seconds)
    (25/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.236890815 seconds)
    (26/341) benchmarking ("perf_sum", Int8, true)...
    done (took 1.781422061 seconds)
    (27/341) benchmarking ("collect", "all", Complex{Float64}, true)...
    done (took 2.42749263 seconds)
    (28/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.91334409 seconds)
    (29/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.773905338 seconds)
    (30/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.926461767 seconds)
    (31/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 2.799931383 seconds)
    (32/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.80435677 seconds)
    (33/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.775330037 seconds)
    (34/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.780233362 seconds)
    (35/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 5.407135866 seconds)
    (36/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.64241806 seconds)
    (37/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.788492887 seconds)
    (38/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 4.261168122 seconds)
    (39/341) benchmarking ("map", abs, Float32, true)...
    done (took 1.997105051 seconds)
    (40/341) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.68048147 seconds)
    (41/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 3.135374971 seconds)
    (42/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.474737066 seconds)
    (43/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.09611231 seconds)
    (44/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.102293267 seconds)
    (45/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.682071836 seconds)
    (46/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.84923873 seconds)
    (47/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.150842916 seconds)
    (48/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.964379836 seconds)
    (49/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.155222238 seconds)
    (50/341) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.979455376 seconds)
    (51/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.879472395 seconds)
    (52/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.926746707 seconds)
    (53/341) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.015884076 seconds)
    (54/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.210569887 seconds)
    (55/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.782383146 seconds)
    (56/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.321037724 seconds)
    (57/341) benchmarking ("sort", Bool, false)...
    done (took 2.018277555 seconds)
    (58/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.798486315 seconds)
    (59/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.037147559 seconds)
    (60/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.841793174 seconds)
    (61/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.295921646 seconds)
    (62/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.123344292 seconds)
    (63/341) benchmarking ("sort", Int64, false)...
    done (took 6.785526977 seconds)
    (64/341) benchmarking ("sort", Float32, false)...
    done (took 6.794883967 seconds)
    (65/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.792577335 seconds)
    (66/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.088203553 seconds)
    (67/341) benchmarking ("map", identity, Bool, true)...
    done (took 2.006146529 seconds)
    (68/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.890774916 seconds)
    (69/341) benchmarking ("perf_sum", Int64, true)...
    done (took 1.828527455 seconds)
    (70/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.978311479 seconds)
    (71/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.778229778 seconds)
    (72/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.242018432 seconds)
    (73/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.947076294 seconds)
    (74/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.915508737 seconds)
    (75/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.634913761 seconds)
    (76/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.952757704 seconds)
    (77/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.222685646 seconds)
    (78/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.149439608 seconds)
    (79/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.916049406 seconds)
    (80/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 3.106937281 seconds)
    (81/341) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.442053685 seconds)
    (82/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.782159783 seconds)
    (83/341) benchmarking ("collect", "all", Int8, false)...
    done (took 3.461137943 seconds)
    (84/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.794241351 seconds)
    (85/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.151195579 seconds)
    (86/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.789414886 seconds)
    (87/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.969598249 seconds)
    (88/341) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.811464753 seconds)
    (89/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.145729 seconds)
    (90/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.787151132 seconds)
    (91/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.999092602 seconds)
    (92/341) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.991693207 seconds)
    (93/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.914808599 seconds)
    (94/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.776799514 seconds)
    (95/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.226786546 seconds)
    (96/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.577042025 seconds)
    (97/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.972478453 seconds)
    (98/341) benchmarking ("map", abs, Float64, false)...
    done (took 1.903251647 seconds)
    (99/341) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.941356098 seconds)
    (100/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.971992479 seconds)
    (101/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.992116826 seconds)
    (102/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.787784699 seconds)
    (103/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.728886013 seconds)
    (104/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.78585551 seconds)
    (105/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.540100895 seconds)
    (106/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.820721491 seconds)
    (107/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.781610108 seconds)
    (108/341) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.475729742 seconds)
    (109/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.974516592 seconds)
    (110/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.892456097 seconds)
    (111/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.08870963 seconds)
    (112/341) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.562314685 seconds)
    (113/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.844835856 seconds)
    (114/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.819615849 seconds)
    (115/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.197920116 seconds)
    (116/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.17713911 seconds)
    (117/341) benchmarking ("perf_sum", Float32, false)...
    done (took 1.959124298 seconds)
    (118/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.912701956 seconds)
    (119/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.815949289 seconds)
    (120/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.104450377 seconds)
    (121/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.801522501 seconds)
    (122/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.925881268 seconds)
    (123/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.029363026 seconds)
    (124/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.616664952 seconds)
    (125/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.267373443 seconds)
    (126/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 3.040962547 seconds)
    (127/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.063360436 seconds)
    (128/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.921312516 seconds)
    (129/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.139451107 seconds)
    (130/341) benchmarking ("collect", "all", Float64, false)...
    done (took 1.959064177 seconds)
    (131/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.920240879 seconds)
    (132/341) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.229992145 seconds)
    (133/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.017888552 seconds)
    (134/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.23423825 seconds)
    (135/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.807940313 seconds)
    (136/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 3.858343888 seconds)
    (137/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.898470361 seconds)
    (138/341) benchmarking ("sort", Int8, false)...
    done (took 6.060879518 seconds)
    (139/341) benchmarking ("collect", "filter", Complex{Float64}, false)...
    done (took 3.158096694 seconds)
    (140/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.344871088 seconds)
    (141/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.238483439 seconds)
    (142/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.410679853 seconds)
    (143/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.843062901 seconds)
    (144/341) benchmarking ("sort", Float64, false)...
    done (took 6.66230077 seconds)
    (145/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.820979612 seconds)
    (146/341) benchmarking ("map", abs, Int64, false)...
    done (took 1.925689978 seconds)
    (147/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.299792652 seconds)
    (148/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.837802707 seconds)
    (149/341) benchmarking ("map", abs, Bool, true)...
    done (took 1.976859725 seconds)
    (150/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.947138264 seconds)
    (151/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.079608755 seconds)
    (152/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.159326608 seconds)
    (153/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.120698709 seconds)
    (154/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.083206039 seconds)
    (155/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.976721543 seconds)
    (156/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.850802415 seconds)
    (157/341) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.021401292 seconds)
    (158/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.824275711 seconds)
    (159/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.126303413 seconds)
    (160/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.838783854 seconds)
    (161/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.419815562 seconds)
    (162/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.199483554 seconds)
    (163/341) benchmarking ("perf_sum", Float64, true)...
    done (took 1.963931331 seconds)
    (164/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.952885066 seconds)
    (165/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.284443583 seconds)
    (166/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.808705272 seconds)
    (167/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.157831624 seconds)
    (168/341) benchmarking ("map", identity, Bool, false)...
    done (took 1.977997829 seconds)
    (169/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.238887837 seconds)
    (170/341) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.956742473 seconds)
    (171/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.227901314 seconds)
    (172/341) benchmarking ("collect", "all", Complex{Float64}, false)...
    done (took 2.028665544 seconds)
    (173/341) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.833848693 seconds)
    (174/341) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.219666216 seconds)
    (175/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.924615928 seconds)
    (176/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.895354219 seconds)
    (177/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.7976264 seconds)
    (178/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.036303801 seconds)
    (179/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.040629217 seconds)
    (180/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.2315826 seconds)
    (181/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.800096003 seconds)
    (182/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.955211936 seconds)
    (183/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.869059802 seconds)
    (184/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.200978977 seconds)
    (185/341) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.827880487 seconds)
    (186/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.189933248 seconds)
    (187/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.818119852 seconds)
    (188/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.920414237 seconds)
    (189/341) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.978735225 seconds)
    (190/341) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.930400625 seconds)
    (191/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.783850762 seconds)
    (192/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.805591821 seconds)
    (193/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.783205278 seconds)
    (194/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.833543426 seconds)
    (195/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.444607726 seconds)
    (196/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.943691836 seconds)
    (197/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.947472567 seconds)
    (198/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.862372004 seconds)
    (199/341) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.222688133 seconds)
    (200/341) benchmarking ("map", identity, Float32, false)...
    done (took 1.878737891 seconds)
    (201/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.165809275 seconds)
    (202/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.042297152 seconds)
    (203/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.254520851 seconds)
    (204/341) benchmarking ("map", abs, BigInt, true)...
    done (took 6.790419196 seconds)
    (205/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.857549438 seconds)
    (206/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.142590652 seconds)
    (207/341) benchmarking ("map", abs, Float32, false)...
    done (took 1.905446795 seconds)
    (208/341) benchmarking ("map", identity, Float64, false)...
    done (took 1.939443702 seconds)
    (209/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.95521202 seconds)
    (210/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.125707344 seconds)
    (211/341) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.824346023 seconds)
    (212/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.875613163 seconds)
    (213/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.934007671 seconds)
    (214/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.049899173 seconds)
    (215/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.901148026 seconds)
    (216/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.855736664 seconds)
    (217/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.041986751 seconds)
    (218/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.788876776 seconds)
    (219/341) benchmarking ("map", identity, Float64, true)...
    done (took 4.516227396 seconds)
    (220/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.155280064 seconds)
    (221/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.053516717 seconds)
    (222/341) benchmarking ("collect", "filter", Complex{Float64}, true)...
    done (took 3.560876833 seconds)
    (223/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 2.974153149 seconds)
    (224/341) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.779599261 seconds)
    (225/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.066965851 seconds)
    (226/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.841992288 seconds)
    (227/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.796014073 seconds)
    (228/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.336677268 seconds)
    (229/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.890046175 seconds)
    (230/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.153795139 seconds)
    (231/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.772729984 seconds)
    (232/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.857512899 seconds)
    (233/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.54191295 seconds)
    (234/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.261982115 seconds)
    (235/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.985219474 seconds)
    (236/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.793910995 seconds)
    (237/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.792017478 seconds)
    (238/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.78923386 seconds)
    (239/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.81155753 seconds)
    (240/341) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.011950027 seconds)
    (241/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.789525362 seconds)
    (242/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.799103377 seconds)
    (243/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.047629478 seconds)
    (244/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 3.082193383 seconds)
    (245/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.79633156 seconds)
    (246/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.823486911 seconds)
    (247/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.443765781 seconds)
    (248/341) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.984087242 seconds)
    (249/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.14781073 seconds)
    (250/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.79808185 seconds)
    (251/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.817751648 seconds)
    (252/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.595383071 seconds)
    (253/341) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.989425638 seconds)
    (254/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.92325986 seconds)
    (255/341) benchmarking ("map", abs, Bool, false)...
    done (took 1.924377575 seconds)
    (256/341) benchmarking ("perf_sum", Float32, true)...
    done (took 1.944919295 seconds)
    (257/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.787197548 seconds)
    (258/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.218580913 seconds)
    (259/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.935690207 seconds)
    (260/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.912082552 seconds)
    (261/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.78695811 seconds)
    (262/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.236806575 seconds)
    (263/341) benchmarking ("perf_sum", Float64, false)...
    done (took 1.943032775 seconds)
    (264/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.567115706 seconds)
    (265/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.801689017 seconds)
    (266/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.164981449 seconds)
    (267/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.797336804 seconds)
    (268/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.025646484 seconds)
    (269/341) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.916810746 seconds)
    (270/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.84098742 seconds)
    (271/341) benchmarking ("collect", "all", Bool, true)...
    done (took 1.954669418 seconds)
    (272/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.455805243 seconds)
    (273/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 3.099550438 seconds)
    (274/341) benchmarking ("collect", "all", Float32, false)...
    done (took 1.898602766 seconds)
    (275/341) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.919919631 seconds)
    (276/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.813198552 seconds)
    (277/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.788673102 seconds)
    (278/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.04632276 seconds)
    (279/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.074291363 seconds)
    (280/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.796586191 seconds)
    (281/341) benchmarking ("perf_sum", Int8, false)...
    done (took 1.912350019 seconds)
    (282/341) benchmarking ("map", abs, Int8, true)...
    done (took 1.97561427 seconds)
    (283/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.954802409 seconds)
    (284/341) benchmarking ("collect", "all", Bool, false)...
    done (took 1.918217557 seconds)
    (285/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.809495279 seconds)
    (286/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.241756409 seconds)
    (287/341) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.12631847 seconds)
    (288/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.830640368 seconds)
    (289/341) benchmarking ("perf_sum", Int64, false)...
    done (took 4.089225885 seconds)
    (290/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.977970459 seconds)
    (291/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 2.183782265 seconds)
    (292/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.943123683 seconds)
    (293/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.130332898 seconds)
    (294/341) benchmarking ("collect", "all", Int64, false)...
    done (took 1.920457736 seconds)
    (295/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.702933492 seconds)
    (296/341) benchmarking ("map", identity, Int8, true)...
    done (took 2.141999325 seconds)
    (297/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.65921492 seconds)
    (298/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.317524705 seconds)
    (299/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.797091279 seconds)
    (300/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.333306938 seconds)
    (301/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.079984707 seconds)
    (302/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.795274748 seconds)
    (303/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.242332779 seconds)
    (304/341) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.113358536 seconds)
    (305/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.861661315 seconds)
    (306/341) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.683069437 seconds)
    (307/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.802170696 seconds)
    (308/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.21069914 seconds)
    (309/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.952522744 seconds)
    (310/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.138842942 seconds)
    (311/341) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.004339344 seconds)
    (312/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.566017715 seconds)
    (313/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.005900628 seconds)
    (314/341) benchmarking ("map", abs, BigInt, false)...
    done (took 6.798597286 seconds)
    (315/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.009828043 seconds)
    (316/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.515761992 seconds)
    (317/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.948174175 seconds)
    (318/341) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.466309251 seconds)
    (319/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.140380995 seconds)
    (320/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.915992252 seconds)
    (321/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.796955886 seconds)
    (322/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.835050277 seconds)
    (323/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.788484819 seconds)
    (324/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.125244303 seconds)
    (325/341) benchmarking ("map", identity, Int64, false)...
    done (took 2.030075618 seconds)
    (326/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.799808672 seconds)
    (327/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.844285354 seconds)
    (328/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.831621507 seconds)
    (329/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.145182135 seconds)
    (330/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.802225328 seconds)
    (331/341) benchmarking ("sort", BigFloat, false)...
    done (took 8.099689339 seconds)
    (332/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.910396502 seconds)
    (333/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.463647712 seconds)
    (334/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.821338189 seconds)
    (335/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.249714559 seconds)
    (336/341) benchmarking ("sort", BigInt, false)...
    done (took 6.798099558 seconds)
    (337/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.79881052 seconds)
    (338/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.07768738 seconds)
    (339/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.985250597 seconds)
    (340/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.856332753 seconds)
    (341/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.718687988 seconds)
  done (took 1108.308168652 seconds)
done (took 1110.164278132 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.840986082 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.819123086 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.819860817 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.842265082 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.911877479 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.868268656 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.822045585 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.821093055 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.86547269 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.864503318 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.817208021 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.86758702 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.820893177 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.820724996 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.818362082 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.819893047 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.18292689 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.865857032 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.841831563 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.827366844 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.840699236 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.817959779 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.866204206 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.868655429 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.823997002 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.822181927 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.822227077 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.843881057 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.914359102 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.823633695 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.822391327 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.825496183 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.186788237 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.864620069 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.820353503 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.843226507 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.826507544 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.827271461 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.822656305 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.831975477 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.337744362 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.832140488 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.822857126 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.822084935 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.820462807 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.824543517 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.820046259 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.827892543 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.821159207 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.822554939 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.365944292 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.839963643 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.822589455 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.821942827 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.823824318 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.821220732 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.826254501 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8272434 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.84361972 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.828510604 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.199039741 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.872724598 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.82449403 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.841584012 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.826725309 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.410473655 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.835479008 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.826212259 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.335575425 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.839610416 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.409241157 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.844019936 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.824360769 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.828016141 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.833694675 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.186801864 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.866091158 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.821944922 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.827209215 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.819147864 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.829920467 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.821355232 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.826236468 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.823714962 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.824166382 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.871061941 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.82525494 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.823435457 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.830870567 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.846781013 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.828550949 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.827938178 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.825671742 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.825097216 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.832326741 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.827133135 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.824458652 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.824548159 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.829086117 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.827651712 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335480923 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842343982 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.824409006 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.822807702 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.824065292 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.826785611 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335019008 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.838129032 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.847082588 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.870928148 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.8240537 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.203494257 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.871886878 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827344339 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.835566157 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.828425913 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.822656127 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.206080643 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.41058293 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.84490905 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.825642151 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.822763124 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826333373 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.826227924 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.823695528 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.192541987 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.87092506 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826810548 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.918939999 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.83035607 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.837746459 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.823766064 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.82984676 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.887201336 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827855288 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.838678782 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.82663936 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.83170541 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.846982204 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.829697147 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.832782818 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.829346696 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.824406448 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.831813445 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.825957266 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.887192581 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82723963 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826110207 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.848879749 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.921117906 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.824327701 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.207693455 seconds)
done (took 287.93127909 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.886655356 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.197526282 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.899300092 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.809688743 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.924436771 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.887027919 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.823362441 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.819319187 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.807585432 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.321729107 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.804991561 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.807573112 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.224320328 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.820236074 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.883981594 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.808355968 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.811853458 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.269629096 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.806239487 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.883962318 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.789672801 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.830997654 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.849617865 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.398496504 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.862974026 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.814404822 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.910763125 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.837125595 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.355039788 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.827393329 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.832381342 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.333826326 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.909248624 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.871879632 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.832276674 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.858011237 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.953512562 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.810146762 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.871318147 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.873375391 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.899244691 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.810747123 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.764802831 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.790363201 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.81048325 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.807794219 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.804474497 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.808534385 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.802216542 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.807085545 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.266612242 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.805652635 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.805642873 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.805698706 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.803195787 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.808033397 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.805601062 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.804809215 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.886306866 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.805881226 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.875074991 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.338391232 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.320294372 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.806754692 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.77074874 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.807975372 seconds)
  done (took 152.47528157 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.892546334 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.895631539 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.891814884 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.812119111 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.8664665 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.892133645 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.811741845 seconds)
  done (took 14.79512936 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.816802823 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.806649385 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.86346438 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.863902169 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.805901986 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.989017023 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.810816026 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.818677061 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.806253418 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.837136472 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.807503948 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.806024246 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.806910363 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.761381615 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.866296058 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.820224473 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.930029155 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.807816792 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.806623392 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.957531 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.808870321 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.817084855 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.837227098 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.819809908 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.808213887 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.815190787 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.501331052 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.808848756 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.805393217 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.805759741 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.807148562 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.852715867 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.806505923 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.755967065 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.808724798 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.927777874 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.822376788 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832027447 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.850750345 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.259045352 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.858781327 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.888171115 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.897215027 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.913294208 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.910784959 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.929006883 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.907199551 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.886769615 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.883943802 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.885103945 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.909096385 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.877667728 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.869348915 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.868011538 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.940488975 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871394946 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.878527426 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.881797047 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.888245475 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.891250233 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.019880297 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.927575732 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.870217927 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.92603179 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87082514 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.877050109 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.868052876 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.869691759 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.975549045 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.869000652 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.928641307 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.872241926 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.06001239 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.897511647 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.876760041 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.874679811 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.888402715 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.898440294 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.810173019 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.87917706 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.87000422 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.879446591 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.923593861 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.884885316 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885326227 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.001335334 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.032857224 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.883990743 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.88405103 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.889004318 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.881634403 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.933951191 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.879426213 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.892053491 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.945608079 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.024578775 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.903884928 seconds)
  done (took 187.571216426 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.904361798 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.905135016 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.893539306 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.903637838 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.886767218 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.885258588 seconds)
  done (took 13.185142962 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.883653025 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.879869554 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.904148108 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.875805182 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.884236109 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.874709183 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.880832694 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.890463291 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.902011301 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.886481026 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.888733352 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.883651382 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.892549155 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.896715575 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.88337235 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.893557455 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.885059045 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.897652523 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.898845867 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.879051415 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.093931741 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.911378417 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884694667 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.889001991 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.90852365 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.895028389 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.896928154 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.884393197 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.902602822 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.892578774 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.895975467 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.906595207 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.899730743 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.883067451 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.878977965 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.878603121 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878588289 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.874296425 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.873506542 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.875335902 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.875873317 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.875934492 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.87372964 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.874648867 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.890052849 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.906997696 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.887391209 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.891183104 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.876852542 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.875974888 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.879297914 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.878483113 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.877702223 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.877989133 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.88501597 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.883984101 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.882140872 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.877537492 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.875483633 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.881572689 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.881348648 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.876654078 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.887824471 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.882931597 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.879402908 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.877762808 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.880211884 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.883495725 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.876110941 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.876292201 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.880094628 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.877747825 seconds)
  done (took 137.774407142 seconds)
done (took 507.56619548 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.254560421 seconds)
  done (took 9.059543109 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.951419521 seconds)
  done (took 8.879499073 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.185530917 seconds)
  done (took 12.008955268 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.917614381 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.913502336 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.898565013 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.886864245 seconds)
  done (took 29.438356602 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.047869416 seconds)
  done (took 8.858031048 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.894493138 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.879420903 seconds)
  done (took 15.656543465 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.920827472 seconds)
  done (took 8.731430394 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.440360596 seconds)
  done (took 9.268951457 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.882701449 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.91936459 seconds)
  done (took 15.632111358 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.853360016 seconds)
  done (took 8.640108306 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.800837215 seconds)
  done (took 10.703755225 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.866523062 seconds)
  done (took 8.703184003 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.853968757 seconds)
  done (took 8.640858311 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.954847906 seconds)
  done (took 8.776037681 seconds)
done (took 164.809260511 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.865199904 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.85400976 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.854003636 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.85158303 seconds)
  done (took 29.203746688 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.899185991 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.900693188 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.902224223 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.896686116 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.893969973 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.912879523 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.896339431 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.895631922 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.912644474 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.915117939 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.934710685 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.916038468 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.933407474 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.900915834 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.927003209 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.94370272 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.9061845 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.92121089 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.89181309 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.899623598 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.89258432 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.903025088 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.898056769 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.861634975 seconds)
  done (took 47.542696206 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.110846338 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.964339486 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.007709157 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.88642384 seconds)
  done (took 9.799333384 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.877839402 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.891731809 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.951230881 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.000815115 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.972368505 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.921532001 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.862567153 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.870254313 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.841288679 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.936510244 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.008939242 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.922983322 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.062933392 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.835727406 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.125103239 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.878111006 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.855283715 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.90182533 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.023286788 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.01940928 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.841690999 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.894355272 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.89312029 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.920966087 seconds)
  done (took 48.072626007 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.854074203 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.874226648 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.855251487 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.871388977 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.837139152 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.848570403 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.855690052 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.842269187 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.905993885 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.852927237 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.833218423 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.866608474 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.850098717 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.84023298 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.821999283 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.852069946 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.849298396 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.864576222 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.855138822 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.857398689 seconds)
  done (took 38.849364249 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.883741115 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.069942531 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.047360848 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.990321033 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.834052171 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.833949486 seconds)
  done (took 31.420030291 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.891528581 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.863299731 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.857561099 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.938762587 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.043889452 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.866960575 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.858890638 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.872117146 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.92232237 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.956195458 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.8811558 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.896986611 seconds)
  done (took 24.618321179 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.869392596 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.854217703 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.858099681 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.870517516 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.87653571 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.865377909 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.870637792 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.869762269 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.892814705 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.881194255 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.866366927 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.90133646 seconds)
  done (took 44.267275245 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938707581 seconds)
    (2/608) benchmarking ("sumrange", "Array{Int64,2}")...
    done (took 6.886247324 seconds)
    (3/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.850732401 seconds)
    (4/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435792012 seconds)
    (5/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.970520157 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.894027983 seconds)
    (7/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.907191801 seconds)
    (8/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.378419609 seconds)
    (9/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056831611 seconds)
    (10/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.862225946 seconds)
    (11/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.941095565 seconds)
    (12/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.853793428 seconds)
    (13/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.857914729 seconds)
    (14/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.621625041 seconds)
    (15/608) benchmarking ("sumrange_view", "Array{Float64,2}")...
    done (took 1.864267899 seconds)
    (16/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.097421843 seconds)
    (17/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11270851 seconds)
    (18/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337547474 seconds)
    (19/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858221827 seconds)
    (20/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911335348 seconds)
    (21/608) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.541815232 seconds)
    (22/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295345474 seconds)
    (23/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162604362 seconds)
    (24/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89625997 seconds)
    (25/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.873079226 seconds)
    (26/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.992709462 seconds)
    (27/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.433746776 seconds)
    (28/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.890689405 seconds)
    (29/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875112487 seconds)
    (30/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055203293 seconds)
    (31/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85845228 seconds)
    (32/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.985684859 seconds)
    (33/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899347937 seconds)
    (34/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.964547607 seconds)
    (35/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.154796659 seconds)
    (36/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907006008 seconds)
    (37/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860859216 seconds)
    (38/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 2.348189951 seconds)
    (39/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94591848 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856925393 seconds)
    (41/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.62654536 seconds)
    (42/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01204343 seconds)
    (43/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.287094593 seconds)
    (44/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.886332468 seconds)
    (45/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986491321 seconds)
    (46/608) benchmarking ("sumeach", "Array{Float64,2}")...
    done (took 4.821058114 seconds)
    (47/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902346606 seconds)
    (48/608) benchmarking ("sumvector", "Array{Int64,2}")...
    done (took 2.386989468 seconds)
    (49/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895062723 seconds)
    (50/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.3449675 seconds)
    (51/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.902254553 seconds)
    (52/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.517631053 seconds)
    (53/608) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.87501065 seconds)
    (54/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.433611661 seconds)
    (55/608) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.981350065 seconds)
    (56/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.92824828 seconds)
    (57/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316530075 seconds)
    (58/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.04574508 seconds)
    (59/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.556068502 seconds)
    (60/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864037817 seconds)
    (61/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859361102 seconds)
    (62/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.812974385 seconds)
    (63/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861065448 seconds)
    (64/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956199333 seconds)
    (65/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.861312085 seconds)
    (66/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 6.858952191 seconds)
    (67/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86047364 seconds)
    (68/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.035827737 seconds)
    (69/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111204016 seconds)
    (70/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86751949 seconds)
    (71/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.860546435 seconds)
    (72/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.840529926 seconds)
    (73/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.338559177 seconds)
    (74/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.231139504 seconds)
    (75/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.892618198 seconds)
    (76/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864444328 seconds)
    (77/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409418744 seconds)
    (78/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.630421326 seconds)
    (79/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.906650361 seconds)
    (80/608) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 4.83975397 seconds)
    (81/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.404228164 seconds)
    (82/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.983398606 seconds)
    (83/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415058143 seconds)
    (84/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.99960507 seconds)
    (85/608) benchmarking ("mapr_access", "Array{Int64,2}")...
    done (took 3.285593109 seconds)
    (86/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.865553595 seconds)
    (87/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.861016975 seconds)
    (88/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.815706633 seconds)
    (89/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.988196128 seconds)
    (90/608) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91044036 seconds)
    (91/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396424894 seconds)
    (92/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.899523844 seconds)
    (93/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100248487 seconds)
    (94/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.861974555 seconds)
    (95/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.880747381 seconds)
    (96/608) benchmarking ("sumlogical_view", "Array{Float64,2}")...
    done (took 6.024861351 seconds)
    (97/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552172987 seconds)
    (98/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.174294797 seconds)
    (99/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996065479 seconds)
    (100/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.403621939 seconds)
    (101/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222402937 seconds)
    (102/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.904456145 seconds)
    (103/608) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.875133225 seconds)
    (104/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107759797 seconds)
    (105/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.972061996 seconds)
    (106/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.815050004 seconds)
    (107/608) benchmarking "5d"...
    done (took 4.181842054 seconds)
    (108/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.81483836 seconds)
    (109/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164777443 seconds)
    (110/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.344004113 seconds)
    (111/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864141223 seconds)
    (112/608) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.547828502 seconds)
    (113/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906965474 seconds)
    (114/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942002795 seconds)
    (115/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869988905 seconds)
    (116/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881127165 seconds)
    (117/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.863682414 seconds)
    (118/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865240255 seconds)
    (119/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099985041 seconds)
    (120/608) benchmarking ("sumelt", "BitArray{2}")...
    done (took 6.864735795 seconds)
    (121/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865478872 seconds)
    (122/608) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.013475977 seconds)
    (123/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552566483 seconds)
    (124/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901536216 seconds)
    (125/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.950823184 seconds)
    (126/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.906176675 seconds)
    (127/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.86565107 seconds)
    (128/608) benchmarking ("sumrange", "Array{Float64,2}")...
    done (took 6.862945332 seconds)
    (129/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358541495 seconds)
    (130/608) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.064396194 seconds)
    (131/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864695478 seconds)
    (132/608) benchmarking ("sumvector_view", "Array{Float64,2}")...
    done (took 1.918093297 seconds)
    (133/608) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.54822827 seconds)
    (134/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986640235 seconds)
    (135/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86086005 seconds)
    (136/608) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.929641651 seconds)
    (137/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.86298588 seconds)
    (138/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.92789486 seconds)
    (139/608) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.310031864 seconds)
    (140/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950596369 seconds)
    (141/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.597290925 seconds)
    (142/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919066742 seconds)
    (143/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.965433222 seconds)
    (144/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198958887 seconds)
    (145/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899180402 seconds)
    (146/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.971386957 seconds)
    (147/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.085882189 seconds)
    (148/608) benchmarking ("sumcartesian_view", "Array{Float64,2}")...
    done (took 2.755810955 seconds)
    (149/608) benchmarking ("sumelt", "Array{Float64,2}")...
    done (took 4.817499479 seconds)
    (150/608) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.25128816 seconds)
    (151/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021748985 seconds)
    (152/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181851205 seconds)
    (153/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934258783 seconds)
    (154/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864052427 seconds)
    (155/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864873429 seconds)
    (156/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.740750346 seconds)
    (157/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.424464647 seconds)
    (158/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.587073075 seconds)
    (159/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.171551704 seconds)
    (160/608) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.877601029 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883428892 seconds)
    (162/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.870917479 seconds)
    (163/608) benchmarking "ind2sub"...
    done (took 6.865519141 seconds)
    (164/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.823446943 seconds)
    (165/608) benchmarking ("sumlinear_view", "Array{Float64,2}")...
    done (took 6.874961773 seconds)
    (166/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.661614129 seconds)
    (167/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.86682271 seconds)
    (168/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114404402 seconds)
    (169/608) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.135546974 seconds)
    (170/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.86552779 seconds)
    (171/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.10784929 seconds)
    (172/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.866057128 seconds)
    (173/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.681230248 seconds)
    (174/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.818286535 seconds)
    (175/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388050148 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.3719711 seconds)
    (177/608) benchmarking ("sumcolon", "Array{Float64,2}")...
    done (took 6.890880927 seconds)
    (178/608) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.148147776 seconds)
    (179/608) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.763258559 seconds)
    (180/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.98809603 seconds)
    (181/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347215072 seconds)
    (182/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8652956 seconds)
    (183/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.889650048 seconds)
    (184/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901957229 seconds)
    (185/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881045604 seconds)
    (186/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94368414 seconds)
    (187/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.88603583 seconds)
    (188/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893479784 seconds)
    (189/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 4.475243606 seconds)
    (190/608) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.331912219 seconds)
    (191/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392627108 seconds)
    (192/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.871624133 seconds)
    (193/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.878487468 seconds)
    (194/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.865536469 seconds)
    (195/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.017856567 seconds)
    (196/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.024873872 seconds)
    (197/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883005998 seconds)
    (198/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.894795945 seconds)
    (199/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.095280039 seconds)
    (200/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345115817 seconds)
    (201/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487543284 seconds)
    (202/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889303906 seconds)
    (203/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.357682532 seconds)
    (204/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.370407089 seconds)
    (205/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946554008 seconds)
    (206/608) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.907756048 seconds)
    (207/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884018666 seconds)
    (208/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.491448887 seconds)
    (209/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.926464597 seconds)
    (210/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894083602 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "Array{Int64,2}")...
    done (took 2.877088846 seconds)
    (212/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.623063986 seconds)
    (213/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.597407562 seconds)
    (214/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.888075445 seconds)
    (215/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.560630391 seconds)
    (216/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19030942 seconds)
    (217/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888450248 seconds)
    (218/608) benchmarking ("sumcolon_view", "Array{Float64,2}")...
    done (took 1.8889683 seconds)
    (219/608) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.008532596 seconds)
    (220/608) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992271817 seconds)
    (221/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.569394413 seconds)
    (222/608) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.903399666 seconds)
    (223/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334482359 seconds)
    (224/608) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976681802 seconds)
    (225/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.879781936 seconds)
    (226/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.532470208 seconds)
    (227/608) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 4.878013114 seconds)
    (228/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.385795798 seconds)
    (229/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 6.966510063 seconds)
    (230/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885694679 seconds)
    (231/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 6.89225545 seconds)
    (232/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.835945639 seconds)
    (233/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924970258 seconds)
    (234/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.113211589 seconds)
    (235/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894917186 seconds)
    (236/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88103396 seconds)
    (237/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.296075296 seconds)
    (238/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.643954761 seconds)
    (239/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338457933 seconds)
    (240/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.933229851 seconds)
    (241/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917147574 seconds)
    (242/608) benchmarking ("sumlogical_view", "Array{Int64,2}")...
    done (took 6.047442003 seconds)
    (243/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.182199838 seconds)
    (244/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.924436565 seconds)
    (245/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894848999 seconds)
    (246/608) benchmarking ("sumvector", "1:100000")...
    done (took 1.884333683 seconds)
    (247/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.882505457 seconds)
    (248/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897739244 seconds)
    (249/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.490846845 seconds)
    (250/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.627746848 seconds)
    (251/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94305594 seconds)
    (252/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880811406 seconds)
    (253/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035690722 seconds)
    (254/608) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.891006332 seconds)
    (255/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.866707819 seconds)
    (256/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.872007325 seconds)
    (257/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.08668578 seconds)
    (258/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874083944 seconds)
    (259/608) benchmarking ("sumvector", "Array{Float64,2}")...
    done (took 2.390800153 seconds)
    (260/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.946807963 seconds)
    (261/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870171683 seconds)
    (262/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.97450527 seconds)
    (263/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925679082 seconds)
    (264/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.001609131 seconds)
    (265/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023334643 seconds)
    (266/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352949487 seconds)
    (267/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.841539328 seconds)
    (268/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872315831 seconds)
    (269/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.957314722 seconds)
    (270/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 4.469501912 seconds)
    (271/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.880157291 seconds)
    (272/608) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.866460324 seconds)
    (273/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.007981347 seconds)
    (274/608) benchmarking "4d"...
    done (took 3.382482744 seconds)
    (275/608) benchmarking ("sumlinear_view", "Array{Int64,2}")...
    done (took 6.879111626 seconds)
    (276/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.685090407 seconds)
    (277/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863383162 seconds)
    (278/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.940403798 seconds)
    (279/608) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.835665232 seconds)
    (280/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937405268 seconds)
    (281/608) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.839173352 seconds)
    (282/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.944601018 seconds)
    (283/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.612323331 seconds)
    (284/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413078813 seconds)
    (285/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.505048946 seconds)
    (286/608) benchmarking ("sumeach", "Array{Int64,2}")...
    done (took 2.596375154 seconds)
    (287/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350261309 seconds)
    (288/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.335692814 seconds)
    (289/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.909020527 seconds)
    (290/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.552489842 seconds)
    (291/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347311033 seconds)
    (292/608) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.317331907 seconds)
    (293/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.180498153 seconds)
    (294/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917919724 seconds)
    (295/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961708686 seconds)
    (296/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.583540135 seconds)
    (297/608) benchmarking ("sumvector_view", "Array{Int64,2}")...
    done (took 1.851126349 seconds)
    (298/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.254352729 seconds)
    (299/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943050109 seconds)
    (300/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.930153079 seconds)
    (301/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.78708262 seconds)
    (302/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850047157 seconds)
    (303/608) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.727652412 seconds)
    (304/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221699025 seconds)
    (305/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843635361 seconds)
    (306/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077929519 seconds)
    (307/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318647607 seconds)
    (308/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.02448987 seconds)
    (309/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.389691493 seconds)
    (310/608) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.997456857 seconds)
    (311/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000494099 seconds)
    (312/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032988689 seconds)
    (313/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864126072 seconds)
    (314/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.832648462 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.834288159 seconds)
    (316/608) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.708921897 seconds)
    (317/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858989533 seconds)
    (318/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.254099703 seconds)
    (319/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072906027 seconds)
    (320/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915851528 seconds)
    (321/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.99652059 seconds)
    (322/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.563018156 seconds)
    (323/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.833900297 seconds)
    (324/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936347167 seconds)
    (325/608) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.832574304 seconds)
    (326/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272163412 seconds)
    (327/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887520186 seconds)
    (328/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.4925993 seconds)
    (329/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.46374311 seconds)
    (330/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.834118666 seconds)
    (331/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.068438486 seconds)
    (332/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.731197807 seconds)
    (333/608) benchmarking ("sumelt_boundscheck", "Array{Float64,2}")...
    done (took 4.787169026 seconds)
    (334/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95127248 seconds)
    (335/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.835195234 seconds)
    (336/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.630441258 seconds)
    (337/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348870332 seconds)
    (338/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907587193 seconds)
    (339/608) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.885243817 seconds)
    (340/608) benchmarking ("sumcartesian_view", "Array{Int64,2}")...
    done (took 2.599240538 seconds)
    (341/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.78693966 seconds)
    (342/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.862014423 seconds)
    (343/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.935264124 seconds)
    (344/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.842367487 seconds)
    (345/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.880137181 seconds)
    (346/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.844987468 seconds)
    (347/608) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.84619573 seconds)
    (348/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.835432368 seconds)
    (349/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.979427826 seconds)
    (350/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.838066365 seconds)
    (351/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.761351651 seconds)
    (352/608) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.288327177 seconds)
    (353/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842997104 seconds)
    (354/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965065661 seconds)
    (355/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.834292375 seconds)
    (356/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288603609 seconds)
    (357/608) benchmarking "3d"...
    done (took 2.832902822 seconds)
    (358/608) benchmarking ("sum", "3darray")...
    done (took 1.837590897 seconds)
    (359/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834640221 seconds)
    (360/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.961714452 seconds)
    (361/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169343305 seconds)
    (362/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.873332264 seconds)
    (363/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938878775 seconds)
    (364/608) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.231270377 seconds)
    (365/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 2.447342513 seconds)
    (366/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.480244008 seconds)
    (367/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842205742 seconds)
    (368/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.788561866 seconds)
    (369/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.787110681 seconds)
    (370/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 6.835545231 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.952096256 seconds)
    (372/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.837107114 seconds)
    (373/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342859233 seconds)
    (374/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129454788 seconds)
    (375/608) benchmarking ("sumlogical", "Array{Int64,2}")...
    done (took 6.412930845 seconds)
    (376/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.745707994 seconds)
    (377/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877565596 seconds)
    (378/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038443352 seconds)
    (379/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.835865597 seconds)
    (380/608) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.32920257 seconds)
    (381/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293752915 seconds)
    (382/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.281170246 seconds)
    (383/608) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.935630575 seconds)
    (384/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165743691 seconds)
    (385/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.187254568 seconds)
    (386/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.530325115 seconds)
    (387/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861153575 seconds)
    (388/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.895313522 seconds)
    (389/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.029614632 seconds)
    (390/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.988235778 seconds)
    (391/608) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.595862277 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.140284714 seconds)
    (393/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967323631 seconds)
    (394/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.041151571 seconds)
    (395/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.080785747 seconds)
    (396/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412727676 seconds)
    (397/608) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.018097177 seconds)
    (398/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.836276786 seconds)
    (399/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041927088 seconds)
    (400/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.142545277 seconds)
    (401/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.06858988 seconds)
    (402/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043480184 seconds)
    (403/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.737398087 seconds)
    (404/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.885306051 seconds)
    (405/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 6.836780531 seconds)
    (406/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.837128638 seconds)
    (407/608) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.838873291 seconds)
    (408/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465095388 seconds)
    (409/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922583067 seconds)
    (410/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.072746486 seconds)
    (411/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000760207 seconds)
    (412/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.365775568 seconds)
    (413/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846283273 seconds)
    (414/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904353496 seconds)
    (415/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842177645 seconds)
    (416/608) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.844827506 seconds)
    (417/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.84530187 seconds)
    (418/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851162704 seconds)
    (419/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.070184966 seconds)
    (420/608) benchmarking ("sumelt", "Array{Int64,2}")...
    done (took 2.762614643 seconds)
    (421/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838551588 seconds)
    (422/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.838225299 seconds)
    (423/608) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.858439588 seconds)
    (424/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919561946 seconds)
    (425/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.586708805 seconds)
    (426/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.419805651 seconds)
    (427/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.843995732 seconds)
    (428/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284820035 seconds)
    (429/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439789796 seconds)
    (430/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370217792 seconds)
    (431/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92918207 seconds)
    (432/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838873871 seconds)
    (433/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.040782946 seconds)
    (434/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.998701827 seconds)
    (435/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.794024553 seconds)
    (436/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.840116602 seconds)
    (437/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028771145 seconds)
    (438/608) benchmarking ("sumlogical", "Array{Float64,2}")...
    done (took 6.374683314 seconds)
    (439/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.994696737 seconds)
    (440/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.606779836 seconds)
    (441/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.607126746 seconds)
    (442/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.347567108 seconds)
    (443/608) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.235030555 seconds)
    (444/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869565902 seconds)
    (445/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.018179445 seconds)
    (446/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.990181122 seconds)
    (447/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.862503899 seconds)
    (448/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103211035 seconds)
    (449/608) benchmarking ("sumeach_view", "Array{Float64,2}")...
    done (took 6.84204305 seconds)
    (450/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.704599217 seconds)
    (451/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.839948689 seconds)
    (452/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840726755 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.918001701 seconds)
    (454/608) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.142354206 seconds)
    (455/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.504904091 seconds)
    (456/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848334037 seconds)
    (457/608) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.040622241 seconds)
    (458/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143409504 seconds)
    (459/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240505806 seconds)
    (460/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.098156958 seconds)
    (461/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.840423483 seconds)
    (462/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.841161662 seconds)
    (463/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958595757 seconds)
    (464/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.608219292 seconds)
    (465/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275410299 seconds)
    (466/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840669511 seconds)
    (467/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587697378 seconds)
    (468/608) benchmarking ("sumcolon_view", "Array{Int64,2}")...
    done (took 1.845981005 seconds)
    (469/608) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.846003885 seconds)
    (470/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.968123765 seconds)
    (471/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.27824 seconds)
    (472/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.886813212 seconds)
    (473/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.086471282 seconds)
    (474/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204766719 seconds)
    (475/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846256109 seconds)
    (476/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.330429714 seconds)
    (477/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.884178783 seconds)
    (478/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002605884 seconds)
    (479/608) benchmarking "sub2ind"...
    done (took 7.227862153 seconds)
    (480/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.433104666 seconds)
    (481/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963026413 seconds)
    (482/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327290213 seconds)
    (483/608) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.701821031 seconds)
    (484/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.845944445 seconds)
    (485/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305741245 seconds)
    (486/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370771527 seconds)
    (487/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378427346 seconds)
    (488/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907929543 seconds)
    (489/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850236837 seconds)
    (490/608) benchmarking ("mapr_access", "Array{Float64,2}")...
    done (took 3.461531764 seconds)
    (491/608) benchmarking "6d"...
    done (took 4.020447822 seconds)
    (492/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 2.412815718 seconds)
    (493/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087332991 seconds)
    (494/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.772570621 seconds)
    (495/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.870302947 seconds)
    (496/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.147976015 seconds)
    (497/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843399661 seconds)
    (498/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043246156 seconds)
    (499/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 6.8435229 seconds)
    (500/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.847255806 seconds)
    (501/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29465391 seconds)
    (502/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380372792 seconds)
    (503/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.842962203 seconds)
    (504/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.765955926 seconds)
    (505/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846471762 seconds)
    (506/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.881448175 seconds)
    (507/608) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.847153897 seconds)
    (508/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07947958 seconds)
    (509/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146073931 seconds)
    (510/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.881862673 seconds)
    (511/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128437835 seconds)
    (512/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848968445 seconds)
    (513/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.850933795 seconds)
    (514/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.825917317 seconds)
    (515/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297063101 seconds)
    (516/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.938088865 seconds)
    (517/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848621159 seconds)
    (518/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.797614541 seconds)
    (519/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.84651006 seconds)
    (520/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88812822 seconds)
    (521/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975033392 seconds)
    (522/608) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87060206 seconds)
    (523/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 3.320560185 seconds)
    (524/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 6.844264128 seconds)
    (525/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207450706 seconds)
    (526/608) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 3.364415898 seconds)
    (527/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870128181 seconds)
    (528/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.882110813 seconds)
    (529/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298171626 seconds)
    (530/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375321441 seconds)
    (531/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.476849345 seconds)
    (532/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13888252 seconds)
    (533/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.008542518 seconds)
    (534/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.595785799 seconds)
    (535/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.845070657 seconds)
    (536/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.41065557 seconds)
    (537/608) benchmarking ("sumrange_view", "Array{Int64,2}")...
    done (took 1.850114478 seconds)
    (538/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882096985 seconds)
    (539/608) benchmarking ("sumcolon", "Array{Int64,2}")...
    done (took 6.885429534 seconds)
    (540/608) benchmarking ("sumcartesian", "Array{Int64,2}")...
    done (took 5.154591734 seconds)
    (541/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.84563774 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.32726596 seconds)
    (543/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.845134879 seconds)
    (544/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.920474002 seconds)
    (545/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.849238347 seconds)
    (546/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853383815 seconds)
    (547/608) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.29631571 seconds)
    (548/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.695664475 seconds)
    (549/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.613658836 seconds)
    (550/608) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.846876656 seconds)
    (551/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204699683 seconds)
    (552/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.983198786 seconds)
    (553/608) benchmarking ("sumeach_view", "Array{Int64,2}")...
    done (took 6.876674586 seconds)
    (554/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177576931 seconds)
    (555/608) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.797748807 seconds)
    (556/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459385186 seconds)
    (557/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856928606 seconds)
    (558/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.799942402 seconds)
    (559/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84808545 seconds)
    (560/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350426354 seconds)
    (561/608) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.892355666 seconds)
    (562/608) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859878503 seconds)
    (563/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895642483 seconds)
    (564/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.032108247 seconds)
    (565/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.768113363 seconds)
    (566/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 6.848234051 seconds)
    (567/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65340009 seconds)
    (568/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.850356203 seconds)
    (569/608) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.030345111 seconds)
    (570/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.065611646 seconds)
    (571/608) benchmarking ("sumlinear", "Array{Float64,2}")...
    done (took 4.946369936 seconds)
    (572/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 4.397834585 seconds)
    (573/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.895237117 seconds)
    (574/608) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.038625328 seconds)
    (575/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.043872506 seconds)
    (576/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852840146 seconds)
    (577/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875163983 seconds)
    (578/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848867853 seconds)
    (579/608) benchmarking "2d"...
    done (took 2.674618234 seconds)
    (580/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.799628301 seconds)
    (581/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.847549312 seconds)
    (582/608) benchmarking "7d"...
    done (took 2.262930652 seconds)
    (583/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299832896 seconds)
    (584/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.84730688 seconds)
    (585/608) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.907092239 seconds)
    (586/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.849456577 seconds)
    (587/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.581702382 seconds)
    (588/608) benchmarking ("sumlinear", "Array{Int64,2}")...
    done (took 2.616978419 seconds)
    (589/608) benchmarking ("sumcartesian", "Array{Float64,2}")...
    done (took 4.961169952 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847643671 seconds)
    (591/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.79045471 seconds)
    (592/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848687193 seconds)
    (593/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.468887001 seconds)
    (594/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215142864 seconds)
    (595/608) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.296829302 seconds)
    (596/608) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.886193274 seconds)
    (597/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849695067 seconds)
    (598/608) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.069685922 seconds)
    (599/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048604545 seconds)
    (600/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.078910492 seconds)
    (601/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998027771 seconds)
    (602/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848305258 seconds)
    (603/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.373004344 seconds)
    (604/608) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95673318 seconds)
    (605/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.88291883 seconds)
    (606/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.871600499 seconds)
    (607/608) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.987108239 seconds)
    (608/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.774585509 seconds)
  done (took 2390.397343457 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.878212 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.875142779 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.899591466 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.929478746 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.932429353 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.910313659 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.93463244 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.953638099 seconds)
  done (took 57.091729058 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.848960623 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.851448592 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.960684191 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.850453216 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.859446341 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.850874414 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.03128811 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.865766301 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.859875104 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.858464706 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.850065184 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.85170386 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.122577982 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.880514937 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.852066135 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.852727298 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.860172503 seconds)
  done (took 78.916438586 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.853047985 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.148754321 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.931967579 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.850465913 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.776671086 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.864315764 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.263588301 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.951724457 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.856755291 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.918846854 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 8.018390224 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.912195076 seconds)
  done (took 94.127182732 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.85498953 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.854369959 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.854384342 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.854137046 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.853276554 seconds)
  done (took 11.057702255 seconds)
done (took 2907.280842349 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.078451672 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.200111238 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.174784487 seconds)
  done (took 6.153115851 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.907016317 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.971573942 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.040276703 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.875887055 seconds)
  done (took 9.577473753 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.175282045 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.314573469 seconds)
  done (took 6.265407416 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.286356816 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.875809509 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.397783322 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.850834132 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.85479446 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.852575163 seconds)
  done (took 22.350645199 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.849267081 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.849201296 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.849947202 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.849631477 seconds)
  done (took 9.183485673 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.845031079 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.799699094 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.850277451 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.864837069 seconds)
  done (took 21.136638868 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.060399709 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.112755805 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.517634706 seconds)
  done (took 8.467050727 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.667731188 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.141406811 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.658088504 seconds)
  done (took 9.244123189 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.756128469 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.771589441 seconds)
  done (took 7.304390338 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.020500046 seconds)
  done (took 3.79737494 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.150674684 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.318987646 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.702181308 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.681909123 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.847684441 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.207014285 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.206364839 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.117538494 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.511854898 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.361334294 seconds)
  done (took 25.883234767 seconds)
done (took 144.784710363 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.775652716 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.254388792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.024850587 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.454021783 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.945089434 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.029010852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.916142693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.225178879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.085690412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.083415457 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.911179317 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.94439068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.908867166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.275700938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.911286835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.204659999 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.255015279 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.757119623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.690535408 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.594374082 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.921338604 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.076852568 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.595378613 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.081316202 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.25946738 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.981498205 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.981766238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.209662445 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.027671402 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.98250885 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.983372397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.932878722 seconds)
  done (took 176.058818672 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.872177254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.851828132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.853481066 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.854102111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.762937907 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.854732202 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.856600735 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.853773696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.735898801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.736024731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.854271781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.771037741 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.85519855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85501202 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.856828384 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.855292744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.916196526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.854431714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.882881987 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.85398228 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.85610669 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.48177324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.853797177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.482209163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.918896401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.857450502 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.855290269 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.855426474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.854913916 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.855311202 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.857383532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.855050737 seconds)
  done (took 216.161597126 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.851683244 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.85601129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.855881465 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.855865679 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.855191252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.857424455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.854703142 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.85526476 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.855348793 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.855878843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.856665041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.857306109 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.854812952 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85627409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.857851374 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.856051579 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.854021935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.857068978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.858878406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.858790749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.856357694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.856069129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.859727235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.859946148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.861694635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.865337895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.856962783 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.85544832 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.854550344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.856612307 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.857113428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.857029958 seconds)
  done (took 221.209892282 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.152901849 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.855479729 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.855866756 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.330674824 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.855786709 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.855926328 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.199240866 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.152594398 seconds)
  done (took 20.051527088 seconds)
done (took 635.281434103 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.572005602 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.374330971 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.084251974 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.890757267 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.487025677 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.956126147 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.882677416 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.973192303 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.84740043 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.993589371 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.685353755 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.917082666 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.799134751 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.923418199 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.036385978 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.952562568 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.511824785 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.628475361 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.095607136 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.251227751 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.108417562 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.87382697 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.003346168 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.895496356 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.837078317 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.949777507 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.978613346 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.517559682 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.903920397 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.075722265 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.963441625 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.288146681 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.902647049 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.882064013 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.959189565 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.924306757 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.199543275 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.9017704 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.034841538 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.647638223 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.253125898 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.748506238 seconds)
  done (took 106.494790865 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.868534024 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.863209212 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.862134307 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.863030021 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.87374189 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.862696078 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.862967747 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.862723821 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.86302654 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.862724976 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.863179633 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.87289602 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.862898678 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.873714601 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.862716751 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.863085846 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.863052893 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.873363087 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.863445877 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.864279943 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.863022055 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.862959629 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.859443459 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.863046815 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.863634888 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.863250641 seconds)
  done (took 50.298415301 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.859841773 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.037156035 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.146474685 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.885982086 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.859511975 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.862624124 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.88587034 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.868236161 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.863133532 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.86180912 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.977644498 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.867829843 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.883719188 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.146537337 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.884127259 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.860456897 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.860941787 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.862182341 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.04367277 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.881459653 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.890467117 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.869472919 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.888509406 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.879443053 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.864748564 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.861860151 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.864735407 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.372829599 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.873673934 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.978175306 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.923326492 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.891813951 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.316607864 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.15767714 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.938850602 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.867635288 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.861283784 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.983878801 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.870741054 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.862220769 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.888438148 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.871418127 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.148900334 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.42863605 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.886065301 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.865290251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.390210462 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.999029831 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.922504861 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.877905951 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.151012663 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.88889477 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.866105394 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.867049346 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.915721021 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.873139082 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.86545628 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.218107022 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.881273622 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.892094316 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.874069511 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.867483839 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052980898 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.878847419 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.040637908 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.879328951 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.874182614 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.867904845 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.151127668 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.889409963 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.44097192 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.886005226 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.865599507 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.984316025 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.048083607 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.4349719 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.885039942 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.054966176 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.330918765 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.901699495 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.878079353 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.365969612 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.905469782 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.878324131 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.868146071 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.868131598 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.866207391 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.913616434 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.891349701 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.344925656 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.449529309 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.244798264 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.904834392 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.89042132 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.86818071 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.231617079 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.878228433 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.866921334 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.143866971 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.45522946 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.888176371 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.875961241 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.419482698 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.889276564 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.894687401 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.880165553 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.159319063 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.891195787 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.914511886 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.868739655 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.876270054 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.871234991 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.895186095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.880066624 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.867933324 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.414881559 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.012567664 seconds)
  done (took 233.327106619 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.867231103 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.873427665 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.866618209 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.8738824 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.86648719 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.868757579 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.866982085 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.866571148 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.869538591 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.865895826 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.866718727 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.869547746 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.868729121 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.87038858 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.901695717 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.869154121 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.70055464 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.867697322 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.867720562 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.870903396 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.769025565 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.873519358 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.86820457 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.870971795 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.868455395 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.86972925 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.875026102 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.899251919 seconds)
  done (took 167.934672784 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.870060714 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.025543595 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.895805534 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.912308302 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.881760413 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.870458809 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.004825101 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.899258224 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.879353302 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.870407068 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.870486104 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.954655908 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.886789562 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.006299204 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.916362236 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.017203345 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.017036017 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.881746462 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.870397063 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.870865873 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.912328917 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.881660984 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.954297105 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.043963544 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.895165944 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.027647881 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.895057461 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.870363807 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.870502325 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.027755971 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.896033296 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.956276572 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.913939113 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.8967443 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036533985 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.031662393 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.017737326 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.01794771 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.881933843 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.871717286 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.871210322 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.871949312 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.028414565 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.896743073 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.872927689 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.029966706 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.896617169 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.872699351 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.872122946 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.871994632 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.889509191 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.896003518 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.964315803 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.048924606 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.922235646 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.904567106 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.006224982 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.038760072 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.873327893 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.007424464 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.882769957 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.031102801 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.900163366 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.873179475 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.874203142 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.876673179 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.916624664 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.019809856 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.020582875 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.886354152 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.008471108 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.927587855 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.884472656 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.874372562 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.874024139 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.031707818 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.034008521 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.927800193 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.927711269 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.919007655 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.884158305 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.873172407 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.874828013 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.899530871 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.883245474 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.032205101 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.034141227 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.885338644 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.8744008 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.874822731 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.874866497 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.909722317 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.043034069 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.925633638 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.020732056 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.969999472 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.977818646 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.894195554 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.892913656 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.883096572 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.961435555 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.895602855 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.892683173 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.252799588 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.959672301 seconds)
  done (took 204.900545993 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.315535859 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.94020495 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.943196988 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.220501604 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.317020402 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.941859341 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.944297638 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.934294004 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.963589542 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.168961107 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.008294289 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.956489343 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.927358985 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.906166819 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.930362711 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.954748975 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.947039413 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.337391208 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.188281471 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.20724922 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.924818975 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.247128775 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.295283731 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.620020829 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.992806338 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.438159801 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.604074425 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.096538669 seconds)
  done (took 63.092309669 seconds)
done (took 827.835203629 seconds)
SAVING RESULT...
DONE!
