cset: moving following pidspec: 1448424
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.258253196 seconds)
loading group "shootout"... done (took 0.791394577 seconds)
loading group "string"... done (took 0.221135411 seconds)
loading group "linalg"... done (took 3.279996466 seconds)
loading group "parallel"... done (took 0.022373883 seconds)
loading group "find"... done (took 1.205296571 seconds)
loading group "tuple"... done (took 0.696421775 seconds)
loading group "union"... done (took 3.150743287 seconds)
loading group "dates"... done (took 0.158789255 seconds)
loading group "micro"... done (took 0.058642312 seconds)
loading group "simd"... done (took 0.369490029 seconds)
loading group "io"... done (took 1.427509328 seconds)
loading group "random"... done (took 2.318846636 seconds)
loading group "problem"... done (took 1.159002681 seconds)
loading group "array"... done (took 4.480057941 seconds)
loading group "misc"... done (took 1.116511611 seconds)
loading group "scalar"... done (took 3.498380536 seconds)
loading group "sort"... done (took 0.30786784 seconds)
loading group "sparse"... done (took 3.541110819 seconds)
loading group "collection"... done (took 5.961680301 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482668481 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.075753216 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.257609104 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.074561776 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.27140854 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.08576433 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.088051111 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.07402558 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.161599836 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16215714 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.214401407 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.387394602 seconds)
done (took 5.082571742 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.326468677 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033265336 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125142136 seconds)
  done (took 0.770415104 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.137708309 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015803274 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022928533 seconds)
  done (took 0.782254385 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020705731 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.100797744 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022222614 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022483435 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022301339 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.02168772 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021585045 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021603829 seconds)
  done (took 0.857709299 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029337734 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022928364 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021046761 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022387236 seconds)
  done (took 0.712065471 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.02315143 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.09503155 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.027906425 seconds)
    (4/4) benchmarking "different"...
    done (took 0.027569455 seconds)
  done (took 0.795644054 seconds)
done (took 4.885245469 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.197475953 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.778745802 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.882661207 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.176888668 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.344249438 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.288733923 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076578983 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240130773 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.143896501 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.031162275 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.179308777 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.036390777 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.515866062 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.456151203 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.026527476 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.140934723 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.576107323 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039339399 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070460959 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.223787354 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.036135221 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039140667 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.044078214 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.026913383 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.139668995 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.134762927 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.587947975 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.065014742 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.025438977 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.051560076 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.028172676 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.032226365 seconds)
  done (took 9.288952705 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.156925886 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.14655496 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.02450198 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.060088754 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.05130805 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025507753 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030314941 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023086904 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.042643144 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.087898268 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.045460895 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152892069 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021150128 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024525626 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.135030868 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.116178809 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.03799622 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.037248383 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022467391 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036123737 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.049010837 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.035039274 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.032322594 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.031880893 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.06805547 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.092708609 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.041385432 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.063801515 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022674987 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.03390623 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.051236859 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.063126688 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022805264 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021516084 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.064477647 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.040041436 seconds)
  done (took 2.702086044 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.710778988 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.053533841 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.139956258 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.130082686 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064519812 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.051227771 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.178754975 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.081970663 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.056677939 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024260342 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.210227475 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.650944055 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.169864941 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.073139632 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028596032 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.178197196 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.881895806 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.966111212 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.02319302 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.0233308 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.130540108 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025878904 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.169758344 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.022777171 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.132662955 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.700956404 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.029382125 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025121861 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.053368684 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.255681201 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.020987145 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.094185102 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.049671494 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.02516879 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.556391162 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.02179773 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.019972572 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.042020978 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.050856623 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022028641 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023017915 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.034006592 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021107584 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.074430011 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.035702435 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.499767379 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.024651566 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.687042758 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.802410814 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.028910233 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.026352657 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.057034154 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.019588312 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.02299229 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.571141339 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.09786902 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.02230826 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.286277593 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.02497818 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023603314 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.023829937 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.05383078 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.022651601 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.023894715 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.025734051 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.043737252 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.982069059 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.031378639 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.045845981 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021289036 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022199406 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.020824657 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.41213303 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029178162 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.024809394 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020505512 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026526296 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.02265733 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022148251 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.06541728 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.049029973 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.046480402 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.02896604 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023258952 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022275393 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.5435839 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.967698567 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.02510668 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024226339 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.477313867 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.02068028 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022690817 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024252408 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.162396795 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023261545 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019933405 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.05756012 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.024351214 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.124712556 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.537484537 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.02389876 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.019914932 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.360383979 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.023789886 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.053312926 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.073942023 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.02197861 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.057800973 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.022157637 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.01971375 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.02563115 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.019565452 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.023737997 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.020730308 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.021403914 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.020762823 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.022228508 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023265329 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022230286 seconds)
  done (took 19.687938132 seconds)
done (took 34.010683972 seconds)
(4/20) benchmarking "parallel"...
done (took 0.75041893 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.204668394 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.048759691 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019379366 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.155711876 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.04339537 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.129787788 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.167931941 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.123256378 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.044533343 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.044151542 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.044467458 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.173823672 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.181645057 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.045485507 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.113389242 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.182925659 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.046012892 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019994498 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.0455947 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.045249185 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.045278542 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020000339 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.045234758 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.045303938 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.113116245 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.044087093 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019442543 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.113184701 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.044805883 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.11743326 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.045908454 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.044626988 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.045924601 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.115531313 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.047314662 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.118435423 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020783071 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.048280713 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.048390931 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.05045599 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.048385468 seconds)
  done (took 3.828242801 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.047501829 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.041071321 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.041321386 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018308906 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028178886 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038630963 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018258673 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038114339 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041273707 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.038524928 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038420196 seconds)
  done (took 1.147573087 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.04113849 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039034129 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.040597681 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018183346 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029907166 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038952539 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018072857 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038617755 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041572372 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039456647 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039182131 seconds)
  done (took 1.077821117 seconds)
done (took 6.717157358 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.148202886 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.119909895 seconds)
  done (took 0.946898588 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.560431032 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.204334162 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.12662609 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.246815213 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.124616772 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.151084372 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.786070053 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.153746392 seconds)
  done (took 7.083329802 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.075660113 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.141367381 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024728967 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.023074201 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023371321 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.023218318 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024564336 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023271185 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022484582 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.024908296 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024498375 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022775739 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023633788 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025009689 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.022919795 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.022990586 seconds)
  done (took 1.364905455 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.028020125 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025899086 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.026564895 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.01699647 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.026805989 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.025491235 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.026601887 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.027981075 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.025990699 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026334538 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024227736 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027422697 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.025891637 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024744514 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027499226 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.016920492 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027567655 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026826289 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028466053 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.026821843 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.02591907 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024346369 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.02760924 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.025609569 seconds)
  done (took 1.320695394 seconds)
done (took 11.405487603 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.138961478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.028973163 seconds)
  done (took 0.853420757 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.124516437 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1238788 seconds)
  done (took 0.942441235 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.027981974 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.015920425 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.031127508 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.023806391 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.01617179 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.015932096 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.030093554 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016166945 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.015931602 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016107913 seconds)
  done (took 0.907170315 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019200079 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022544296 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.020657851 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019085103 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020534093 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.016986033 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019149968 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017095461 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022342854 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0162782 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.019890537 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.037610683 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019283433 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.038016922 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019293484 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.019723445 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021184235 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019003587 seconds)
  done (took 1.085677687 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017772352 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.016749548 seconds)
  done (took 0.734595721 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.02028643 seconds)
    (2/7) benchmarking "second"...
    done (took 0.016895177 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018378946 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018281403 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016463238 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.016015622 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016454927 seconds)
  done (took 0.815421965 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39465289 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.092343632 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.3268263 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.025167371 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.037317995 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.233852011 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019881566 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023943983 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.023746658 seconds)
  done (took 1.882242552 seconds)
done (took 7.92155832 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.044558836 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.141396037 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.146840503 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.446686139 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034609708 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022699939 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.057188786 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.225259112 seconds)
done (took 1.837106405 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.491298646 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.228924911 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.187076708 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.023760233 seconds)
  done (took 2.144386876 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.309397007 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139977239 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.031060117 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023300084 seconds)
  done (took 1.241770574 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.02192648 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027568338 seconds)
  done (took 0.769447959 seconds)
done (took 5.366136357 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029363202 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.016908922 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023093363 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018513377 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018442195 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017610553 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.01761485 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018346743 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016382718 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018226263 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018260504 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018241946 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017971255 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017898554 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017542219 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018186936 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016389905 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.017931542 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017888932 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.017941304 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016322906 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018230794 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017475785 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.017904422 seconds)
  done (took 1.144550942 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.037393507 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022253589 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022111134 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.02213747 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023293717 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.022125919 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022218363 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022077553 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.022298037 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.02113291 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023304166 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.023279891 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.020972493 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.023350927 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021109692 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.023352452 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.022395052 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022181811 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021207901 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.023408794 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.022281661 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022236203 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.023349953 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022266183 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.02341566 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0234456 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021316715 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.022330973 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.022343196 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.023479373 seconds)
  done (took 1.400061076 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023103987 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015085348 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015318388 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025475441 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015013136 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015254791 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015590166 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014941724 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015228222 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016147297 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015701307 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015059356 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015888495 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015082305 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015105119 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015628338 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020447474 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.03618097 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015391456 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015137789 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019981539 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015346721 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015116079 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015159675 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015562974 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015130875 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.014992485 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015470206 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015137506 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015673061 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015187357 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019896914 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021335607 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015523512 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025664108 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020309504 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.015638769 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019787479 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.015978574 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.014978607 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.014948389 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.014995081 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015150111 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015123762 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025718299 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015349998 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016137312 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015640272 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015318998 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015003896 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015095546 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016562753 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.020849128 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016224613 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.014977143 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016157915 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015002537 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015683798 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015152618 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.014981649 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.014999942 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019234347 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016327321 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015669819 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.03684474 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016335863 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025742594 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015178045 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015524796 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019289151 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015622348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035367165 seconds)
  done (took 1.976281584 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.027379341 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.024946258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.034481357 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.025189774 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.020176006 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.017030069 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019836529 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016389578 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025416338 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.01945097 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016032583 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018961197 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025366637 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019584712 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017278726 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.025309536 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019377086 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018874443 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016242706 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.01965006 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017290068 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.01922668 seconds)
  done (took 1.186362639 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105353569 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.022849538 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.069215077 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.022543942 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.021005867 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.022024739 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022745256 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.022653835 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022845841 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023772169 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023976015 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023005815 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.02079053 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023634982 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023719065 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023461466 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022664551 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.023459853 seconds)
  done (took 1.272526113 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.033897381 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021189536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.048820331 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.02110063 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021038278 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020622574 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024842667 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024402746 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020566598 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021112408 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024480024 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02070187 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.020621211 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021144998 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020655939 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021108534 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020643164 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0211243 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024359184 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024868936 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024850987 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024308349 seconds)
  done (took 1.261911149 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036559679 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020934202 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.039460052 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.023122039 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015496341 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015446214 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.023125046 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.021930613 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.023006467 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.020885372 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.02205209 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015517984 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.02393755 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022100937 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.024040458 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022127921 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021014903 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022055844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020976821 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015530169 seconds)
  done (took 1.163640789 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128097229 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017695207 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017426432 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021551833 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017419535 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017402972 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021628097 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017293173 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017372364 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.041474862 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017481657 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017440955 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.021680983 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020056522 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017380412 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021686171 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021657322 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021709108 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017434362 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017445271 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.041468783 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017460713 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.021619764 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017373201 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017405291 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017393671 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017357184 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020012882 seconds)
  done (took 1.395781377 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.038607968 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.014881667 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015047631 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.018863165 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.018856466 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.024731756 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.01914033 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.018955679 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.01484386 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015151466 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.016986753 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.014832364 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014775171 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024171958 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.015060205 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.018688255 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.025429923 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019807195 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025675996 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.027523834 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017369466 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024473151 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017387687 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015465369 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.027141503 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017980175 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019495888 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.019970335 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017175268 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015271619 seconds)
  done (took 1.341085316 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029513171 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026654117 seconds)
  done (took 0.788593641 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018349076 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.03335333 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.01503652 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028572884 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024311665 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.01933583 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.023720687 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024355258 seconds)
  done (took 0.918994842 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.123114183 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.147226578 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017157956 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017269524 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.121743415 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084462627 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.132738217 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028535077 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030444901 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019708874 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016910514 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.132759055 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016448473 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030181801 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017955641 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026261453 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023796852 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.03433178 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029803175 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015462165 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.02907239 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017049417 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016298937 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017136126 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017420845 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023241835 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032082056 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.028894431 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024743601 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.014901704 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035119001 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.015655473 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016233792 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024721783 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.122000822 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.015827497 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.053016982 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.015807927 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.019766503 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.01543678 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027389904 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036534896 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.029890337 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.033249592 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.016994486 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017406238 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015524443 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017081985 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.019726424 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.024712936 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.01578594 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.022972086 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015403396 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.016933047 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026141563 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.015809094 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.019965304 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.024754385 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029215945 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.025990044 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.02841243 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.030947548 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024478573 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.023563675 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016380479 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.035444953 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.01718848 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.028991748 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030421912 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.016797012 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028321856 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015561178 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.014899536 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.015696629 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049081464 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017000289 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016440638 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.015772169 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.015903529 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.016892661 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025055287 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019995294 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.022972422 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018496409 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031422283 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.024749008 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015582973 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.022393285 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.033708091 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019821281 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.015775492 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.032508408 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.019704352 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.01556275 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.033524664 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026156922 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017101251 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016362735 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.019622038 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.028808635 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.016973055 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.014865006 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.02405784 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017107744 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.122706599 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.020558014 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02424154 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.015901446 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026250836 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022112056 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017500528 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015224139 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.02087911 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.016824479 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015232412 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025359162 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016121668 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.030779998 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023049955 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.030650565 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.030999034 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.026616162 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032046331 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.015985443 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015206844 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.034370388 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025404324 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017360548 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.034071436 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.01595727 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026497885 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016103031 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017496419 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025251094 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015515802 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017683754 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.01624194 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.022054244 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.017448134 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017656902 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022064657 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.024551055 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028188837 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.01706717 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.024907011 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016401974 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.031851656 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.025666768 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021094249 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.01917744 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.016780622 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.027963426 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.022957365 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025087696 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.01591279 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.016772689 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016049351 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027150913 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025395796 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.017853448 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.025067747 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021129082 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.016936855 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016272425 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017231881 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020230082 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.019551059 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.016790909 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02394273 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.024896417 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.030388498 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.02347014 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025259223 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.015628737 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016044024 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.017869665 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016008285 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021036717 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025370067 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031743275 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.027874335 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.037689951 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016390371 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.025814499 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.01778131 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.033167754 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.029557893 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017086551 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020610979 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.01534362 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017852238 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.025376813 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.027322104 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.030059817 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031157202 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021206807 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.02105782 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016107228 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031293948 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016612623 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024493148 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025309576 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.022069421 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016214933 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018990054 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.02670632 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021829141 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.01805595 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.03256327 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.023822032 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016366849 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.030916879 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.017506756 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.028669612 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.01682955 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020554269 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.021984287 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018401062 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.025939574 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.031772673 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.01571526 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016913428 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032212823 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018425798 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018237091 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024651355 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.03206275 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.022233668 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.026180201 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.028035335 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.028100821 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021689432 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.027134102 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.018042729 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.026157241 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.02045187 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.02880508 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016653374 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.035143271 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.01571752 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.032254157 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.017699229 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.028168664 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.017128471 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026059518 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.017703316 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.034931115 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.019462713 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.018844969 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.030091956 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.016965856 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.02736467 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.018140334 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.023017526 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.025181546 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.026420051 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.018773841 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026317305 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.01947241 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025977429 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.021753188 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.025943563 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.02611148 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021605126 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.016440608 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.025350234 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.174283902 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.024093294 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.017041984 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.016969431 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016071561 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.025007411 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.016991061 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016534599 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023840067 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020919504 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021969201 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016894532 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.017023113 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016836139 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024138937 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025182593 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.0335355 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024209473 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.023068585 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024926339 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015798477 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031417254 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015607186 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.023687774 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.015856785 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.022409237 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.025892845 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.016757425 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03563796 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.017333454 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023609052 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027255426 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024313029 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019961007 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.033506302 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018413366 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.023958826 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023347464 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.02047731 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022432361 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.016758879 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.023722642 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024740418 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025953319 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016247123 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.023020723 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024263338 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.016753002 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.022603536 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016616431 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023714026 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.016822522 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.014851521 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020448861 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026250912 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020578228 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.020800011 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.016573202 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.015923939 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.016363527 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.02230891 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.021113575 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024168831 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030796219 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014856551 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016116459 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015224747 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019528728 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.03288994 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.024692026 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023244476 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020500549 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.014846421 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016543724 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.016612822 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015439943 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.01790045 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.014930356 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.01663968 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.027043393 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.01754933 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.021110596 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016220111 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016708514 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025612519 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.019816594 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016138399 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.023434788 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.016973094 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.02323711 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015966201 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.017614828 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.021196309 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015749097 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019915813 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.025863266 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.032490572 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.023143558 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024879837 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.01678712 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023765233 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031218018 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.023449657 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016709206 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.025333091 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015556266 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034529514 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.025304668 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024800736 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.02640368 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.017383438 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.033136157 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020983151 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.025857701 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.03132702 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016820121 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.02357669 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.01613265 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031817262 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.020908662 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.015703909 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.02438869 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023815523 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022330833 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.02762999 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016876346 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024677166 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020491061 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020368471 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017512089 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017404026 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.024639153 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032376037 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.016902911 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.020929819 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.023854291 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.02413391 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021065886 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028169617 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024020584 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016754524 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.017364175 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020201887 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017002492 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028486502 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016626571 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021113439 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021126779 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016106892 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023298567 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032735218 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025449644 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025623111 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016130453 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015585495 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.034288604 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020256441 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019372303 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024137793 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.025907394 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028388152 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025379763 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.033058787 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016655772 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022406937 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028272117 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.016979709 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.015971463 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020174492 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.017649365 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025153752 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025969308 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023703569 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017971878 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023280458 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.029681092 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017493388 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021258126 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023027398 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.018309762 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027608952 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024238824 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024819831 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.017711399 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016093719 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.01997024 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025127945 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023838054 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025174107 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017080727 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.024059379 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030004866 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.023537368 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.019370095 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016027742 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019507464 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025380229 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.022134459 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.015965481 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021108699 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020062683 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.02449318 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025529684 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021171433 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016084784 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.033390999 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.024758292 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025160437 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.017965034 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.017924908 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016449972 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016072384 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027220198 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016159257 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.017790085 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021275821 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.017912957 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.03411115 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024260812 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031892434 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017143474 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.02103507 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016106978 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025667589 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021130123 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016206874 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.026642042 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015937948 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.03199862 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.028142892 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.023717012 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016359728 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021844515 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.02540161 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.031726938 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025880638 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025059258 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.019602782 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.02574522 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017854493 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027103933 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.01614267 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015375275 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026151983 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024628935 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.028354705 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016132076 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026107238 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.017965967 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024233711 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.02472549 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.017842663 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017874301 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.017699449 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.02556358 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021188831 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.025344054 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.021338371 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.033148174 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.017228685 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.027371484 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025152083 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027089388 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029928991 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.028490153 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.025064296 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.016765051 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023625907 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.024919885 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.017398913 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.021771074 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.019635397 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.038738186 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.017968046 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.017854563 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.030777382 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.024525175 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016444262 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.024272306 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021424659 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026337034 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017277847 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.026684079 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.021962213 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.0172913 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.021339182 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021392591 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015496231 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016184228 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016557158 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.025986977 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021397914 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016415862 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.035968073 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017884498 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.02490907 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.027346559 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.023419285 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.018030594 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015554237 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.017193639 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.02959907 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.032028372 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020593656 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.173618231 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017141784 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024724109 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.014928523 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024234834 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023473166 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024027418 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015490325 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015724159 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030377845 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.030796042 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020663737 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032609319 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024477967 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.016818396 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036721679 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.02432967 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016190124 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.025902296 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017174737 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015060844 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.014917522 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.016686719 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.026641489 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.01533529 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.017093611 seconds)
  done (took 15.158177131 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061460419 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017215425 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015744148 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015656472 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02251703 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016725626 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0156913 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016936301 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.018431982 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.018700727 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.016250216 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.016330508 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021601636 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.03064001 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023121578 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019156388 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015806167 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017587006 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.016948189 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017591801 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021785796 seconds)
  done (took 1.223277053 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.01983394 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.019809405 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019152111 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.01947145 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018844491 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015937783 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.01904725 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015791005 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019431165 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0160725 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.01938724 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016148498 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016498477 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016311374 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016378967 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017932247 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.020458692 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019729006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.016624019 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020498152 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.018361338 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019919575 seconds)
  done (took 1.177286122 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018197184 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016089546 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024002374 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015235432 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015110421 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017669606 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015074178 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019868897 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019834652 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019801195 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.024000009 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.016198734 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015414348 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021903779 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015410709 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.016339062 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.064249088 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.017565616 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.017673602 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.016733809 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.018404576 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024724772 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015537844 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015593356 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.020228694 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.018121111 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.016095351 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.018996184 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.016582962 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020648976 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016168364 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015094702 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024062757 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023249276 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.019950761 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019958261 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016688525 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.016169531 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015491121 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015448902 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023731986 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016618099 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.01555882 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016292026 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.024335088 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015484503 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015104414 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.02428081 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015232748 seconds)
  done (took 1.712240029 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.027579754 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.068364152 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023063489 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050771613 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.027885606 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.02024671 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.021996179 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.052964636 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016351698 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016689551 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.028729069 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.029385871 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017641401 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.018696555 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022988842 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017575728 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018238193 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017261582 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020012949 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017525909 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.020003767 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.023968082 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.028996535 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.030207476 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019539078 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017943616 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017940602 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.018855793 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.028725711 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020243468 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.018940416 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019431514 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.028406898 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.024466393 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017353913 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017378482 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028547223 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.017790044 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017487923 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016199929 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.01741492 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.018694813 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.023511495 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028800993 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017860245 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.024152489 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017585021 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.015780781 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028673761 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017512152 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.020738079 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.029722833 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018557556 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.017964217 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018787825 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028283572 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.017744401 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.016581333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.017866817 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028614996 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016250392 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018319604 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.029305532 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017234821 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020255688 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029527149 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.02420232 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018491342 seconds)
  done (took 2.454638195 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.027236187 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.021972627 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025984711 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.026003888 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022038601 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.022056998 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.022006283 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.021915774 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.02186038 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.024496841 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022034278 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135185505 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.019563164 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023054788 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.022382501 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.022239853 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.022173688 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022105472 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.022127418 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022007626 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.022106249 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.026170311 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.02209535 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.026299313 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.055059266 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.019246869 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.021973927 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.022031654 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026433757 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.021977422 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.028737645 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.022097237 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.02208438 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.02638256 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.028697107 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.021963984 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015752013 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022094949 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.02231552 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.022280023 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.019357501 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.026823702 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.02215811 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.019333761 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.022370458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.022120181 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.026783228 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029143092 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023031467 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.02492285 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.022407485 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.026791203 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022202084 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.022504268 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.027538959 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.062003175 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.028983621 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.029065009 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.023974776 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.028830211 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.028958999 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.035850717 seconds)
  done (took 2.432221025 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029924995 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020632858 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.025848118 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015188635 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015109027 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020566377 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015125746 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015212261 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020609075 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020552406 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021907421 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020699098 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022308232 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021930195 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020620004 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022342173 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020609974 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020611452 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020543576 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.020617639 seconds)
  done (took 1.187360863 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.018787203 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020179678 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.015735237 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.01943774 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015795317 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.018999492 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.015792602 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015774156 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015842421 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015868637 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020073125 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020043509 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015852307 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.019594106 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019002357 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019117162 seconds)
  done (took 1.044334767 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020219346 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.026447414 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125393595 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.01767138 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.019583828 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.016573135 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016998379 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015693312 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017844125 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.029439686 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016587353 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018552797 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016709117 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015525648 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016047377 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018613027 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.017814443 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016781967 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016773171 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125940644 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025227791 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017343192 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.018757112 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017393008 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018293837 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.024533028 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.017838237 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018264228 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016571581 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018496603 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018186448 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.027739424 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018282706 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017064868 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015430099 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016264931 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016538267 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018460824 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018458378 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016620895 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015517195 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018261557 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.01665585 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.016912783 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.01766509 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.018621585 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.017778902 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.026756612 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016460687 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018196432 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016577991 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017571099 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.016971853 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.027529984 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018375157 seconds)
  done (took 1.999803277 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035769347 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022674121 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015799345 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.01570651 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.022479265 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.023914559 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022245443 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022375201 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022843524 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015296325 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023050192 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.02134366 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023082503 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021937011 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023006251 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021784213 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015085092 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022481749 seconds)
  done (took 1.167106367 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.02388546 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020570499 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.020872756 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.01702005 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.016847419 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020784471 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015612445 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016789815 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.017000862 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017423261 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017236723 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016635587 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016568267 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016523856 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020186398 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016850125 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016531232 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015499207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.016876372 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015307241 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020578995 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015483946 seconds)
  done (took 1.153867555 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.184519887 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.14483299 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038388265 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.033679965 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025327931 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.05131844 seconds)
  done (took 1.238660098 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053661931 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024634678 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021555642 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.046942997 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020715419 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019484973 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019525369 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019785123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02262647 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028220376 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019838407 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022322502 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022582523 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024227145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021270109 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020777867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019719598 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019808787 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021677714 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030672563 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019927337 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022235072 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019951918 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019712709 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019832205 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02418891 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022618828 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028293728 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019615996 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022239047 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020760191 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.01977188 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022366234 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028372795 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021397335 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022596841 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019799398 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030671881 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020682189 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02408926 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.02119078 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02125769 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022691254 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02224072 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022392267 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020161332 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02252797 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02001078 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020110132 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.033391873 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021164733 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024333552 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021602469 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02264985 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022874006 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.033326416 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02856749 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024541542 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021644158 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028784197 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025463117 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022406992 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026214323 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030439667 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023064327 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026325224 seconds)
  done (took 2.344466603 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029955588 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049238385 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.019697604 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028138578 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023943896 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019771826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019766974 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019749048 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019728095 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022167299 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.059532184 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019987854 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024039337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024106126 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019925886 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019768867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019759153 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023958255 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0221599 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.032878961 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0198137 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023987802 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024022885 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024113899 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028249793 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020843867 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019716905 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019717988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.01967956 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019669905 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022373821 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019962739 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023952118 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021975975 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023991825 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019938293 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019728987 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022336289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019686094 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020829648 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024138836 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.030153464 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019958506 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.01996625 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028561322 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020003355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019932677 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022279384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019954491 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022185553 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028562861 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028584508 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028620484 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024552653 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020241431 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02026505 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02002303 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02001001 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020183421 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021157273 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024428123 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020941446 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.035862029 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02127848 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021242643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02638336 seconds)
  done (took 2.340825858 seconds)
done (took 51.208962957 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.330569986 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.177887869 seconds)
  done (took 1.257893137 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.134640475 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.132734336 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.160916288 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023536623 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081158096 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174111227 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.12461547 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026116094 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.023802967 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025112352 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023442966 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.024819669 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.024978301 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023313514 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.08572609 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026023504 seconds)
  done (took 1.885627757 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.07264692 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.269271148 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.067064623 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022725572 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102168588 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.028773053 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.023958197 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028150561 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028190374 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023264468 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069565123 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.043375163 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.026723015 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.027823896 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.023558361 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.026652545 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.027730941 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0281452 seconds)
  done (took 1.709993267 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.093087849 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.032358453 seconds)
  done (took 0.895751612 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.136961856 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.063503445 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.103238321 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.307613047 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.095965264 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.288429064 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.100610153 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.097036309 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.072903296 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.094310816 seconds)
  done (took 2.125555667 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.059114415 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.05464079 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.277295246 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.053756155 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.03380211 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.028780492 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.029804896 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.029098941 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030122918 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029110524 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.071183512 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.0276738 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024134428 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.06694491 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.046924761 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.057965317 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023392441 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.028696935 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032319407 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023279182 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.027620269 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.02895296 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130956053 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.029118893 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.048405925 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.026897483 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.028243742 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029128171 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.028989758 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.029688348 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.029728063 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.051682551 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.028969309 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.036909906 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.027654117 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.047894301 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.02418174 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.047123822 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.026722421 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024104168 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.026445993 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.02984767 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.024640192 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.029538479 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030161231 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.029071371 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.029294705 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023416797 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030328635 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.026924385 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024253191 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.027577939 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.027822514 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.02840995 seconds)
  done (took 2.951281051 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.075026709 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.065422723 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023900313 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073002738 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064826381 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024140597 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077332148 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.059397026 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075786476 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023495134 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023192316 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023198619 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030498279 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.034639202 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075365865 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.068027859 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025194225 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023797389 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.067399605 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.067212496 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.022578464 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077820841 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067534649 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.066461463 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022306404 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023756579 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.02253767 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023158995 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029781989 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.030475257 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.022920673 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.032115993 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.034452758 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.029690815 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.02227601 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022561478 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022435562 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.030697787 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.031166955 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.031020599 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.0291568 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022772696 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.024272389 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.024094538 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024491229 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022644647 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.031407431 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.0305089 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.031223756 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023164961 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.02322806 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022528845 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.02348254 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.029601526 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.028673763 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.031447766 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033593543 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023822947 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02548886 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.026011619 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034164651 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.032120956 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.032971967 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024979219 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.031474427 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023348034 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032258375 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036368767 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023278902 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023750155 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023424666 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023599455 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023854364 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029911532 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.029818842 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023920692 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024241834 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023338379 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031632276 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.029891822 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023387687 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.030945495 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022738156 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023304609 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023633378 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023890653 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.031633089 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.031257894 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.02383565 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023282127 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023478425 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024428118 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.023872239 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.031825343 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031594264 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.03215303 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.033490387 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024496472 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.035401211 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.032974555 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024284985 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.031102021 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023810612 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024386137 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024373496 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031423785 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.030946517 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.032929638 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.024075686 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023519631 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.032399046 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034479585 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023939863 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.03193878 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034146504 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.031506349 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023531568 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034269333 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023778982 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.032917027 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023956714 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032256882 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023982195 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031335349 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023949403 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023089163 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024871021 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.034935645 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.025031428 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024196112 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024376541 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024080236 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032599435 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.036536383 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.025813122 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032727902 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032081732 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024532678 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.033438701 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024435731 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.03354155 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024384143 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024690799 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02351507 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.03572372 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02415111 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024498679 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024208535 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.033941997 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023977577 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033744482 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.031203022 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023296271 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033602052 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.033173014 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.030826858 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.033757479 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024533973 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023934215 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023612103 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023886482 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032698362 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.034367981 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024674449 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023903337 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.03039174 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.033209063 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023301316 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.030561558 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030362022 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.030762174 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024243418 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.024037042 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034319154 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.036279971 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.032253226 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.034449022 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033813054 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.024041199 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031171954 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033738007 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024120908 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.038576326 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024227394 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.034940986 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.03365501 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.030379658 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033439391 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.035059374 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.034664608 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.033525157 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.035637842 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023308511 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.02359374 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.031350186 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.165493146 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023236773 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.028730564 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023442855 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.02336237 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035040063 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.02322581 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.030868104 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022577828 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.02953181 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022420392 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023425311 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033360172 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.02284461 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023624558 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029183419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023142705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.028817389 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031937869 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.029640031 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0230167 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023425331 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.031143785 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.029892611 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022668434 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02262587 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023198738 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.029989488 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.029340153 seconds)
  done (took 7.764081452 seconds)
done (took 19.367944685 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.142232062 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.072130708 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.137821622 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.083067807 seconds)
  done (took 1.199606008 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.056843342 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.01941049 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.139119039 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.149986487 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019666744 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.132619921 seconds)
  done (took 1.301626848 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.255312403 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.151568689 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.1591072 seconds)
  done (took 1.353379383 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.148913035 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.277045118 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.541691885 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.142113355 seconds)
  done (took 1.903381789 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.166285928 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.160386993 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.030227678 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176585975 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.036957833 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.015964161 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.101158987 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.016751575 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.049198707 seconds)
  done (took 1.600296458 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.092571359 seconds)
done (took 8.237267298 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.197356462 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.140186063 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033448705 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.028122851 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.123772275 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.133392603 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.143370312 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030403324 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.134062466 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.309552804 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.179267901 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.048030884 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.151267145 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.042308277 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.257105376 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030794647 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029409316 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024387756 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.138415585 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.13009986 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.237911337 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.027929339 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.095327282 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030374781 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.098651968 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.077121093 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.185404148 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.312433796 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.268699306 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030696469 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.117063635 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.041510549 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.113250358 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.120992779 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.131921114 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.047683548 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.019952504 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.237182693 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.103263112 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.314812523 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.161779934 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027078457 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.136963049 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.024921232 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019413608 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.141122939 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.031950712 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.026119786 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.041864844 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027157952 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.041612186 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028183223 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.128963773 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.023761869 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.09165344 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.137706603 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.180701899 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.10077691 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.025839528 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.038566284 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029869559 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.155728979 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.038075331 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.025489548 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.031260954 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020029289 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.133854493 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039297232 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.02026001 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030551853 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.028753972 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.095339065 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.150550179 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.064093695 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031430929 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.105828888 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.096228905 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.045415663 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.048880924 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029378638 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.01966846 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.18931769 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025331052 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.037606248 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.026829079 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.05241415 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.019955054 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.035444865 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.165922793 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.145639395 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.085241996 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.021079836 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.234119382 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.02208282 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.046073586 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021349359 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.020601645 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.185043033 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020293003 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020532796 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.030548917 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.029227211 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022054863 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.165876731 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.100564342 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.028528709 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.027301495 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.020993127 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.026333659 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021589887 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.021072104 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020467732 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.095223307 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.0372068 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019919202 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.102222393 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.275155138 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031953462 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.036198413 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.083721415 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.02378871 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.030063775 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027272474 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.134417202 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.026700891 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.130780672 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021676196 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.041896142 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.114466256 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.095444643 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.099924058 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019656403 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.135803975 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029423732 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019227562 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.026856887 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.04612221 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029081445 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.036476944 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.027715249 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.13551571 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.030476748 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025432955 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.114226591 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019002091 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.10420357 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.097118654 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.126966067 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.024528622 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.030128637 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.090901327 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.041751624 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.0482175 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.041362147 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.023754026 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.019772475 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019399368 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.032550124 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.018873492 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019651414 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.032093982 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026187263 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.035583123 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.236773986 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029238285 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.023786155 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.247876648 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.031293054 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.089168672 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.038735973 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.019903123 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.098703926 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021449183 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.03958223 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.081423341 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020083962 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.095264638 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020238944 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.019863108 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.025802261 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.02142985 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029358759 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.032610304 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020218233 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.03269829 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027557651 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.019967737 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.099024811 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.021631861 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.185439702 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.09756578 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.093035524 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020125126 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.037913488 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.01977362 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.13077724 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020122889 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.067784081 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.109374408 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.03428153 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.040117016 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021201424 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.097501917 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.033701659 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.024962266 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.098186725 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.128422052 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.089751421 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026212908 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.242737819 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.028848287 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020162456 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.025770029 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.028712065 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020336844 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.098609033 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024680165 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019440762 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019622477 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021483523 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019009783 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.043143987 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019152341 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.027783883 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.025439644 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.022873901 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.021548856 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.01907621 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.02807237 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.098387878 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.117116251 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.02587029 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.039051026 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.033135667 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.030996158 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.065704093 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.027649835 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.155384203 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019092784 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.029383751 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.039884444 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019593421 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.024684085 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.025445051 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.03696572 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023407149 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.02128082 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.02887409 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020258361 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020273015 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.019957237 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020214963 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028803339 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021377379 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019577107 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.01954261 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036005002 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.024963155 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.024943215 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.030741932 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.039759777 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.470362952 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.021499432 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022019464 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.032525337 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025446977 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020311394 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021353282 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.01990095 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.021772991 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020196636 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019507908 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.047202194 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.024717041 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020486287 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.03997809 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.025823809 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029875698 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.116521893 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036020937 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.02466381 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019297954 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.255547516 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.09233966 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.040638998 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.039031633 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020392023 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030773466 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020213716 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020680653 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019433676 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046341838 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.025262181 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020490344 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019474559 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019711476 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.066730821 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028419756 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019795103 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028383941 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020366293 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020128688 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046653393 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020899013 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.020129376 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.037701059 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.032346715 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.105171646 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.032019646 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.023453882 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.070191803 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019646828 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020254943 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020551982 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.106148912 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.033402046 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.021917041 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.02023946 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.027722186 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.029354683 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.072555064 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.026422309 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.023746721 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.028120712 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019578024 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.02049258 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.04646132 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.048128022 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021518268 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.023826537 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.020111111 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020498599 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.096410014 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027834814 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025198935 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.108735352 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.02221037 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.204715625 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.024879626 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.488298012 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.024475388 seconds)
  done (took 22.028504217 seconds)
done (took 22.830343796 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.151280879 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.032933346 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.039893941 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028312298 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.031629581 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.03124308 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.041975892 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029179517 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032220293 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.039444295 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.140459166 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.019835129 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027227312 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.033483496 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028149219 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.032062573 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.030951266 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.03171334 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020288647 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.031977362 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.030720852 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.030649993 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028639259 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.031313942 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020255461 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028202096 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147505748 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.034290552 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.029973851 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029194155 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.0273243 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.041409303 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027442653 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.026940711 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.028872424 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025129864 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029591097 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026191226 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.14729438 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025522826 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020320971 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.031291425 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.026885154 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.02753763 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.02837358 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.030625483 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025142705 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.032180062 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.027924891 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039280835 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146945954 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028400507 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.029872071 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028041665 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025131022 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.028821774 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.029616995 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.030038892 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025495996 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.038563342 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.02816828 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027592001 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.01958181 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.027959337 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.026758916 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027089133 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.018767307 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028190982 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.01952769 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019488404 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.027758225 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.027882649 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026394923 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.024627339 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.027810142 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019487276 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.027357165 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.038406615 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026514356 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028227409 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.01998701 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025030959 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024617707 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020106379 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028241323 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.030443537 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.028511441 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020052261 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.027869436 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.038817367 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026116233 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019519912 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.030349038 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.033482747 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.027972481 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019558639 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.027928035 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.027959218 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027296614 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019510026 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.018797324 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028000354 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024774975 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.027957979 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.019924015 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.02794574 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.02795925 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.018850608 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.027833264 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026662267 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028362353 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030235756 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.027963741 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.030725896 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020019499 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018753892 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029256187 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019865398 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028294121 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027489864 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.024962006 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027271828 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020039878 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.027285868 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.027957157 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025480611 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.019893078 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020023912 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.019848757 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028081959 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026721267 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.018767419 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019498505 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028043386 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.027880629 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.027399871 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.027819246 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028004347 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.019995557 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025462971 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.024871507 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.027943684 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.027536906 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.019817072 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.027613558 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.027468548 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028422161 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.024905828 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028235486 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020150561 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028015322 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.026531448 seconds)
done (took 5.611258967 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.075539639 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.063410876 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.175840469 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140412289 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033198262 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.033831685 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.02488844 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.039992492 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.026659556 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.045096412 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045318091 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.042908072 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.161388817 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.040647689 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020086308 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.031930773 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020584561 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.046878891 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144862818 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.044828725 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.062240656 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.018829277 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.035365549 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.03837208 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.032320142 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.038431115 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.044163561 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021004697 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.037630495 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.037122853 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.046812105 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022594788 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020431163 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.039146104 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.036138421 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.028740887 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.019869136 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.026654969 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.031755446 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.019942876 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06328823 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.038154967 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.026592337 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.026852272 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.020780088 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.034902533 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.020808132 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.027811296 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.034024722 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026425701 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.032471337 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.036513911 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022111268 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.03768962 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019000578 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.027358089 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.02696234 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.019807116 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020683764 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.019916238 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.019873156 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.022847005 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.032435904 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.038451373 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.023896695 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.027142273 seconds)
  done (took 3.520215722 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.046307368 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.066213259 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.034365603 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.034710434 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019742094 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020250511 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020217503 seconds)
  done (took 1.13594613 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091911085 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135637974 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.143730987 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144866634 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.154696081 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.141801681 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.032915586 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.050040592 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.055051242 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.155410736 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.151616761 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146277312 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024226542 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.032638658 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.052338846 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.149178719 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.03297978 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.027773598 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14066125 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.146819912 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025308822 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.051645214 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033246322 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.023314785 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.144363455 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137176239 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024202186 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.061802287 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022932365 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.020767785 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020796871 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.043178009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137341184 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.035786895 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.02107019 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019816192 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134976058 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021352932 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.137334932 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.027868996 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.137407915 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023285923 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023457645 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021192481 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022070664 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.140355795 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022147666 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020821677 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.02044077 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138975817 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.031933329 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137687901 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022425571 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.025921098 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.027920599 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027401628 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.027911853 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021282053 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140469669 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031109775 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022747434 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.149276087 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148253507 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138110441 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.150140393 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.031988486 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141358243 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.13806016 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.020931532 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.02882422 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021635518 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.149706384 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.024903054 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023491023 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.019723661 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028229156 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.157906892 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.158742119 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.157614953 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035852405 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023140337 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.021922676 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.154806846 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.156945008 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026915095 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021549986 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.02158409 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.036737126 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.045502358 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023587838 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026071154 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021419267 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.031807386 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023924485 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023543924 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150579415 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.020682566 seconds)
  done (took 7.674859247 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.038835977 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021735204 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021217781 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021490667 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021567153 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021407761 seconds)
  done (took 1.138357772 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.049266277 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.022474238 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.034650928 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021909885 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.046065628 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135893726 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135461681 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023466167 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.039331516 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.036082355 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.137063529 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.139609664 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139235796 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.024909916 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.13861804 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.033876236 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135354054 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026509676 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.03267617 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022947794 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.032513903 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022599992 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022750103 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.149402524 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.016979198 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.033058443 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.031193785 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.032903797 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.0323874 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022551512 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022351758 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.016440039 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.027498497 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022640665 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135916981 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.029609846 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0233796 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.018733145 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.027682745 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.017046637 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.1402626 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023518999 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026590951 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.017875528 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.02272813 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.027672453 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.01766174 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.031692469 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.13850095 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.019243607 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.018458191 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022656147 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.016764622 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.017622115 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.027904764 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022909186 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.01912662 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138737671 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.023152765 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028133292 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022133063 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.016752742 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022874221 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.016719502 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026974459 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.017956664 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028122305 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023791713 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.024723877 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.022697852 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.018659198 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.022741932 seconds)
  done (took 4.097506834 seconds)
done (took 18.460826218 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.454419397 seconds)
  done (took 1.393654207 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.005380486 seconds)
  done (took 1.934351551 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.050239853 seconds)
  done (took 0.986966657 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.30767502 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.49870281 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.711069175 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.091184708 seconds)
  done (took 2.530988682 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.82762357 seconds)
  done (took 1.772522078 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210160445 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.176680533 seconds)
  done (took 1.342490504 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.486486043 seconds)
  done (took 1.406719017 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.311641445 seconds)
  done (took 2.238620909 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.199757742 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.132899059 seconds)
  done (took 1.260552407 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.598873177 seconds)
  done (took 1.523737279 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.477919268 seconds)
  done (took 5.404559396 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.18520042 seconds)
  done (took 1.171532336 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.190486798 seconds)
  done (took 1.151132193 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.702899122 seconds)
  done (took 1.648751561 seconds)
done (took 26.732319851 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043428142 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.037041581 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.036856858 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034268627 seconds)
  done (took 1.06763196 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030608358 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.024930443 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027110599 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027495077 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.024871795 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026693081 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.02736308 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.023886149 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.02482037 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024208535 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.022710771 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024113149 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026612742 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023887487 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026308445 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.027619826 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024139003 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.024777927 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.025893545 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.023787825 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026602069 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024083649 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024067639 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025497412 seconds)
  done (took 1.540740055 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034210631 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.025622886 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027360023 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024473772 seconds)
  done (took 1.04434884 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.033169712 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.030803509 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.039264641 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.03926342 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.030612648 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.03120424 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.037506794 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.037784912 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.044434228 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.040403608 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021682948 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021465645 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020680847 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.034976276 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.036957144 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.015910309 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017151657 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.031426519 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.030341305 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.033284899 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023660886 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019324792 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.030650271 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.031042236 seconds)
  done (took 1.660718041 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.037460443 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019501711 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.035412549 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.043741558 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.043846443 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019412304 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.033002274 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.044370083 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.082912389 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019508187 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025461245 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019423418 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.056679554 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019447192 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034282386 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.067282652 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.069802449 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023934154 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.050639431 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019563029 seconds)
  done (took 1.703554502 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.029603218 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.025464665 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025827525 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019819193 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.030784992 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0267886 seconds)
  done (took 1.101555946 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024151973 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021348921 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.02112818 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025504568 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021097395 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021019509 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021047229 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.020079468 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.020176927 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.02080498 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020728805 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.021052629 seconds)
  done (took 1.218752909 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.161186428 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.028210394 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.025222673 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.020035646 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021738831 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020783508 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.035769784 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022590498 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.039456585 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020887322 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.021023478 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.023155146 seconds)
  done (took 1.383690209 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059902879 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.063615542 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095854823 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07271244 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080747052 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051130977 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.199339878 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033718403 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.114224422 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090860287 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076725486 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045841327 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039541398 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023907533 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054748768 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071649349 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08910958 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.026747729 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.073136134 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.237030871 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084484772 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.084150767 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099660226 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076485908 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.045638138 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099855493 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.049981549 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.056103813 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.075177759 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.080016153 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074904893 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.057000574 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025584987 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.025115082 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113364858 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.05670316 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073308132 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.048691841 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.06136673 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.044081523 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.080391958 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.025603777 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.038139702 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.064974106 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.04256758 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090397959 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.049591225 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072442088 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036095892 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095874496 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084826051 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.172603775 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.041645677 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060258142 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097954069 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069328887 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087249814 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062973707 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036071519 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.076847673 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.06599136 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058452363 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065793679 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035582976 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135568379 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.197435065 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.077463608 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067372745 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.043991839 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.048107706 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.063755834 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087930901 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076971223 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.069788804 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.081999252 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045081858 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080658244 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.052995983 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.076148182 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055096259 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026214487 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.072969968 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079502502 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.050105251 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052688646 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079710698 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.045912308 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029375189 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.042594806 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.071731254 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033900298 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.061754319 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038619266 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.082585961 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087302794 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051370913 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068490935 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072113384 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032322208 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116944319 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.062613309 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026964882 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071742468 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06692007 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105021245 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050745133 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.02930709 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.053787771 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056943887 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.113746168 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057925162 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035042012 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071556852 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095981277 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048625251 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.252763688 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050467132 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0987048 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071071333 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040954734 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.029865351 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.049248973 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067749885 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066188549 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079846939 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050532362 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.038370481 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041476208 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.077055641 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.049564796 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034274081 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075052959 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.059757203 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.029657693 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045624808 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.031899883 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109791681 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.041615375 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.252433748 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084618608 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.029574539 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058927098 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049367632 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058040887 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.053325953 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070287238 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090560825 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.134566367 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042831361 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.036153699 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060930769 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094028133 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077125386 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.043766236 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.037701891 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.052123619 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062678144 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.052719341 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.07391528 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.046646461 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062891635 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055677327 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091455186 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093945478 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054567667 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058834692 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059090476 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.076190335 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.028993898 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110759212 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057393403 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076018389 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041119638 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097834139 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.07115807 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060980176 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040518815 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057910958 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.056603881 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060101399 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09682608 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.047466267 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.027556977 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049706037 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102942049 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032333466 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07587684 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.044930881 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.046728467 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07151095 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.048619945 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.037118879 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.023497178 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0809625 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114394326 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.025238945 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072697756 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.071817613 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.060174434 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.081590606 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.025357981 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084838334 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.094688904 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084422544 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107375706 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154676185 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079129138 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074559357 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.237051386 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066317348 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033951164 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.078436024 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.086905214 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.046116006 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044911759 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.087233186 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.071427049 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.086056104 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.065266023 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073658738 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.056537948 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058696384 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055939494 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.052434156 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093716343 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074869376 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.078298992 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037638965 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063299107 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.069572667 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.087888345 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.03482449 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093505744 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.038325255 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096332287 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.032256054 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079874823 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030289193 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.122757096 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033966176 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05380448 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.023806798 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.026409225 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.095876463 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.075596946 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058283565 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052069907 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.08811356 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091089262 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.031939783 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066509836 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068440792 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.058065896 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068814305 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.063196961 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042616542 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049712878 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.061335894 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.039040279 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.035073668 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08049665 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05139399 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092060437 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.037951622 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029264157 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09442982 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066550526 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0492192 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.03103882 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063849593 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.082123428 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047536911 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.040985327 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076157461 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061049625 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10007804 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.045976692 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.057822624 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083222832 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.037014276 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.052017273 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.024565387 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.045377248 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031496932 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089039244 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031482674 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.228673926 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.023095259 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081967738 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038416406 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.050312999 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.056588756 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06092273 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.086167079 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.047013768 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090968712 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041876077 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.068692538 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060375083 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064991453 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.039128055 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054510177 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.056246766 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073040697 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.046221199 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072673333 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09698278 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056849947 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.096283172 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045071384 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.076328014 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060403494 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.078437407 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.067974497 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149566351 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093554921 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06866713 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066811186 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030057041 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051795063 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066740389 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.064441474 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13101758 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0796988 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026762143 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058613662 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.048529925 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.061781564 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062859853 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034181999 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097134636 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054922064 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041610227 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062599155 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.045411918 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.060160179 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03061541 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.057426864 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.052551291 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.050890007 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.052431337 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.070630661 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.086353808 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067147082 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.104911729 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.05983662 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.046784723 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.075059461 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074578774 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07222184 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039066941 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040012009 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10172669 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.075331769 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.082896764 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.054291315 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068136664 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06917675 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.209946092 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083226891 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060399072 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.076963156 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033117016 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.029945525 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022408039 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.025726531 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075097283 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063106103 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061665662 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05677445 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.025768597 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.057525235 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059426401 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025590742 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.038351363 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.046321449 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.051332136 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.035235879 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057053183 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.066808436 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.046719081 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.053543198 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056289191 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09302011 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.050613898 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041082121 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094536688 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101597646 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041980311 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047250639 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025606885 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033159105 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076942976 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097682972 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102107297 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.03288634 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040317016 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.037931794 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040993672 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025406972 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.042155767 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.042821651 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058474496 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051149824 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.067093463 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057887724 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029298473 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.061498501 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053527368 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047108581 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.061335526 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072219891 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.080031082 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.09225677 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.067579738 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069244556 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03006049 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.033448499 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030379019 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033765207 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.061101638 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.033451239 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030743222 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104048257 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.046668386 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067036358 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068654576 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04289059 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030070305 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090299444 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023974277 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09105138 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025911314 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034954805 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.037143093 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033538679 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051200885 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100627278 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.064391081 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.066831811 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063204856 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.22057605 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140052089 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108298241 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038202219 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.092205975 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028843185 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.029544536 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029645583 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06213324 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044245433 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.070750121 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09654217 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041928802 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053256165 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0314348 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094469938 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.049311565 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056423798 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.040506708 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033676661 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09530367 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033625175 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.038494182 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.042439214 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.064833489 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.026175815 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.054452265 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.039295206 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036121175 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144797063 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.666172615 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052222676 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.02864693 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.050918657 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.097796935 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090344985 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051052995 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065659765 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.073141503 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.058920145 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.048009563 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068932848 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.154168433 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.02808959 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049194697 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.051598848 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056417134 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062925832 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.050852126 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.041119391 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.049621094 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.040228946 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033364047 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068367433 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040707182 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.051866471 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.061855415 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037457301 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.04214211 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084649229 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.056913112 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.038489613 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044280896 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.066082258 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041838071 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062309085 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024607328 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066264304 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.044361091 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07664646 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.055111781 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.066682869 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081679441 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049416967 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09468657 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.064463118 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078997914 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042159348 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032917408 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08440364 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.196627245 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031185391 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095149709 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.046199744 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.05693404 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058827756 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.049268516 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061362108 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065305868 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064475206 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053126455 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031429951 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050543123 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.057670484 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038635389 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032511719 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.026361415 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.029215587 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060415177 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.037617104 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.039692732 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068303993 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041696267 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.054893238 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.050488485 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073385678 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042295071 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056475087 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062830935 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045498 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085043678 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054638715 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08154945 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129618812 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.086516899 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086278115 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089814951 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.032597709 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.034152639 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.024923765 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.070474986 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.034354833 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.041515453 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033580842 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088676274 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.039260289 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066483115 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.214076931 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.034923712 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.047739438 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05142402 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.024433688 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.290798274 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064435184 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04296858 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035613354 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067275329 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037128073 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.084903573 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063795188 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053983712 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.050498014 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035471449 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06417016 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.060168889 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.084526521 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.053212027 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.029084225 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.079693524 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.062081485 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099498312 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.029586211 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03600158 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.085334953 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060802968 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092321227 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.037174244 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119463796 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.102365758 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.062805566 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09430798 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027763108 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.199324869 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043751101 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.076076768 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038397663 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059599912 seconds)
  done (took 40.703562867 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.14295352 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.256954224 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.131883271 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.111217003 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077519579 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.078421192 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.246730855 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.090962238 seconds)
  done (took 2.222578829 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.02503089 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.053684719 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035572179 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.292324188 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.053642946 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021117301 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.027937991 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.03616958 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.02109227 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020526033 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.054899547 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.0208785 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.021216395 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.440482954 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020413164 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025698091 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.021468505 seconds)
  done (took 2.274737734 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.309810087 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.667680364 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.324322611 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.467243756 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.105193568 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560322129 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029763147 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.034365268 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.646466881 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.352276098 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.09869344 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.181613123 seconds)
  done (took 17.839982133 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.030916326 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.153789573 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.153821374 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028161518 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027724226 seconds)
  done (took 1.455877562 seconds)
done (took 76.225157618 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040457106 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.121846452 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.020809411 seconds)
  done (took 1.231223566 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.157101814 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.155399421 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.15367572 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.154735499 seconds)
  done (took 1.689152385 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030514547 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.029811664 seconds)
  done (took 1.129690902 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.17719295 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.262889002 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.045134294 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.039668598 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034172647 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035568376 seconds)
  done (took 1.188059006 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.026804001 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.02476205 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024809746 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025315715 seconds)
  done (took 1.178052695 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.135206701 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019763581 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.02224698 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023848377 seconds)
  done (took 1.264029731 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.04017773 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.039443753 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.069646025 seconds)
  done (took 1.210670251 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039218972 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038560697 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033041478 seconds)
  done (took 1.173065843 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.063268318 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.049597886 seconds)
  done (took 1.171588226 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.03580714 seconds)
  done (took 1.099332103 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.047774405 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.051700571 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.214118916 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.180798863 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.218059621 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.200474886 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.032860151 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.030221799 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.032133473 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.034446586 seconds)
  done (took 2.099965152 seconds)
done (took 16.023392771 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.03610668 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.144238467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.272582446 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.042701066 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.609076381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.26740751 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.687135776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043720813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053444553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.02194659 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038555726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.586627603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.689721643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.105890524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.675759398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.09629413 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.763477724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0243155 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021665896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021837262 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.666083766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.023910777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022225557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022476694 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.759176014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.291161189 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.025361855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.094690476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.024263271 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025816834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.269099588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022831671 seconds)
  done (took 12.529332413 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.02600094 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.077009438 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027066646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.038445537 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.024213939 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024139359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.040492383 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022434408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.064888959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022240589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039915433 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021855299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026336618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023113519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042215417 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021907699 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.02422635 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022550423 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022060529 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022709017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041752282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021869166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.02253015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022453116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022247293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.036734796 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023222511 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021698899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.02206637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025746062 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027076226 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023270959 seconds)
  done (took 2.033627671 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079727072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.079210547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.02733403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.062239776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073757729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024865 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105339465 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.046876227 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.068940263 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.02314254 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.040643482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.022663812 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.059203189 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.024461155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.043105687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.02262604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024633568 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022607604 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.02209981 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022517482 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041505276 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.022344428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022699583 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.02302994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022788329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038929342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023401933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022173921 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021995131 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025959654 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027731338 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023135685 seconds)
  done (took 2.304639856 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.025717036 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.026125061 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.031850771 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035826914 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020903321 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.023420392 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024579446 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020879282 seconds)
  done (took 1.290198126 seconds)
done (took 19.243725215 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035575461 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022201885 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.02520731 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046247389 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028569617 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.143277141 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.024882366 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027355147 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025821422 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025182711 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027358277 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019725803 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024356754 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024538131 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026132848 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.02028577 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.146086122 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024897355 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.144007679 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.145761823 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.023087342 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.025960157 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.028791257 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.144564578 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.144663104 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.144982173 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.02968871 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026230547 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.02587797 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023303156 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.142248839 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.144262597 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.02299282 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140294665 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.02066052 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020348201 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.024759139 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.021900509 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.147680228 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029698597 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022644745 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029229134 seconds)
  done (took 3.447007682 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.150982658 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.157005996 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.149984382 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033083095 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.02905761 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032142266 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.153019894 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029506927 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028199651 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.154734559 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.02476997 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028263244 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030406186 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021443053 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.030029136 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.025700558 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.030334622 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022384353 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027772334 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028096282 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.153724632 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.022261667 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029075592 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029567142 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.024115151 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.0301584 seconds)
  done (took 2.574605368 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.030414146 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043425307 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045723045 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111244009 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.063682444 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.043892991 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.037272613 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.048843088 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053842192 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021759007 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.044314519 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.050257714 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049992122 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028443789 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.061089444 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040665413 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034450011 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022947858 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027762123 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.056018985 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044675961 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.04064292 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054105824 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041181925 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020464234 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030323537 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025689209 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037639311 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.032880969 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033620278 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025048108 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025274782 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022252314 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032097906 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.024923464 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.020063201 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044676427 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034230563 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036711653 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060405959 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031655954 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022588385 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.047963289 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.081025575 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020163581 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024170979 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.02568109 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034077403 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022746178 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.063681029 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036337968 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020809621 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040438482 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022592535 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022638621 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.04239628 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.024986007 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.024828638 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.044072927 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.028312644 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043177878 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026871526 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.039607435 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020179889 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032556644 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022431897 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.022718432 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.019862568 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.05481021 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028545077 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.066926917 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.02214013 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019572295 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033143421 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.032395313 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028320618 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.019785812 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.039135785 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033601655 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.024936847 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.039226943 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.023809138 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024359166 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.064591101 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020408953 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019502086 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019388799 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.02353069 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024306402 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.021602349 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.033213376 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020511338 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.024444598 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.047527709 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.020777944 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.02163188 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.023589037 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022355174 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020400907 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.030427957 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024332047 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.022781773 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.033647658 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.021780396 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024527661 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.036101346 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030408614 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.019751021 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022353389 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.02351334 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.022792431 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.022654267 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.02446984 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.022858116 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026435976 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028450611 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.026786672 seconds)
  done (took 4.994295417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.238802344 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227720185 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.02218823 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.224138651 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.029717101 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.157941825 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.227101095 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.228129502 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022038838 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.02298534 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021061169 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.171061894 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.16624382 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178062431 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.158117601 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.023747371 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.054269578 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.176808126 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.229524782 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.224830052 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.053368478 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.02893576 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024127501 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023124647 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022436522 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030406696 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.037793085 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.031642516 seconds)
  done (took 4.145607477 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.030683337 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.068067958 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.027052998 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.049106819 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.040851786 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.023839304 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.025194915 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.02432344 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.040136261 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.029118329 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.02343571 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.027684132 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.026608571 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.025349198 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.023508212 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.029834215 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.030426517 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.021579411 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.026864061 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.028073702 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.03526166 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.047125514 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.027184723 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.023042259 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.026692457 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.023041161 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.02764503 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.031679692 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.022825197 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.022840625 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.020486251 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.031274135 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.038542822 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.024466162 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.023079912 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.023557488 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022607451 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.023194087 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.023338757 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.021438476 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.021614171 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027799311 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.021150208 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026916577 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035333662 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024214583 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023521009 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024363353 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024360295 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.022607379 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.024874602 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025064927 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024312228 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030105796 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024033643 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024347515 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023297593 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.036228047 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.02763003 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021296398 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021027816 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020263958 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.023809523 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028071997 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.037815506 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.023756976 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020192916 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022128897 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023463362 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.034996483 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021239336 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028181936 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.01901732 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022077869 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024172613 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024597064 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023205293 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020186796 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021450175 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021167172 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.021918404 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021592563 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021019662 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.02426811 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.019879402 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020253451 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022442858 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.023383952 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.02669726 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.020634284 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025188415 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023179355 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020493172 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024260684 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.0269773 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.024578462 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.039234093 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.02911093 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.022468931 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.019707565 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.038038979 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.024334845 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.02119693 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.023801678 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.030337454 seconds)
  done (took 3.934561755 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.052370914 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024192234 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041572551 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.05724833 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.032196249 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.027827888 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035673339 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023412134 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.043548076 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.02127782 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031295429 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020435132 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.034962855 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.03082514 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024003605 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.031908593 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.024872198 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.042519381 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.036854823 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020772116 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.03064713 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034370909 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034585364 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039383097 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.038813689 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040249985 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034175189 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.024718154 seconds)
  done (took 2.028535067 seconds)
done (took 22.200039767 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.122690819 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.38861393 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.095446781 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.904494129 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.208694695 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.167601112 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.204671996 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.084890107 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.23264399 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.226746457 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.922546661 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.409443639 seconds)
done (took 60.128851377 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.177694335 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.230050912 seconds)
    (2/2) benchmarking "String"...
    done (took 1.317091964 seconds)
  done (took 3.644938844 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.520263476 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.082031255 seconds)
    (3/3) benchmarking "different"...
    done (took 1.114877789 seconds)
  done (took 4.78509695 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.37383963 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.838786299 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.346168502 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.070800568 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.088149203 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.462704948 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.260172925 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.795608657 seconds)
  done (took 26.970241023 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.167180052 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.348959089 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.471910055 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.613724879 seconds)
  done (took 17.763779395 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.546458065 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.595603521 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.591955084 seconds)
    (4/4) benchmarking "different"...
    done (took 1.701522887 seconds)
  done (took 7.654022758 seconds)
done (took 70.544398406 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.071014716 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.434779676 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.120099991 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.292446535 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.166036833 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.219730546 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.111884437 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.180031152 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.14685292 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.139883504 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.081698588 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.081262091 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.095327366 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.14234475 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.094092767 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.146273948 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.35994489 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.092016979 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.115402768 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.941139188 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.254103204 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.081478934 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.091085051 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.200209711 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.50106474 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.117034125 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.550913007 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.091948964 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.695962556 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.101718669 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.09446169 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.084292005 seconds)
  done (took 181.965575052 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.096532875 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.897068194 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.921514566 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.101048304 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.542137219 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.435927863 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.934566443 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.523740385 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.1101554 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.120413995 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.052005808 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.115802515 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.133962601 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.641764966 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.115988541 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.11185253 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.968527214 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.922498189 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.137496395 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.014338366 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.08403454 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.589251113 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.571387164 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.926755992 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.102584717 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.155194694 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.10933689 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.131128135 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.575486731 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.005876375 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.102433577 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.102864953 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.2682456 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.318311773 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.110839943 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.092373189 seconds)
  done (took 152.246440325 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.302601955 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.10728085 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.128568085 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.216757282 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.044594503 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.888008714 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.082468137 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.091397999 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.087483416 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.108015229 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.116259577 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.19020564 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.102372301 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.133918588 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.10703385 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.072964819 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.094478602 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.152608513 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.088038229 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.071225969 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.07079697 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.175494633 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.423761611 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.183071625 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.099869377 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.096485849 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.20771927 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.114043839 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.121051308 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.098452609 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.232154342 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.118257249 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.236232147 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.205740674 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.116869617 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.14817146 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.1126596 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.323873499 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.096655436 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.071171327 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.07280989 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.119517425 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.081289919 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.129821876 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.182404006 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.084910513 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.090687394 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.553295276 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.696903564 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.09714505 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.088050424 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.079046555 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.075247091 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.07359014 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.203601024 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.109737397 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.125132653 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.638876882 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.086826678 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.074270742 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.093288886 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.070741286 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.071437807 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.077833151 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.106727067 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.653359025 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.907669144 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.434663285 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.807189497 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.081804903 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.084213806 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.0949436 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.79276274 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.141187057 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.072949153 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.097361789 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.247665746 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.082457416 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.074619599 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.011971361 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.000327625 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.092375273 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.197218565 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.082303291 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.075902056 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.455755064 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.135861238 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.126013265 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.125330002 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.135476876 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.086903891 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.116894884 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.111244766 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.077524369 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.124143837 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.156608068 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.484206978 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.142992445 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.140977526 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.558340383 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.442751171 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.104578073 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.175908009 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.508948496 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.963800083 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.082552875 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.071074319 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.089421621 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.092693657 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.101013751 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.091634563 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.118270286 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.093185138 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.094786931 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.079251043 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.099170499 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.119221817 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.135251993 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.099306538 seconds)
  done (took 324.892898972 seconds)
done (took 661.598491941 seconds)
(4/20) benchmarking "parallel"...
done (took 1.081451042 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.34304898 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.09042289 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.302369298 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.333727919 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.279751466 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.250839338 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.319914793 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.400022285 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.319559378 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.247781141 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.313783667 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.248624622 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.374972142 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.335426999 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.335925034 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.365325287 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.281348338 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.764138268 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.289157043 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.248391761 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.286150476 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.241978329 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.231872018 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.307809152 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.337274532 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.294945574 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.497807282 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.343401232 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.293079307 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.350200406 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.362904191 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.388456229 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.319764683 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.342586228 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.366091063 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.384055459 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.300484038 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.375769957 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.270747907 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.289072282 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.316826376 seconds)
  done (took 62.416672927 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.520989642 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.294215756 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.415782612 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.392678896 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.000039577 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.379833273 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.493051571 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.297422877 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.285075335 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.389027168 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.413843602 seconds)
  done (took 18.011612521 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.308907832 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.289504433 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.38229709 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.399175541 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.563948542 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.427831906 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.434923615 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.268429764 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.294859649 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.402607176 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.418602018 seconds)
  done (took 17.28901503 seconds)
done (took 98.795820566 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.680956785 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.156768711 seconds)
  done (took 3.907422349 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.126899349 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.114926537 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.115931438 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.099337449 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.086710362 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.108245967 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.137602631 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.095375121 seconds)
  done (took 9.97842022 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.082677358 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.083134081 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.082974594 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.082547998 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.082883359 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.083278042 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.083080997 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.083142524 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.082597782 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.107783764 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.108055511 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.084699172 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.08366814 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.083080122 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.083253797 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.083485913 seconds)
  done (took 18.451840542 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.083097606 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.083005506 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.083039848 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.082928774 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.08321379 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.082856378 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.085082284 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.14055614 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.099113623 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.083084504 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.082943476 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.088248935 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.106563128 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.10145402 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.103294174 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.094950953 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.088203495 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.11480427 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.099083711 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.097032067 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.085204987 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.101661617 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.110930175 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.111816206 seconds)
  done (took 27.36234607 seconds)
done (took 60.806331646 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.712168596 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.831885338 seconds)
  done (took 6.615057799 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.084000406 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.104401649 seconds)
  done (took 3.325969083 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.083532959 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.083545894 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.083188773 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.083387101 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.082491326 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.083350604 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.082666194 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.091358365 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.099548276 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.082786877 seconds)
  done (took 11.95181066 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.083886711 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.109519525 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.110662481 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.083993418 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.084067474 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.103282043 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.113021663 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.084416668 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.083225348 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.084293864 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.084229246 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.271979644 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.084695817 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.330954356 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.124215963 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.123624416 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.093554884 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.086615656 seconds)
  done (took 21.210701582 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.083093281 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.082989259 seconds)
  done (took 3.235810762 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.084167608 seconds)
    (2/7) benchmarking "second"...
    done (took 1.083431614 seconds)
    (3/7) benchmarking "month"...
    done (took 1.083382721 seconds)
    (4/7) benchmarking "year"...
    done (took 1.083894532 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.08336495 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.095037022 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.117413352 seconds)
  done (took 8.701192121 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.546483636 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.252028586 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.302357517 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.547549953 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.73371124 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.050932366 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.767077756 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.04847619 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.865484826 seconds)
  done (took 16.210432119 seconds)
done (took 72.341995922 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.851017397 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.075194636 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.597742532 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.175914973 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.174658833 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.43528172 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.142291504 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.692013204 seconds)
done (took 37.236380065 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.362348477 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.109688559 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.120254588 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.152458656 seconds)
  done (took 19.45604221 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.10741091 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.500943885 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.117891365 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.126051007 seconds)
  done (took 19.052877009 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.49100995 seconds)
    (2/2) benchmarking "read"...
    done (took 1.595173013 seconds)
  done (took 4.176096512 seconds)
done (took 50.141160196 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.105698295 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.084073711 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.083639109 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.083203892 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.088845875 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.106671497 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.105484355 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.110684505 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.092961422 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.085461217 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.091961836 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.110580305 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.097245417 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.100308126 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.090746132 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.084818888 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.083840596 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.083522813 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.09501023 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.095735146 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.083338597 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.08332791 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.083257463 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.083658129 seconds)
  done (took 27.312508216 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.151536301 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.1511117 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.17239995 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.146929277 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.180583263 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.177110822 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.164616804 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.148588821 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.160114039 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.136066862 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.116705025 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.175966346 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.12828594 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.179700654 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159142477 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.190026309 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.15563811 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144616203 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156472081 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.194745733 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.165274594 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.13409954 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.175899391 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.116856639 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.171889986 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.147083596 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.176638486 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.18222606 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.134822808 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.175526486 seconds)
  done (took 35.841979995 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.117843628 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.083733339 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.084229926 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.173377499 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.08430391 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.104262226 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.113759016 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.130154552 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.112476619 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.108501458 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.108227476 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.112054432 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.099753147 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.095328723 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.087052723 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.084217127 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.119631869 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.261885794 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.084146352 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.094494607 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.15748228 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.098607403 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.109829559 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.122141593 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.101890381 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.11047101 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.092089188 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.084569617 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.084171607 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.084378887 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.08458226 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.133999778 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.123377874 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.107571932 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.238617273 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.154705724 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.113714954 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.149652494 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.09830111 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.08500311 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.085042164 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.084125606 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.084570413 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.084722547 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.158797586 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.127092362 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.108157611 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.102370363 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.092645206 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.084714439 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.106849949 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.124015264 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.09977916 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.084610404 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.084607479 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.084423427 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.083921833 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.083714242 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.08382061 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.083625723 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.084288456 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.15868844 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.084075127 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.084461053 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.457467162 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.083940953 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.161958148 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.114861032 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.1080294 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.309403529 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.089049004 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.287784494 seconds)
  done (took 81.622640453 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.095934755 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.114106013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.20305348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.202882258 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.120657929 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.11231469 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.110350443 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.101139562 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751681312 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.085794684 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.095835798 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.084004813 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755034685 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.083742703 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.083912358 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.218619609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.132787119 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.123186584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.105962127 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.095782296 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.091232159 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.085373293 seconds)
  done (took 26.956531363 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.150512426 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.133341008 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.142130502 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.092963181 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.087053818 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.083925715 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.132237384 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.11888348 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.132212796 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.120371882 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.120046215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.12592716 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.084235679 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120259146 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.120157083 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.098680263 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.155153039 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.137598327 seconds)
  done (took 21.226414828 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.290737709 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.25924127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.167901566 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.126426386 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.345160647 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.318245296 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187360758 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.266976577 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.157250515 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.26900408 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.27002017 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.131829305 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.337456401 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214919854 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162694407 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.345892238 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.167546865 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.12596685 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195130503 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.188005179 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.261466279 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.195757916 seconds)
  done (took 28.094374892 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.128170059 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.136976413 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.195887906 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215055351 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.128819666 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.083982148 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.155755923 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.160111299 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.113980022 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.137213317 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.125984047 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.084279493 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.110037624 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.173050977 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.20006735 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.142148482 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.166052276 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.150382967 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.147875022 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.100519397 seconds)
  done (took 23.926830219 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.093559468 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.087273127 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.094680153 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.112704074 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.106578677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.118427438 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.125069489 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.097970225 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.09002071 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.365099194 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.111103242 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.113414998 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.096429816 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.109030098 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.112012205 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.103359729 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.1164665 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.091504792 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.085484205 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.084363282 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.339107118 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.099484889 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.096799291 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.084529338 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.084514693 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.083900258 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.084189905 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.106705244 seconds)
  done (took 32.385869912 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172973776 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.097026134 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.085684656 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.084772727 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.084464986 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.177747296 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.12107222 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.110612738 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.095374842 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.084601825 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.084228172 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.099417762 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.106532203 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.175215576 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.159073532 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.13445649 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.267580965 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.094420977 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.173119174 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.089991793 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.131149636 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.275494231 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.156763953 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.135140827 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.137514891 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.113065676 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13143905 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.124071354 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.111085038 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.104908616 seconds)
  done (took 53.037662158 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.132970877 seconds)
    (2/2) benchmarking "in"...
    done (took 1.149906416 seconds)
  done (took 3.399619447 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.091650683 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194491017 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.113399326 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.297045555 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.277395955 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.295831996 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.293144849 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212064654 seconds)
  done (took 10.875585228 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.134335284 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.104489416 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.265376993 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.121681033 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.114910082 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.409991468 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.030810859 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.733323917 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.631738107 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.095371892 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.225610425 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.703748262 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.091353924 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.302975538 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.204265644 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.901666373 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.137818202 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.231534485 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 2.891132956 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.226807154 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.542091862 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.169450358 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.127496909 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.113536869 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.120817525 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.04321415 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.914440034 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.422086117 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.029528669 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.204715481 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.573286966 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.166175447 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.115170296 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.149588722 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.210189484 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.118025084 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.092044042 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.187380575 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.102601193 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.120312613 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.607141349 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.365476021 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.2668655 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.128000371 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.152853565 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.117008752 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.139849776 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.124005077 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.315570765 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.769096179 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.116013298 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.983700391 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.233402803 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.141677211 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.39161213 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.235493176 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.114929991 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.070901167 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.311129093 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.129932246 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.496875413 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.126115359 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 2.892713081 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.214103311 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.127336346 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.341265772 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.957219632 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.609664375 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.633985749 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.206993894 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.485750297 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.120753929 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.154009739 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.128213635 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.971469156 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.385930175 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.137579273 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.104689579 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.105078911 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.114563029 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.192737578 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.196621859 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.85735187 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.25067554 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.326433452 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.393724734 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.230228119 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.127862438 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.558220957 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.947504384 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.223151202 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.506344361 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.205747978 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.240473376 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 2.925965868 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.267398154 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.104305891 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.136701932 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.878215928 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.384388507 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.269462604 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.128914506 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.516015406 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.173004952 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.143198319 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.117451202 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.63142967 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.228311116 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.088670978 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.14107422 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.121130687 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.113728176 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.770777484 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.211749106 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.123360029 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.660907148 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.115082138 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.351568697 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.177466188 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.165479568 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.255041042 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 4.692176446 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.344029962 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.951345593 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.128927459 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.28886722 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.114146351 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.705046148 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.182682021 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.217042049 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.591099492 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.149904682 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.141037268 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 3.966651478 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.124508621 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.093463668 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.119904012 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.100231597 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.15620803 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.171330259 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.167167509 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.275955313 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.466497754 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.244306405 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.258079711 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.215056956 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.630256562 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.103570295 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.737189777 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.23365074 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.112536876 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.438365727 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.269163402 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.612954293 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.21191378 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.110329922 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.124522332 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.877955724 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.878833891 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.187475179 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.114028276 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.757526434 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.197146051 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.116572226 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.114651256 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.50119876 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224693343 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.096545608 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 2.984039999 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.663753186 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.501721411 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247308945 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.310607954 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.190970768 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.113687932 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.108708613 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.099389712 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.78890962 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.734161836 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 5.947034078 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.709285386 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.536525323 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.14279056 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.059303117 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.174710431 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.159896638 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.228873359 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.233351733 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.105527586 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.119756388 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.102477909 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.613222221 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.847917429 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.673204106 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.885168597 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.101076128 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.096124105 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.197459194 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.860493278 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.117090574 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.607247874 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 3.837306688 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.178258615 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.098968994 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.105141983 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.143033862 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.178429682 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.24228001 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.332632659 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238497383 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.142703287 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.600819925 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.223166936 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.594487729 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.220397939 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.876974271 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.002354565 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.19785293 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.113747182 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.385653703 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.220573229 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.152998034 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.462453592 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.243239651 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.170309837 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 2.997166211 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.478048484 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.971279758 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.73816974 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.458474088 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.140403685 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.590553743 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.297956982 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.294916865 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.807150148 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.210323293 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.42510002 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.195199935 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.249495742 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.28657719 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.852633626 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.16807694 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.446021171 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.285445217 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.959071091 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.216254916 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.386061404 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.233890791 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.154360946 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.09196333 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.221902731 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.611075756 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.252976575 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.146482225 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.09330571 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.72007068 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.183021174 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.379356443 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.144884926 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.82247725 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.959146989 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.323691229 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.765760254 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.099280474 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.184353596 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.682070234 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.120669041 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.207173423 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.209284574 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.142584492 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.132629587 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.101584318 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.147335852 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.136033072 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.270067912 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.015555562 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.196981267 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.197078544 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.116989401 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.088922384 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.117643312 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.021017159 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.05227249 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.338721571 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.547265556 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.688515595 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.214310601 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.363162459 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.196305411 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.825474697 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.199977798 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.101898646 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.556706856 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.226153556 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.176179032 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.221340784 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.128401617 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.500300604 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.168033387 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.254298832 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.031944296 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.187002685 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.671773932 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.543382282 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.244462424 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.283400808 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.123394845 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.668602749 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 5.960681061 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.648032889 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.085217576 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.838276323 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 3.992274824 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.102761855 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.11501442 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.107019313 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.666543207 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.093940837 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.150369285 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.801907934 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.466864703 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.052206767 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.885689017 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.191511146 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.115249226 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.126031981 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.118911777 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.03205093 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 3.969448636 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.153053109 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.204658328 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.104016256 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.121638497 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.979386029 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.139025762 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.66726498 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.776670834 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.936696112 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.231170877 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.127840062 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.122587664 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.090119878 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.120668308 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.103723135 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.12094342 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.301365732 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.227095083 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.745644446 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.19169858 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.111430164 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.130323199 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.135216262 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.103939926 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 3.993698716 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.154244273 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.132657569 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.144465454 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.095611611 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.404669711 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.238295585 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.091028449 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.161980053 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.180719018 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.201744011 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.372493424 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.116913572 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.410059292 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.452119431 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.887684297 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.129438046 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.047623097 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.211919545 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.618509104 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.062918813 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.410933945 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.749457852 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.099713854 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.158161353 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.868042192 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.488633423 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.021785127 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.123944068 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.106100323 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.098078847 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.948595402 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.22031417 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.123475082 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.051691291 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.173805216 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.125202329 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.199265673 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.16607065 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.197040444 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.130564036 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.13757289 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.103813348 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.106866141 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.336146524 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.605547196 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.120043178 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.128351088 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.100207339 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.776537639 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.874354699 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.77457322 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 4.905058123 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237623137 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.120858596 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.204637198 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.139401924 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.509891028 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256361897 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.793028578 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.306389284 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.135011573 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 3.985038345 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.455852779 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.606074533 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.241225781 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.189461697 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.11852651 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.279675807 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.954666456 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.223533495 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.954395125 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.235470487 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.689186174 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.568867592 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.149366702 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.17226152 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.00106518 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.699816655 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.084074437 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.136746118 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.85223252 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.224105598 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.186223939 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.829092853 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.250656863 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253891029 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.807402504 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.69202259 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.260727757 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.648749985 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.242290834 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.091057724 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.427818636 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.148315434 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.062491634 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.198855868 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.106213384 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.105372783 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.566151188 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.589397167 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.089308704 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166518025 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.119450431 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.519687537 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.972809347 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.209164942 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.122699163 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.111256965 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.316695701 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.128277455 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.102432592 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.422008521 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.59252949 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.229981813 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.615912107 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.146022702 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.229355996 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.138323063 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.18070771 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.166094303 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.157271408 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.135004411 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.120151626 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.14431496 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.375837233 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.260139786 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.154621017 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.657371425 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.262017792 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.69553428 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.10031545 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.154381263 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.16385685 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.45551728 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.258645532 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.687544413 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.048733238 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.227871534 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.452501923 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.198657272 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.050335786 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.648007588 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.211335825 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.149094772 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.888221004 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.142602172 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.254043449 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.293650937 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.244251257 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.18664113 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.615705831 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.201143306 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.527674136 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.260904378 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.139784124 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.669872271 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.095426098 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.384409805 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.266968489 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.431093189 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.229807192 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.510041764 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.297991446 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.260006003 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.206945263 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.151289989 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.956965622 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.164208062 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.728850436 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.014485544 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.39898975 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.2601681 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.066468508 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.508018033 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.515532136 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.461021495 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.192038575 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.433721761 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.167506728 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.036773328 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.180443186 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.200621677 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.219525155 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.251869801 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.721981038 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.181017947 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.178932038 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.362468946 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.293505599 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.152403571 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.138811044 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.118388719 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.746957433 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.222086121 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.136872061 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.219183474 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.135274523 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.686419214 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.29677857 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.179326103 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.187707768 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.170658736 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.84173374 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.208582472 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.143143451 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.341974004 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.266026304 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.284284415 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824935198 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.454015371 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.170533681 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.153021644 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.174659171 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.629157941 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.502368966 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.328784076 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.520619705 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.199325864 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.702612542 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.134706606 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.434518692 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.532068399 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.923523046 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.243048886 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.181597837 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.062307853 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.648318417 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.142319051 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.864913844 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.403606593 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.232979673 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.722026826 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.903415904 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180784395 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.058800178 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.171972236 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.137892928 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.107186993 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.175917936 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.716053594 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.166383039 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.168679414 seconds)
  done (took 1388.253358099 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.421303678 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.19338427 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.16755828 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.158927498 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.181757348 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183769352 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.14851591 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.143826645 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.169252437 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.16624677 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.091523484 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.153851385 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.183057993 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.434959958 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.11471626 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.156921143 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.17876417 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.142023005 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.146397003 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183094664 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.108228402 seconds)
  done (took 25.959241584 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.162427916 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.15092561 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.090361508 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.128440175 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172358906 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.139199979 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.139491577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170372141 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.18371266 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156742756 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.114248759 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168026852 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.165454014 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.091354756 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120434931 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177561385 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.135459408 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.089731763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.140096698 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.177976558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.103042993 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.145468908 seconds)
  done (took 26.209261293 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.149440104 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.113857421 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.687342357 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.231396165 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.149156091 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.115826441 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.174012416 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.27334136 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.00939108 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.060073987 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.590862297 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.195141949 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.173389581 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.221422805 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.247238197 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.153025345 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.27283603 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.156234701 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.174802435 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.124940549 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.113342599 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.21190383 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.227862737 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.135313715 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.897099484 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.259028637 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.148680845 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.148855453 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.174774916 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.113132525 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.254096251 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.166907287 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.76155867 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.62777209 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.352881874 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.00548859 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.246672968 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.103097624 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.12899348 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.171928187 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.330776376 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.90533152 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.132139922 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.146204315 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.246828557 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.236089352 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.10075581 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.478667277 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.15964823 seconds)
  done (took 88.405450064 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.11502788 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.228080693 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.209223889 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.142974509 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.219124806 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.117129294 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.224483033 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.112926033 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.089392401 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.140411759 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.297647713 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.247528698 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.119309309 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.173456065 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.189669353 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.093441514 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.140315364 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.147789174 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.089668937 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.110455385 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.151217045 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.185336298 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.229310938 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.290129446 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.15991769 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.12179039 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.13944889 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.171874208 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.257298764 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.108990049 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.155843471 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.125869863 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.222241791 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.266194803 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.155347695 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.090191284 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.249469433 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.168369177 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.114478787 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.127939912 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.158215556 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.144970712 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.164766157 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.269429783 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.174995729 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.226331699 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.104962243 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.141926266 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.270428215 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.090140558 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.119535974 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.332022172 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.100799543 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.095878579 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.106649919 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.221345608 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.149663201 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.137940891 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.090692359 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.279847059 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.170989759 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.113378623 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.269407251 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.158198869 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.128183948 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.27711849 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.252901209 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.130116803 seconds)
  done (took 80.741926374 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.139366194 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.173594867 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.103050205 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.105144733 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.151741455 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.149870676 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.123766345 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.129971684 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.186583739 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.15268144 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.113161517 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.14888187 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.170924192 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.119852376 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.112755513 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.143448437 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.168614266 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.102831872 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.126573536 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166466934 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.158963958 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.11301939 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.134113364 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.168452923 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.489348689 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.145597425 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184087516 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.196304826 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.105800437 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.132158115 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.524909025 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.119401216 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.090593312 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.122075443 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.52566165 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.100621464 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.099953923 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.152515426 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.160831017 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.091518926 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.112419732 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.171582128 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.132176049 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.110862856 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.139650166 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.166061838 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.102391419 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.473296109 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.164415581 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.172576809 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.138462163 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.092621118 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148178192 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.164764131 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.156308731 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.215600064 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154653265 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.170338162 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165485774 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.134015851 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.160689867 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.277315981 seconds)
  done (took 73.429723905 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.138066968 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.156571656 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.182783626 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.144452222 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.15069187 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.178971696 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.117863108 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.1203418 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.106789897 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.155979723 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135189048 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.120163976 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.120552037 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.109176676 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.151926809 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16749437 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.145557467 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.149912723 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.149019834 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.113659065 seconds)
  done (took 23.947651583 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.136111026 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.149563779 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.117047398 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.122456164 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.097326374 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.129352175 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.153866756 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.123910167 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.133821499 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.106582271 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.090686035 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.101057375 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.093375352 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.101054055 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.125145002 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.124773389 seconds)
  done (took 19.002539545 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.112712721 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.097525918 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.102836841 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.090537539 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.099277626 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.091797357 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.089835318 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.101068668 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.100062319 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.55908917 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.09328402 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.117869675 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.133451134 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.105129112 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.105794816 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.096239401 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.106542544 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.121651447 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.116242106 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.102871423 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.672149885 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.093322984 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.106403113 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.113942014 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.103143444 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.698583037 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.092111632 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.098646524 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.091092304 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.090844076 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.090159527 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.578840241 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.091436097 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.101267594 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.092351033 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.090350303 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.101904702 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.090834891 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.096161352 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.093020067 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.113000192 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.141036395 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.137725269 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.125459606 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.111914251 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.127586031 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.118782379 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.56061641 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.101909747 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.092237235 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.101152357 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.128033002 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.104640951 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.578356101 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.096458165 seconds)
  done (took 64.887242266 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139795782 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205481507 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.161416704 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.118649847 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.184147698 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.155999183 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.173698472 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.162203694 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.185104073 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.116943299 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.172015589 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.125005814 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.140710383 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.182175909 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.184532884 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18287186 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.100640662 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.166971751 seconds)
  done (took 21.936412339 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.09295898 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.109820016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.124109564 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.115939143 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.11496774 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.112085622 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.097497463 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.090849966 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.09055761 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.1011952 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.090755789 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.090176672 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.102429697 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.122674682 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.11311733 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.123448196 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.130864852 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.113783812 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.105732818 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.10725515 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.091393439 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.090243908 seconds)
  done (took 25.421105146 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.134021575 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.16226658 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.108498713 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.104146619 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.09273072 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.123127974 seconds)
  done (took 7.801461139 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.141987712 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.08988159 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.135680879 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.178205437 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.12765977 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.106468315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.121559418 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.133342724 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.123550928 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441834478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.149355905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.136230442 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162192316 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.129639045 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.122562966 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.125403247 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.122951974 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.109346124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.154167557 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182155381 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.105597142 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.147935483 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.160157263 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.130654095 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.115803088 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.139725388 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.10951018 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434308425 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127192855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.120924918 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.100524378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.092093602 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.090682808 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393887103 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.139384476 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.09006288 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.089835651 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172821664 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.090100091 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.090457667 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.126452473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.089951259 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.089709883 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.090035719 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.11612271 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.114045011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.105954028 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.105132107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.099392285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405988333 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.090610105 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.116639047 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091158955 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101276977 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091574737 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395996418 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397586464 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.09041055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.09011421 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429226277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.107932632 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.113227555 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.09672734 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427525544 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.121400856 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.119659656 seconds)
  done (took 77.276011125 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.102653585 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.130722861 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091052375 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400330432 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.133388678 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.138374093 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.113185986 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.099317462 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.0915003 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.145192372 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201730429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.090071319 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098926948 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.11687969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.126668555 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.125507253 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.099675461 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.091681327 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.144545812 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397495364 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.13216117 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.124561545 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.127251974 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.100842531 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443539529 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.112212063 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.104507652 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098073168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.10990934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.093041582 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.09085487 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.099161432 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.092488936 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.158183435 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.129354703 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.117431008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.140647202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.126564453 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.099882193 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.090682719 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.090549914 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.176788227 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.110922193 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.095291558 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394424466 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.09181531 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.090723076 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.162023827 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132348086 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.162998405 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404543266 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393477674 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43270214 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.117492404 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098603595 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.090632555 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.090248608 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.119087033 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.128046717 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.126440994 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.118694283 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.108629111 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414988577 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.127225953 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.111771945 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.115117791 seconds)
  done (took 77.139705558 seconds)
done (took 2346.171406628 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.163286033 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.258813323 seconds)
  done (took 13.532314557 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.090798171 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.091262688 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.243380962 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.091658592 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.110638634 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.267593522 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.109006214 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.109360672 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.094557192 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.176078174 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.091630258 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.224834501 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.193456396 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.112290307 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.137029366 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.125018611 seconds)
  done (took 39.402203271 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.089969869 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.290209094 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.075107769 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.883651699 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.307491882 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.019110106 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.419613233 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.35698403 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.421137519 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.624823662 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.368203225 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.610103073 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.966036239 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.221124411 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.726702288 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.792229274 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.890392318 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.935119545 seconds)
  done (took 60.090681954 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.091210291 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.558129131 seconds)
  done (took 8.751827719 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.100734982 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.136219742 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.155995584 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.099592221 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.09434734 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.092065429 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.137004655 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.141491012 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.114370495 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.131313398 seconds)
  done (took 62.309865559 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.079092551 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.740545774 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.407551372 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.67634102 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.657013762 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.492915616 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.286240916 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.475494352 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.181300747 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.079508412 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 4.919821589 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.518128617 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.807706655 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.053569982 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.617038472 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.397928366 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.667378577 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.621193944 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.397042571 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.426354747 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.344174238 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.835878921 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.549826128 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.938719458 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.101150789 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.162489087 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.26481859 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.234655827 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.199601193 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.996691727 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.921707906 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.127261455 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.041222809 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.096861474 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.148661871 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.715248835 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.758178604 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.33940586 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.443638309 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.414008293 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.500783558 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.369365174 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.221669654 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.366088537 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.325064119 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.248671835 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.033034599 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.339018102 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.182692122 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.236169297 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.676813539 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.278577333 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.228996422 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.204551071 seconds)
  done (took 149.438280163 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.093224209 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.489868805 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.24678403 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.089045745 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.514489962 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.294273577 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.846953743 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.58443894 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.097905807 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.292130894 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.257719502 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.221860462 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.116461286 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.090253547 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.088882628 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.090112752 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.273062476 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.613786336 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.115174735 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.09125382 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.296039734 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.330465109 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.223084925 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.085497063 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.282666529 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.350082346 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.555671299 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.228332398 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.468672215 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.107146311 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.578893256 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.125910611 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.092263432 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.998550299 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.504112766 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.417207999 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.600629254 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.103753455 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.85487388 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.083683426 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.755949686 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.305479038 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.430786981 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.241654117 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.359888033 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.321585268 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.693560275 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.079846431 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.861757676 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.281559323 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.331685773 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.308719589 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.365138182 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.087943902 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.647979014 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.112380104 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.091560582 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.360752047 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.243610102 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.210009128 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.084848539 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.123585127 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.085184675 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.32852208 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.08341521 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.217230507 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.084929421 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.114293966 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.214623488 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.211618856 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.24614834 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.329340613 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.357771078 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.329276826 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.061305944 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.339832359 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.54574274 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.330933032 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.084509698 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.110943252 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.533559783 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.522960805 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.2598064 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.335052423 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.419815244 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.405948164 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.69587961 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.100983437 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.32016535 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.255233656 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.438017639 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.346639956 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.429470736 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.000983223 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.081655974 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.134018782 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.046885148 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.221372106 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.114504387 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.635199901 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.409058696 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.187715977 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.264886136 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.578512996 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.196773311 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.084193655 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.66981651 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.125598288 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.340527637 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.403353045 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.104778111 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.084090371 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.242132808 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.0593963 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.110104565 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.506618771 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.560691453 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.104224978 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.254249714 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.118933139 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.346524715 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.894015424 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.31900606 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.009697027 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.359878004 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.305385328 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.368947314 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.084457662 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.345453793 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.370500014 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.499019249 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.444061916 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.10879797 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.090330571 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.416827893 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.084141841 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.100169219 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.281605956 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.050357835 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.263028194 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.084332794 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.46811421 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.266762815 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.441425651 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.098878346 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.326301503 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.33415355 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.494288319 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.099794827 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.245631731 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.092990771 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.172883491 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.263897972 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.102739551 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.100900527 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.950803264 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.094038328 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.25830218 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.318442316 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717678774 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.584020352 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.448194241 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.080234942 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.600356024 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.294634848 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.540153595 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.657654501 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.264338786 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.778737423 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.300105732 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.116898802 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.371203012 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.423532925 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.126921003 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.124222686 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.860577822 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.240229227 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.134176661 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.301208897 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.397818723 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.564374901 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.361712109 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.105920444 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.491315306 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.143218674 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.346936268 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.659462118 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.456918098 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.107031068 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.119462615 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.1432038 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.124319448 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.333500933 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.405651278 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.825395185 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.331898464 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.41519089 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.36127289 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.470273393 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.616730469 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.165783095 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.451854292 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.139295373 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.542756764 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.098670263 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.22182643 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.407457126 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.083272105 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.307926752 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.440735251 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.3083984 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.601360673 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.108570254 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.091319432 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.721598699 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.29910724 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614176714 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.123309169 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.220682324 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.490907914 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.221248914 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.323144199 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.321256562 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.130510124 seconds)
  done (took 728.100811952 seconds)
done (took 1062.741916053 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.088940983 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.087164818 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.146999171 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.116735834 seconds)
  done (took 25.534864445 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.917412528 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.908474498 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.189620819 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.093830561 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.239180102 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.320128822 seconds)
  done (took 10.760405634 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.598709032 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.112582462 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.136963979 seconds)
  done (took 17.927907093 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.401746457 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.570572989 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.309203338 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.225246603 seconds)
  done (took 6.59637787 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.116669242 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.097104699 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.091601082 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.092821478 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.092015478 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.091925367 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.093028678 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.093076772 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.093582106 seconds)
  done (took 10.989262633 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.560709334 seconds)
done (took 77.478950444 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.523568119 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.413325692 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.094755916 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.378783733 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.291094328 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.435674842 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.224468798 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.118822141 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.397747986 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.514507636 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.61464517 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.262587581 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.609923365 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.55684901 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.312901806 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.115937349 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.122197824 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.166289758 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.749835065 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.30124667 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.77366286 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.226323633 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.080048873 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.123237289 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.075582677 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.168174157 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.340852079 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.139966549 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.738620398 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.125163072 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.220619822 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.635952292 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.322786375 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.411438693 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.207543476 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.072030245 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.545352383 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.094227741 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.349816754 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.676402132 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.353719798 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.21421351 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.081517123 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.413759916 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.499667001 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.164991445 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.075647313 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.261083656 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.733800867 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.293470078 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.440669304 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.114788789 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.740350235 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.181525907 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.181590442 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.084775549 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.256012833 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.593225972 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.324461522 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.434788828 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.116385194 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.081324595 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.111696686 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.11922905 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.092111269 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.261417321 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.50539069 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.206276723 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.571147744 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.128002676 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.108772306 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.121783756 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.834863764 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.177950751 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.106643507 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.189360483 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.383440357 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.271585883 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.094945363 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.203275095 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 3.182266059 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.119685547 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.357779607 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.416921461 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.293288412 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.556350155 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.603855292 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.512521381 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.693464863 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.120766828 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.402106662 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.629509056 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.344231517 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.105941912 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.201241075 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.211926283 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.62932161 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.603721748 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.245333251 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.781965283 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.120946746 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.109238091 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.614594207 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.420736103 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 2.002686733 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.174131293 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.249885063 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.098995799 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.364924127 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.092432763 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.534875015 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.629000413 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.097384126 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.15548702 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.5798699 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.092037466 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.38144039 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.536435651 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.192860483 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.092712076 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.40459371 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.104194781 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.216238966 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.657418008 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.503230852 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.331922924 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.088025507 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.547483732 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.110315843 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.375060527 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.143772251 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.721581199 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.666648244 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.123288729 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.348209091 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.228835012 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.082424269 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.320788484 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.145012939 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.229347621 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.453329094 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.413992657 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.227092617 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.109791467 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.473173824 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 5.399316335 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.335183363 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.405772769 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.302866891 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.434166491 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.181266181 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.104699418 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.295484522 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.562188063 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.712135609 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.8292431 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.353117002 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.223978694 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.696269469 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.409470262 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.95925266 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.21653545 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.159074637 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.146870856 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.118389554 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.160782681 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.085428368 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.094328683 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.378244304 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.508004757 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.723949728 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 2.002774611 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.099552041 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.383419187 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.227938901 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.032320519 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.734045814 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.090871228 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.575540803 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.550976555 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.244726433 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.132047094 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.17087349 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.134556717 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.996082217 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.15245562 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.464671547 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.750746589 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.531432298 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.443469559 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.33326863 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.148169822 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.505267568 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.3505907 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.380317416 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.297223548 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.725309017 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.173374743 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.509451607 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.204625567 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.389135627 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.134896353 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.279034994 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.341189655 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.597256139 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.404801142 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.315439129 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.320402338 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.374873311 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.095220671 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.113760488 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 7.877003933 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.410220218 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.144364624 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.171259931 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 7.801382827 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.57934353 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.080450104 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.248304963 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.59794356 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.205215225 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.240841483 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.611186344 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.10704418 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.421964768 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.336438469 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.282517863 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.317568743 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.145191117 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.266960557 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.28081832 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.232008622 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.333854464 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.091424704 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.536340026 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.190331795 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.011320961 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.113970226 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 1.800990104 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.13494276 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.105536979 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.425292839 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.291374743 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.408918992 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.304183052 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.255376483 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.11112419 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.214379899 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.710670922 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.945615864 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.63761541 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.195901416 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.122298654 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.082401724 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.628332955 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.543259803 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.178857899 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.240831628 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.729585616 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.126609408 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.288643574 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.098483371 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.21841826 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.974756216 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.240149726 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.358020675 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.69737342 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.118837792 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.42770285 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.249160835 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.658562371 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.620834525 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.142351 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.214220588 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.085341393 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 4.829243935 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.524661206 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.144142117 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.246035521 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.408813167 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.209145854 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.207255811 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.084690033 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.157618414 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.751944311 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.512526357 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.677660435 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.152534178 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.502452943 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.09540119 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.357427609 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.142137569 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.189014884 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.535443742 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.220233903 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.436330497 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.098920753 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.186748966 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.359700439 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.146673106 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.124325746 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.309394813 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.200124774 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.735985786 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 2.764366422 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.319832699 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.093981202 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.343126567 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.171112766 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.08895775 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.239409053 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.206088045 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.727159152 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.623368632 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.096127345 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.457880491 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.114488004 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.540492496 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.117573364 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.111049435 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.214592317 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.226172942 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.122355567 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 2.080661194 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.285024246 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.621114363 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.238844123 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.065885191 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.131923792 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.294331797 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.218136593 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.429370489 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.784385741 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.112461018 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.257448045 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.698191635 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.303147773 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.122183438 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.327692788 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.098687214 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.745225967 seconds)
  done (took 866.018562407 seconds)
done (took 867.32049214 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.129840384 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.50854758 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.289023923 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.066034809 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.89257195 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.752099261 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.340134004 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.334888991 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.164619986 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.307769993 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.996851493 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.892392991 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.230887107 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.252755635 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.2125776 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.225109135 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.293001063 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.336268883 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.206653192 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.182847328 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.453564425 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.183372005 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.504638059 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.384459001 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.489826252 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.192431669 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.162379608 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.47276428 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.470544117 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.121724204 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.311096299 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.31600558 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.937462297 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.328802728 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.200110827 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.225086772 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.96459762 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.200525812 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.166430715 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.221159449 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.5164909 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.258237846 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.835623013 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.083161145 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.928628029 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.549132346 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.004040666 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.266561046 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.272611307 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.30948613 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.134314757 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.147170512 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.477788591 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.160629925 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.941278451 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.06212607 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.454411043 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.005645413 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.898275755 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.333650302 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.513980005 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.242007938 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.283962419 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.366013449 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.243546365 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.395508282 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.539744348 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.162855387 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.351858886 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.366714029 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.378526971 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.390589661 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.272666481 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.285122776 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.288047812 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.354557497 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.944717941 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.34112353 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.928443462 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.247198659 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.087861283 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.000364675 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.113799642 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.203932476 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.189361355 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.934775456 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.237115902 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.087271645 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.271273416 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.374296275 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.073952414 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.35296167 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.598150359 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.206925803 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.179591283 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.360234666 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.246635332 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.158748277 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.133111103 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.348986362 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.94032826 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.205635001 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.173105381 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.246864568 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.258409991 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.175856231 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.216526906 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.565370928 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.366095117 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.312821214 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.552195151 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.288765418 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.372822106 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.265261848 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.220431929 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.9290745 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.420093072 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.998911986 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.166576176 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.841888697 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.423976239 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.260682682 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.51643573 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.392691157 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.149696771 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.21944031 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.233900767 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.055821941 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.211786021 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.239462096 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.340284734 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.594352084 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.323505941 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.089307622 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.345174438 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.921672602 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.349104517 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.34548419 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.203684497 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.028762264 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.20615142 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.055259085 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.385622897 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.485543361 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.339898205 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.409931211 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.217699026 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.382759943 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.122057231 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.207764019 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.336078882 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.227481429 seconds)
done (took 244.868894279 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.442839363 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.234969797 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.382881054 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.401093181 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.502422978 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.435625893 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.161092285 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.538763255 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.177358594 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.507721644 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.290562383 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.02686189 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.240787606 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.3469171 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.464837903 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.342810768 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.171274981 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.354819856 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.569294613 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.52274286 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.907828161 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.318850976 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.255263781 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.525008399 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.105703268 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.917524214 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.428986076 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.226778122 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.376753129 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.847778629 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.903140189 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.384491925 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.460251731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.833240578 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.510858253 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.818573162 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.435982191 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.940655463 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.365425413 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.441169605 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.298440952 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 6.012985222 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.872451895 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.901539007 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.207200913 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.398942389 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.16684516 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.031108873 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.123491838 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.857273777 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.420756871 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.949540888 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.981777046 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.364880777 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.321528868 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.790631348 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.494574157 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.507368937 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.49020351 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.387589704 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.343697191 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.513242462 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.491957772 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.255554449 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.915627499 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.392328107 seconds)
  done (took 146.694874428 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.538037056 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.400630492 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.864093768 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.371409211 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.655927318 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.494623385 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.44123744 seconds)
  done (took 13.849484659 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.174102305 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.18466158 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.439831716 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.397277815 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.1468485 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.27371446 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.229196721 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.915824877 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.39109925 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.213509526 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.463604197 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.419931245 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.848240101 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.931171771 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.249313095 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.379035676 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.127743406 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.240086853 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.225453381 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.434029638 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.905711733 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.860800189 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.292692495 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.173386676 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.171352742 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.228363455 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.158254392 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.131979974 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.146642031 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.125453418 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.17121961 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.279785291 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.15436203 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.855222605 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.127265023 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.460026484 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.145086686 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.140716525 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.275478412 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.08453613 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.149043423 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.170039803 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.29832398 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.152751976 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.121455199 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.330184594 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.126362888 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.159242621 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.152939284 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.199012476 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.367602828 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.159184425 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.130914825 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.832182499 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.382752384 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.891104047 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.247503958 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.155361638 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.160842203 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.21699378 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.198816942 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.438432791 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.399176039 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.136747138 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.389221122 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.458037159 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.160081124 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.152738713 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.145567311 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.406397681 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.181983484 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.407163338 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.161606745 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.217142641 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.175798181 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.281785782 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.339405743 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.955476301 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.92227839 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.799969906 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.469120337 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.143920094 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.480153657 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.106287564 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.813833088 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.160953283 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.15871398 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.801484976 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.047381884 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.18008019 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.481350966 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.14441138 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.195255204 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.191159581 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.121619827 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.19895003 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.337061471 seconds)
  done (took 151.576107992 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.275133968 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.291387173 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.515084184 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.071309413 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.161096831 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.384557224 seconds)
  done (took 14.814066696 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.508498633 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.963064806 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.186877358 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.167046493 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.195204968 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.095593032 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.114074442 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.37092427 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.286328429 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.179960625 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.098082851 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.108800341 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.126521386 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.28599675 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.098092538 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.147877858 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.12082997 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.16230785 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.162066894 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.243062304 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.471341374 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.215772617 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.242151902 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.024917508 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.173512681 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.152195204 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.008839064 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.162013216 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.172023164 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.562412708 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.324878607 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.122779224 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.970802751 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.522734836 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.859990234 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.005598589 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.282653348 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.099724434 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.145857883 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.106010886 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.14917433 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.235224786 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.170581908 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.098781978 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.501144764 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.936196426 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.160910817 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.418380658 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.096657458 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.104478213 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.122327416 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.181139536 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.13631067 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.113966849 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.602287791 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.651073126 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.113464436 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.154287527 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.261867295 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.082021092 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.296149877 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.14248848 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.563901013 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.096315746 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.875388673 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.172084488 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.052334788 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.330056272 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.246523824 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.182986902 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.149195893 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.205860099 seconds)
  done (took 117.029982459 seconds)
done (took 445.090751064 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.400920774 seconds)
  done (took 7.519414123 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.344709956 seconds)
  done (took 7.570914244 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.120848916 seconds)
  done (took 7.247623085 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.171395432 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.224308195 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.185138021 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.14931667 seconds)
  done (took 25.913658434 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.652117381 seconds)
  done (took 7.755488343 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.083810851 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.10661048 seconds)
  done (took 13.286963384 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.263885969 seconds)
  done (took 7.370919296 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.559693125 seconds)
  done (took 7.68845252 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.109999881 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.110184616 seconds)
  done (took 13.350156529 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.083803472 seconds)
  done (took 7.167744656 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.442329928 seconds)
  done (took 8.581972932 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.089343274 seconds)
  done (took 7.29843736 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.120715585 seconds)
  done (took 7.254473845 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.127973791 seconds)
  done (took 7.243453161 seconds)
done (took 136.356020875 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.083093274 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.109464773 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.094848759 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.103576045 seconds)
  done (took 25.473282118 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.43526988 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.426100077 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.43440498 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.488697344 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.374813103 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.366373951 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.466730638 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.449520066 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.376782078 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.573126947 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.419512629 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.570046898 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.514004106 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.43828518 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.420451953 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.465575853 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.47113214 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.449064226 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.389292703 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.416948013 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.472784731 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.479113234 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.864565497 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.8542796 seconds)
  done (took 36.722260935 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.304740938 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.540384584 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.276612149 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.520280688 seconds)
  done (took 6.732617879 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.130220544 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.469664018 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.466505222 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.53164185 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.471348282 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.27032335 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.453407638 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.276332539 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.273711659 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.274211578 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.719231222 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.247156946 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.259191408 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.511222972 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.263448951 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.095831356 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.096541755 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.234031868 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.469794431 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.341100871 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.357522816 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.452401723 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.452911324 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.452103262 seconds)
  done (took 33.652883616 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.868624417 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.099214502 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.493486346 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.02852835 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.7942132 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.884623166 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.376982903 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.594290657 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.361326302 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.337873374 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.822030411 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.847589831 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.260626412 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.000784198 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.862686288 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.300143107 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.301147675 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.981657368 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.547677929 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.409716774 seconds)
  done (took 38.256021526 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.098631315 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.094317607 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.316583046 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.259805332 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.083778836 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.104210758 seconds)
  done (took 28.073400713 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.385589841 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.246522965 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.405154891 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.372737056 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.25429836 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.222458627 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.606150196 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.32369177 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.856692478 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.770464615 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.546090972 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.543288323 seconds)
  done (took 21.644199173 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.096365473 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.130101716 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.111907494 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.339936787 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.144052309 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.808371753 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.123160943 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.114458632 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.610076209 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.38819888 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.240458801 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.321269416 seconds)
  done (took 43.54319666 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.290689208 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.29046419 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.417579967 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.142883644 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.478511869 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.154694283 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.474558228 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.557363079 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.690218528 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.857473945 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.632981922 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.102816384 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.618841211 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.057261608 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.851331381 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.402073938 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.9148368 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.079985733 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.408746518 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.129427497 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.052148392 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.254347899 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.08926701 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.533331696 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391861159 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.111921432 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.333892925 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.354440882 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.109636598 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.316841003 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.091881198 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.615151835 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.268470882 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.394005944 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.483260154 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.281896296 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.142247465 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.097233784 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.702865001 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.475092964 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.275527519 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.263203321 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.118914358 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.125274781 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358765881 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.870674467 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.247592192 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.64963664 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.075914089 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.334035028 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.850249539 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.978342633 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.540819845 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.051827167 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.272425911 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.394280049 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.252472123 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.107997363 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.416159899 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.2507896 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.350161206 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.100318547 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.335683787 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.087367431 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.47021905 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.317816495 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.185973161 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.31296556 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.396711908 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.39726135 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.452402723 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.378316523 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.787963746 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.216344932 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.612511637 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.041729616 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.466994622 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.105110844 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.811130483 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.622984443 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.087839352 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.202941256 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.748875421 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.063456928 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.131478093 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.298090318 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.976115342 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.090200948 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.135032661 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.275222498 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.45282302 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.212906879 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.229316179 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.279673795 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.792582567 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.068054868 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.150676429 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.406876636 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.073961161 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.656812395 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.084946303 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.1253754 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.124050469 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.768615436 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.499995678 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.914877185 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.873796707 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.716263204 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.392327524 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.693465902 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.262740405 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.927469917 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.46655383 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.448674851 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.115043455 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.787823553 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.115979627 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.328315834 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.304469234 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.085618351 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.081022675 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.500003413 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.298723405 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.101549287 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.376967257 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.101277673 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.276569078 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.100690347 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.68946579 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.531512151 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.372849584 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.565653321 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.215625304 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.286748255 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.06235067 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.239008697 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.521792749 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.159269253 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.459910916 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.396651048 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.275657835 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.684554837 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.08849635 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.935597652 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.446978145 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.322779894 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.476302685 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.754380403 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.250444783 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.097733599 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.084589379 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.227190557 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.095638022 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.660511943 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.10254527 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.815958884 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.845536242 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.501451379 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.111197412 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.258127348 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.088605376 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.2863118 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.543090785 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.257119534 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.268778046 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.369317139 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.290791061 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.085550229 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.061592197 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.394345519 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.3298922 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.543757422 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.327353754 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.501054456 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.587118309 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.599373304 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.332886634 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.461848139 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.946171128 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.332542086 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.359645262 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.118657731 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.064301923 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.088028373 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.308901697 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378683331 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.32894427 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.866250337 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.854096668 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.888912608 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.201162155 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.100024617 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.072042301 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.249192951 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.461317221 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.113039799 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.588449286 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.174135108 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.528916922 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.614815709 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.139035142 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.421573535 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.72836963 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.641512218 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.458884185 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.429494361 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.077641863 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.762621526 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.675411347 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.236951838 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.106696041 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.466130894 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.726530348 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.277071715 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.099943288 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.488799606 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.070664074 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.8815569 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.609194472 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.647753839 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.090480355 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.250609636 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.087289793 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.125002975 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.923623267 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.367671032 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.254437177 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.105211092 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.525699298 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.321139514 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.448526881 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.122984235 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.110434356 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.364230593 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.423545497 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.388069171 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.567981034 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.340991651 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.794808671 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.211217218 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.738698633 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.254325485 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.114557571 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.585315499 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.198636675 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.910219489 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.265950389 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.879544918 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.356637152 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.60065126 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.435106792 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.137709919 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.483645797 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.674204588 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.206367957 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.043801299 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.269920988 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.108001594 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.417582481 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.043345421 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128633431 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.653499169 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.76358078 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.327959763 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.276706728 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.483105628 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.533101439 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.898984616 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.090282389 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.345831309 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.239979826 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.417455541 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.122974588 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.419877703 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.806271315 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.511467003 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.088822098 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.580454264 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.455708376 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.180567465 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.517372206 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.383560831 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.462577537 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.060689672 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71639519 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.160136468 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.315988561 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.146112324 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.764494149 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61666573 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.548463462 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.530152459 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.185818949 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.584376499 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.484149399 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.327994957 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.156149068 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.410595805 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.116151739 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.418612426 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.11632256 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.042385157 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.536882513 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.09167218 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.921813802 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.325977829 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.41806655 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.255551157 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.610966083 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.299562858 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.251615051 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.90069869 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.272186025 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.225665281 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.431709738 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.70914616 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.2424059 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.142968499 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.303668713 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.746757813 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.445598141 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.689668872 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.586847327 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.37953453 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.904769035 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.116541383 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.327586366 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.25790956 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.087044156 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.334323948 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.477287663 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.1365986 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.309591319 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.393204169 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.369469414 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.656243522 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.066590785 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.782060497 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.331576857 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.644099309 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.677772833 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.907763089 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.355333122 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.344386225 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.330350505 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.191962884 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.247109719 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.490045156 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.551657519 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.129960702 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.969806507 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.875751336 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.142977252 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.660735038 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.352386757 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.744485074 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.320417874 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.368744465 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.350812708 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.264305886 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.100500592 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.839535079 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.881457973 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.366230013 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.261544128 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.287284663 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.127950768 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.344092009 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.591404343 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.399449561 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.87916552 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.457928971 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.282557391 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.057131754 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.086490122 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.799564477 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.446733975 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.09892954 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.409093884 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.451387244 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.124342586 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.142942616 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.103438134 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.266862745 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.962639539 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.856468712 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.328419074 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.478487239 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.655485034 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.08741278 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.874307082 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.349630689 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.467318527 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.480488198 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.891057447 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.520605943 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.387253874 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.241031425 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.056661229 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.269283773 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.110803305 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.281150613 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.897907214 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.403462288 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.067465395 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.065514407 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.748477706 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.114317192 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.110074632 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.508612879 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.3139054 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.284573492 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.085262345 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.842156718 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.478646855 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.245464589 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.114536007 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.858489755 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.084697688 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.345915938 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.179863193 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.250466929 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.928409234 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.08061742 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.856377145 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.516005943 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.198429599 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.294825509 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.059516877 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.703495605 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.232531412 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.51315388 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.039807739 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.335759127 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.607691712 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.265727624 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.094193427 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.415347676 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.271100443 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.417333975 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.372130996 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.47892946 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.489761044 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.368095718 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362429356 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.48544171 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.342921045 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373584607 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.112010849 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.209332577 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.153169842 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.506294161 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.462671038 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.11189837 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.717404166 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388209678 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.186726636 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.368261821 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.383373963 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.668581836 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.339976368 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.156598113 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.372161154 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.127939381 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.412938404 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.088306686 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.278600256 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.087921446 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.1290598 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.307624602 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.337071939 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.473568054 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.395522505 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.983564502 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.254725347 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.797098463 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.898839237 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.619139828 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.089177693 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.767223932 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.564023932 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.08702138 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.453340241 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.723718254 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.281412584 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.788252403 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.288052258 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.120163887 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.244722028 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.602293463 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.117251242 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.785512243 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.489350095 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.118223706 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.47482056 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.156651478 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.283643185 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.904531155 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.619080205 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.099983821 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.693053609 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.489036332 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.664619136 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.828875136 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.105215689 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.322813512 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.707761741 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.125959684 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.154919006 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.298872193 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.690709363 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.158391496 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.658906961 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.166918904 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.36864009 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.151603606 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.284393148 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.109817948 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.367679845 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.735839614 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.376477099 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.357275898 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.288118209 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.117678163 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.872746753 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.790094397 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.206152076 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.336651741 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.124614709 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.510893581 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.876221055 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.133058899 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.753473944 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.334316286 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.091149463 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512210615 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35686179 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.126329729 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.352482446 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.11536839 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483712442 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.25205983 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.600478463 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.334560877 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.125424809 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.243157046 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.096201122 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.658285281 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.466882326 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936729472 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.112183861 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.438158627 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.146593782 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.698442423 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.763733678 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.28809162 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.150917252 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.975306417 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.845982367 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.867795905 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.351170086 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.110324572 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.309935406 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.641970504 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.114604063 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.715170606 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.10441259 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.31553163 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.441990231 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.084517815 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.298734947 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.136839318 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.080856014 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.59430659 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.099795067 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.432827273 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.109112254 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.663492899 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.140008055 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.09882314 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.327563501 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.507880722 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.159314814 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.109878827 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.294508454 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.139075058 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.129999421 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.49578422 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.262653467 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.382678164 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.489088221 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.231226248 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.557614513 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.031925512 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.709905898 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.280422236 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.411062289 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.090671658 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.713128612 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.132430559 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.729907653 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.692755189 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.225811537 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.643257867 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.339482669 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.81948172 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.260608983 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.61334814 seconds)
  done (took 1944.938559608 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.175096938 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.230889541 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.194245065 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.20801275 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.147076435 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.144301799 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.252288674 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.15894234 seconds)
  done (took 50.616926956 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.122991808 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.138347605 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.542747186 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.373055361 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.13757996 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.281428366 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.359933222 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.776620373 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.185952333 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.031948787 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.243984261 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.206354447 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.115867243 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.149856714 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 5.920517789 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.280973652 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.121596366 seconds)
  done (took 93.122700536 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.146362345 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.069150116 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.121124018 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.855902569 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.120184354 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.53140124 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.132455029 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.139694052 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.572392498 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.813275743 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.148120247 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.259317018 seconds)
  done (took 86.056231878 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.13536621 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.153821288 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.148437551 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.136917405 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.12674013 seconds)
  done (took 6.796113524 seconds)
done (took 2416.849712944 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.329036374 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.559184634 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.667649856 seconds)
  done (took 4.321786584 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.187471956 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.239310101 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.311930386 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.267296925 seconds)
  done (took 6.160052275 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.397581701 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.606378672 seconds)
  done (took 4.10736113 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.420833564 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.12753875 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.645341824 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.086746619 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.131485024 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.124199289 seconds)
  done (took 19.481615439 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.166294346 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.174443355 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.155014922 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.196564215 seconds)
  done (took 5.809276607 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.151674031 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.144326119 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.130156074 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.06642006 seconds)
  done (took 18.624538447 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.407778628 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.364463772 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.84877577 seconds)
  done (took 5.721180158 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.918201753 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.241742291 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.910259173 seconds)
  done (took 6.188664431 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.041882249 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.060429795 seconds)
  done (took 5.196994864 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.303192242 seconds)
  done (took 2.437613694 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.6292853 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.599854724 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.745576223 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.808332201 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 1.99805609 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.393141832 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.536202928 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.357511054 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.637939957 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.682429644 seconds)
  done (took 17.50670796 seconds)
done (took 107.171936331 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.084572059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.510745914 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.294497072 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.884780137 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.219035384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.302753771 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.164419498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.736964737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.523357959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.506556682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.267370813 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.214439923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.183455905 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.503858489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.205116558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.481301557 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.277664405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.086298079 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.007103161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.744659257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.143703528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.481494723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.039363305 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.506503382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.294208214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.279569249 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.05858383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.477222545 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.20761275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.074688714 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.313414872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.94510196 seconds)
  done (took 152.141319187 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.090777721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.149906647 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.127758413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.131845906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.071038853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.131848329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.134592655 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.128458448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.879409813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.916160001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.147666947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.113976178 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.124592569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.117504847 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.140165541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.141457176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.106552554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.131574692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.11497772 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.12445843 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.112695347 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.877235504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.138021827 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.859751217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.146440232 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.145311338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.11067434 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.124231452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.129245298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.114048679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.149053862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.111123641 seconds)
  done (took 188.153715774 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.111596475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.113455347 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.165024576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.117987111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.168683499 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.114978729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.101098908 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.097512482 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.135452402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.182735631 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.112241185 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.14617309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.119750087 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.117584929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.114938196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.108725341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.140989139 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.125279621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.112519478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.122381282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.137508593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.139161685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.132406353 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.110830238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.146727948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.113436711 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.173866319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.113194536 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.154187106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.129728887 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.134537576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.111361249 seconds)
  done (took 197.256929533 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.408550685 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.132706493 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.037317117 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.904378437 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.04471497 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.162426144 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.862450432 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.411964251 seconds)
  done (took 14.097045318 seconds)
done (took 552.808521079 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.811795666 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.043032864 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.298558349 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.382813457 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.720450716 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.435425171 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.410517142 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.591846556 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.85319257 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.537718981 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.580840218 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.321763858 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.020337004 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.383694696 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.296227319 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.611405192 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.551517999 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.821195574 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.312422164 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.994534976 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.34503755 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.986561735 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.591386204 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.904400794 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.624921403 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.012654383 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.28712679 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.503640707 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.356576789 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.336403414 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.174817628 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.618734173 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.356947682 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.32674519 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.62606365 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.59390089 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.504378894 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.600389291 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.287533876 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.786945893 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.981004995 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.704640692 seconds)
  done (took 75.575992134 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.119359724 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.14748656 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.290779465 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.197517227 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.811736313 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.208146605 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.384008792 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.346955416 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.227546995 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.369608213 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.397918626 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.837724769 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.401324008 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.800759774 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.379301285 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.379734742 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.204563398 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.740321635 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.367470095 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.371447691 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.206330093 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.333999796 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.173582092 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.3113268 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.158181558 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.166754428 seconds)
  done (took 36.449140229 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.190331147 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.337476137 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.412374994 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.335350555 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.359606116 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.131466828 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.4275268 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.307885567 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.873242298 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.763756421 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.271997172 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.306576937 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.318484528 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.404139837 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.354652169 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.330842655 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.335981029 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.340434991 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.352353392 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.353962711 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.262112335 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.239659044 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.458200703 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.05090792 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.985545377 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.687696048 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.451227975 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.686579518 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.276627789 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.353928842 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.303343084 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.460591522 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.537536011 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.431461104 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.309920606 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.15746815 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.16203254 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.239785372 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.005045905 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.312387713 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.448356951 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.524218654 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.481894035 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.68801749 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.437807144 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.419197459 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.583677053 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.261767021 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.279218586 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.035897198 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.411265092 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.774736055 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.350220631 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.389740682 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.245547287 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.466097056 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.307896827 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.413319285 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.252098083 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.901991059 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.20914494 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.536951397 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.322789058 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.410026606 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.435646537 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.329132217 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.320394962 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.656560892 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.514697259 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.348434101 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.72815964 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.242769791 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.219906127 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.273994199 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.361970326 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.629683071 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.059718341 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.476482079 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.532934748 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.447164543 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.366681976 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.727980042 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.17803932 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.525069721 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.329478652 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.130895533 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.248474037 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.483141839 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.432023459 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.641513605 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.70487455 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.435010007 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.751209954 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.576221367 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.687679119 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.502357758 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.126115306 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.144146785 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.386039715 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.706446404 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.259625725 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.373096777 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.751537823 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.636781873 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.567690253 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.314289264 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.535662274 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.478750588 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.53011982 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.118510262 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.338577279 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.195004216 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.408855946 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.436691375 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.130518879 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.652024775 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.249206252 seconds)
  done (took 238.761588855 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.087268654 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.126357586 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.126302186 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.12114857 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.111901659 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.667939031 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.152946907 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.146957382 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.666345593 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.181084766 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.148249794 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.142370709 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.154747012 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.17521794 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.295057527 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.321663803 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.809180676 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.145939266 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.163008285 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.142955129 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.815356946 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.103114065 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.099370751 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.101098557 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.124059323 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.134287439 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.099312504 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.151680807 seconds)
  done (took 151.607778117 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.178384592 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.572799413 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.186446219 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.256579394 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.190792709 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.163108637 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.65665914 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.343658222 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.238126598 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.188040836 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.17146166 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.407121847 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.480396343 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.765636644 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.290817122 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.406750452 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.825418602 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.309308007 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.187568346 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.184392859 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.34354147 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.553421388 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.422880089 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.411361866 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.306173653 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.415066762 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.241612869 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.179367972 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.304064278 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.663501895 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.194630958 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.51621185 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.311553941 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.16573506 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.64765959 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.507943864 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.76619193 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.823958594 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.410079292 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.117719612 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.118057027 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.396789371 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.460306159 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.205788079 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.154869309 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.82082688 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.200399905 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.426897794 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.171561807 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.114827456 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.255752908 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.268808031 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.399845191 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.077200916 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.369943252 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.36111708 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.771127025 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.155160599 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.166641886 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.456459685 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.159687227 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.660226259 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.720200508 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.237360988 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.196589454 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.035030257 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.285235073 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.695377309 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.799960061 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.204645716 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.499845857 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.372670318 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.143697223 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.441831667 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.346039185 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.603942704 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.77123117 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.323774174 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.275460141 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.271661993 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.431689836 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.177115291 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.708845234 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.268302697 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.13131927 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.633725549 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.545891578 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.151032461 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.160334787 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.248993135 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.314988336 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.37228993 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.446564081 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.275193211 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.109397957 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.418004457 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.43640315 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.201912741 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.298121118 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.155452611 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.598637856 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.367891545 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.137845832 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.464756833 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.546505756 seconds)
  done (took 156.418666673 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.933661947 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.219928056 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.332903488 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.688164227 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.529220103 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.636097371 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.425508158 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.223961425 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.436338492 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.405931871 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.401861089 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.294455269 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.875701648 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.912903052 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.211439302 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.339245042 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.223358349 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.022730412 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.468101672 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.304580113 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.61500306 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.95579041 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.463479782 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.552298899 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.558669069 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.663457223 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.8161994 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.267664029 seconds)
  done (took 48.920032931 seconds)
done (took 708.82849297 seconds)
SAVING RESULT...
DONE!
