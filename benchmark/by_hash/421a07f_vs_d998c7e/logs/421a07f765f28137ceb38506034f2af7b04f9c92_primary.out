cset: moving following pidspec: 3868969
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.73781586 seconds)
loading group "shootout"... done (took 0.803109197 seconds)
loading group "string"... done (took 0.227452009 seconds)
loading group "linalg"... done (took 3.141693941 seconds)
loading group "parallel"... done (took 0.021079333 seconds)
loading group "find"... done (took 1.155711194 seconds)
loading group "tuple"... done (took 0.686929047 seconds)
loading group "union"... done (took 3.044746683 seconds)
loading group "dates"... done (took 0.152451967 seconds)
loading group "micro"... done (took 0.05595504 seconds)
loading group "simd"... done (took 0.359192169 seconds)
loading group "io"... done (took 1.379275395 seconds)
loading group "random"... done (took 2.342685521 seconds)
loading group "problem"... done (took 1.186268314 seconds)
loading group "array"... done (took 4.579030706 seconds)
loading group "misc"... done (took 0.95754701 seconds)
loading group "scalar"... done (took 3.424976074 seconds)
loading group "sort"... done (took 0.303505744 seconds)
loading group "sparse"... done (took 3.632222177 seconds)
loading group "collection"... done (took 5.922030586 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.538702173 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.071971943 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.250657286 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.075789516 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277954497 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.081104177 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.087587392 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.069600375 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.054920464 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160960514 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.210210567 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.389524747 seconds)
done (took 5.146501508 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.263170972 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.032873138 seconds)
    (2/2) benchmarking "String"...
    done (took 0.122182944 seconds)
  done (took 0.75880546 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.135556093 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015107875 seconds)
    (3/3) benchmarking "different"...
    done (took 0.021978637 seconds)
  done (took 0.768650171 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020036878 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.097577039 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021031228 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.021646642 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.021517134 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.020965607 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.020722171 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.020750335 seconds)
  done (took 0.82406302 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.028130513 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.0225366 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020543114 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.02194456 seconds)
  done (took 0.692900978 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.0220143 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.08105625 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019679262 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019516358 seconds)
  done (took 0.735104477 seconds)
done (took 4.676380697 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.19356315 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.777693948 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.910437807 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.176796342 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.351488961 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.303984136 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076803013 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.241041979 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.145555657 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.033945151 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.177205284 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.0396725 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.666791135 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.452700378 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.028785604 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.143663252 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.576325875 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039209091 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070102946 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.221206967 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.040041235 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039090094 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043607133 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.026408555 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.155046306 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.137481542 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.675256085 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.064561035 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.024903317 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.045725324 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.027706539 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.030447788 seconds)
  done (took 9.572803234 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147472191 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.14120154 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023294063 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.059030122 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.049486052 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024283821 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.029638967 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.022572964 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.042253538 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.087632252 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.045075129 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.155554009 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021026765 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.023799466 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.135838136 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.115731185 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.039742667 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.036682408 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.021941247 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.035991623 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.049185202 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034298995 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.032810531 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.03240159 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.067898716 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.089967118 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.041204855 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.063508248 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022095879 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034454069 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.052460302 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.063343639 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022595256 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.020935673 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.064553292 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.043473771 seconds)
  done (took 2.624175448 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.984778406 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.049798472 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.135720436 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.12633352 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.062967829 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.050069319 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.176892117 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.076977818 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.054633212 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.023525672 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.204285534 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.637317864 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.166265579 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.035359218 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028136868 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.17940036 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.864436975 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.938823941 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023208367 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023586961 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.132737258 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025863754 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.176460484 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.021439186 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.136230915 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.813831783 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025325074 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.023896482 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.052170512 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.138785092 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.020564399 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.095528888 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.049536982 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.024757644 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.550802719 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.021504053 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.019442142 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.041401958 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.049860437 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021730099 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.022835772 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.033445842 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.020939792 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.073568679 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.035195912 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.521968256 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025020795 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.68482573 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.798240581 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.030417728 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.027366587 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.057589711 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.019547875 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023119869 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.605323176 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.110265524 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022442544 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.247849755 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025471178 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024249878 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024389356 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.05727276 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023163925 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024326299 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026503008 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.040890057 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.969620848 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.032366457 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.042648695 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021318961 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022530179 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.020855406 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.385644094 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.02932848 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.024972853 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020473561 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026784486 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022615591 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022114002 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.067351938 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.049443407 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.0467949 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026031777 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023138307 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.02222052 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.540535754 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.049564549 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.024801187 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024003525 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.480498166 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.02015134 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.021980683 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.023609866 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.043509299 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.022417012 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019294251 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.0571717 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.02408477 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.124677365 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.53936395 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.024189306 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.019722613 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.495226519 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.02395892 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.053545838 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.075449585 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021919419 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.059089919 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.022450395 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.019682976 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026069955 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.019671812 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.023923626 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.020785304 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.021621615 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.020576759 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.022526172 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023556803 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022343183 seconds)
  done (took 19.610236674 seconds)
done (took 33.389481273 seconds)
(4/20) benchmarking "parallel"...
done (took 0.746978694 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.209830993 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.04834209 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019101299 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.161039645 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.043138969 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.132867728 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.175147382 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.12557621 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.044923957 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.044712507 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.04488798 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.180188211 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.191819642 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.046214717 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.118627934 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.191791135 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.046408596 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019849243 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.046299274 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.046166828 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.046447121 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019605828 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.045397136 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.046460476 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.118721298 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.046577632 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019513375 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.120972662 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.04772597 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.122162017 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.047318961 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.046312532 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.048475197 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.120678176 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.049134353 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.120292329 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.01988818 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.04866721 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.048712649 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.049378967 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.04862696 seconds)
  done (took 3.926941904 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.0449991 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.037069018 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.039319886 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017628176 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.026945187 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.036952627 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.017591654 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.036469879 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.040652208 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.037059613 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.037182837 seconds)
  done (took 1.120865492 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.039900639 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038108629 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.039377127 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017481545 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028621514 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.037829873 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.01742321 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.037291572 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.04009036 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.03780018 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.037826442 seconds)
  done (took 1.062568226 seconds)
done (took 6.776435714 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.151239318 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.118948727 seconds)
  done (took 0.948497273 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.552072848 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.217158833 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.128604358 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.253368558 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.121952278 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.153460421 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.225474871 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.158867804 seconds)
  done (took 6.543286122 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.073392212 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.139021245 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.023611502 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.022138189 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.022233767 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.022415583 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024071741 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.022719888 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022007661 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.024486217 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024159771 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022216979 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.022962453 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024257318 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.022290517 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.022473291 seconds)
  done (took 1.365150265 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.028259306 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025058454 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.02622346 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.016695121 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027142839 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.025599989 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.026748272 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.027211551 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.026349883 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.025934849 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.023986896 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.026908264 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.025879199 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024495919 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.02692206 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.016648045 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027007023 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026390888 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.02829297 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027345721 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026366903 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024003259 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.027936886 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.02519434 seconds)
  done (took 1.315718809 seconds)
done (took 10.862910859 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.139071021 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029090914 seconds)
  done (took 0.85894119 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.125070507 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123258337 seconds)
  done (took 0.947846494 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.028390446 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.015522295 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.03172906 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.023616292 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.015576496 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.015495572 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.030793975 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.015739535 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.015549834 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.015739786 seconds)
  done (took 0.911317367 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.018971393 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022571874 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.020616548 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.018799561 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020432537 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.016522671 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.01870781 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.01684911 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022337653 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.015888712 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.01966007 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.037144578 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019060022 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.037412808 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019040394 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.019598699 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021196209 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0188181 seconds)
  done (took 1.085800183 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017334949 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.016481412 seconds)
  done (took 0.738316619 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020213711 seconds)
    (2/7) benchmarking "second"...
    done (took 0.016645431 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018247746 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018045541 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016043784 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.01551228 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016065882 seconds)
  done (took 0.81911049 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383417531 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.085530287 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310315368 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.023916602 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.037167941 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.223373778 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019134029 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023631027 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.023493119 seconds)
  done (took 1.833169735 seconds)
done (took 7.895850984 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.039990717 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.140753477 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.144895108 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.446146026 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.033358054 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.021948491 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.051485682 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.225864523 seconds)
done (took 1.816159372 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.484112373 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.250740732 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.254003872 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.023397661 seconds)
  done (took 2.235086066 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.309373533 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.138058387 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.029726028 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.022041691 seconds)
  done (took 1.220672895 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.021615608 seconds)
    (2/2) benchmarking "read"...
    done (took 0.026613249 seconds)
  done (took 0.764570763 seconds)
done (took 5.422075776 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029802011 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.016513858 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.022722579 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.01799978 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.01765797 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017094619 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017074604 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.017816409 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016151333 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018117764 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018060479 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018151082 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017829995 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017760241 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017368724 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018080306 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016138943 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.017742739 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017815679 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.017803426 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016076485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018135265 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017276385 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.017749162 seconds)
  done (took 1.139935497 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.035419863 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.020447618 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.021094123 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.020866017 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.021350194 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.020976936 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.020919381 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.020049063 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.020960761 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.019747122 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.021498548 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.021531697 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.019868354 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.021625571 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.019915482 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.021598294 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.021235493 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020312818 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020006632 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.021632316 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.021085704 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020304524 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.02155202 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0211319 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.021507692 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.021542464 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.019953983 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.020279262 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.021007145 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.021452596 seconds)
  done (took 1.357268136 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.022389201 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.01471866 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.014980937 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.024739303 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.014654787 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.014833767 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015251848 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014407861 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.014757226 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.015551293 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015109083 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.014554008 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015342836 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.014483268 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.014597675 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015066569 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.019543075 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.034954903 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.014868039 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.014691168 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019212126 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.014889224 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.014671388 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.014648482 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.01509131 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.014673909 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.014512128 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.014963082 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.014597571 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015248549 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.014665672 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019297414 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.020820557 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.014659431 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.024803984 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.019634406 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.014624952 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.021187119 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.015570644 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.014557732 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.014516063 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.014493871 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.014804834 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.014783905 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025033393 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.014919817 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.015834828 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015204279 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.014841124 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.014531076 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.014601301 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016176309 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.020355174 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016021931 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.014670088 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016047205 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.014652529 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015406831 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.014829829 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.014642894 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.014634047 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.018635784 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016122013 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015438777 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.035755098 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016072317 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025150021 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.014806177 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015230328 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.018855471 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015322374 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.033768892 seconds)
  done (took 1.946692323 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.027254458 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025191728 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.033416729 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024369921 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018070411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015463812 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018476072 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015510907 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024720597 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019116663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015661634 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018736068 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024691822 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019167443 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016683417 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.024625874 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019174257 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018403808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.015617381 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019052892 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016674848 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018702499 seconds)
  done (took 1.171719079 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099463387 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020795565 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.062297609 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.024026042 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.022744651 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.024178202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021155764 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020995116 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021073713 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021543154 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021430458 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.02101215 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.022936729 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021453607 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021502424 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.021225297 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020989067 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.021279946 seconds)
  done (took 1.229816458 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.033105779 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.020652663 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.047385098 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.020333622 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.020453451 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.02007155 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023665818 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.023866141 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020285954 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.020637 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024200617 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020317313 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.020325517 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020697156 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020264867 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.020668291 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020301702 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020637878 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024213183 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024080733 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024159083 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024190703 seconds)
  done (took 1.234723287 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034426594 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.01991623 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.035680379 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.021213637 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015121039 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015017043 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.021255235 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.019852233 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.021042809 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.019408033 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.019945748 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015094443 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.022045832 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020113594 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.022260022 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020126459 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.01969057 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020100801 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.019667899 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015220446 seconds)
  done (took 1.136371471 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128654686 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017272196 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017025687 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021315395 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.016878861 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.016858691 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0213014 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.016952406 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.016961846 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.040476866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017034728 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017002283 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.021514602 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.019840362 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017022908 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021548588 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021556322 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021618101 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017082257 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017043978 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.040500355 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017270027 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.021954293 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017302807 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017281751 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017237324 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017244506 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020202352 seconds)
  done (took 1.393241365 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.037044077 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.01751669 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015319356 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019166443 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019162718 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.031173854 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019079395 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.018890018 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.01741182 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015300708 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017680247 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.017503978 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.017528726 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.027612429 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.017431785 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017473067 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.027545603 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019254163 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.031404538 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.031290168 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017623617 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.02746459 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017533757 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.01535236 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.031407152 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.01760691 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019574351 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020447662 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017815849 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015524092 seconds)
  done (took 1.360140335 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029220293 seconds)
    (2/2) benchmarking "in"...
    done (took 0.025891054 seconds)
  done (took 0.776970888 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018129779 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.032744945 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.014528985 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.027426664 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.023129155 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.018740655 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.023288701 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023047963 seconds)
  done (took 0.897288843 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.123608533 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.146733936 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.016561725 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.016694677 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.120788816 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082699995 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.131877804 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028511619 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030117624 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.01946345 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016703957 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.132761269 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016140077 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.029820174 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017730424 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026080687 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023732916 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034350429 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.02937419 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015654275 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029154337 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016990505 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016148482 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.01708711 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017296878 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023195191 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032214238 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.028785945 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024777533 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.014615917 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.03520418 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.015439858 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.01611628 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024668842 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.123729738 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.015721765 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.053090442 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.015636065 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020056508 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015330492 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027616186 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036601688 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.029882823 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.033748811 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.01696842 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017406165 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015399883 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.01716958 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.01959612 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.024754026 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.015638058 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.022971735 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015211919 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.016965669 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026154729 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.015617993 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.02031712 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.024790401 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029389244 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026098319 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.02791433 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031122916 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024384164 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.024110509 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016240039 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.035457163 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017176823 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.028888418 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030664251 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.016861853 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028895117 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015421443 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.014713905 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.015565063 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049668747 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017004374 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016472527 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.015661969 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.01578351 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.016998776 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025272076 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020433715 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023013698 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018694877 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031673827 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.024811681 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015415247 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023018129 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034054871 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019764236 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.015696884 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.032776757 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.019697731 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015429153 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.033752968 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026077432 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017204259 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016340445 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.019584091 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029291295 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.016935005 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.014730205 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024172654 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017166115 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.125885638 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.0210387 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024276854 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.015898306 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.02656524 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.02287126 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017614418 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015087253 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.020871906 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.016922497 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.01506612 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025721037 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016381768 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031614445 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023148716 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.030870241 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031310794 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.026863625 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032373177 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.015861849 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015072483 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.034862675 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025480865 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017301268 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.034780906 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.015962847 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026785807 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016083595 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017534006 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025491196 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015355886 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017843443 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016234223 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.022701076 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.017579535 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017741109 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.02226303 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.024618115 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028934574 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017374395 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025180943 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016529165 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032578528 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026116454 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021218562 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019807388 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.01704855 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028832321 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023304513 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025549291 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016094105 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017075524 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0162469 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027456861 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025962843 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018001895 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026405348 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021290543 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017053207 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016271793 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017285142 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020183205 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.019917943 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.016819679 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024103831 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025341116 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031066927 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024335546 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025430318 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.015616856 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016120836 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.01817503 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016208801 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021160233 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.02565016 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032362229 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028567739 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.03814684 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016526667 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026173074 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018104645 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.033884357 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.029830491 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017389837 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021623484 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015400076 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018233161 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.025893265 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028164662 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031091426 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031593999 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021422228 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021227386 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016242847 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031941923 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016731334 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024883066 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025782276 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023083683 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016157065 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018258063 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025612199 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021297486 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017451047 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032568947 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.024825917 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016274305 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.03104175 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.016605974 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027441784 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016202908 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020288633 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.021915253 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018542761 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.026241301 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032282338 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015505909 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016718935 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032603842 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018404926 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018329526 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024612844 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.032050014 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021441759 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024374682 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.027406406 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.02704583 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.170881693 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.026008052 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.016174578 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.024697782 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.018032415 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.027004456 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.015300089 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.0333146 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.014561035 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.030538316 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.015864667 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.026236913 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.015612008 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.024607604 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.015900536 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.032102714 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.01652801 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.015906122 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.026703941 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.014386674 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.024265877 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.01504032 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.020740124 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.022203336 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.024400732 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.016635727 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.024567 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.016588685 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.024239867 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.020301402 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.023829171 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.024363431 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.020128299 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.01493506 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.023457869 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025803587 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.023257549 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.016428927 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.01638506 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.015461203 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.024387202 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.016443399 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016000879 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.02323621 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020241292 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021283084 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016386047 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.016517287 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016409148 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.02351567 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024460994 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.032916552 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.023487855 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.022461232 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0241822 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.014930354 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.030513607 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.014967505 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.022510064 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.014322195 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.02130532 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024104075 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015221464 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033799194 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.016318204 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.022889367 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026831675 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023615538 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019258158 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.032631944 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.017832003 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.023322207 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.022921653 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020120307 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022194889 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.016477178 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.023434089 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0243997 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025392835 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.015635862 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.022465843 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023982358 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.016412789 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.022914292 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016384181 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023548132 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.016775326 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.014636354 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020282593 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026468926 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.02053004 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.020803372 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.015631195 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.01457817 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.01552376 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.022528798 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.020494332 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.023976131 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030838 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014634997 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016043674 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015220167 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019518665 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033678045 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025148752 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023337888 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020606398 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.014861236 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016809131 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.016971758 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015548016 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.01846618 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.014942193 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015403989 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026267945 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017038396 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020429458 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015740417 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016621989 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025566486 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.019827872 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0158698 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.022661275 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015280426 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.02111451 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.014937394 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.017232643 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020839846 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015379556 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.01969132 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.025986993 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.032266179 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.022682062 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024528373 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.016465666 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023491413 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031232755 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.0241028 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016497087 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.024936377 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015168885 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034550037 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.024882241 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024145462 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025342525 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016416379 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.033090282 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020956702 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.026135794 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031780296 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017031403 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.024904552 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.015949598 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.032121582 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021004625 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.015879262 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024783113 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024008301 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022396563 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.028098553 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016845389 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024747002 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.021466517 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020012179 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017838833 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017794057 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.024912044 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032526918 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.017012538 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.022190849 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024225485 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024543186 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.02104596 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028521342 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024286138 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017081435 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.017769348 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020045236 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.016737085 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028375731 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016320535 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021005037 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.020951325 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016315574 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023405816 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033140315 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.02571762 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025960461 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016537588 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015763366 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.034993082 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020308683 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019928949 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024460546 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026207877 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028837041 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025660423 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.033601111 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016706519 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022524077 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028741304 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017170672 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016007641 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020198359 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.017879648 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025487339 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026268201 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.0236629 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018164564 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023539471 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.029864646 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017726522 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021227866 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023234321 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017139173 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027001993 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024270531 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024880908 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.017862938 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016115315 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.019911017 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025125362 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.02369843 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025403859 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017139557 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.025568824 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030754867 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.023806805 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.019869415 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016065268 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019829354 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025429987 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.023314652 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0161653 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.02132826 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020159879 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.025882692 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025906242 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021271976 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016191792 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.033936445 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.025172824 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025558927 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018132457 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.018311198 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016670288 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016270202 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027987775 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016223649 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.018151895 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021502115 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018283004 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.035100627 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.02455116 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032610946 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017336927 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.02118075 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016237918 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026302668 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021317842 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016284998 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.026948765 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015707226 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032232219 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.02867217 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.024599379 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016275218 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.022030044 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.025336205 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0318255 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.026510968 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025388035 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.020116933 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026182591 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.168065862 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.026407025 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.015210663 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.014464656 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.025207827 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.023865596 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.027273601 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.015097428 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.025160148 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.016637997 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.023541019 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.02368074 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.016512446 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.016509864 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.016462856 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024529069 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.02017457 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.02431659 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.020357885 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.031910507 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.015863503 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.025978508 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.024170361 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.025828074 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029039146 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027023396 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.02349831 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.015453169 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.022551174 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.02345362 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.015912785 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.020650335 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.017898432 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.036612735 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.016444895 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.016470363 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.028882631 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.021783162 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.015102569 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.021490875 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.020162089 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.024944552 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.015737507 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.025372574 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.019613611 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.015775719 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.020196665 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.020138995 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.014311646 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.014882011 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.015186127 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.024482574 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.020018405 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.015088982 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033667895 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.016213104 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.023686372 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.025734754 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.022041136 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.016271011 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.014305246 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.015726751 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.028372956 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030341734 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.019094296 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023538876 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.016411028 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024110201 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.014367467 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.023689918 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.022994855 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023573343 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.014947068 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015233035 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.029841937 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.030329071 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020114217 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.031374717 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.023911847 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.016405128 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036513354 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024036508 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.015819777 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.025691856 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016890045 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.014570177 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.014503377 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.016563575 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.026725196 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015229669 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.01742423 seconds)
  done (took 14.986782573 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.058754985 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.01633921 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015034494 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.014976465 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021814427 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016070135 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.014835788 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016035375 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016014432 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017043098 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.014958227 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015032612 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020405542 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029840072 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022735333 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018677514 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015060627 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016293147 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015061671 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.01623217 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021002011 seconds)
  done (took 1.187028081 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.019491218 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.01950789 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.018816364 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.018967842 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018162809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015197525 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018516848 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015167351 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.018814439 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015486827 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019091395 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015319542 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.015615427 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.015600927 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015576258 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016683198 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019056785 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018307608 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015302536 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.01870865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016664197 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018674155 seconds)
  done (took 1.141877175 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.017791227 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.015750894 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.023780118 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.014598933 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.014553955 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017251715 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.014500048 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019371354 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019283094 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019386297 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023608916 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015348645 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.01448615 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.020734456 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.014420551 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015137413 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.058576057 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015508291 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.015527611 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.014802322 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.016996971 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.023857976 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.01481973 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.014997065 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019529653 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017515044 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.014827084 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017089931 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015289934 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.019544566 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.015524001 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.014626452 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.023721011 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.022919286 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.019557731 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019488325 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.015942998 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.015456402 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.014815832 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.014744457 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023070057 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016014233 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015037501 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.015963881 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023776061 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.014936027 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.014673495 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.023858655 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.014764375 seconds)
  done (took 1.658214989 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.02799917 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.067134684 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.020885378 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050349323 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.026443131 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020164739 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.020776996 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053255662 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016052856 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.01645613 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.027556814 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.027642451 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017534173 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.01878787 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022143397 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017564108 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.01810085 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.016862939 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.01970732 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017118684 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.019876771 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.02216419 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.02713429 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.027565546 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.018618535 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017042916 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017276819 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.018855955 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.02732371 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020518686 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019082246 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019547526 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.027662275 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.021285509 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017332032 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017504209 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028267773 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.017930622 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017832918 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.01629804 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017402995 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.018879856 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.022320087 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028460029 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017950158 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.022652226 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017825255 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.015989748 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028039185 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017796541 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.021318616 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.028703141 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018873917 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018181636 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019198802 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.027958856 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.017943292 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.016758341 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.01805602 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.027601592 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.01626672 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.01868237 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.02847902 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017441585 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020872496 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.028563702 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.022856079 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018830978 seconds)
  done (took 2.417447614 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.024582905 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.049831992 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.028586785 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.028580226 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.024202925 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.024236413 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.024348185 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.024496883 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.024362308 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.027135957 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.02452877 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162600766 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.02180845 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.026291182 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.024696605 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.024702272 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.024637094 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.024770237 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.024930783 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.024855616 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.024899404 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.029543483 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.024959568 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.029476879 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029547945 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.022116974 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.024996851 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.024941882 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.029808842 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.024950967 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.02934458 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.024934861 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.024952624 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.029675662 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.029306042 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.024766271 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015659663 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.024802386 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.024989632 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.024897194 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.021702014 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.029678274 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.025113604 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.021839602 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.025211256 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.025052142 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.030027044 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029707627 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.026920405 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.028088985 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.025326474 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.030166959 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025166331 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.025416399 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.030326865 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.033401596 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.030349164 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030420964 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.025462377 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.030282651 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.030355183 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.033455474 seconds)
  done (took 2.57248715 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030095501 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020706262 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.033287993 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.014778015 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014733817 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0235402 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014666851 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.014697538 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020573387 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020607628 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021986975 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023928814 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025692699 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022098026 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.023932389 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025700022 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023877977 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023818168 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020736254 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.023899389 seconds)
  done (took 1.223295014 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.018693979 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020328003 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.015655286 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.030922753 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015548125 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022704552 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.015460097 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015460868 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015464691 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015469181 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.01992875 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020055073 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015623736 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023460052 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019065904 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022972754 seconds)
  done (took 1.072094968 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.019964687 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.023949236 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124117146 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016086065 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.017869085 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015387702 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016142608 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015282461 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017507306 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.028861471 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016240578 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018313437 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016358999 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015007509 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.015704049 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018295565 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.017542103 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016357894 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016320472 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125123312 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.024436394 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.016904457 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.018482852 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017015868 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018206754 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.024487779 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.017820839 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018227738 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016390901 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018572132 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018188979 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.026960322 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018277657 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.016912804 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015178027 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016041115 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016495301 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018571617 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018577463 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016505016 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015328813 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018245727 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016526105 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.016836247 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.017695721 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.018560352 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.01768216 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.026225131 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016350433 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018259417 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016535838 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017644078 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.016908801 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.027322903 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018464973 seconds)
  done (took 1.986391018 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03404518 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.02043311 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.014756212 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.014648454 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.019967635 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.020516866 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.020039138 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.020080909 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020537353 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.014657898 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020503499 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019604407 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020549861 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020256651 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020769962 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020354503 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.01475738 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.020486973 seconds)
  done (took 1.132133096 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.023974713 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.02041988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.020545343 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.016562688 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.016552147 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020357824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015030642 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016139786 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016177738 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.016611921 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.01674534 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.01630474 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.01628031 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016315179 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020221641 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016660372 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016327402 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015353859 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.016722081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015126188 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.02073491 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0152616 seconds)
  done (took 1.151559976 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.186259931 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.145359537 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038633898 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.034463388 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.026402646 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.050845911 seconds)
  done (took 1.249851741 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.05071914 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.052161103 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020033548 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020092755 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024066747 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022397464 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022321882 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02247854 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025425961 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028294393 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022782966 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02601704 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025789782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027438451 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024338557 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024365329 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022837564 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022821539 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020201362 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029998219 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0228507 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026195889 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023149401 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022920679 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023141705 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027901019 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026202369 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028807379 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022997762 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026454605 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024713529 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023129758 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026372571 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02887358 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020387575 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02617039 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023118988 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030682714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024676361 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027833417 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020267683 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024793451 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026270386 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026000493 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026654799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023525863 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02623555 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023393947 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023467232 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.034799094 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025196118 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028145135 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025017663 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02682296 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026635841 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.034767273 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02944897 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028395787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025195799 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029595465 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029027462 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025490049 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028498842 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029784487 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025403236 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028646134 seconds)
  done (took 2.516265015 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.05878907 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020466046 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022612448 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027807134 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026696419 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022433324 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022659232 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022719337 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022780034 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020443845 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.058183459 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023010169 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027270964 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027407747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022881793 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022755397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022797166 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027270481 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020512989 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.033522345 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022966329 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027688134 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027774745 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027806493 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028855628 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024917205 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023162338 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023140654 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023040354 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023038392 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025958896 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023228668 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02782138 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020657997 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027745773 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02323995 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023043843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025962212 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023135273 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024800412 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027850228 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.030775268 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023106677 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023188476 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029221766 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023359482 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023299985 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020841721 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023291237 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020858065 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029130249 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144911344 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030037598 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028463831 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02355321 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023552679 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023427018 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023448563 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023612208 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025113271 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02827779 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023460474 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.035257998 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02380643 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024038684 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028808971 seconds)
  done (took 2.620845321 seconds)
done (took 51.272519005 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204253425 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176801162 seconds)
  done (took 1.138919402 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.135823105 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.133587275 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.161470783 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023530364 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.080810085 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174721627 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.150600286 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026102424 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.023849908 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025294169 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023469875 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.024938195 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025075012 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023258105 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.085714742 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.02594655 seconds)
  done (took 1.922505195 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.074417345 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.238323055 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.058555224 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022450517 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105019885 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.028680366 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024123518 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028156808 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028645758 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.022726989 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071191739 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.035622228 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.027232191 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028234617 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.023893258 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.027230265 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028111499 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028631881 seconds)
  done (took 1.677914778 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.084603146 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.033094412 seconds)
  done (took 0.894814363 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.114621518 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.06424819 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.102264407 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.307491791 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.094790824 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.098337461 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.105119501 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.097055874 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.06870247 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.094749716 seconds)
  done (took 1.917749817 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.06092682 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.057101127 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.284200393 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054671273 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034120161 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029241977 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.028941161 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.03075971 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.029368824 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.028902269 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074807223 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.027470202 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024251103 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.072163438 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.049972721 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.059717539 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.02344975 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.030001085 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032149064 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023215814 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.027988757 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.031010815 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132355441 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.030573222 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.052163901 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.027694685 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.029267283 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.028528826 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.028376824 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030451501 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.031017056 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.053932577 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.030362032 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.036902909 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.028565556 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.049766043 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024225478 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.051090546 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.026983136 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024315259 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027542166 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.031135365 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.024796858 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030593417 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.029754705 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.030095439 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.031469486 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023491292 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.029716066 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027365346 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024475377 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.028635926 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028443457 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.029521362 seconds)
  done (took 3.015733468 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.07921704 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.065950909 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023855526 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073555585 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064668004 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023894726 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079498764 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060137464 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078133093 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023490474 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023000996 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023007299 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030742 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.03477815 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076073418 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.069215023 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025150213 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023711816 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.068325698 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.068652239 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.022719856 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079938473 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07082149 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.068072685 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022648264 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024098817 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022737497 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023302959 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.03159339 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031291247 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023140038 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.033941447 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035100923 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030471777 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022416695 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022775066 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022695891 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031367852 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032882332 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.03267211 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.029698296 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022356406 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.02282367 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023295937 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023760207 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022287931 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032739591 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.030571601 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.032602387 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023200792 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023288281 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022678143 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023580846 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030314941 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029176068 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.030748485 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033755008 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023166171 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023017773 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024440701 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034815062 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031623068 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031432602 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.02404858 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032645934 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023047737 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033746248 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036728283 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023027856 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023485153 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023118889 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023082405 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023479812 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029817692 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.02991287 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023568025 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023377808 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022838099 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031683822 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030355864 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023008496 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032196575 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022534702 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023130483 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02349029 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023785237 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.033248088 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.031687145 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023659632 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023180078 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023224981 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023163614 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.022500813 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.033658784 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032239414 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.032561753 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.03455478 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024161132 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.035466753 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.032724285 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024175339 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.031768264 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023728069 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024056833 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023969459 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031632897 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.031193159 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.03289878 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023682112 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023356517 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.032531071 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034571674 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023565835 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031327445 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034017524 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.032111832 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023084877 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034519821 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02384189 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.035196249 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024267017 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034963828 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024120098 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032458022 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023996929 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023110057 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.02384766 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.035839554 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024659223 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023788009 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024248876 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023814148 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032431452 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.036788785 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024505545 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032916822 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032577725 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.02431974 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034881753 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024050097 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034855404 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023939497 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024257582 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023172205 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.037173089 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02378468 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024213827 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023956793 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034724471 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023872928 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034510645 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.031934636 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023408441 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.035868378 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.034191701 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.031812905 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.034798717 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024679232 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.02410198 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023739012 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023989436 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.035146647 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.036786224 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025204446 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024337256 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.031517452 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.035570727 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023439249 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.03183279 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.03160634 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.032170039 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.02406226 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.168556891 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.032883203 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.033486815 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.029218589 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.031718674 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.030105678 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022811418 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.028848091 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031840603 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022872956 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035802104 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02275754 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.032379725 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.031847626 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.028303885 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.03158608 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.032754489 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.031323782 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.031062319 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.033069809 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022328038 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.022585422 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.02894769 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022604195 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.022780572 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.028674706 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023191625 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023199914 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035414274 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0229673 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.0319693 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022301719 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.029616242 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022219348 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02315387 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033597304 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022627663 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023072625 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029127018 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.022638559 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.028717294 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031707817 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.02872586 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.022512748 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023039755 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.032248505 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.031489215 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022524996 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022470928 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023023753 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.031200595 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.030603638 seconds)
  done (took 7.781142335 seconds)
done (took 19.133006411 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.151779095 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.07119596 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.156591296 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.089975428 seconds)
  done (took 1.239599915 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.056027248 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019211388 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.138802555 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.150292049 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019401827 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.133096862 seconds)
  done (took 1.307589925 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.209978648 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.136616045 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.139786011 seconds)
  done (took 1.280358398 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.133195166 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.274063968 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.556716282 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.13405857 seconds)
  done (took 1.898861482 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.170772984 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.163083758 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.030732091 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17959252 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.037856008 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.015678431 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.102351515 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.022486457 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.05237251 seconds)
  done (took 1.628037391 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.095453702 seconds)
done (took 8.243109515 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.179606309 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.137114558 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.032766748 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.026598976 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.131261882 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.129189154 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.13836684 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.028947664 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.129391742 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.296370706 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.160448165 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.047586716 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.159125034 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.042896688 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.255768015 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030801528 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.028489735 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024044574 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.144044584 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.127033876 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.236957082 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.027683838 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.092417782 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.02975593 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.103878404 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.077780344 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.167331052 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.287610227 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.270736175 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030201471 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.126416279 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.042482513 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.119662666 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.130955663 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.132564232 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.048324389 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.01982534 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.239956906 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.111153041 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.302738222 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.151403692 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.026360011 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.14185479 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.024497276 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019056404 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.141103345 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.032921112 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.02558665 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043713877 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.026167085 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.041576393 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.026296928 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.140774787 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.023262431 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.092194925 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.138245412 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.163576394 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.098844055 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.025384533 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.038713226 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029077035 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.152623191 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.038504013 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.02519053 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.031763058 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.019775074 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.136253961 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039108299 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020178871 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030084099 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.028019591 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.113261726 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.155107103 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.064494509 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031692804 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.11838386 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.09543726 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.048027859 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.048655542 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029336871 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.019355604 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.167734336 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.02510077 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038071277 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.025956154 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052731138 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.019639866 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.035175736 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.156640156 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.151004428 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.086812188 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.020692883 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.233977655 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022035613 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.20249163 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.020671353 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.019613486 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.162451578 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.019298262 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.019471866 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.028850936 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.027675744 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.021032635 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.149162579 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.102053483 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.026963982 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.025623432 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.019647906 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.024674151 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.020325434 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.019637887 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.019473675 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.093391811 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.034598312 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.018688235 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.106119419 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.124478757 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.030127681 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.037129819 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.083286066 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.022253464 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.027706208 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.026077253 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.122018716 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.027057958 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.131408887 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.020564301 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.04154029 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.116994481 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.092557494 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.105145981 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.01918539 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.152662604 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029192533 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.018764065 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.02602075 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.046705456 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.028467435 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.034610678 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.02717375 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.153064442 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.029713513 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.024504248 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.116633008 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.018586327 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.109851039 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.09302822 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.12621126 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.024111058 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.029301281 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.091375407 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.042495578 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.047641709 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.041700949 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.02337649 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.019442819 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019137504 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.033885353 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.018460438 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019273204 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.033437007 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.025433689 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.019078757 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.237142783 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029184691 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.02357376 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.258535606 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.031435794 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.09868715 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.041267157 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.019854087 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.104199521 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021524728 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.039882962 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.081008696 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020030945 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.094913676 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020033418 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.019676258 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.026996782 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021266911 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.028357325 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.032857606 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020172259 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033612069 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.02712124 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.019728634 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.10391673 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.021406985 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.167182831 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.103219717 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.115341158 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020089472 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.037844886 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.019462776 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.13280858 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.019960796 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.067552512 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.114580315 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.036209457 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.039756746 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.020839004 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.093215562 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.03480247 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.019415218 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.100177495 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.127544719 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.09849228 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.027070058 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.241543522 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.028642498 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020226973 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.02680811 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.027796958 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.02036653 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.095223324 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024080161 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019082006 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019391285 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021261089 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.018704278 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.045203378 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.018909505 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.027040376 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.019416737 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.022396574 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.021641105 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019055209 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.027458827 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.095908845 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.128997026 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.025514597 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.039502087 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.032388007 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.030831733 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.066721726 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.02636198 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.140867725 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019184035 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.029039255 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.041888548 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.01940779 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.024526576 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.019813497 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.039095274 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023063015 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021546392 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.028271034 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020127652 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020260196 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.019908412 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020104693 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028448923 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021875663 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019552487 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019473082 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.019951623 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.024368863 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.024971454 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.030488507 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.039983697 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.456815731 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.022171085 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022158081 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.020140717 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.020023946 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.02031409 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021576675 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.019917092 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.021834858 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020162038 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019483939 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.049124726 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.024976304 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020848323 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.042570847 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.020036854 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029380461 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.128275617 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036822888 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.024916397 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019365366 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.268351591 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.110707999 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.043121962 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.041223089 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.18285561 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.035211024 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020204306 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020040004 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.018918309 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046535924 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.02407835 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020011059 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.018876701 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.01908753 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.06628417 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.027334529 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019033163 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.0274553 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.019279704 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.019479278 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046784304 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020345421 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.019211697 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.038326696 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.031896733 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.096083827 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.030582482 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.022091482 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.068886073 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.018551693 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.019157458 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.019593389 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.110415395 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.031709079 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.020359491 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.019146355 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.026294934 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.027727776 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.070222053 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.024843881 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.022027679 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.026886974 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.018365792 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.019530894 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.043834871 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.046911249 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.020176241 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.022683269 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.019036175 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.019547866 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.09185925 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.026688849 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.023529572 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.10119993 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.021029144 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.026777698 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.018373316 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.4492803 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.023709689 seconds)
  done (took 21.821297472 seconds)
done (took 22.63123033 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162509898 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.033541663 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.032541003 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.027980989 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.031863258 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.03190575 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.033031733 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.028740343 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.031747294 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.031096413 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.139758714 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.019080372 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.026687393 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034471554 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.027927171 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.035148932 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.031638643 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.034495812 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.019917295 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.034772161 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.029847312 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.03768369 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028105427 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.034154672 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.019860368 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.027928536 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.154098321 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.038146536 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.023215336 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029835847 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027362624 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.033303386 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027199464 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.026842206 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.028939965 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.024791662 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.030138585 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.025987604 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.155018384 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025000282 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.019973012 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.032249487 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.026544195 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027326827 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028085273 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.031361121 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.024685156 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.033131738 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.019210882 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.032349258 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.154816436 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.024192753 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.023015538 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028114085 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.024807358 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.028869932 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.022722042 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.031397771 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.024709143 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.031671831 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.027511908 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027349536 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019357693 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.027970843 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.026673248 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.026951949 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.018428551 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024109778 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019401045 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.01935884 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.018706605 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028010625 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026272478 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.02434051 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.018859175 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019457377 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.018940776 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.03178366 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026603318 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028239279 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.019781852 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.024772671 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.02438197 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.019915931 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024233868 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031209537 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.018883395 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.019943136 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.018907166 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.030994237 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.02601878 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019423692 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031296786 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024119586 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.023799248 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019448566 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.018909385 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024141092 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027489659 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.01956879 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.018509457 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024144747 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024611152 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028170533 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.019846828 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024000077 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.023833086 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.018551156 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.02813602 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026657564 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.02842665 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.032272795 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028204359 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.030678891 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.019873687 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018434469 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029151353 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019715222 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024147379 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027334982 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.024620405 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027315481 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.019894478 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.018793456 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.023989553 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025318936 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.019702989 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.019853718 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.019711058 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028322595 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026692108 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.01854629 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019425217 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028521489 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028256722 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.019016535 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.018856697 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028166341 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.019966885 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025455505 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.024752056 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028430566 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.019270209 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.019873133 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.018887155 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.019187267 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.018846985 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.024772878 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024304855 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020020485 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028243339 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.026765987 seconds)
done (took 5.443033562 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.034733252 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.06292373 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.174073315 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.13754813 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.032940405 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.020672816 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.024359304 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.039927995 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.023171434 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.045025573 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.044718132 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.041348197 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.161128334 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.018664621 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.019719539 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.020562267 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.018146629 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.031945653 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143380958 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.043595308 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.062278111 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.01944691 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.036218261 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.039801082 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.032833825 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.038871826 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.021131313 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.020677109 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.022653945 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.037499278 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.045820276 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.019619649 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020896096 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.039313285 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.03602529 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.028790943 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020622906 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.026781561 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.020644619 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.019795896 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.021803188 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.03822592 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.026951699 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027205531 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.020968483 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.020413793 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.020241959 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.02787298 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.034198641 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026256598 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.032762735 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.037032433 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.021927923 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.020301462 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.018584207 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.027662825 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.020204153 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020349972 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.02060461 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.019513795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020581584 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.022660827 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.025814963 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.030520507 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.023992931 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.027542947 seconds)
  done (took 3.272877994 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.03923541 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.048425405 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.033793517 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.034117621 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019349217 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.019931287 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.019986281 seconds)
  done (took 1.117993927 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067490472 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135419709 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.142386608 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143238011 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.154540127 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.141286764 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.032764787 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.049560807 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.019449667 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.155365438 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.151579342 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1465825 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024092655 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.03272056 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.052743754 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.149714932 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033109556 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.027227641 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141692147 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.147319238 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025055168 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.050721614 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.032007361 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.021152485 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.145109261 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138209048 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.023807645 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.021205563 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022978626 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.020288143 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020247644 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.043317947 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137929959 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.035615198 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021375276 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019426572 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135971447 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021639634 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.138398285 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028024433 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.138723764 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.022818455 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.022903921 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.02055282 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.021687146 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.142019917 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.021724953 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020489353 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020109145 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140189008 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.019996049 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.138806136 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.023295633 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.025787252 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.027496884 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026992299 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.027315765 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.020911403 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142178973 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.030350143 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022188459 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.150225546 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149893063 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139413937 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149855002 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.029569845 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140103827 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.138832456 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.020480597 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.028388082 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.020946156 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.151335815 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.024316465 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023152426 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.025886359 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.027863734 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.157561813 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.158422215 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.158723524 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035473713 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023657408 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.021030547 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.155850865 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.158571216 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026665166 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020954249 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021897899 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037146435 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.046154685 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.02294381 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.025714837 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.020928162 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.031094099 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023407099 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023471828 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152458963 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.021624834 seconds)
  done (took 7.580291544 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.028652608 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.022879267 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021523437 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021495916 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021734891 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021417803 seconds)
  done (took 1.139078697 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.048090637 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.021569315 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.033275787 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.02125608 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.043117201 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.139424443 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.139285065 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022657316 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.037112376 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.032946995 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13987224 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143872338 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142720561 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.022451792 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.140755722 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.032725395 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.14196233 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026189942 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032034716 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022591843 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.034790667 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022152542 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022459523 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.150260759 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.023409839 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.032352841 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.030388261 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.032235072 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.031810097 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022470244 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022107163 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.02302381 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.028089843 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022573765 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143129018 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.028449188 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.021682276 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.025261655 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.023319713 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.023042409 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.147019224 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022894569 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026226421 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.025281531 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022611374 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028207433 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.025342264 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.02530146 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144025023 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.025552633 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.02526086 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022017645 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.023122799 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.025110297 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028170098 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022561413 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.025281121 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144344508 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.022756524 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028708965 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.021910922 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.023265135 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022673377 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.023148639 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026590558 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.025248753 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028423927 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022859015 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022746268 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.02176704 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.025537773 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.021821719 seconds)
  done (took 4.209144439 seconds)
done (took 18.228912014 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.505315175 seconds)
  done (took 1.416296089 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.017781102 seconds)
  done (took 1.961970082 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.052105169 seconds)
  done (took 0.991605441 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.288878873 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.39026366 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728010488 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.091163047 seconds)
  done (took 2.421288775 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.845083898 seconds)
  done (took 1.79301713 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.218059294 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.180470185 seconds)
  done (took 1.373543574 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.493898049 seconds)
  done (took 1.430738884 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.31315588 seconds)
  done (took 2.25738893 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.188733688 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.129178029 seconds)
  done (took 1.259607112 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.592531714 seconds)
  done (took 1.531656974 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.546824026 seconds)
  done (took 5.489579504 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.19167822 seconds)
  done (took 1.195227717 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.194172115 seconds)
  done (took 1.139488181 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.701119158 seconds)
  done (took 1.643310622 seconds)
done (took 26.854541953 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043083745 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.038912783 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.038821772 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.03406652 seconds)
  done (took 1.088431483 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030095872 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.024193065 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.026503204 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.026986782 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.024446635 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026156795 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.026597003 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.022859865 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.024278961 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.023463283 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.021793217 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.02337916 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.025849475 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.022966707 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.025521315 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.026848896 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.023512205 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.023896487 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.025448942 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.022990207 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026005195 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.023417361 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.023431629 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.024921583 seconds)
  done (took 1.541358351 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.033604931 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.025643844 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.028509245 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.02426393 seconds)
  done (took 1.059649055 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.032167626 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.030025439 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.038352213 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.043116048 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.029374959 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.030110703 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.036604037 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.036800329 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.042969594 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.039532047 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021116291 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.020842946 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020113467 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.038846007 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.036096206 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.015646659 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017110786 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.03032241 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.029521489 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.032381854 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023145402 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.018818042 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.029913906 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.030763975 seconds)
  done (took 1.669004053 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.037355034 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019030215 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.035174589 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.043982726 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.045136233 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.018832381 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.032329498 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045020614 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.081125151 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.018858385 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.024692829 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.018729012 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.057232688 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.018813947 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.033886141 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.063690376 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.066448825 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.022754699 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.051553368 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.018896629 seconds)
  done (took 1.706626967 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028025317 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.023392253 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.023719658 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019046028 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.029869941 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026227788 seconds)
  done (took 1.104408731 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.023924626 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021903386 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.02082633 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025815927 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021496455 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021474696 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.020714361 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.019533101 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019515595 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020247539 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.021043993 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.020704578 seconds)
  done (took 1.206860065 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.168388587 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.025999154 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.023776298 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019561213 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021157359 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020239875 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.034558292 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022138593 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.037153522 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020232572 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.02030823 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.022356556 seconds)
  done (took 1.38534899 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060612343 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06481327 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098386349 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069202936 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.068427159 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049123009 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.195631575 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.03211166 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.117930588 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091547298 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070325975 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045060235 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039776165 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.02304824 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054263113 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073516693 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091964239 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.026504629 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.068003839 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.238059725 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088960248 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.09141116 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103881964 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071698756 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047165839 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103658086 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050535995 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058375959 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.077775441 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083462836 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074664119 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.052873812 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.024913941 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.024516456 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106538534 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.062729205 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075814807 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.047067614 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059813645 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042770772 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063254932 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.02322988 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.035842749 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.06615542 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040673774 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089476112 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.047736269 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071841195 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035972701 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098573155 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087523211 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.175263464 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042162059 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062931507 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101332957 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074570446 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099921686 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.064979026 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039463474 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.230390533 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.058847934 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053613859 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061193843 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033514656 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130651301 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042437262 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.065286369 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064001263 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.048988114 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049010291 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05985762 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089037913 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078770425 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.078901067 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090442384 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.044930709 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072638026 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.05337197 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.081476325 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056829691 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026108244 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.076263801 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083067637 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.053887612 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.054925909 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085223709 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.046683725 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029632397 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.055504806 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.074363339 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034040703 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.069710584 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035565874 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.064938845 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094828731 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053388019 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066391594 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.073293886 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032058134 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113273221 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063661969 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026792009 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072452483 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068949288 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114844228 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051809974 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.03025695 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.056672824 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059971904 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.112310808 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068440749 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035186472 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068480051 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103366364 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051688679 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.258871419 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053225401 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105803731 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073249742 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.042673248 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.030371366 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.04635038 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.223097427 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06105636 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064901992 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047402785 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.037112817 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.039928483 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067236465 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.04612346 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.033993741 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.06672399 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.055654096 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.02798354 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041093257 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.029756978 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093637638 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.031460538 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.087744707 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078011148 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.028428797 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059596189 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.048045275 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058664353 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.0503894 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070050505 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091644745 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.136968835 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043538175 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.047530121 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060646001 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098204451 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081921105 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.046386796 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.03106842 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055580904 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066473554 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.052653935 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.079993904 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.048214544 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063007649 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058269255 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098915307 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102475415 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054298621 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056267685 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065266449 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.078564433 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.028911632 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114852779 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060269407 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074476149 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041378934 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100118978 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.066320755 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045313811 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.041696058 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055288802 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.062221864 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064216756 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105311461 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.052104313 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.027225018 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052026544 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108907166 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033581205 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07036684 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.047459815 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.049151593 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078918958 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.054398993 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.037918041 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022891177 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.247459945 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111403173 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.023411034 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.065223245 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.060128546 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055200574 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.073805672 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.022711428 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.070752705 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.088805055 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068937232 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092670491 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11777375 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069535494 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.070864464 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.066452641 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.058353622 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032293298 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.078022092 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087481646 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048806535 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04469985 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088010509 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072326758 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.091823707 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.073847017 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074522092 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.061437983 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061893465 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059527204 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.061054535 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103191592 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077863461 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.081365397 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037621062 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06161772 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073124643 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093527562 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036091047 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10006316 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.040398315 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.076771615 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.032919326 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.080882123 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030235321 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.124687724 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034066208 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057433057 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.023822982 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.0291547 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.102108172 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.070798099 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.067235904 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061157455 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.101005418 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098161804 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.032120354 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066262737 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074147017 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.059507301 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.229425496 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.062657811 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042578059 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04819762 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.060030589 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.038315138 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.034485227 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069258929 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046831701 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078179555 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.037217637 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028197783 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091786129 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057320814 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.047703691 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029468468 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059468798 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.078256175 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.045988167 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.039792568 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.067715505 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057759483 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093997604 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.04367854 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.050558716 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077437258 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033263202 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.045313052 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.022723878 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.038587747 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.029245291 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081988927 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.02908951 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.070229522 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.022306422 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086218255 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042396923 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.04727421 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057132351 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065924929 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083309058 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.048982731 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098220118 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044734161 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.076897659 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063734226 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049381203 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.041679396 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.057896267 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055488326 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078695879 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.05091366 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079703851 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101789688 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058502401 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.099330538 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0456868 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.078272307 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062498968 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.080879347 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.068918241 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129537331 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102459138 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071621882 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.068616706 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030214337 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053551504 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065065369 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073063696 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.298607898 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079531752 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.02589175 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.057564816 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047159495 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.061766555 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057009349 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035411359 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096857942 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055703937 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041036583 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064572378 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.043659145 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057464676 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029176109 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.052840739 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.056232442 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047601604 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.04992604 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066396622 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081007722 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065093835 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.095857936 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.055315484 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.045143545 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.071547857 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063241662 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061986056 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038667493 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039283536 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091859013 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072395168 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.079957954 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.054572019 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063538532 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.065495904 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055073045 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.081991072 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063434948 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.084994455 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034442328 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.031101747 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022037309 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.025918224 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080579719 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063015555 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066833262 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054046565 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026224909 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059069818 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059239257 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026045528 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042651925 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050249123 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.052875401 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.047609564 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063708653 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.065790496 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.05114904 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.059935876 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05268016 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107098962 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.056901766 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04561768 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105654746 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115182931 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045561985 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051433623 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025934348 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034090241 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073500221 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11526488 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.26072587 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.031901666 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040420272 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.039201521 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039792906 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.024996288 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.042005055 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.042785566 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058748631 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051403719 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.066603031 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057702469 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028733641 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055640207 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051740231 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.045472677 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.059843217 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072182666 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.078347304 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.093594688 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066228343 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059456022 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029291039 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.033351443 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.028951841 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032588799 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.054192833 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.031994725 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.02937085 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096029365 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.044639542 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058380185 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061788718 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041346213 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029054499 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089601115 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023037493 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090730491 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.024761883 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036210698 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.035947228 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032876169 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048798196 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095370379 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06480153 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.067695498 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062258192 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060074896 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118164449 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116447081 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036691524 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.098662726 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030010625 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.030748772 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029970417 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067073498 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045217228 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.069183491 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099744946 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045228105 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057479249 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032450398 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102550964 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.059089383 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060546961 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041789412 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033863012 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106734799 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03450935 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.040141032 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.04613968 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.069873364 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.02729273 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.059773782 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038745698 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034978276 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.272938525 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.660349395 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044414892 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.029109373 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049024526 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.09340018 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084044638 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048830693 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060957286 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.071867786 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.0531315 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.046509051 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060477511 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.145146101 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027321223 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047396951 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.056579544 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050383642 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054453529 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.051475523 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.039963661 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.04527704 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.03986774 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.032313826 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06014014 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041188214 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049660906 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.060372998 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.036024491 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.041158977 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084619998 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.057252888 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.036630077 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042077865 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.057167665 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041637578 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057499183 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.023099884 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066580301 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.042708913 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074397071 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.054531736 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.06351055 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082047993 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048846795 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094936262 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.064079866 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079028997 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042014471 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032659649 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0836467 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.044973458 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031859028 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104307381 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.053840757 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.058055179 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059585282 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.050979151 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06904528 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07665527 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070409137 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053461153 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033731501 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06057234 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.062181363 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044108518 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035218715 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.029750152 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.030785032 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066031653 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044550197 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041392744 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071681833 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.046703849 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.211669071 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.056966709 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075904711 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.040905565 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054953654 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064353255 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044886799 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062878015 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054160488 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.328452552 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127397134 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.076891373 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081759594 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086813444 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.031093219 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.02867268 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.022089281 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066376933 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.032640365 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.04215808 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032043869 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086692478 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.036901149 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064333736 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.197869882 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.033829682 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.047358143 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.04904447 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.022994041 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.036305883 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060796488 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040367486 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033485538 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072162016 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.034978288 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083677092 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066107948 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054194431 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.049774521 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034877928 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069373169 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.057399112 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.084960308 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.049304917 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.029284424 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.080097837 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058842178 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096566828 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.026976707 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03511694 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086878862 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059547378 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089263917 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034441403 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109511761 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.099408764 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.055521589 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093113746 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.02500306 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042192148 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045447912 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.083437807 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040685675 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070565163 seconds)
  done (took 40.529404254 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.138536297 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.130933706 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.075888191 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.088505102 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.244218923 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.252550401 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.105755598 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.077465686 seconds)
  done (took 2.217345455 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.027766145 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.037173128 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.034634104 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.283439667 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.056949718 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021025772 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.025666829 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.035187702 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.024354453 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020340025 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.058415489 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.0205814 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.024470897 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.434807826 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.019964942 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025624828 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.024657538 seconds)
  done (took 2.279269208 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.306008128 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.581802873 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.334893849 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.4301988 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.119675198 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.680686068 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029399924 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.036454091 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.761896719 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.355068804 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.113332366 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.180743477 seconds)
  done (took 19.996419322 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.030847261 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.153050422 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.151763491 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.027478866 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027025825 seconds)
  done (took 1.459344129 seconds)
done (took 78.2618651 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040052153 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.123045453 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.020294059 seconds)
  done (took 1.241767576 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.157291953 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.151416472 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.151138456 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.153512248 seconds)
  done (took 1.678010756 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030004842 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.029548481 seconds)
  done (took 1.129726213 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.183809139 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.245608654 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.043641664 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.03872971 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.033752125 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.033791379 seconds)
  done (took 1.178697492 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.026599503 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.024404748 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024542259 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.024757478 seconds)
  done (took 1.163047037 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.13336347 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019203083 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.021720058 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023398033 seconds)
  done (took 1.261051372 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.040312143 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.039689653 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.068514101 seconds)
  done (took 1.216675839 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039041767 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038171469 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.032464697 seconds)
  done (took 1.178701736 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.064669708 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.049530044 seconds)
  done (took 1.18024072 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.035152373 seconds)
  done (took 1.102455743 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.047634589 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.050811884 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.216790208 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.182351262 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.220296117 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.204424511 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.029919583 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.030378846 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.026082107 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.025032246 seconds)
  done (took 2.098902378 seconds)
done (took 16.009639152 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.035288487 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.142511204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.39317239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040047629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.608062338 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389657478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.678172231 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044591632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.052667662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021350417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037977192 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.585890439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.680908284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.100778959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.668540536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.09140021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.515879444 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.02215015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.020930372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021521909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.668482847 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021384444 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021449634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.021807407 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.51292858 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.286820117 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022454904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.093032015 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021835434 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025334896 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.268953924 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022241395 seconds)
  done (took 12.197504236 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.025732506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.075658779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026385915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.036955351 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023319475 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023281134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.025147129 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.021872336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.063752537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021502112 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038383447 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.02087936 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.025765855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022405167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041416372 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021289077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023478981 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.021947556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021267146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021985599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.039946002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.02101129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021799042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.021848484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.021512981 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.035721508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022423859 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021312295 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021515298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025350276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.026568138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022773597 seconds)
  done (took 1.983341248 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078008072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.07831168 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027054992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.061738839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073440929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023992984 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104237233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043720091 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.066654928 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021711224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038416022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021433785 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.0575895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022902975 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.04175205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021684089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023845113 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.021991168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021241462 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021884021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040129598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021282651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021878528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022079171 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.021931242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037640976 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022532611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021593443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021370706 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025473988 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027314842 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022576211 seconds)
  done (took 2.256501017 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.024797467 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.024888788 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.030785908 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.033681939 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.019870325 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.021948021 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.022979756 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.019866034 seconds)
  done (took 1.283643475 seconds)
done (took 18.804187681 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035123171 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.021887097 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.024691193 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.04121844 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.027801995 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.142601811 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.018867343 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.02848982 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.02496027 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025204985 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.026514262 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.020066074 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.023624595 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.018559525 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.025394998 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.019753359 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.144802736 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.023983582 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.142563952 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.143676078 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.022238533 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.025255813 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.028365255 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.142628179 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.142716823 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.142727132 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.028755154 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.025642327 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.020102881 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.022757177 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.14076026 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.143351183 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.022804515 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.139022206 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020166718 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.019943996 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.024125328 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.021666065 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.147267759 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.028967301 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022234697 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.028599954 seconds)
  done (took 3.404734647 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.146585487 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.152330997 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.144610102 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.031858229 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.028335339 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.031551752 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.150589182 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.0287885 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.027266714 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.150005442 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.02319781 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.027365642 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.029766903 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.020530857 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027296744 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.023664621 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.028952222 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.021592442 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027251504 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.027319897 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.15020742 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.020864355 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.028044371 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.028759449 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.022970287 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.028823304 seconds)
  done (took 2.527489658 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.029980305 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.042833236 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045715419 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.098752073 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.062893292 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.035897998 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.03612017 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.046677031 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.054117075 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.02106891 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.042556908 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.048128823 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049042939 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.02767532 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060042186 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.039235012 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.033436372 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022601134 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027626826 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.055071888 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.043537446 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.039671322 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.053732904 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.040852157 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020076061 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030140001 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.0282324 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037068142 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.028287813 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.032974133 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.024787808 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.024328558 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.021653429 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032178847 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.024615682 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019021093 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.043501594 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.033361223 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.035597974 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060017966 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.03090601 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.02244366 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048136178 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.086015681 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020621862 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.023479007 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025156977 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.033429002 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022402009 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.051261401 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036493139 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020789654 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040048279 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022320028 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.02228803 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.036381373 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.022546731 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.02306756 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.032548535 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.026909523 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.042038745 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026113997 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.041245067 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020730354 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032006573 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022363399 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.022602952 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.01970998 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.055329293 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028288987 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.070196189 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022099924 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019172598 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033062611 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.032185287 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028204216 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020729319 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.039661352 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033273806 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.024864384 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.031791203 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.023807145 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024172691 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.05745016 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020071169 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019154592 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019142519 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.023345968 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024194737 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.021583722 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.033292841 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020451118 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.024201278 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.035121683 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.020880363 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.021553173 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.023346334 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022156256 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020415634 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.03070895 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024544337 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.022603458 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.033551492 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022002686 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024164387 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.035695562 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.029995136 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020431637 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.02200422 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.023123437 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.022604669 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.02529492 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.02420814 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.022730476 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.025827091 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028442412 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.02702638 seconds)
  done (took 4.885636489 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237328662 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225791375 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.021826531 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.222259162 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.029497776 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.156017696 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.229280579 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.225457717 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.021690585 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.022434601 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.020754344 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.169571434 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.164098408 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.176273658 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.157794028 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.023753722 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.04857591 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.176403126 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.230938033 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.226077642 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.047185882 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.028570367 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.023740748 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.022806346 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022185393 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030368855 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.037531419 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030086745 seconds)
  done (took 4.136280098 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.029924102 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065587062 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.024919806 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.045681853 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.038034949 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.021459535 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.02318285 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022517667 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.037922694 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.026704096 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.021162895 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.025348831 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.024734975 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.023396643 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022206402 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.027773085 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.027692934 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.028469168 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.024866744 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.025766967 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.031956057 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.045256273 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.025400509 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021425401 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.024683886 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.02135413 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.026618161 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.029803992 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021228388 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021255097 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.01849939 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.025745646 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.035709715 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.022495755 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021241683 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.0219632 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.021675623 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.021497245 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.021761178 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.019752052 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.019659757 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.026536343 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020198455 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026159982 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035373242 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.023466228 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.022841248 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.023956027 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.023744538 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.018310769 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025062305 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.024758608 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.023965703 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.029674101 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.025116332 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.023775493 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.022802979 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.035330913 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.026904081 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.020778854 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.020497771 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.01979612 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0229735 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.027815747 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038178507 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.023042488 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.019847081 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.021541772 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023006497 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035474483 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.020854743 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.026927487 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.018520031 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.021520986 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.023767571 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024474602 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.022915999 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020002636 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021331226 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021763776 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.021493039 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021395466 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.020871855 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024152687 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.019443894 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.019971023 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022159815 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.023035208 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.026791066 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.020322549 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.024226427 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.022897218 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.02035115 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024054985 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.026584073 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.024310653 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.041368972 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.02919665 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.022097476 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.019447541 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.036120367 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.023261151 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.020804906 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.023287983 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.025928402 seconds)
  done (took 3.790776404 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.05090329 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.023682856 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041249226 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.052539581 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.031444886 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.027133963 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035181068 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.02271207 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.042264253 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.020702473 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.030563467 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.019954103 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.034190862 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.030120711 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023349569 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.031231814 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.024214823 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.041678604 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.03592377 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020277831 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030075987 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.03346425 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.033844137 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039033915 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.038555358 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.039660777 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.033680361 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.024304682 seconds)
  done (took 2.023992536 seconds)
done (took 21.844886031 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.141317537 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.341007012 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.111829712 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.793101566 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.192442984 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.258690842 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.19111176 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.09169339 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.824282374 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.197167712 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.865347341 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.01121975 seconds)
done (took 59.191263792 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.149616638 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.266193643 seconds)
    (2/2) benchmarking "String"...
    done (took 1.352703555 seconds)
  done (took 3.767209429 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.540325019 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.102965682 seconds)
    (3/3) benchmarking "different"...
    done (took 1.139699884 seconds)
  done (took 4.894185852 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.442483198 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.637335093 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.390195853 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.0913029 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.104326654 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.748329655 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.276781669 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.761294794 seconds)
  done (took 27.13170563 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.099256826 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.42953752 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.4540009 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.570978176 seconds)
  done (took 17.756578367 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.547894116 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.520960459 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.519693318 seconds)
    (4/4) benchmarking "different"...
    done (took 1.812034337 seconds)
  done (took 7.640885815 seconds)
done (took 70.885332341 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.089863782 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.395562468 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.139551192 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.28597401 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.169559859 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.195541547 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.12697836 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.112724011 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.102647646 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.102699605 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.101884696 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.100005945 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.105336951 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.148526598 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.106811596 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.143668507 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.38652857 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.104896374 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.150317774 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.96575032 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.425551556 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.098661643 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.104367004 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.175294285 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.533923319 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.136225436 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.54106205 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.114688804 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.698529379 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.10422817 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.108623052 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.102889504 seconds)
  done (took 182.291378749 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.090763062 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.902859356 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.901259208 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.10189422 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.485613685 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.452925952 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.946395396 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.501974332 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.101369743 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.103773152 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.16922543 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.098347673 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.139838351 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.675223895 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.13868429 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.134014619 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.007860366 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.942974225 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.148249186 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.034665913 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.10434895 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.567172704 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.543705144 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.942206757 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.104535077 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.143799481 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.109806916 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.128046478 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.602752166 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.956579103 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.115660779 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.112328597 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.29179817 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.338096023 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.099126745 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.103509705 seconds)
  done (took 152.463552346 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.36051975 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.099305697 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.132691416 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.208959369 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.024412351 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.905786495 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.101171501 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.089476073 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.08954855 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.097499055 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.091547168 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.160444087 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.100029744 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.129276568 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.128559648 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.093136562 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.089880038 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.112789726 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.109412888 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.089623713 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.090024964 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.191632013 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.443888501 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.202825894 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.099386103 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.099097354 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.199749884 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.108479109 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.090600883 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.09226159 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.201276562 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.100166249 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.217885432 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.208940791 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.106402937 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.146574121 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.108599535 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.28531382 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.101725824 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.089864799 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.092212801 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.135417023 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.103823663 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.130361052 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.202040897 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.104032166 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.10819106 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.543481565 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.68576433 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.102602236 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.090122482 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.089261825 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.092987993 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.090569849 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.562939944 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.104858631 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.123348435 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.579899029 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.108162807 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.0902655 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.089899772 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.089766399 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.089824641 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.096152435 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.126775057 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.670492182 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.828672676 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.455117865 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.802332746 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.100358868 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.090698522 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.088682477 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.753771091 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.161650233 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.093477538 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.089506632 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.265567697 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.101533758 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.089470965 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.010186775 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.013001748 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.100097535 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.199768234 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.100715483 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.090700985 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.562911502 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.137711723 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.108353739 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.109578288 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.147086747 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.093144565 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.089547597 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.096963099 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.013426195 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.101957897 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.1023083 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.391797381 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.10093327 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.09001072 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.145151801 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.461876319 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.100081944 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.171752677 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.499756182 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.978330395 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.100435164 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.091227701 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.108059194 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.093226262 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.101996237 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.101809761 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.093175279 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.092033795 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.094562201 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.092735294 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.093140573 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.090215804 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.109121933 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.091161582 seconds)
  done (took 324.779900124 seconds)
done (took 662.127239744 seconds)
(4/20) benchmarking "parallel"...
done (took 1.090088726 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.350319711 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.245944933 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.222041925 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.347780069 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.303026374 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.27669084 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.305328844 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.395188714 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.330610131 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.26898621 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.328043267 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.278706685 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.391906476 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.356875161 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.394404861 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.36141292 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.298559558 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.776318004 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.318435488 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.2755233 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.30317556 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.276678318 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.260274285 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.331312581 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.396465785 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.274072173 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.495772679 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.339633169 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.311228914 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.351377246 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.36856377 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.386753721 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.31657403 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.384631283 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.350430387 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.403166576 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.269929813 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.366366072 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.288441083 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.312576394 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.328778071 seconds)
  done (took 63.055484409 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.444094193 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.289913438 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.402207098 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.401942238 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.956570691 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.40271124 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.491278815 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.30177813 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.290157264 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.404080336 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.435203839 seconds)
  done (took 17.96164735 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.337585877 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.290525155 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.41001267 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.420913855 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.505253291 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.418996828 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.459839042 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.280588182 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.29632183 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.417301676 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.429926599 seconds)
  done (took 17.407344211 seconds)
done (took 99.514382471 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.674260376 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.173046165 seconds)
  done (took 3.958046156 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.123208055 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.112419373 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.10330542 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.106446487 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.105706402 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.102828312 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.155985925 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.11749647 seconds)
  done (took 10.038349516 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.103714553 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.102721582 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.10171354 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.105750169 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.101632868 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.102758333 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.101796696 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.105293478 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.102227076 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.102496336 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.105521403 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.10228558 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.102190122 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.103001941 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.102724737 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.102458876 seconds)
  done (took 18.761493709 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.102060729 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.104277792 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.103356832 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.101421715 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.10439555 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.102253309 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.10272342 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.114902012 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.102308542 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.102469292 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.101083835 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.10218735 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.101939676 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.10145126 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.102224559 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.103981779 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.106675386 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.103787546 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.10265588 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.103024462 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.101799136 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.101407794 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.102710351 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.10753904 seconds)
  done (took 27.592921123 seconds)
done (took 61.466195075 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.67978379 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.110628545 seconds)
  done (took 6.901107922 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.107462282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.103017242 seconds)
  done (took 3.43793762 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.105447348 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.102926255 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.102436611 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.102490013 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.103141132 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.102114866 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.101912727 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.102996984 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.103496837 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.106418109 seconds)
  done (took 12.144564968 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.101842972 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.102865398 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.101589183 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.101574929 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.103819656 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.101891247 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.103191856 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.101334804 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.102579301 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.103957584 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.103867249 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.291094554 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.102708393 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.328155428 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.104328257 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.107992342 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.101923724 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.102537784 seconds)
  done (took 21.379017401 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.102080391 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.102262884 seconds)
  done (took 3.313817316 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.101274904 seconds)
    (2/7) benchmarking "second"...
    done (took 1.103281333 seconds)
    (3/7) benchmarking "month"...
    done (took 1.102146439 seconds)
    (4/7) benchmarking "year"...
    done (took 1.101801357 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.101474334 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.1026155 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.105800785 seconds)
  done (took 8.829182252 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.558712274 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.262732301 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.319067917 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.576120772 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.756300278 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.031465734 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.754810316 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.025767669 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.921419981 seconds)
  done (took 16.316455967 seconds)
done (took 73.41298303 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.782183917 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.098010597 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.798286769 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.225568772 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.10984095 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.466160995 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.099665338 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.707944934 seconds)
done (took 37.407858021 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.326581301 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.098818318 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.143912197 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.141482903 seconds)
  done (took 19.512653718 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.09121144 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.692412186 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.139519554 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.153578977 seconds)
  done (took 19.292196265 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.61804763 seconds)
    (2/2) benchmarking "read"...
    done (took 1.638131082 seconds)
  done (took 4.385703474 seconds)
done (took 50.631178313 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.103165765 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.105683171 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.101721881 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.102388957 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.101854512 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.102107318 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.104465585 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.101655101 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.102107577 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.102561587 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.102067462 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.105890039 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.101599559 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.101583749 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.102547455 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.10422415 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.101325487 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.102534011 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.102063875 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.101768199 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.103310821 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.103005067 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.101552279 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.103130783 seconds)
  done (took 27.575958547 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.171618646 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.162648707 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.176355916 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.167065786 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201048253 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.165015028 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.167473075 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.145034243 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.170916664 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.158995355 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.14237194 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.194515144 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.146920707 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.189934093 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.143208949 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.189355693 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.174209248 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144304109 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141809475 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.196885024 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.165993986 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146005396 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.194497909 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.134335352 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.194846609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.140699636 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.155188446 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.16315774 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.134490389 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.190802428 seconds)
  done (took 36.082482381 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.135096593 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.10202616 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.103749029 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.192846467 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.103202558 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.101519421 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.101542125 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.103051319 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.102343211 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.10110291 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.105666316 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.102405104 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.102918776 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.101965228 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.102924124 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.102900341 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.137545678 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.282216011 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.102400519 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.102421482 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.148377307 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.102210399 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.102696616 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.106842835 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.104119343 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.102253017 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.102594979 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.101979749 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.102553378 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.102745362 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.103065133 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.157250698 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.141231613 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.102511194 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.224955218 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.162541818 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.106596482 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 2.469776574 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 3.100011889 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.107275168 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.103866974 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.102700095 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.101619798 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.10331426 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.165733669 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.102291558 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.107201349 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.103111322 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.103083052 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.102083156 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.10304523 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.102156592 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.117946399 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.103430361 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.102585197 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.102806332 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.101440953 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.103299018 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.102387852 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.102183367 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.105026623 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.177210423 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.101975996 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.102564346 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.472349862 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.102793014 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.170073289 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.10365869 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.103597603 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.314720939 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.10337983 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.307847397 seconds)
  done (took 85.556219732 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.105725461 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.105789304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.180766112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.180816822 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.104353804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.103600416 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.102840581 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.102199964 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775111258 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.103247807 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.102382765 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.10324444 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787414014 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.117262591 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.102214939 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.180587048 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.102188391 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.102416706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.104164672 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.102773899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.103702926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.101214349 seconds)
  done (took 26.987234772 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.134852191 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.117528741 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.147339015 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.117669817 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.118449505 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.11983995 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.146901244 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.118491769 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.143397915 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.146011201 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146933695 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.137517688 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.118426961 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148451354 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141323249 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.199438186 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.135676103 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203013589 seconds)
  done (took 21.654224742 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.280202644 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.26964803 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.18643471 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.147114593 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.365327466 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.339467164 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20803538 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.278137697 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.145309873 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.273210526 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.28365142 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146937941 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.337094904 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.147356089 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144536873 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.366127263 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.19360361 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.144994606 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214869837 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207680689 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283061249 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214422856 seconds)
  done (took 28.289135821 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.138322568 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.149165884 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.185460497 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.179789271 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.103715783 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.103923856 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.160924749 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.139489354 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.118254506 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.143816729 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.147088292 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.103031566 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.193827398 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.16003323 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.196379068 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.146748594 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.153629107 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.158233706 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.141280602 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.103897777 seconds)
  done (took 24.039607289 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.103382464 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.10354064 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.104364515 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.103017446 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.103203575 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.105895699 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.103490206 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.10282198 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.104939709 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.340207816 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.104600817 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.105633603 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.103498773 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.104123583 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.104404051 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.102682819 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.103476579 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.103959556 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.105817297 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.106086566 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.340876165 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.104258374 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.104476239 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.102882436 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.103504757 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.107451704 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.103269364 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.104567965 seconds)
  done (took 32.502679512 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.153299051 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.103722283 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.103586215 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.10370713 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.10273949 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.166766023 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.102914033 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.102833646 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.104501553 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.104264374 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.102819668 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.10296478 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.102793858 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.150482047 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.106387213 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.104119513 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.173296848 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.108753251 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167120905 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.09246888 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.108691503 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.200471553 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.106891278 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.103876178 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.094455617 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.110066845 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.103442462 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.106128466 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.103678323 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.10365922 seconds)
  done (took 52.613765878 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.121377037 seconds)
    (2/2) benchmarking "in"...
    done (took 1.126093272 seconds)
  done (took 3.359713133 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.10640712 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202776251 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.104465162 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.302383552 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.270532395 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.278709998 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.268632925 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200261688 seconds)
  done (took 10.845784758 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.10518189 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.495272228 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.124316115 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.103939713 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.103462398 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.573859858 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.035641569 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.01674803 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.888890873 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.960545592 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.196952417 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.566476991 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.069326961 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.408393053 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.223917886 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.932671264 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.344366304 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.649504483 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.157664872 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234014697 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.846835074 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21085122 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.104204126 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.104450494 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.103067104 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.035735528 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.971321089 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.528829089 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.233749618 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.232487701 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.862315338 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.188790038 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.105123628 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.352709226 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226384611 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.104591477 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.302222608 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.215147265 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.105014012 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.103535847 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.854937575 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.786990173 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.386900916 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.374447114 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.193440996 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.105128296 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.106086752 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.103519966 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.376680357 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.705091446 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.069787862 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.079374927 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.247559134 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.106293989 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.823880664 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.122459637 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.111673772 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.037400668 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.656457377 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.390425181 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.450287409 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.210331815 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.12655095 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.2386529 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.106722247 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.280526007 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.913559238 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.887380636 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.853833368 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.222285349 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.604310874 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.124325231 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.104733655 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.10423193 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.061835544 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.42051976 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.104224057 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.105062762 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.104037717 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.104229281 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.368747324 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.228539876 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.931539408 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.24941292 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.253494329 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.541930653 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.237922998 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.105187324 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.74391035 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.949190539 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.196884545 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.741189194 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.312879087 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.248047269 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.080423416 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.372211888 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.144981651 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.106368015 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.954604136 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.724130443 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.12024837 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.103871651 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.415531476 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.129560438 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.108124987 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.104711497 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.801775642 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.237466583 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.257245771 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.150839974 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.103898909 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.106299937 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.683493451 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.203586725 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.107161587 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.553120662 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.076515567 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.628838312 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.377932904 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.309578193 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.474852601 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.074258527 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.339318326 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.914940459 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.108858878 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.635471121 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 2.902532284 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.686324238 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.354816842 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.233470677 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.951290406 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.173011199 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.104531672 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.192302097 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.18533809 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.10345526 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.104990697 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.1054627 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.109757055 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.105255571 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.222553327 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.446239837 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.953894693 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.119823974 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.336847476 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.230556111 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.946880364 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.36562875 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.796398453 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.247011819 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.105716025 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.85741421 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.374677173 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.813472828 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.239622 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.104917958 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.105799551 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.9340767 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.069796939 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.206093867 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.105448595 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.700605849 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.202536513 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.10892099 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.104946604 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.573788151 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247817297 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.107945681 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.215758277 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.881505133 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.990171751 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.119633777 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.419292354 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.226525829 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.105085101 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.104888846 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.104088387 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.899653307 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.701064817 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.211822087 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.750529624 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.858092502 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.202843945 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.296244224 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.202171582 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.355487958 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.328615155 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.248279075 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.106928903 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.104565093 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.108507175 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.557842366 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.917735089 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.135615502 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.946717605 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.089339858 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.031460217 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.192011603 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.89815313 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.124760109 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.817023038 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.058279571 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.211101059 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.108666096 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.105149314 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.249691523 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.286571446 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248388692 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.667195763 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.119458902 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.105482991 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.757243046 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.238786028 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.745293463 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.214165103 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.935582001 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.189051143 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.237245073 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.301768428 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.744986376 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.240107378 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.108184575 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.791965681 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.256606699 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.105904603 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.138380599 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.805714013 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.906664658 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.847383388 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.724115286 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.054948048 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.651151962 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.353071188 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.250509184 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.903202154 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.211821304 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.349243664 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.145744825 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.591116373 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.127228004 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.842427597 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.122216148 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.866801675 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.120474591 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.099382658 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.234584612 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.554284943 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.226061231 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.110912545 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.31110221 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.203426562 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.754266823 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239681995 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.221089475 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.419463906 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.980722624 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.210379365 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.327125205 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.14733324 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.031981922 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.050406141 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.443246189 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.991958819 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.081689661 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.191282713 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.876580112 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.276072406 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.342797353 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.246572313 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.108730438 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.107108021 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.263714656 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.196436424 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.107272072 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.434334747 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.063257511 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.1209377 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.193968512 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.112482414 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.105136144 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.310123737 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.246758018 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.379895629 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.56756178 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.676106179 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.895731574 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.235780295 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.735736243 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.241996016 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.822735149 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.201467649 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.110892811 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.77030436 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.237977025 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.364736779 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.256174181 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.217991947 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.74468001 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.22534371 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.409018526 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.221882021 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.234005541 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.876007915 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.640763259 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.364259463 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.50039633 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.147356501 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.638800868 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.110598653 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.688416726 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.0892328 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.813803673 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.211795918 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.164865579 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.108239965 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.106317305 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.634611113 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.066654391 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.110080969 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.891401799 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.79338751 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.007290258 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.824351437 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.203400578 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.111175002 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.107600017 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.107211331 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.993311971 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.166576949 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.429644195 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244643688 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.11014891 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.105686978 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.070037894 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.407140123 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.906332734 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.985719363 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.06629836 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.246671917 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.107261484 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.106137964 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.107121173 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.107725646 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.105796023 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.105996303 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.587152483 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.120561056 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.701313586 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.205482664 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.110967547 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.33675131 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.175359707 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.107743456 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.311147813 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.193518284 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.227607773 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.176263004 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.108077246 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.498278276 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.247345024 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.08685812 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.409377398 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.439680827 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.34421686 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.593547067 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.161404053 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.51330072 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.383748825 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.868972157 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.110950623 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.042751855 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.19344015 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.874603851 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.12333656 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.525033899 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.678808018 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.085330307 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.33438746 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.018678734 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.51127785 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.205276968 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.177213702 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.107796306 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.10714008 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.153428773 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.347365982 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.154468197 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.372123769 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.306844776 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.061760851 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.400043786 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.206307696 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.311716369 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.140295808 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.121614918 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.106661756 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.112964732 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.549870714 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.976947185 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.199891143 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.106963526 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.040386348 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.953424965 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.018704106 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.703836279 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 4.980562589 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246636875 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.107809214 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.302611874 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.160538661 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.855831085 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.130691516 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.892381434 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.430903416 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.155388015 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.299892105 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.474196083 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.794727114 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.501042369 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.225307979 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.108543576 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.470542491 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.108308695 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.250539897 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.00309381 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.450462564 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.628384638 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.494745048 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.309834248 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.225120393 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.980429437 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.612172116 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.087313312 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.112135087 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.954418707 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.25192017 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.363564922 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.030841345 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.385782384 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251696784 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.735222575 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.790170415 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.249025822 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.702276013 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.248722104 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.108542945 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.902619324 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.056048064 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.234085208 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.235540917 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.106937043 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.123258504 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.778381929 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.686608808 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.278403603 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.18713856 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.108432972 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.861531689 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.843937403 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.204743194 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.109816979 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.10854426 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.512236488 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.159379787 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.107297202 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.506218433 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.703785009 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.249547596 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.562821615 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.194315658 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.251711726 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.363889213 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.480448768 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.308316812 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.170624651 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.108369423 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.108794812 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.10598606 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.657271932 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.122752337 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.10815563 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.696548741 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.250813705 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.853128965 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.009927602 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.325899131 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180500319 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.501557644 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.248357996 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.558912119 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 3.937367057 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.193554232 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.377167724 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.150253246 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.202199654 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.820795005 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.214639721 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.108284988 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.026790379 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.433571672 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.459257873 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.495748314 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.397861574 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.196319057 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.762826592 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.222567782 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.871082105 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.130016976 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.107545451 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.610176686 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.198037334 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.528835124 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.264195494 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.540611069 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.22603299 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.417013051 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.328265931 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.200977616 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.108177544 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.108250224 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.114144611 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.114343213 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.609254466 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 4.975035442 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.576304991 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.242765902 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.916597554 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.665638842 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.961161835 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.261062755 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.363882842 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.397490979 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.147876573 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.079636064 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.45396411 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.192701695 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.266078514 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.203298517 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.894924559 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.182633708 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.11077703 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.658649354 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.123151132 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.111078399 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.108390497 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.986791062 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.842868296 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.21495824 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.354532628 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.207499799 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.111632932 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.702456484 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.375962156 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.145776022 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.1099179 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.108188143 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.93490292 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.218935655 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.109717154 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.453469196 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.263425603 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.391261112 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.9416434 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.540473572 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.200738626 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.108896348 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.109289303 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.804425777 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.666312127 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.143277787 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.407090459 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.132075118 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.574354841 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.073421151 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.561361949 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.629523996 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.096403135 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.234230557 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.109593708 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.146371004 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.988546735 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.007906034 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.828981282 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.518033943 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.205974183 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.894142032 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.176338972 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.176365654 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.232041889 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.180257153 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.109015073 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.11037677 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.109164409 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.620256277 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.082810127 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.111066512 seconds)
  done (took 1427.853731082 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.375973774 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.109944887 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.108572307 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.107894048 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.109871293 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.108142777 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.107557138 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.108615646 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.108101271 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.109391865 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.106996938 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.108005663 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.108946211 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.383887945 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.111594288 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.107840793 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.107767664 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.107474109 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.110589718 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.109398227 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.108740981 seconds)
  done (took 24.948454094 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.107338227 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.106814599 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.108847582 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.107502663 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.109454934 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.108239235 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.108238859 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.107766204 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.10794383 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.108152451 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.107407008 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108712958 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.108160318 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.109145558 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.108514979 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.108350629 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.108377759 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.108457956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.110529768 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.107803008 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.108038492 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.108755449 seconds)
  done (took 25.499255605 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.112424952 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.109049668 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.818564294 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.235365693 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.108589861 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.108334846 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.11036821 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.305694124 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.140212241 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.989475168 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.460623002 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.13551549 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.113675998 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.286741506 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.202709882 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.109083504 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.229084996 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.112300283 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.109001571 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.107904875 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.107269293 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.306466256 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.247539794 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.109954841 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.937264591 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.252906762 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.109398054 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.108436066 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.112091799 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.100082864 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.190367776 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.112094587 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.961988113 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.855490562 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.452158962 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.989857111 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.202421728 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.11318966 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.107950329 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.108737314 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.273564374 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.871347688 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.111673553 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.110494255 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.442603256 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.227860447 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.112965644 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.421080568 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.132027306 seconds)
  done (took 88.212613134 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.107566696 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.23616465 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.165778606 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.108534579 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.22748964 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.112167906 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.165326379 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.107972769 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.107365944 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.112403493 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.239428123 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.266265862 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.108830172 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.108362276 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.194975437 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.10904768 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.108263865 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.111458908 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.11002436 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.1075816 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.108184128 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.159969358 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.222178548 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.264499466 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.110073255 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.10885474 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.108321889 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.108945276 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.254085198 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.108299433 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.10953457 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.108448816 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.233233949 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.188812759 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.109263189 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.110584514 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.237140872 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.110804423 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.107593719 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.107698786 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.108868935 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.107975459 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.166846327 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.242134524 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.108080647 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.214516278 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.108695087 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.107952876 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.255716696 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.108966483 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.109253151 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.263596106 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.107219155 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.107300077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.111354945 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.227585126 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.109980184 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.108027595 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.107832558 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.249639334 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.108346509 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.112383643 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.264137553 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.109731258 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.108173964 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274237479 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.216034326 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.109590334 seconds)
  done (took 79.349093672 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.108753411 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.246251881 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283415455 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286015126 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245339998 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.24282162 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249405421 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.245441235 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.245266497 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250115878 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245947894 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.198132707 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.215129027 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.200810559 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.249060849 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231757614 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.234787817 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235613906 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249932491 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250538147 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.237083017 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284005763 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.246439071 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285791865 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.464115919 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.216475157 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250278635 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.248605101 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287234031 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.247319255 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.465898729 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.248376877 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.244771105 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288554975 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.463892292 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.242566382 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.109099195 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246514563 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.248346209 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245415963 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.215685372 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290811182 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24324824 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.21539731 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24190192 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.242690982 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287209546 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.460530909 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.204025859 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249036038 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.24733667 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28698434 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243261523 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239141604 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286736015 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.204164792 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28362765 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289714413 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248794821 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284527039 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285303242 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.209071657 seconds)
  done (took 79.164415379 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.109298262 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.108073869 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.19525974 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.109935412 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.108208664 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.193831368 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.10840633 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.108257138 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.108657514 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.107412544 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.108132412 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19414564 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.47110275 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.110825392 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.197249501 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.467293836 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195032551 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.194135056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.112364196 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.193001226 seconds)
  done (took 26.618182196 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.108141408 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.108537833 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.108632779 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265434488 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.110359963 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.245432685 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.110001962 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.108862442 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.10894487 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108029256 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.109062055 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.109876268 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.10839098 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265023325 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.109275618 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.244765089 seconds)
  done (took 19.450197789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.109390233 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.1089403 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.109435068 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.109026998 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.108471073 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.109619013 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.108850249 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.108132392 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.108915362 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.566722494 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.108662192 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.109563774 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.107930138 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.108671739 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.109131375 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.11046139 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.109093121 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.108906053 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.109181809 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.108430354 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.680518169 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.108476719 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.107985099 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.108454116 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.110180751 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.686616071 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.11137608 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.110381912 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.108404024 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.108174061 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.108229235 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.582097158 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.112550573 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.108191782 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.109677926 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.108950884 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.108299053 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.11075303 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.108551659 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.110391486 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.108688518 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.109775419 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.109899944 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.107909063 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.108232526 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.108600988 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.108297459 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.565612776 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.109637263 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.108276569 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.109758953 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.109473622 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.112708961 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.588215637 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.109081549 seconds)
  done (took 65.139619842 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.15271382 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.167214581 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.110110052 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.109125997 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.164853531 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.15384577 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.149927471 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.126585975 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148227354 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.109052592 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.173526215 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.125619043 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.152463623 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.17169408 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.173676373 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153776731 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.109288426 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.180691823 seconds)
  done (took 21.751147179 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.109143738 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.112530479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.109010305 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.110761121 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.110074236 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.108576384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.108734803 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.108685701 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.108824054 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.110845985 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.10923796 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.108692761 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108206404 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.109328775 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.111614994 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.108630229 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.108493356 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.111708835 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.109053204 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.109549159 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.108397864 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.10944506 seconds)
  done (took 25.527112513 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.141416937 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.155042909 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.113499909 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.110245832 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.10969624 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.132066435 seconds)
  done (took 7.879742192 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.162421912 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181357386 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.145556284 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.160516865 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186640504 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189025081 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18585862 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189036355 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.181957269 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406713235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193185609 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191180154 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180881179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240574097 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18398094 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.183736937 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196698539 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192363158 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.160226656 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199467469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199088991 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.184819307 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19925999 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190170826 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196928526 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241438179 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.1835132 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409566638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189311619 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186759821 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186112382 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204164037 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192519378 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403550635 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.161521132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18190043 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190995925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196744369 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189604865 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236311862 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.149264917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180749321 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.175741605 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195789098 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186305961 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199020225 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199547244 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202550585 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201160724 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409280327 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186026103 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236350848 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177507018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193587297 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179509523 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397962083 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405941441 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233499844 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.178983822 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406269771 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236149414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187311466 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233431511 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411583731 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180332448 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236651178 seconds)
  done (took 81.558719164 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236360451 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.152051229 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209448684 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414332746 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235777739 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195082661 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202905838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205299439 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208451436 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172877432 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202065792 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20624148 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237038891 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242112622 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20178377 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201935216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196185718 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234394912 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171446262 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401296569 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19661912 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237099115 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238394841 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237285859 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401038316 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192644494 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20268598 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199759623 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195137708 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.199867531 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205681912 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207868697 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238928021 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.154296142 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23338274 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203793986 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202797772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203876515 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199872309 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.190762383 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240287271 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201513351 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199446256 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193314452 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404059368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205684085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211924529 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.172045262 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203145207 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.171683626 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402981121 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403009733 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414995702 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237668337 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205137172 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197025357 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203258992 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203574864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207812632 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.1896456 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233730205 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202395825 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404188683 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196554008 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208283789 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236660247 seconds)
  done (took 82.339259557 seconds)
done (took 2405.896205044 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.155753494 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.132263758 seconds)
  done (took 13.405882762 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.109572483 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.110813824 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.26564194 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.112487933 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.144861613 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.220554928 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.2288693 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.120542421 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.109740642 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.200282876 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.111198563 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.245699045 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.213609422 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.113080534 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.128395665 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.121553441 seconds)
  done (took 39.69312399 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.189753697 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.629786395 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.039902949 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.882332005 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.14264383 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.959517412 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.394574096 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.835422263 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.40999001 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.56658751 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.366196873 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.970293024 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.884866977 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.266936393 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.607915784 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.646929564 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.727776461 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.798296596 seconds)
  done (took 60.441365894 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.098584657 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.260664989 seconds)
  done (took 8.507054506 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.106877963 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.112535621 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.120776737 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.130454298 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.133029442 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.129267038 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.11159939 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.133932013 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.148823676 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.145145641 seconds)
  done (took 62.410974642 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.111374441 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.575271566 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.527168848 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.560768028 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.737812478 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.590502331 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.274181018 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.537974317 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.207989423 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.098194831 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.381044984 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.596517415 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.970109649 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.374698062 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.733191261 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.362042346 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.877784809 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.560184671 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.455114592 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.530918182 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.395850845 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.244589408 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.56533741 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.041992281 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.129092886 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.734565354 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.378709128 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.23684971 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.182207696 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.25380431 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.477426598 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.1271452 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.444499542 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.117127705 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.162511523 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.772816348 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.852410656 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.310864033 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.65862385 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46283308 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.498771673 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.787191628 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.177084028 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.765478764 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.261353802 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.482732772 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.196885926 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.363859776 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.193119916 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.229870205 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.714168539 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.291773515 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.246966544 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.22973002 seconds)
  done (took 155.188378827 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.097884295 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.492372786 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.252317529 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.100642739 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.498597926 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.317432069 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.883631348 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.672578485 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.124690164 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.343130858 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.275954451 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.234985468 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.099937227 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.108632704 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.110362354 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.109195188 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.301079226 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.686377703 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.117266564 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.108679861 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.324081007 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.348426129 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.235952902 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.106942661 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.276855329 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.349556031 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.50704808 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.237349675 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.512625811 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.099974143 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.549648453 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.117952505 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.107426355 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.989869537 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.502631139 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.428194475 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.532036413 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.110021852 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.892002106 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.1077615 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.746860869 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.30910117 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.413041824 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.24932566 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.358400937 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.340350948 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.711765407 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.10367939 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.851659414 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.284809462 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.327465588 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.337201166 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.384344688 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.107697081 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.650848664 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.107813803 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.106803991 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.369682062 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.267717344 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.230225234 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.101757622 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.108827573 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.107805066 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.351663461 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.101391719 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.227723119 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.101068314 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.107578086 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.227814915 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.230918877 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.263778086 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.356312381 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.351251278 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.32805928 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.090919625 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.346071363 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.517866056 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.349392668 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.105305409 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.106012694 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.513965716 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.559135786 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.265079434 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.346309741 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.417910517 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.393057243 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.661516451 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.099636523 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.335058445 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.275073575 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.501672466 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.369880268 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.465640816 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 1.987675788 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.100984142 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.106299701 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.041170837 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.242716562 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.103048397 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.616965221 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.392780623 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.717292787 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.286031205 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.549373368 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.215984693 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.101786382 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.671859101 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.100354891 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.330263274 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.423977058 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.109472311 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.107056281 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.270228223 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.06336979 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.102027628 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.556263514 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.522633837 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.113426547 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.274345422 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.105388077 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.364911929 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.029269957 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.344403497 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.103178736 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.385418418 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.292620982 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.386014449 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.103719975 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.369445798 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.380937207 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.50879799 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.434053791 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.103278097 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.110406838 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.41945736 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.101727085 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.106896301 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.298690619 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.040045415 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.291768315 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.104059015 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.528525135 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.270873461 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.479805899 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.100608879 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.380199627 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.353562555 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.469168216 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.101700325 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.245171495 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.103802161 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.058381093 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.271592895 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.102648233 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.110754614 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.95455456 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.108551352 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.281785214 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.336124937 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799213446 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.476067104 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.462887548 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.09989131 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.533923578 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.305673361 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.546183269 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.68908867 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.280156459 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.85401241 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.34892425 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.106925883 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.355258905 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.404806448 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.100930452 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.10844295 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.843007419 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.224212754 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.104295146 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.278596481 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.060297627 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.556882082 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.316299669 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.104951065 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.475127402 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.103054271 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.337923001 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.605394629 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.395517188 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.109054079 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.107594545 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.106778271 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.108537514 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.333324279 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.350426011 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.669858919 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.252474488 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.405597422 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.327512387 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.426895402 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.563303711 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.115473521 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.445948481 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.103537518 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.502654241 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.109500551 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.279583382 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.37840133 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.101737085 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.330270399 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.460132794 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.196649972 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.497203674 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.103056759 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.108111049 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.959727407 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.287777808 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.540786618 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.101072885 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.358092858 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.474835316 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.234322729 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.301194112 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.354504246 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.099018421 seconds)
  done (took 728.17678993 seconds)
done (took 1068.921781086 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.098946389 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.108280924 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.10899202 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.108710792 seconds)
  done (took 25.543904887 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.079919141 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.183515779 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.287434602 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.112490191 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.463929841 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.166718422 seconds)
  done (took 11.424582416 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.098789588 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.109733967 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.108706344 seconds)
  done (took 19.436265441 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.405837358 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.574704797 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.268517529 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.205095164 seconds)
  done (took 6.58432771 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.132463723 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.132645199 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.109406001 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.134903452 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.111191887 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.110460732 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.145639771 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.136822016 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.135060776 seconds)
  done (took 11.277237302 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.620123256 seconds)
done (took 80.992237803 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.414442661 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.411747452 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.118845118 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.429202237 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.237713715 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.425809985 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.22832999 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.128642773 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.407937159 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.511092183 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.603239542 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.240688286 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.424494541 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.534502894 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.353182049 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.13490548 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.123745995 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.174393758 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.706004356 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.286257412 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.546370131 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.247522468 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.753584376 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.137299572 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.003646437 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.247729729 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.3903047 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.964832036 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.139145765 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.13388846 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.195505873 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.582828966 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.305124791 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.43968304 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.250844774 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.989603673 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.532661484 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.26529057 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.246168117 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.47644034 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.373376951 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.204340275 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.101336788 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.278010692 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.509785309 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.130125915 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.108456255 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.268787614 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.649836811 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.277459935 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.585969164 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.116230885 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.715013306 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.184580892 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.192691019 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.102594545 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.000639404 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.62590032 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.267885255 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.399876783 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.127256677 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.223968507 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 1.985048733 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.138889276 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.294112777 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.376762634 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.553958055 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.200208548 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.551669052 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.135962742 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.121569397 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.135167937 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.798063463 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.2561215 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.10065709 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.257497396 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.408738848 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.260708938 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.10998454 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.312046897 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.339000276 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.102217611 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.24934155 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.416216648 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.274442655 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.493767435 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.590204754 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.462777821 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.491736009 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 7.00023633 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.726226877 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.026209679 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.212032814 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.130969011 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.533205222 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 6.224804137 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.458608922 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.613525231 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.245788224 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.640997667 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.138256849 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.122656537 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.434642291 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.414737167 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.905911679 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.144113393 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.225444577 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.100224717 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.40761164 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.896193332 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.214977777 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.675528198 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.115353655 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.172561583 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.593005316 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.112078283 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.431376129 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.543264372 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.171772745 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.107225962 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.405645757 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.116108002 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.232255672 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.64400143 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.476891056 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.326636802 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.10455985 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.371282742 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.115061696 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.305512206 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.11762798 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.685735541 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.66139761 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.141716423 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.362034863 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.236209703 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.099964784 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.481314604 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.164861499 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.335447641 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.445187282 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.443216585 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.267388993 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.10075418 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.435064545 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.112607843 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.35131869 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.446675635 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.274029984 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.425664852 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.239748068 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.122955523 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.057526145 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.512064936 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.690701914 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.66473334 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.378924374 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.243228534 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.613377276 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.359647015 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.946537552 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.204715581 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.163286656 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.113518135 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.128611136 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.173895952 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.101991845 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.110419654 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.406843449 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.342558883 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.602401063 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.919388267 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.817994877 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.40938809 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.264184672 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 1.999140674 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.685969627 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.115435494 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.422923965 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.605933345 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.202228217 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.138789662 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.10243671 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.163512947 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.852822219 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.14561991 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.386930192 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.593155276 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.443503634 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.461400126 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.378353547 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.150132111 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.45967425 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.367807864 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.376400525 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.324476039 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.486516368 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.251365775 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.438388691 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.222520751 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.383291805 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.114596392 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.178215581 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.355885164 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.603917947 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.481994322 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.334228399 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.278907181 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.422504592 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.112944522 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.314002057 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.208767423 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.490096678 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.134938373 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.330356652 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.211343607 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.553461692 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 1.990699775 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.228900361 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.389879174 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.262291231 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.271322517 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.614961517 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.129897149 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.415779052 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.276073933 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.338954859 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.345831879 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.14282931 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.240692777 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.306771334 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.247047144 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.364359949 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.963336523 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.540629398 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.652536188 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.238987244 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.100106671 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.574595022 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.137763889 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.125813104 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.356989269 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.26375837 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.418878527 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.241299962 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.279289288 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.16937106 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.145655615 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.498614204 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.970462259 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.698947541 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.096593316 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.141782346 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.101834487 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.512892302 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.51352524 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.176350945 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.251026233 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.676035097 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.145492583 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.276468313 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.11705448 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.115842871 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.878337502 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.245179512 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.358106428 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.603766339 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.114989071 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.38787157 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.170244482 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.522698883 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.631024401 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.165057984 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.235166554 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.358771492 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.115233194 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.492966424 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.135411645 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.283436416 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.481272025 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.232817602 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.222083151 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.105291767 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.149585469 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.626526663 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.341240768 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.591590523 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.141266611 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.453106264 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.168018624 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.345937997 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.132124679 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.23927486 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.445960238 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.268278618 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.452497028 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.117320847 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.272531545 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.363898045 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.132593084 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.1033695 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.249816571 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.683007456 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.519853498 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.397499196 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.270178716 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.06314756 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.35398154 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.112841039 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.751412993 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.253988347 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.220322131 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.690869426 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.585514774 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.11490553 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.303273123 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.108458997 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.466166975 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.13846568 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.12158161 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.266913051 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.197295971 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.100697921 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.730184017 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.294906073 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.5926366 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.229267661 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.003026029 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.190601626 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.287601797 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.224208667 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.389556063 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.895417793 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.12802535 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.254463837 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.727270821 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.307790961 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.144769926 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.370663379 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.113760083 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.716064948 seconds)
  done (took 865.763713079 seconds)
done (took 867.048506013 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358968816 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.485308252 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.358802749 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.049625445 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.914200972 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.754114244 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.365244484 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.342426703 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.184008711 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.363537499 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.01263093 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.916616145 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.204964727 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.228040931 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.206253948 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.243478809 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.341271873 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.360558901 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.240035364 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.075626775 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.518715596 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.080875055 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.542179633 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.413575192 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.529657941 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.22528437 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316653311 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.631987471 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.625599867 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.288647695 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.314242119 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.384334643 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.943804331 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.35164015 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.208291998 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.190671365 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.955366652 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.204744439 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359043007 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.190353165 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.483087855 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.236625312 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.829420739 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.963901542 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.887934903 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.526862781 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.996224977 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.213280274 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.233391747 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.315094873 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364447152 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360572543 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.624880177 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.315341033 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.959171342 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.963779927 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.624886668 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.960648743 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.837594515 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.316552339 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.627441718 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.208513921 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.313575195 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.340845121 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.22653296 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.394947584 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.523642845 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362896977 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.381492562 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.372222473 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.354640793 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.333284373 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.223221061 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.233945751 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.252086833 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.363217182 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.949653803 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.349951392 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.900950594 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.215389518 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.983949343 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.055245689 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.064592744 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.189209509 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362001183 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.883378523 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.059683713 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.985543268 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.224201662 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.382478853 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.015517589 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.349463081 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.56520353 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.313465385 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358414622 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.354240643 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.067610529 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360417985 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.08283629 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.386363759 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.889910062 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314253511 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.146036446 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.200098469 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.211499943 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3579651 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313246734 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.529508446 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.333256432 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.274736112 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.521507785 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.252239249 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.333676372 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.224629938 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.186161969 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.887753037 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.386869757 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.999260619 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3611127 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.781751612 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.409827825 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.200748239 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.484312998 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.40821375 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357643448 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.202465026 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.211049946 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.976176427 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.213248266 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.205193423 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.297481639 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.566418654 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.318135799 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.053447515 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.335176783 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.894958831 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.351271179 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.336418595 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.184678426 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.977621059 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.201877715 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.065245403 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.40678912 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.4841908 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.35132833 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.404317893 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.224067748 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.384531623 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359921903 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.226390747 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.333277371 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.23983978 seconds)
done (took 246.563119264 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440962817 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.209177054 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.388877031 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.396980983 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.466372362 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.469552319 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.180246728 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.560170985 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.233230848 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.524790461 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.400305608 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.977822897 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.29643549 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.324015995 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.461999481 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.354509716 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.234748495 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.371669945 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.580201385 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.465356822 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.857059316 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.371375051 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.258172977 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.530302623 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.103671501 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.857926626 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.466381109 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.240592181 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.378701843 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.852062758 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.865615737 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.383458115 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.466534103 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.788952041 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.516859704 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.824997931 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470388119 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.905381002 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.440560127 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.438960149 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.38399057 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.941472484 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.858011755 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.876151176 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.270293348 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.477954122 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.172697686 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.992272691 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.105553368 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.827139711 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.370649092 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.900763356 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.961437945 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.462678851 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.316780289 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.842283803 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.600380654 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.623121654 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.465010563 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.41028721 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.43883368 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.530306261 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.525576389 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.298682824 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.912204253 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.406222275 seconds)
  done (took 147.452624199 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.535311865 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.401952944 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.548192571 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.582309181 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.678594866 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.564716527 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.647282276 seconds)
  done (took 14.082827338 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.177625716 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.160069726 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.402793702 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.40274805 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.166333456 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.284069265 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.245889079 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.860460845 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.383338234 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.201594869 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.47956821 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.404910601 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.783095046 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.874020007 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.248284309 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.432109123 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.130795839 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.22696524 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.22019542 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.419066189 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.895274364 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.845499962 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.355216325 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.248978446 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.164857997 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.202563184 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.159936797 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.132437592 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.20005013 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.140563162 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.166593936 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.273815792 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.153924978 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.843940621 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.183499709 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.484399003 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.16580739 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.205033802 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.295144456 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.106437251 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.150775624 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.163871593 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.294983062 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.164832931 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.138875688 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.347042544 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.147943219 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.168854847 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.141855748 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.159038853 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.350454098 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.155086771 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.180439425 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.794325251 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.370752843 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.850675473 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.227072435 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.15420187 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.158477829 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.214902374 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.156450285 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.417620388 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376741014 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.144399277 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400347508 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.437313267 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.156467521 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.144679003 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.142279747 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.37731729 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.155004739 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.35455248 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.16044959 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.207281507 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.208212202 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.294366763 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.348359824 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.946596127 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.921198978 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.793253145 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.133987266 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.14329901 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.471293448 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.0937726 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.795044853 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.145514008 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.206859115 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.846518634 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.067362473 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.163955313 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.468290162 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.141563273 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.213491893 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.215468917 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.211766938 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.255297564 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.421760779 seconds)
  done (took 152.504929037 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.465385891 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.764722046 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.378170564 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.405837055 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.544771984 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.62313333 seconds)
  done (took 16.337186957 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.463968876 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.959906523 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.173822618 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.175523587 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.213019947 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.152356001 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.157085871 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.331730077 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.287078112 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.167723212 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.155123911 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.177090159 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.157643589 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.29700247 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.151943924 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.163604303 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.15251615 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.171371985 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.163580706 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.224803737 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.459912417 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.214339158 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.223245691 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.044271059 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.208176304 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.167321836 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.073577627 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.170266631 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.163130221 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.483041351 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.346393765 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.154669845 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.985924135 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.49347324 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.920435737 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.044423396 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.298857052 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.179524742 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.219444653 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.156146322 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.176363769 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.223380968 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.178568771 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.175400839 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.545041205 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.963613817 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.23481906 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.41043698 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.152410392 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.175879722 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.180075264 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.184606802 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.153311683 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.176938536 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.604707587 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.569397811 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.126062527 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.162040982 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.21614169 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.048067367 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.227705463 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.160924966 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.510315281 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.095907254 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.821468532 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.181815585 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.053723244 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.287434826 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.227466099 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.174861105 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.178484456 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.184259586 seconds)
  done (took 117.886225783 seconds)
done (took 449.370156089 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.127010206 seconds)
  done (took 7.249880793 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.124653938 seconds)
  done (took 7.392254862 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.103132018 seconds)
  done (took 7.235281494 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.109052429 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.152501132 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.130482503 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.128560557 seconds)
  done (took 25.683323951 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.257315592 seconds)
  done (took 7.38765957 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.101272409 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.122121179 seconds)
  done (took 13.456009591 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.2477457 seconds)
  done (took 7.392509885 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.483502679 seconds)
  done (took 7.621956536 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.104450563 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.131846201 seconds)
  done (took 13.396418884 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.101981316 seconds)
  done (took 7.233183355 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.552611411 seconds)
  done (took 8.783869816 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.104283247 seconds)
  done (took 7.27039794 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.174849324 seconds)
  done (took 7.30509508 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.143643206 seconds)
  done (took 7.273770199 seconds)
done (took 135.784027891 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.101408078 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.112127353 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.110563225 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.112421999 seconds)
  done (took 25.558369402 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.437684039 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.439216399 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.41639051 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.588959312 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.383820087 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.382110498 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.439595166 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.43788703 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.382895645 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.483890455 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.438833816 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.483098762 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.588845349 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.416557442 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.418258468 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.485972225 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.488802972 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.437995072 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.384389863 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.416750598 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.482051735 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.488536025 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.857617192 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.851377312 seconds)
  done (took 36.765006829 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.324499967 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.560805348 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.268614367 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.433128966 seconds)
  done (took 6.710597492 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.147907572 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.488862653 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.471421932 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.536012475 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.471735735 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.284187045 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.472233137 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.324450691 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.26252988 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.292292048 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.738132805 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.267109399 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.277456258 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.529182261 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.285888374 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.113222992 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.113105119 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.293397727 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.490202875 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.325628544 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.395449363 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.471855573 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.475902144 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.482448778 seconds)
  done (took 34.134643066 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.898645673 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.056288218 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.480959068 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.124779835 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.818777882 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.91439384 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.393985118 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.611978683 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.38009134 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.356852318 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.848194845 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.848128598 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.257159062 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.999933403 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.872117509 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.291178271 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.293770214 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.961498158 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.720496351 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.415910918 seconds)
  done (took 38.684402349 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.10189531 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.367186251 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.357618707 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.281409937 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.102330248 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.112463854 seconds)
  done (took 26.448919696 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.15141591 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.26187209 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.41771511 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.396413645 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.277008802 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.252973431 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.774387961 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.339267202 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.884455127 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.910405311 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.745414055 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.573279863 seconds)
  done (took 22.11822266 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.102839282 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.146239421 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.113178449 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.279376875 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.932684264 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.969043366 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.434342865 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.103996859 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.182245064 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.307467252 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.976415161 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.281349788 seconds)
  done (took 39.973554466 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.299216261 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.393872537 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.456860676 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.89147102 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.638389756 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.201051577 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.545597016 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.620289857 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.8909463 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.234558157 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.640039706 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.164052352 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.644149775 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.07865993 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.111077464 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.411547407 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.930319365 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.105894072 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.551396142 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.184671348 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.072088457 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.262012714 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107428688 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.652470654 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434539331 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.110856247 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.326937474 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.352219164 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.104875521 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.339572447 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.103890032 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.591392312 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.285224824 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.411245734 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.637275725 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.187613443 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.220811325 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.241509779 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.688627786 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.402686294 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.259440981 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.269620792 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.635201413 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.225006397 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364460616 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.886413335 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.119123816 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.75905346 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.091227994 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.250091514 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.004761988 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.985071199 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.438521657 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.084461275 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.250541246 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.406184768 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.267788254 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.218867081 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.409187354 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.176109307 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.31053758 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.225451753 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.305238665 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.074822511 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.369094373 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.456229936 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.452276974 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.440408603 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.409206413 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.448577694 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.456270198 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.24435209 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.930648247 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.247330091 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.657373896 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.02120668 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.46527336 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.104789911 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.846772018 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.643427929 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.090463737 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.225137411 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.804525423 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.071991148 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.103731023 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.288310582 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.711028007 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.079754848 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.201570754 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.186052859 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.517720878 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.242724891 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.260064628 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.373428069 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.807610532 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.11761106 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.828062941 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.428991729 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.077716364 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.671341635 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.105454134 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.090222174 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.107366386 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.682817517 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.522763116 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.157999682 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.879461446 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.766212863 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.422178017 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.738060615 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.272732879 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.941275281 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.46143677 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.436017728 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.102994243 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.80024849 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.23105796 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.247415796 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.470372851 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.105050077 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.079508766 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.505251318 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.285526743 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.10337628 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.339255181 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.106085044 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.262589409 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.104136363 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.939011082 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.71035073 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.353635791 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.640246735 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.427948838 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.198181524 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.072818656 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.255988639 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.611922601 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.197069806 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.454548526 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.551030074 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.709941603 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.878898316 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.100074041 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.959629137 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.593122579 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.376526555 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.449341021 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.256785654 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.287416097 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.196782751 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.10409765 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.279254204 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.110730436 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.663836009 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.129421967 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.803701586 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.836294401 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.410793362 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.102535321 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.09047231 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.228434793 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.331881497 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.774600776 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.162229551 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.278837672 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.372085013 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.394920539 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.105310386 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.081623586 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.488623447 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.380544877 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.631866716 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.369184177 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.77061952 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.454425548 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.593744061 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.321293944 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.459413258 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.919782031 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.365005858 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.462234067 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.707390611 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.130757115 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107479902 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.214385303 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536956257 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.335115171 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.837959798 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.216033389 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.725519624 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.158644646 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.118340701 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.081059123 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.251816985 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.588037312 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.142990987 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.673899917 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.287843974 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.35290581 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.421563211 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.135941514 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.820419011 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.217968838 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.513249236 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.495999177 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.422522949 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.084368535 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.112356426 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.634492166 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.611960938 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.248128059 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.352345575 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.071721001 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.16454904 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.112071841 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.46042289 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.033541513 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.833676725 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.435532133 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.884150319 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 3.812071047 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.261000671 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.106922065 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.125610803 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.312066447 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.256246626 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.156886562 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.280379778 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.650921085 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.371159678 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.435179525 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.105253995 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.119898464 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.388988208 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.417547623 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.38572724 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.634994164 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.724315114 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.833178713 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.223155936 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.787040048 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.278386242 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.139132807 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.671727889 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.422756709 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.054865531 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.275989058 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.917231278 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.266061501 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 6.284776398 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.410564835 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.104129253 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.596492789 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.728347482 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.110303643 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.132279065 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.254454261 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.110841628 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.423677956 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.870700665 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.339075202 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.843758106 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.395910535 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.340924713 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.274406719 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.513962871 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.640025395 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.884852415 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.079036637 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.274013985 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.195007555 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.416230473 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.104809427 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.39460736 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.743999041 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.777330319 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.928480721 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.652165642 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.354662817 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.304340526 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.580857239 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.361025848 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.463674828 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.068537841 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754394963 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.094379695 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.247759605 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.075547264 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.182969158 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435248301 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.483303947 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.594575066 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.179135312 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.641162494 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.509302107 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.170052038 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.294533249 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.370786939 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.103329661 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.412839895 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.103931872 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.280788954 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.51471351 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.104880044 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.655899382 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.304752174 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.436418969 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.271488363 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.685800198 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.153880952 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.261930622 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.866140336 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.28424947 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.243613577 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.446011931 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.21091155 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.175918129 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.129194451 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.609515691 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.737746895 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.592146241 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.707235106 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.705348601 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.459028057 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.873745706 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.107956805 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.330756297 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.268727843 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.886488422 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.302233518 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.512157074 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.145727062 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.306927973 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.435145354 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.30213482 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.643415681 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.088393847 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.711133741 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.327783325 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.623801767 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.637257616 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.888608527 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.608297312 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.306205911 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.653756047 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.089591951 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.269689133 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.518506274 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.835386125 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.956356046 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.954103221 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.904227373 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.261062361 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.544809076 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.226705249 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.913464581 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.27560669 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.342363451 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.320584584 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.245622225 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.072738496 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.731860521 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.885823574 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.384562605 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.274400384 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.272432563 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.258251864 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.436454746 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.649988976 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.421472811 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.873457034 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.590461015 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.349988263 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.08035734 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107911456 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.387568316 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.291500796 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.202209703 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.447861302 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.550634159 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.166358319 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.165262589 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.230776129 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.433615759 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.839425792 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.832235672 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.455679877 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.644949052 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.587048654 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.111243957 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.881620068 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.323664914 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.464820713 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.519622677 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.03441145 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.5436962 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.42017985 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.263652817 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.080945899 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.28330443 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.123273501 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.211780152 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.917478113 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.402928417 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.199094688 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.274596907 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.701710956 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.257344522 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.156360613 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.718487241 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.335557013 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.302938986 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.10475748 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.731086627 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.520835229 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.28123408 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.090289094 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.875043904 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.081115554 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.326989817 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.26393021 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.310990662 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.960764747 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.218230007 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.784145648 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.650818369 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.324385481 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.321314787 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.077125762 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.182716149 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.12801738 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.78726141 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.926568789 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.356483983 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.615811934 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.276104545 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.111001264 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.440511278 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.238232835 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.436813107 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.399876673 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.602936141 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.528645986 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.481641887 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405897623 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.603642463 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.25829622 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352334846 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.079096658 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.162155863 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.119625095 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.481263342 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.4827641 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.104674105 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.667640289 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356979974 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.259710964 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.283429374 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.261742637 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.652895916 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.317200433 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.259930319 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.276896516 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.348969975 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.473597827 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.133521182 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.280077734 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.104671695 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.103432616 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.326727167 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.358092676 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.462247097 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.424305131 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.002833142 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.269556492 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.8678076 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.060005396 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.642029452 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.111062395 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.940519113 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.508892706 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.106132341 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.593768611 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.779333259 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.277429187 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.380979245 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.204095821 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.439722784 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.302384567 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.620151403 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.120809854 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.755830753 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.553658978 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.105926167 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.59036657 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.187399316 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.277359687 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.86232409 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.606776201 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.106157266 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.916616998 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.273605527 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.659682445 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.382855244 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.29248069 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.117178981 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.945372742 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.086266961 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.109503821 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.234973389 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.647272133 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.130608711 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.694485151 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.272403743 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.277202848 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.11644729 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.251344743 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.1063986 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.34413617 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.301838396 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.362714119 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.393416949 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.289725431 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.115894273 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.76697756 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.8207298 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.548363481 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.320203133 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.417349183 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.505859235 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.932270421 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.430170111 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.686424037 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.402927286 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.302776011 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543973795 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364796934 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.14562825 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.30095012 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.105642207 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431421735 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.26764368 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.675019824 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.369583062 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.465292197 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.452216927 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.13080317 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.663184205 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.581574728 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.993512757 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.106753396 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.421349929 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.106570974 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.208544929 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.749910759 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.305325031 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.237109212 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.09284406 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.70103188 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.424612506 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.242862532 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.111490994 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.325311617 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.601347733 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.078343202 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.922922236 seconds)
    (567/608) benchmarking "2d"...
    done (took 1.997025226 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.321115283 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.434588381 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.075585946 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.277654881 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.125640758 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.091710077 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.610857873 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.110006793 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.433167804 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.077858484 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.665593938 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.087537739 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.255583885 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.275861556 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.482009785 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.105991998 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.094884235 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.281180369 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.107475706 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.116317346 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.460957235 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.197815333 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.365877951 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.582476528 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.356288167 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.451840297 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.01959469 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.19025771 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.122941937 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.421044435 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.940896891 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.670569015 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.277533228 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.635639428 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.200854184 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.12624885 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.662560467 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.354693916 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.834281218 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.254618197 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.593667099 seconds)
  done (took 1947.629462217 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.116397406 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.23844135 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.199025565 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.18522744 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.180659876 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.190625551 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.19400315 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.15352081 seconds)
  done (took 50.58664538 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.103812954 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.115333989 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.574904398 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.294664505 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.138284164 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.343720773 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.268136223 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.641875979 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.312290066 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.171109038 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.172707983 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.171725246 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.117875631 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.149359224 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.009041298 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.197376461 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.11080757 seconds)
  done (took 91.084333713 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.14549376 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.137154371 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.140722579 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.609799841 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.189759557 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.422004436 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.126615614 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.114984224 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.204794817 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.782101701 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.169462698 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.266795254 seconds)
  done (took 78.481094927 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.143977454 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.143080967 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.145473141 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.14419913 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.144308702 seconds)
  done (took 6.850308313 seconds)
done (took 2406.160581125 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.33609974 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.677213328 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.709726828 seconds)
  done (took 4.513139335 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.175015319 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.23955341 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.310114204 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.254776829 seconds)
  done (took 6.130050113 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.393851894 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.603909173 seconds)
  done (took 4.125283132 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.566487916 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.116278183 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.65892075 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.108084772 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.116436223 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.114707008 seconds)
  done (took 19.483396431 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.136932476 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.136963609 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.137233298 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.135325773 seconds)
  done (took 5.68238018 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.104351918 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.105717604 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.115974606 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.073881347 seconds)
  done (took 18.523915982 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.420255065 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.3748557 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.852171101 seconds)
  done (took 5.787738316 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.929217727 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.49009003 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.913110204 seconds)
  done (took 6.458374892 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.398477264 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.038159455 seconds)
  done (took 5.562384772 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.267541974 seconds)
  done (took 2.396669715 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.596512513 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.597093087 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.968900233 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.999791437 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.143452805 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.437974273 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.426834955 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.402462524 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.809268946 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.622842857 seconds)
  done (took 18.131476364 seconds)
done (took 108.578953668 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.061596221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.509281283 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.278704178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.301274899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.207583909 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.277730561 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.730650838 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.066744712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407322319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.408239485 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.186564248 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.206473719 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.141621405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.500225639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.141872349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.464791533 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.519169329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.068861885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.371018266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.911808763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.737303114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.695981405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.878355204 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.702948286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.528174642 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.259146345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.182499576 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.475026716 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.629647081 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.191374996 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.267445364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.171417344 seconds)
  done (took 153.608815683 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.106690604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.121235374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.121776927 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.115547205 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.083916056 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.122232749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.115508378 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.11487293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.810727426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.792438662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.119403031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.088144452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.121696059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.115370376 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.118955116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.115305748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.02825448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.120384623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.119690259 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.119635508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.122577874 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.962882042 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.142161457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.979047112 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.02381688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.123949058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.114956731 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.119685168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.120306176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.123989555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.123950763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.116877449 seconds)
  done (took 187.788225842 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.104569526 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.115939856 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.119369348 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.116511023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.118287557 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.120677303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.1171181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.11722655 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.117563105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.120885841 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.12020796 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.119191702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.119233957 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.115337017 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.12426167 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.115784204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.118500272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.119590028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.118674216 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.119464876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.12088716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.117804706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.119492388 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.118120055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.119296117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.120859819 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.115561748 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.118744441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.117505103 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.119352868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.122281728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.116266881 seconds)
  done (took 196.925914555 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.413893965 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.15202379 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.07654744 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.44864864 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.063079315 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.144444822 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.446294283 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.418425822 seconds)
  done (took 15.303306772 seconds)
done (took 554.746048494 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.767962623 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.035692945 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.293585676 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.374312787 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.715662393 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.407475172 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.370652207 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.610810342 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.862619224 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.585955152 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.623354061 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.327496388 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.014162889 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.384799165 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.303904728 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.600885776 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.521609137 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.815315285 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.319972222 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.994977436 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.330723954 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.00220338 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.607141171 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.909861098 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.628000843 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.057490679 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.246804051 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.525502242 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.373567389 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.327957821 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.127253572 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.532738172 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.347039695 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.343469722 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.577989454 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.600005427 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.474230567 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.554623456 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.290543404 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.788505735 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.997513079 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.716158743 seconds)
  done (took 75.41613721 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.13885662 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.162136053 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.309572542 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.212752449 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.769017737 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.215828979 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.389079723 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.354924701 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.232430738 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.364405304 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.397900359 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.834289579 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.389105854 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.765082149 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.377413035 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409959999 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.219568182 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.737529798 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.377078936 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.363408972 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.182998078 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.309619761 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.179333238 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.33281355 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.170608005 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.189649496 seconds)
  done (took 36.545354987 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.189476346 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.290089344 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.413184964 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.514864703 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.373134541 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.161283453 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.481179533 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.304958344 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 3.03664542 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.344756945 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.242140532 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.242157648 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.313642382 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.444986407 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.727771928 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.307426218 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.347494232 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.302899842 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.299447201 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.369789222 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.273287006 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.223695475 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.482846366 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.33123348 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.825551378 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.484187494 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.481625127 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.789182179 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.705045307 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.302993504 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.269873579 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.4636589 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.523972619 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.418268608 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.286917593 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.16178161 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.165880926 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.243432325 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.201016846 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.316981411 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.476709406 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 3.346030229 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.559846481 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.727539066 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 3.227002673 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.404775006 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.64527454 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.253569497 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.283881822 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.962765462 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.464806403 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.156511587 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.307723429 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.34496456 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.265584415 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.745812239 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.345693915 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.464463178 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.33751138 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.580415349 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.223791922 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.532986596 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.302138966 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 3.233046541 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.453703917 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.354134414 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.330248583 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 3.576608995 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.559105342 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.654607633 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.744665061 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.225264038 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.18349806 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.24359691 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.29831568 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.681173311 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.597961473 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.39658264 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.543246746 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.469370911 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.703824109 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.645837045 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.123912261 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.862867999 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.212969598 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.157428141 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.229262053 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.455760903 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.45700663 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.663568738 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.733725164 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.484690375 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.456186494 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.581379118 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 3.548375629 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.599079202 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.147565773 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.164833101 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.398749062 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.739258221 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.229089814 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.439432473 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.853774516 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 3.682323709 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.383453028 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.438324634 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.565869438 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 3.221671627 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.571087467 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.13764686 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.367996631 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.476295028 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.422115067 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.513041834 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.141761727 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.704555933 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.264941318 seconds)
  done (took 230.072639017 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.106465017 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.119298048 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.113724181 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.121420018 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.110837029 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.750121175 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.188374684 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.112738253 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.750802156 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.187100886 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.112154489 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.112343505 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.111884781 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.116982541 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.733148889 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.693652717 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.940639618 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.111373257 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.114863399 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.118480628 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.949574751 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.110553762 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.112801294 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.116876236 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.111666804 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.117134571 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.122347033 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.168987779 seconds)
  done (took 152.669235103 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.161138204 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.555004008 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.2104179 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.256960543 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.20851925 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.177530372 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.682755372 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.306643951 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.241699504 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.178257683 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.169715594 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.395257978 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.417902404 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.77794246 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.302977827 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.282844938 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.830780962 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.310833471 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.175113524 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.171106188 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.330307604 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.521796619 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.460060321 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.453714161 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.330544823 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.447329767 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.248963253 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.166709066 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.293217085 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.667186837 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.189587712 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.545890223 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.316487841 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.181690796 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.684388461 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.519689087 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.758159481 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.732742391 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.361399378 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.137073682 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.132003405 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.405284876 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.488567126 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.222372511 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.177213254 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.827996305 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.192609221 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.562222375 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.21396379 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.131832445 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.269180286 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.279759512 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.442530772 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.207884714 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.341149386 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.321493304 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.677252808 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.155342885 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.231615868 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.47113641 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.151358475 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.665021224 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.65817978 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.236704296 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.185690495 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.093377828 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.259806839 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.700318458 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.794846059 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.221104925 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.510022134 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.358569506 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.149146768 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.431112335 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.34549335 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.614531874 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.752825262 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.305452136 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.272997355 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.253915601 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.44583677 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.161675122 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.700876196 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.270173192 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.148041604 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.673082264 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.558390547 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.14850546 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.162705867 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.303506885 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.340515118 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.381426203 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.467417896 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.253316858 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.064467815 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.438051865 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.493371884 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.189207096 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.304031896 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.163538947 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.627132103 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.353135846 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.154719507 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.498723529 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.564881727 seconds)
  done (took 156.880109987 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.867593621 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.228572935 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.383278801 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.761007844 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.487016447 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.641965925 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.441066553 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.245549664 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.471010293 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.389413821 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.395787385 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.261425482 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.84957666 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.925864219 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.220650351 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.396806933 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.241540664 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.763532286 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.477849353 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.183621238 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.449925803 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.960270992 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.48275012 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.601365901 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.601437434 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.666755183 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.818735328 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.320586132 seconds)
  done (took 48.675593001 seconds)
done (took 701.365471969 seconds)
SAVING RESULT...
DONE!
