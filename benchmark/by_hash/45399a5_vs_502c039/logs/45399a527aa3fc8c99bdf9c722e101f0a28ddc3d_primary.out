cset: moving following pidspec: 2109665
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.973658259 seconds)
loading group "shootout"... done (took 1.250082655 seconds)
loading group "string"... done (took 0.755417148 seconds)
loading group "linalg"... done (took 9.374852022 seconds)
loading group "parallel"... done (took 0.180256415 seconds)
loading group "find"... done (took 3.315161847 seconds)
loading group "tuple"... done (took 2.178166117 seconds)
loading group "union"... done (took 15.763035659 seconds)
loading group "dates"... done (took 1.445196759 seconds)
loading group "micro"... done (took 0.212493326 seconds)
loading group "simd"... done (took 4.656291341 seconds)
loading group "io"... done (took 1.368731127 seconds)
loading group "random"... done (took 9.552001166 seconds)
loading group "problem"... done (took 1.585019167 seconds)
loading group "array"... done (took 24.92589096 seconds)
loading group "misc"... done (took 1.810778848 seconds)
loading group "scalar"... done (took 41.979883882 seconds)
loading group "sort"... done (took 3.191805612 seconds)
loading group "sparse"... done (took 12.715824981 seconds)
loading group "collection"... done (took 18.311690488 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.436908699 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.113121488 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.160342564 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.109209045 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.228490209 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123417539 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127454337 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084589445 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.03318068 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139528817 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13434279 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418451411 seconds)
done (took 5.543315033 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.305976627 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.239843324 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161407602 seconds)
  done (took 1.572083814 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.090445894 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.057730746 seconds)
    (3/3) benchmarking "different"...
    done (took 0.064435619 seconds)
  done (took 1.379413622 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.062971769 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.138528308 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063889393 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064188571 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064043399 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06642653 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063613021 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063584338 seconds)
  done (took 1.693578663 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071813245 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065274624 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063079349 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064780068 seconds)
  done (took 1.430960842 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.0654894 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.122546532 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.062185634 seconds)
    (4/4) benchmarking "different"...
    done (took 0.061948251 seconds)
  done (took 1.475024051 seconds)
done (took 9.104949693 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157286176 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.771786668 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.850410514 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.144083019 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.31465087 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.342781696 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.119792384 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202828397 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.112171656 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074980634 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.159181738 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.079625592 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.479093257 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.472656671 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071172972 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.184785195 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.623397762 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084720557 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.114171611 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.24724371 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.081149165 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.082902627 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087434076 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.071163264 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.162007643 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.180661716 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.627492767 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.098350859 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067833265 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.195172394 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.069830325 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073975289 seconds)
  done (took 10.599669019 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11400535 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.110059974 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066331246 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.101771397 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092612557 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067492011 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072658287 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066200965 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085403911 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130724045 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089269046 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121815541 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066656316 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067222439 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097715026 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.160680959 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083014046 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080245428 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066314457 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079364611 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.093128598 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078263795 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076422049 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076080118 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.111602983 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.13451515 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.089373455 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.108422493 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066319762 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078457078 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.097408235 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.107969771 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067002163 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064640946 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.108051905 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.084363328 seconds)
  done (took 4.46113851 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.022275733 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093007716 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.1076873 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095959182 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106337601 seconds)
    (5/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.136423077 seconds)
    (6/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.092251437 seconds)
    (7/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.145714676 seconds)
    (8/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.120201111 seconds)
    (9/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098525996 seconds)
    (10/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067165903 seconds)
    (11/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.181144218 seconds)
    (12/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.671853406 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.101416626 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070618943 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.14519288 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.358306451 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.919422571 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.072085485 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067053867 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.096412929 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069078213 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.13861516 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065742116 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.17579968 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.639809474 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.196639316 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07242207 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095413006 seconds)
    (29/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063725448 seconds)
    (30/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.140845587 seconds)
    (31/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.092758117 seconds)
    (32/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067961999 seconds)
    (33/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.576175481 seconds)
    (34/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065504709 seconds)
    (35/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.062728822 seconds)
    (36/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.08445255 seconds)
    (37/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.091625413 seconds)
    (38/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064794286 seconds)
    (39/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065640362 seconds)
    (40/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076212987 seconds)
    (41/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063844569 seconds)
    (42/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.116842262 seconds)
    (43/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078730438 seconds)
    (44/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.544585293 seconds)
    (45/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068695409 seconds)
    (46/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.623369498 seconds)
    (47/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.331846155 seconds)
    (48/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.072554568 seconds)
    (49/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070881976 seconds)
    (50/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.101057654 seconds)
    (51/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063462608 seconds)
    (52/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06679072 seconds)
    (53/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064442531 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.677408918 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.14882675 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06628531 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.288082006 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.069916076 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067222273 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.06805313 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.099054153 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066524587 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067566733 seconds)
    (64/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063282776 seconds)
    (65/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.071848531 seconds)
    (66/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.084061975 seconds)
    (67/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.014925482 seconds)
    (68/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.153889935 seconds)
    (69/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.085965768 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067714321 seconds)
    (71/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.426381245 seconds)
    (72/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.076805584 seconds)
    (73/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069655039 seconds)
    (74/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070575948 seconds)
    (75/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096504764 seconds)
    (76/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135868203 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066680939 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06604671 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.110544523 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.235125174 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.091552172 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068709191 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065613009 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064654038 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.530637919 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.978077391 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068975144 seconds)
    (88/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062860373 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.50151159 seconds)
    (90/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067407914 seconds)
    (91/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.06276385 seconds)
    (92/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064628728 seconds)
    (93/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066354412 seconds)
    (94/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.087351384 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065449925 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062222335 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06296765 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100176938 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067682489 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.59322454 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.06676374 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.476874294 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.069351542 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.10105868 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.121795144 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066574373 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.104339628 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.066527886 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063856336 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072311317 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064732541 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063548308 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068170903 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064623786 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065594611 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068010373 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067626423 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066478023 seconds)
  done (took 23.329148035 seconds)
done (took 40.579043812 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.395561639 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.07681136 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.076534221 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.076387033 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.07632708 seconds)
  done (took 1.914702877 seconds)
done (took 3.235974851 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.253069908 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.074108393 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.062590265 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.202480953 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.086665647 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.176745335 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.339291822 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.169331375 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.088306483 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.088078941 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.088669067 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.220673742 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.232079201 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.090200727 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.161152464 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.233863086 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.090737415 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.066184226 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.089100179 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.090714378 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.090569407 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064309926 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.088938796 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.090424073 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.161502494 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.088730299 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.063365738 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.16341094 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.091658572 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.168117393 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.091735594 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.090704681 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.091528692 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.163418293 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.091814162 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.163510553 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064194121 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.091449178 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.092798342 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.096039401 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.0952437 seconds)
  done (took 6.363004607 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.07679175 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07947234 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080780414 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060010487 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069054705 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079271458 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060166738 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078873356 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099838778 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079506693 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079103163 seconds)
  done (took 2.157630062 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070777249 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07997621 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083798041 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059596112 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07053444 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.08026081 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059920634 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07988898 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08261225 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080268374 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080176047 seconds)
  done (took 2.075869482 seconds)
done (took 11.83399545 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.189698654 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.087090741 seconds)
  done (took 1.504977275 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.25630853 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.494486289 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 4.234936904 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123032509 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.102039565 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.120319435 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.227648724 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098930858 seconds)
  done (took 7.065609084 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096498444 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067702795 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095298523 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065402906 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065659771 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066345325 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065434497 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066541834 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065415329 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067389063 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.065035942 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067068504 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066004855 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065472212 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065762396 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066629255 seconds)
  done (took 2.493020074 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 0.100527514 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 0.06718103 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095762158 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 0.059781287 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 0.069522595 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 0.060820656 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.068411738 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07018966 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 0.067777933 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 0.067817164 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069231267 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 0.067938745 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068769198 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 0.068935757 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070059686 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 0.071066847 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 0.071573047 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068608939 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071134745 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 0.072026096 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 0.070897366 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 0.071930389 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072840566 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 0.070110352 seconds)
  done (took 3.082574199 seconds)
done (took 15.395017744 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.176553788 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072573814 seconds)
  done (took 1.493385673 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09283387 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090567236 seconds)
  done (took 1.447686533 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072504218 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058338514 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.074588203 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.06718748 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058975745 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.05887331 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.073814562 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.05900649 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.05871841 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058865854 seconds)
  done (took 1.907920784 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063158274 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.065150422 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.063161385 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.061659548 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.063837072 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059693139 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062096445 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060132498 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.065671745 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05898629 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.062582182 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080271413 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.062353325 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08075586 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062279258 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.062797011 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.064876294 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063153561 seconds)
  done (took 2.431559124 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061589141 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059166906 seconds)
  done (took 1.391601424 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064298235 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059172504 seconds)
    (3/7) benchmarking "month"...
    done (took 0.060933727 seconds)
    (4/7) benchmarking "year"...
    done (took 0.060717677 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059174644 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058596387 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059191173 seconds)
  done (took 1.68537175 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.425309782 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.19291993 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.426613833 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06801226 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081404126 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263895598 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06303877 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067393997 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067217971 seconds)
  done (took 2.961030287 seconds)
done (took 14.59542994 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08381486 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.180558287 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109394493 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415402416 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.077616906 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06551007 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.094748979 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.207251946 seconds)
done (took 2.521381745 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.285141895 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.19616634 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.254945296 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.145870265 seconds)
  done (took 2.870549128 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.41718075 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.165851521 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074594333 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065260594 seconds)
  done (took 2.007115095 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06575774 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069419957 seconds)
  done (took 1.41755366 seconds)
done (took 7.86954548 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073158422 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059149571 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093592989 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.060775406 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061191679 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060728782 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060125066 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060097981 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061003537 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059041016 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.061064578 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06101221 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061256698 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060876024 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060770325 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060963473 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0607683 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061043889 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061206208 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061970237 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061208059 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061678813 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.059971693 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0600268 seconds)
  done (took 2.804947869 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079719225 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063522546 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06398003 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063841722 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064499151 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064203049 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064183015 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063259064 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064259 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062939748 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064605986 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064570155 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063133503 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064764403 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063221135 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064763052 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064417134 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063532332 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063150703 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064750091 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064435114 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063935481 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065553101 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065085541 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065579847 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065614777 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064114855 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064358985 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065299748 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065775643 seconds)
  done (took 3.238262696 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067118685 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057539982 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057803131 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067676374 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057402284 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.05779687 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058278257 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057539368 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057987338 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058813441 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058274004 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.05780596 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058500731 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057827957 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.05786396 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058211578 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062771221 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078135038 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058018055 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057694755 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062602145 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057953575 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057799521 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057746827 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.05854563 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058223736 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058247084 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058700635 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058513673 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059369202 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058689766 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066173035 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064675781 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058781095 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068926059 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063807122 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058532157 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065168615 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059555593 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058442228 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059054238 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058762383 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058849995 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058776219 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069238674 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059169995 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060035486 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059278821 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059436554 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.060413104 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060702491 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061952098 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069990326 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.064831649 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059832778 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060693508 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059342249 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.05985595 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059370876 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058849709 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058905646 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062944221 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060430488 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060704787 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08241092 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.06190207 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070147216 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060052156 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061484853 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064499022 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060883772 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080371587 seconds)
  done (took 5.708568409 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.072868978 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069164179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077414852 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068885859 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062695657 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059712055 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.062667168 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059673746 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068630136 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.062890715 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060257226 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063500608 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069010753 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063328879 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060748947 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068918693 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.063474746 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06292096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059989637 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0629258 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060274355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.062452022 seconds)
  done (took 2.755783411 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.143479417 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064058524 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105461692 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067905432 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066201551 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067536069 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063989669 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063999655 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064064576 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064515218 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064544779 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064173897 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066213104 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064735363 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064654792 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064562128 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064721364 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064970773 seconds)
  done (took 2.600865218 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077111426 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063746072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089770365 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063248883 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063671958 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063378511 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067169985 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067373075 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063549979 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063876466 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067505869 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063516397 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06350452 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063922293 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063584565 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0643983 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063503406 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065076911 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067602188 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067797179 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067710622 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067867007 seconds)
  done (took 2.767151064 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078708393 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062919349 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078459199 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064018778 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057984143 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058342664 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064647119 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063177537 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064628483 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062796934 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063198168 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058151285 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065140891 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063168377 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065308047 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063162037 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062875112 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063223068 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062850171 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058134094 seconds)
  done (took 2.578665839 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097212322 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060645173 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0603279 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064963874 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060671375 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060791234 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065155265 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060592419 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072091173 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084700764 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060800726 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060680404 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065336867 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.063533216 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060697914 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065113279 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065305384 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065629968 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064274428 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06139141 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085282221 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061953121 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06653536 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061736472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061537897 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061513015 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061557178 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.064552884 seconds)
  done (took 3.143329003 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06546837 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061444336 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061547555 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061346366 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061482418 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061205225 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061441093 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061661385 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061277807 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061687246 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06148886 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06127952 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061341433 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061229023 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061348264 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061421919 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061286875 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061666715 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061700598 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061672239 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061504107 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061485531 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061479978 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061803861 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061732912 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061734789 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062145946 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062088306 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061837631 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062160599 seconds)
  done (took 3.160758784 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073379643 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068805173 seconds)
  done (took 1.447494445 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0622973 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07514406 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057302507 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070424486 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065988508 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061846992 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066558765 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066261208 seconds)
  done (took 1.823882547 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.091773588 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.115264106 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059660032 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060279525 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.088852438 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125844502 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099222778 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071837543 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07364793 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062595991 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059840222 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099027446 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059154615 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073258795 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060603994 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069425858 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06762807 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078225678 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073257558 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058359516 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072923093 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060797484 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059573711 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061007172 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06067771 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067484301 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076437134 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072999288 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069028636 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058076208 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079452724 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05907586 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06031131 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069097026 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09125454 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059416136 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097113221 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059505559 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064005649 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.05872621 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071912734 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080519403 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074021461 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077614513 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060704427 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06101321 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058628158 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060891062 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063166917 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06881524 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058786319 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06733989 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058371756 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060579713 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070169013 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059494713 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064139544 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068852746 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07356611 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07046173 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.0720355 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075302836 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068626085 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068141316 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060111603 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07966559 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061096361 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073428102 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075083676 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060864642 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073384736 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059063775 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058502606 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059387788 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094254373 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061427041 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060720185 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059592102 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060514009 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062279605 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071114679 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066359384 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068840296 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064402015 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077597617 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070763499 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060822722 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069390333 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.079955502 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064996112 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061137474 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.078946563 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06511243 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06087395 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080583416 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072252126 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.063532581 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062826316 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065567145 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076705165 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063493733 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060831169 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071299437 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.063997881 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.252767206 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063667989 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067999974 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058848238 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072447042 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064053203 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.05987645 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057400174 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063286025 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059118903 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057211639 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068087499 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058329266 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07312147 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0654305 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073326315 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073853047 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069399339 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074620372 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058201355 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057133824 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076579295 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067928786 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059391353 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07663988 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057656975 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06897704 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057616429 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059424069 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067957835 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057305608 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059673732 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058090207 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.06351769 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.05946672 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059703452 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064271962 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067365468 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07067032 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059229374 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067689997 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058703467 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074642027 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06911065 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063719496 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062103942 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059656502 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07164752 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066573838 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06933472 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058971988 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060193098 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059571461 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070557526 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069495898 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061127927 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067632794 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064398292 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059944969 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.05977592 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060575162 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063564493 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062515004 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060087489 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067744331 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068572007 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073753752 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066512184 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068899561 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058383621 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058819701 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060908732 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058868358 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064367332 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069056221 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.0753837 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071569283 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081189257 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.05963079 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069712706 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060869047 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076770337 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073407276 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060626927 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064317727 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058717938 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061284114 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069647535 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072631631 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075694345 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076657903 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065900962 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065994249 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060501982 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07670001 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061376284 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070001474 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070905392 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067362304 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061327436 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062541839 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070638407 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065851357 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06154654 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.077925533 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070055417 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061357689 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076757757 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.062075881 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.0732021 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061198844 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065582296 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067317819 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064011333 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072345579 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.238104026 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058528256 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059659303 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074893998 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060320802 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059912373 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067112751 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07398517 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063512626 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066647821 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069226241 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068841764 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063098719 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068546422 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059108476 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068158518 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060976307 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070134405 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058078234 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076311844 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05718349 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073834791 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058476649 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069579568 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058800215 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068191872 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059215272 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.0756015 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059880554 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059054206 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07029282 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057237418 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067959193 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.05776407 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064005971 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065314356 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068112544 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059779356 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068104412 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059803524 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067837754 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063450347 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066912301 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068300531 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064119967 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058782219 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068008225 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073443413 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067936467 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060517767 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060619696 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059736479 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06912924 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060805143 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06065943 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068140012 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064841693 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065783938 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060893289 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061229615 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060906107 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068385486 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069397 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078158709 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06848838 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067376232 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068955181 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058941204 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075451037 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059440245 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067349979 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058295085 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066427641 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069378875 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059452579 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079010859 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060729344 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067768978 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072102497 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068646639 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063609244 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078114021 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062767315 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068554712 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06841347 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064879681 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067084216 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061799171 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06901394 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070080009 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071106978 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060892708 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069135013 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070967989 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062741797 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.071135785 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063105195 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070058648 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063036259 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060024111 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066245432 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073455421 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066342005 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066711675 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061427194 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059839111 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061744474 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071226761 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067233328 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071433867 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078398376 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060806173 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.063015063 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061687773 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066325727 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081762377 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.236169738 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068293122 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064208536 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057902417 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059986952 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060146421 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058666691 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061267443 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057531326 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057853635 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069240217 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059714169 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063114366 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058620978 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059095808 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068809891 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062120507 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058677206 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065221535 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057885147 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063742833 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057409636 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059458593 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063294522 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057644194 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062512379 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069189154 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075143495 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065351416 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067746718 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059240608 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066740705 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074180202 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06556945 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059329303 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067984115 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057465511 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077134187 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067959193 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067340515 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068383357 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059378385 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075887381 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063349681 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068763637 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075076026 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060254188 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066636042 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058748121 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075397222 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064053458 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058606912 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067631793 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067551866 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065399241 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071196742 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060004917 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068174732 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06457291 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063445297 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061037507 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.06097778 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068734302 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076147225 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060230085 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064911938 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067836979 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068372988 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064425269 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072133037 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068064852 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060960224 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061077179 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063518722 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060294547 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071800425 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059801582 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064370299 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06427288 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058948153 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066417296 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076424287 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06944248 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069494363 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059099964 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058582269 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078077405 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064005361 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063168541 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07125249 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070517814 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072692095 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069884129 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077613706 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061726113 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067324887 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074040046 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061937242 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060899148 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065062988 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062657251 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070848276 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071543864 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06909998 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063111776 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068384084 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075100992 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062418174 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066628709 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.068861807 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062681816 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072974725 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070430283 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070939773 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06365198 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061562343 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065822155 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.230149828 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067643726 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068331479 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059613274 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065429633 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072408701 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066428271 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061174917 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057884813 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060997046 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067861643 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064854254 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060518685 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064230182 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063234287 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068034285 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069773254 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065156636 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058741309 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075838988 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066847499 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067885563 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059818089 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059819881 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058872007 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057846536 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069827251 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057863063 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059606151 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063444429 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059793725 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076203285 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067003962 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075203438 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061756464 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065783633 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060320619 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069834559 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064398619 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059465503 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069905269 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058296899 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074952156 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072335923 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065791779 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058885599 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065028445 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067803974 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074960026 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069703486 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068934357 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062572716 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069329525 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060877818 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070614376 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058968651 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.05822681 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069765997 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068621124 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072215174 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059099394 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070057306 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.06128854 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068746309 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068053639 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061167306 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061006671 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061244148 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069422529 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064476765 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069230925 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06468415 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076974083 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060541414 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071130372 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069178876 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070771524 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073877785 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072251696 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068182339 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060279605 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067512764 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068048306 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060695115 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065130027 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063031524 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082714471 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061901471 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061762433 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075270378 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067840635 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.06022095 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068134872 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066407908 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.072015635 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062398489 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.072238779 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.067245506 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062297222 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066865264 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066404013 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0600861 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060707748 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061053069 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071674513 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065987623 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062239965 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082288236 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063738809 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071203508 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073874271 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069577678 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.064036558 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061084122 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.221405531 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073063782 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074879236 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062701947 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067808798 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059937374 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.0682475 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057707058 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067825895 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066949756 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067452667 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057987032 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058796761 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073878211 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074189527 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063479425 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077465336 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067836406 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059542592 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080043614 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067881331 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.05932981 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069560471 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060323696 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057707689 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057591364 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059770438 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07008215 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058053478 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060451192 seconds)
  done (took 41.738529548 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102835045 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059667325 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058125817 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05805265 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065415023 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059667056 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058521821 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059715626 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059611657 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060673914 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058457697 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058601781 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.063819981 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073354165 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065999283 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061863351 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058468189 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059603999 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058612826 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060098505 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.064913214 seconds)
  done (took 2.733811717 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064876783 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.062177832 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061669172 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061849755 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061421429 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.05861081 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.061996824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0585889 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062381003 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058908927 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.062490631 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058674313 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.058901425 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.058943794 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058945011 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060137973 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.062399047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061687484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.058607062 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062073527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060359738 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.062430491 seconds)
  done (took 2.730805175 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06310077 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059254505 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067560826 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057686276 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057583305 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060968408 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057960235 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063221599 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063228335 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063140445 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067884222 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058979684 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057974045 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.06450561 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057808196 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059009704 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102456962 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.05935016 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059357718 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057985908 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.060865192 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068137984 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058482032 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058602229 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063585233 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061556194 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058507029 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061139221 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059352999 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063449274 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059674238 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058279995 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068253361 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06752338 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063525365 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063685548 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060538311 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059617419 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058556227 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.05862115 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067583312 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060541507 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058907127 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060182325 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068180144 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058642267 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058437689 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068406606 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058451829 seconds)
  done (took 4.445276522 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073179363 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108556194 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064330977 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090537953 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070422653 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.063568827 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064275408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091470323 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059430908 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059892316 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.071065718 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071128881 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060820005 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.061916808 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065310158 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061272067 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061917657 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060623037 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.064149205 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061077257 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063747287 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06578383 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.070792861 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071225032 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062230419 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060608419 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060806636 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062412868 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070998523 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064133972 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062606053 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063139182 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071291914 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066274381 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061027868 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061342349 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07526128 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062064075 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06180036 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06025723 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061493926 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06295549 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066330056 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072840595 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061948215 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066715176 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061832602 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059798971 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072059982 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061487281 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065183526 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072702991 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062653463 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061935396 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063102931 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071909995 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062012153 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060711027 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06196392 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071808934 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060375449 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062748735 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07253319 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061481347 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065001601 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072719132 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066888746 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062915806 seconds)
  done (took 6.036209819 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071170468 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093186358 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072553325 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072803194 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068487172 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068633016 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068617755 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068491504 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068487083 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07111989 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068701838 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.130856625 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065777842 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.069938276 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069103878 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069357951 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.06926663 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06925389 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069144253 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069071572 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069236691 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073818461 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069213957 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074810552 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073632384 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06596192 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069041404 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069270209 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074090094 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069148137 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073796155 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069206983 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069232605 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074076199 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073727115 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069381472 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060243879 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069517011 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069736433 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069623186 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066256771 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074510762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0695687 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066829095 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069659168 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069584497 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074588128 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074306158 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071359451 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072603527 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069818298 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074668431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069613354 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069961567 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074819207 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.07790758 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074928654 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075072945 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070220245 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075070905 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074986585 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078029668 seconds)
  done (took 5.915233042 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075824801 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063998775 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07673198 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058948043 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058179942 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067639602 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058327144 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058332175 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064162762 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.064059477 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065614055 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067519304 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069261671 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065674772 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067430338 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069182197 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067806 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068012508 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064837651 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068172628 seconds)
  done (took 2.759383117 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.063671475 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063379518 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.059082469 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07413401 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.05909144 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066670776 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.059302235 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059227778 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059306706 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059210356 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063611815 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063644556 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059314928 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067074048 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062683448 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066579162 seconds)
  done (took 2.425987454 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064877886 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066455792 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.0923592 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060142569 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06170674 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059147856 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059944669 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058934883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061006611 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072919471 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059948569 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.061767063 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059807996 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058988628 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059050087 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.061747954 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060781411 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059870519 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059755815 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.094183304 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071381836 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060716704 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062341226 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060863665 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.061890292 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068231696 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061786674 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06191607 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060330981 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062233668 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.061763407 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070855872 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061946287 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060752889 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.05907549 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059770673 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060168672 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062260934 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062284472 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060314021 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059072027 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061859096 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060259461 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06044816 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061361097 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062302748 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061347108 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070554121 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060492786 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.062382071 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06052441 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06189432 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061177945 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07176539 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062830259 seconds)
  done (took 4.921294942 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079207073 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06387191 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057991132 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057825912 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063264981 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064163774 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063785725 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063992069 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064324746 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058277059 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064347794 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063367585 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064417249 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063855295 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064249528 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064134934 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05814355 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06403413 seconds)
  done (took 2.580706409 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068618999 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063443556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.063578766 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.059691541 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.059993998 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06416754 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058497671 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.05966324 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059715338 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.060112233 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060093809 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.059728378 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059722648 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.059865546 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063606704 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06009443 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.059721084 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058536971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.059877376 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058633734 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064637652 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058952018 seconds)
  done (took 2.760478745 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.117628199 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082194915 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.157214456 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078539125 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088592653 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070134804 seconds)
  done (took 2.015976544 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095198675 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095872108 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063517246 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063410056 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067671878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066269432 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066232322 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066447945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069128136 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07180435 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066265633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069348735 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069202002 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070916262 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067757233 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067890792 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066911608 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066847204 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064196533 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074504987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067009091 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070131719 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067009229 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066852592 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066935383 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07185209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070331325 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072869813 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067083454 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070494649 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068843288 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067287045 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070502878 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072830448 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064386169 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070408954 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06725996 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074886863 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069132677 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072462244 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064643897 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069291169 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070865721 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070479651 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070944026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067711262 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070425555 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067514752 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067705616 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079053139 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069527687 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075180569 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069378187 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071165789 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070974763 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079129506 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073930274 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072935616 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069805123 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074006974 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072939563 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069840723 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072874114 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07406552 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070622335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075247604 seconds)
  done (took 6.083486303 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105080281 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064340367 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066352074 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071601045 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071134176 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066656091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066709943 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0666164 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066675338 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064236219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101856395 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066950472 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071277846 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071104137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06670323 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066764823 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067224359 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071775851 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06473164 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078218243 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067273796 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07191345 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072007372 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07186235 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068932553 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067193663 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067243795 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067165312 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067043607 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070091904 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067396181 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072016654 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064801895 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071967013 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067323732 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067278519 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070096853 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06753131 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069342192 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072604755 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075479254 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06767572 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067585941 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073561198 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06763903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067712251 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065056878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067708822 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065226757 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07365465 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073648629 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073770374 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072777893 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06780003 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067854919 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067839202 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067854557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068066936 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069791611 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072864598 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067955789 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079650214 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068207738 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068115936 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073408267 seconds)
  done (took 6.096328457 seconds)
done (took 126.55147299 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.252089113 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.223591623 seconds)
  done (took 1.881873247 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074847459 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.265609196 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075714139 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.072192376 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.132809257 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.131848792 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106100365 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070269305 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072294801 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069710546 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168457506 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106568986 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070196277 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.337375025 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070963724 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.069663986 seconds)
  done (took 3.328875325 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.14459379 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.207783996 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.0800287 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067893899 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.15080035 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075834588 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.071108518 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074354418 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075514621 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.06892902 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.116840357 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.082605934 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.073325963 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.074372411 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.070837385 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07311618 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07412179 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075372755 seconds)
  done (took 3.094437945 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103792147 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.111223848 seconds)
  done (took 1.657894917 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160191372 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107287467 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144847218 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351770956 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.140706692 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.141279889 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144970722 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143772908 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115034329 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138693156 seconds)
  done (took 3.024333907 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106701805 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102368146 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.304902987 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100605442 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079833438 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074753086 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072651051 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077582272 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072828275 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074363243 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120084286 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073032136 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070192262 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121972209 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.097003336 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104935723 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069319967 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076602091 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078257069 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069068733 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073830504 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.0781801 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.176653279 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077261724 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.099684444 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.073335511 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075003191 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075213977 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072271185 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076354857 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076925546 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099959067 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076809575 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083378344 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.074765411 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.096094417 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070335683 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.098634111 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072883572 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07083999 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073166579 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076994851 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070677183 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.076271911 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07351266 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075910853 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078993154 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069565003 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073709697 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07301858 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071156834 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074680544 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074494529 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.075553524 seconds)
  done (took 6.131599062 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.12297689 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109635109 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068075503 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117534826 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108858205 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068269312 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.12380069 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103712752 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.121730124 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06765452 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067765009 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066969958 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074522547 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078644788 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119497937 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113621585 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069951617 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068346594 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112297248 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112546439 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067161964 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124096346 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115553584 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111375486 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066932059 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068067882 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066670926 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067284109 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075340696 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074937842 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067367709 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077708728 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.079316227 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074782757 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066655855 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066878097 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066802245 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075128504 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076878071 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076700467 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074013194 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066502041 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066974167 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06747645 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067853735 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066428546 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076753249 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075844011 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077136724 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06925534 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069462283 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068093563 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068725463 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074869184 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073895408 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075409075 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078269905 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068442128 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067576313 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069116938 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078915629 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076228301 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075995079 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068714413 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077005867 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067538256 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077938693 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081037486 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067727427 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068212071 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067806326 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06782569 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068315879 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074467501 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074522826 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068292008 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069645741 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068852119 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077914651 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076695154 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069011076 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078772349 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068651007 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069051271 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06947682 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070326453 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080258115 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078959948 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070686912 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070981852 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070293374 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070264162 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069606284 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080684941 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231610194 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074495559 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075557767 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067126801 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075811096 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074415598 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067014367 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072866815 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066392175 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066691788 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06647747 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072551854 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072286013 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074062672 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06635928 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066034533 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074944541 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078374705 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066273038 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072234397 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074373928 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072809238 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065915668 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075793718 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066428672 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07514114 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066437341 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074585979 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066612101 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072925533 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066618293 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065751568 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066375455 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075387496 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067615065 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066245594 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066465357 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069232055 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072936856 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076830911 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067455104 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074621059 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074531079 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067695962 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076309645 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067247527 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076535439 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067461995 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067458904 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066573302 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078312691 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067253669 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068334025 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06749142 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07635565 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067521533 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076524933 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073843914 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067015183 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077410788 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076803339 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074123184 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076977786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068282841 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067748174 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067414606 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067606871 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076663129 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078218991 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069032713 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067578441 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073862102 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077211809 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067306547 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074275787 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074378687 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074989245 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068075995 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067997678 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077916399 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080523787 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076792361 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079794915 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077755931 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069284686 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076597991 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079839874 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069163846 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08354272 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069686322 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081255522 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081375246 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077740333 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081692506 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.241155003 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075481727 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075297744 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077108087 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066291457 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066342785 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.072521977 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066241442 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066390952 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072081429 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067056519 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067751345 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080452375 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066778095 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075246775 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06607003 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073267111 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065777499 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06681952 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077693059 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066395928 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066785917 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073340293 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066388331 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072340761 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074997315 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072438659 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066278949 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066630587 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075581225 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075610605 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066345665 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066176234 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066777868 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074762235 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074053221 seconds)
  done (took 18.482693299 seconds)
done (took 39.060271111 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169270041 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111852159 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.223057548 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202860681 seconds)
  done (took 2.242976106 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.101030601 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.063273918 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.105492189 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.115611234 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.063540804 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.101218155 seconds)
  done (took 2.028817802 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.200595677 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174923752 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.248794376 seconds)
  done (took 2.099565762 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 0.366512256 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.149709829 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 0.257173852 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 0.513635581 seconds)
  done (took 2.86359371 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.13502472 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130839893 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.075312616 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.144157604 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.082182534 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.060231968 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.143869265 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.067819307 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.096987866 seconds)
  done (took 2.475996716 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.140009816 seconds)
done (took 13.331350056 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.2729434 seconds)
    (2/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.140339112 seconds)
    (3/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.326331293 seconds)
    (4/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.274045993 seconds)
    (5/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.296090223 seconds)
    (6/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.106671786 seconds)
    (7/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122194269 seconds)
    (8/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.30463783 seconds)
    (9/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077717143 seconds)
    (10/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.231258053 seconds)
    (11/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073648852 seconds)
    (12/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.247577209 seconds)
    (13/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.121886368 seconds)
    (14/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153802446 seconds)
    (15/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.148179523 seconds)
    (16/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092475996 seconds)
    (17/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.224042831 seconds)
    (18/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.292567554 seconds)
    (19/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092719114 seconds)
    (20/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.202216541 seconds)
    (21/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.083648157 seconds)
    (22/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074754377 seconds)
    (23/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.186215302 seconds)
    (24/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.161681114 seconds)
    (25/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076984336 seconds)
    (26/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085304476 seconds)
    (27/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.074372379 seconds)
    (28/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072226009 seconds)
    (29/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074380497 seconds)
    (30/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.255469436 seconds)
    (31/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.208315656 seconds)
    (32/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151158825 seconds)
    (33/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069833456 seconds)
    (34/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064548505 seconds)
    (35/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076501382 seconds)
    (36/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072849763 seconds)
    (37/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073810417 seconds)
    (38/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076810126 seconds)
    (39/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.13315883 seconds)
    (40/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.147133784 seconds)
    (41/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.19304415 seconds)
    (42/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.1302693 seconds)
    (43/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082107266 seconds)
    (44/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071171961 seconds)
    (45/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.080340575 seconds)
    (46/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.117745676 seconds)
    (47/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07282723 seconds)
    (48/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.232054076 seconds)
    (49/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.129528193 seconds)
    (50/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092343566 seconds)
    (51/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085347307 seconds)
    (52/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.20728121 seconds)
    (53/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089716446 seconds)
    (54/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.232536659 seconds)
    (55/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.12964857 seconds)
    (56/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.079192089 seconds)
    (57/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.147752138 seconds)
    (58/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092995525 seconds)
    (59/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.151741974 seconds)
    (60/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.148317529 seconds)
    (61/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074432732 seconds)
    (62/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.08485361 seconds)
    (63/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.142837957 seconds)
    (64/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.29884258 seconds)
    (65/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074470479 seconds)
    (66/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074348583 seconds)
    (67/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.298025236 seconds)
    (68/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092002457 seconds)
    (69/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.242185349 seconds)
    (70/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070548836 seconds)
    (71/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.14014158 seconds)
    (72/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064121414 seconds)
    (73/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.17270091 seconds)
    (74/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.064294856 seconds)
    (75/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.139716243 seconds)
    (76/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077178184 seconds)
    (77/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076299778 seconds)
    (78/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.204325566 seconds)
    (79/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.068324072 seconds)
    (80/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.244953037 seconds)
    (81/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.129141279 seconds)
    (82/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063928715 seconds)
    (83/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071902525 seconds)
    (84/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.203316741 seconds)
    (85/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093584843 seconds)
    (86/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.131595471 seconds)
    (87/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064779275 seconds)
    (88/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071386482 seconds)
    (89/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073728995 seconds)
    (90/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.081309828 seconds)
    (91/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 0.159079931 seconds)
    (92/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072307063 seconds)
    (93/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.23887849 seconds)
    (94/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089561435 seconds)
    (95/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169924612 seconds)
    (96/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071871787 seconds)
    (97/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.106819665 seconds)
    (98/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072655203 seconds)
    (99/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068760461 seconds)
    (100/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071465901 seconds)
    (101/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064763704 seconds)
    (102/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069109872 seconds)
    (103/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068655114 seconds)
    (104/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.087858507 seconds)
    (105/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087076417 seconds)
    (106/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 0.066909675 seconds)
    (107/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065193355 seconds)
    (108/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073040753 seconds)
    (109/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064537315 seconds)
    (110/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086593115 seconds)
    (111/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.151382705 seconds)
    (112/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.294807503 seconds)
    (113/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065921883 seconds)
    (114/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.209422369 seconds)
    (115/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.272668985 seconds)
    (116/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09350659 seconds)
    (117/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.185417294 seconds)
    (118/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.069108971 seconds)
    (119/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.127720643 seconds)
    (120/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064428992 seconds)
    (121/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.137665306 seconds)
    (122/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076698614 seconds)
    (123/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.143282922 seconds)
    (124/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0724959 seconds)
    (125/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072301606 seconds)
    (126/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07005344 seconds)
    (127/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.151541069 seconds)
    (128/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088253756 seconds)
    (129/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.180932398 seconds)
    (130/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074803219 seconds)
    (131/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192975859 seconds)
    (132/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066403219 seconds)
    (133/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.140797705 seconds)
    (134/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065553086 seconds)
    (135/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.083160455 seconds)
    (136/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.069541414 seconds)
    (137/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.212188112 seconds)
    (138/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068153439 seconds)
    (139/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.203240146 seconds)
    (140/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115316769 seconds)
    (141/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072412508 seconds)
    (142/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074480362 seconds)
    (143/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.085118614 seconds)
    (144/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.189454483 seconds)
    (145/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.147418425 seconds)
    (146/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068333097 seconds)
    (147/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07196897 seconds)
    (148/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066600591 seconds)
    (149/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072813734 seconds)
    (150/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.074170258 seconds)
    (151/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077160767 seconds)
    (152/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068714361 seconds)
    (153/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.066964896 seconds)
    (154/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.178787311 seconds)
    (155/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.307293807 seconds)
    (156/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069353485 seconds)
    (157/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074990859 seconds)
    (158/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114476566 seconds)
    (159/341) benchmarking ("sort", Bool, false)...
    done (took 0.141775433 seconds)
    (160/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.065549754 seconds)
    (161/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.080266551 seconds)
    (162/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.227797395 seconds)
    (163/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065863732 seconds)
    (164/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.141286998 seconds)
    (165/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.143011108 seconds)
    (166/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.200639966 seconds)
    (167/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065573175 seconds)
    (168/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07193352 seconds)
    (169/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07466128 seconds)
    (170/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129748781 seconds)
    (171/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067291693 seconds)
    (172/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.066351411 seconds)
    (173/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070523935 seconds)
    (174/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073024844 seconds)
    (175/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.063777996 seconds)
    (176/341) benchmarking ("sort", Int64, false)...
    done (took 0.064992715 seconds)
    (177/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.064346212 seconds)
    (178/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.063718339 seconds)
    (179/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.228940204 seconds)
    (180/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064362932 seconds)
    (181/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089327375 seconds)
    (182/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06500497 seconds)
    (183/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 0.086272422 seconds)
    (184/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.205840249 seconds)
    (185/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.083886887 seconds)
    (186/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070745512 seconds)
    (187/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.14769026 seconds)
    (188/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.169321353 seconds)
    (189/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065099658 seconds)
    (190/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.064041152 seconds)
    (191/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063413272 seconds)
    (192/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.082041512 seconds)
    (193/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129245114 seconds)
    (194/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.080907816 seconds)
    (195/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072776813 seconds)
    (196/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065738778 seconds)
    (197/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.227919915 seconds)
    (198/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066712947 seconds)
    (199/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.064893913 seconds)
    (200/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069071986 seconds)
    (201/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065352112 seconds)
    (202/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.066965731 seconds)
    (203/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068916402 seconds)
    (204/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071263848 seconds)
    (205/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.15558353 seconds)
    (206/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065509616 seconds)
    (207/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.064785694 seconds)
    (208/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064806232 seconds)
    (209/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172674199 seconds)
    (210/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074105332 seconds)
    (211/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070460861 seconds)
    (212/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.08394473 seconds)
    (213/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06601638 seconds)
    (214/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06419206 seconds)
    (215/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.181109302 seconds)
    (216/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.078979984 seconds)
    (217/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069392626 seconds)
    (218/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08732531 seconds)
    (219/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.071428716 seconds)
    (220/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066509943 seconds)
    (221/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064689402 seconds)
    (222/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064583653 seconds)
    (223/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084775716 seconds)
    (224/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.065005484 seconds)
    (225/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065301061 seconds)
    (226/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070341305 seconds)
    (227/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.147697938 seconds)
    (228/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.065630516 seconds)
    (229/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.148421767 seconds)
    (230/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072004642 seconds)
    (231/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.069203323 seconds)
    (232/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073326048 seconds)
    (233/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.067190731 seconds)
    (234/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071744204 seconds)
    (235/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064880276 seconds)
    (236/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.067178733 seconds)
    (237/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.069120301 seconds)
    (238/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.064723445 seconds)
    (239/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06549372 seconds)
    (240/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065017193 seconds)
    (241/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175331637 seconds)
    (242/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.199896062 seconds)
    (243/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07752777 seconds)
    (244/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.0757299 seconds)
    (245/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.067610433 seconds)
    (246/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064820896 seconds)
    (247/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065160279 seconds)
    (248/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072394141 seconds)
    (249/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.220034396 seconds)
    (250/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065999095 seconds)
    (251/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066224202 seconds)
    (252/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072828859 seconds)
    (253/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.071038415 seconds)
    (254/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066641282 seconds)
    (255/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068836082 seconds)
    (256/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071600212 seconds)
    (257/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.067681792 seconds)
    (258/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115624862 seconds)
    (259/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.207564817 seconds)
    (260/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 0.072253511 seconds)
    (261/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.072279724 seconds)
    (262/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.337827424 seconds)
    (263/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.188980183 seconds)
    (264/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065252878 seconds)
    (265/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079877957 seconds)
    (266/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067356169 seconds)
    (267/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.065143453 seconds)
    (268/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066177427 seconds)
    (269/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065194431 seconds)
    (270/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093059779 seconds)
    (271/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063815713 seconds)
    (272/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066810573 seconds)
    (273/341) benchmarking ("sort", Float64, false)...
    done (took 0.13617814 seconds)
    (274/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.06484448 seconds)
    (275/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071045483 seconds)
    (276/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06452661 seconds)
    (277/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071946874 seconds)
    (278/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063748164 seconds)
    (279/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066128746 seconds)
    (280/341) benchmarking ("sort", BigInt, false)...
    done (took 0.264876313 seconds)
    (281/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064868141 seconds)
    (282/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.068006505 seconds)
    (283/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064118636 seconds)
    (284/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.07167425 seconds)
    (285/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063371769 seconds)
    (286/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.158764358 seconds)
    (287/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.078875546 seconds)
    (288/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.067910858 seconds)
    (289/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063819458 seconds)
    (290/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088822135 seconds)
    (291/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075062907 seconds)
    (292/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07563026 seconds)
    (293/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063825605 seconds)
    (294/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.076492005 seconds)
    (295/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06394149 seconds)
    (296/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.064115257 seconds)
    (297/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063654484 seconds)
    (298/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064083525 seconds)
    (299/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.064296773 seconds)
    (300/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065041533 seconds)
    (301/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.188350828 seconds)
    (302/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08608916 seconds)
    (303/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064165805 seconds)
    (304/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064468043 seconds)
    (305/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.213591914 seconds)
    (306/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066584279 seconds)
    (307/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140914172 seconds)
    (308/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065286842 seconds)
    (309/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06474223 seconds)
    (310/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064685125 seconds)
    (311/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064245576 seconds)
    (312/341) benchmarking ("sort", Int8, false)...
    done (took 0.148232772 seconds)
    (313/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.065456284 seconds)
    (314/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.13696622 seconds)
    (315/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09073739 seconds)
    (316/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064856823 seconds)
    (317/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072407906 seconds)
    (318/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076145902 seconds)
    (319/341) benchmarking ("sort", Float32, false)...
    done (took 0.13708131 seconds)
    (320/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06516132 seconds)
    (321/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066096218 seconds)
    (322/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065326359 seconds)
    (323/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.068873851 seconds)
    (324/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067105593 seconds)
    (325/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.207620025 seconds)
    (326/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068512613 seconds)
    (327/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.067186439 seconds)
    (328/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.065009877 seconds)
    (329/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065075452 seconds)
    (330/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064090163 seconds)
    (331/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.162572919 seconds)
    (332/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.247019874 seconds)
    (333/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07119314 seconds)
    (334/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07245185 seconds)
    (335/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065654762 seconds)
    (336/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065530865 seconds)
    (337/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064695375 seconds)
    (338/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.065219417 seconds)
    (339/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064817159 seconds)
    (340/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065164046 seconds)
    (341/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067756884 seconds)
  done (took 38.642596757 seconds)
done (took 40.142215703 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12684413 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.077466622 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075131259 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072089761 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07588916 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075994721 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075831016 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073429476 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.075824379 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075377868 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.105599266 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063116096 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070674999 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.07806218 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072259032 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.078656883 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075350517 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078213293 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063985917 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.078415857 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.089472236 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076707598 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072606002 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078345368 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064441859 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072454421 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119201127 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083871875 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068828783 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073797897 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071519308 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.0799743 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071724361 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071257212 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073593399 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069097175 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074202218 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070360857 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11973554 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069512813 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064802641 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076550872 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071226879 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071961156 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072495874 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075891872 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069298061 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.077500567 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06384527 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075169848 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119881293 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069678472 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.069013571 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072643207 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069260297 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073497598 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068756221 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.075439876 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069132623 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.07572555 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073526315 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071954825 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063903778 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072653878 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071209089 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071406298 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062860463 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069494336 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06394695 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063977145 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.063483114 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072949315 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070946001 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069146634 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063292416 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064290267 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063674562 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076038175 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071365163 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07325653 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064724985 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069613049 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069114334 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064872866 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069991408 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076020343 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.06362848 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065105053 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.0637904 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.079482512 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071230857 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064663626 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.076573749 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070254096 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070070302 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064646437 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064205441 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070254249 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072808903 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.06493474 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063533607 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070290003 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069696056 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074925882 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.066209879 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071205728 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071312626 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064724683 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075007381 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072896447 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.075371804 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07942378 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075644342 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.078420322 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.067210037 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065585326 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07669039 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.232025577 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07004305 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071558308 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068816014 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071339985 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.063980792 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06248648 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068805804 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068944468 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063592744 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.063649688 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063537445 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071789504 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070185208 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.062070654 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.063299477 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071729506 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072387566 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062537167 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062326238 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071688726 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.063549205 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068856843 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068102502 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071671353 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.062664212 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.063505103 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.062174787 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062615676 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062223536 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068226994 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068760835 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.063587944 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071635628 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070225489 seconds)
done (took 12.734717873 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068094787 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.106651021 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.114856127 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.108913928 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077317183 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068077702 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067910345 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083754189 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06744434 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.08920996 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089160825 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085520419 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.127823831 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06279019 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06424563 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064965515 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062429517 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.076615416 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.112849678 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088446941 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106731221 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064215561 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.077578413 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.0845578 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077306738 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083456897 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065918528 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065329354 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067494452 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08192905 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090579301 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06447706 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065727839 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.083766318 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080849787 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073433707 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065504756 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.071477168 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065478629 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.0644964 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066618617 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.083277959 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.071421221 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071816252 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065489785 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065525995 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064671635 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.072084441 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078547363 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070765683 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.077257979 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.081180529 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066240591 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064598629 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062873026 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.072341475 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064524703 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065478766 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065215962 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064554799 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065286748 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067427703 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.070124546 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075184513 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068845256 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.072118309 seconds)
  done (took 6.555599092 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083379432 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092093161 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.07815471 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078238659 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063785761 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064598777 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064640088 seconds)
  done (took 2.144876451 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06827803 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10396774 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11100059 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.111691308 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.120388815 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109402943 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065566698 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097159196 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063962964 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.105180626 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.118788032 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.113681708 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067783816 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077047987 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065449474 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.114075465 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065750229 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072022833 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.109997738 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115634966 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069499064 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095390825 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078696757 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065862161 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.114130194 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106049755 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.067526277 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065884206 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067440501 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064885303 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064716031 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.087855167 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106019507 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079897543 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065714606 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064308059 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.103849919 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065916193 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.1028318 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072308754 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.103144309 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067087428 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067419846 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064945138 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066107004 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.108419691 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066111979 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064927125 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064617049 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107233647 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064743694 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.105980421 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067447151 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069986477 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072231913 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071728026 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072641108 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06571143 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109605123 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.075639094 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067340764 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119028373 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11795154 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105274397 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.118172261 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.074808167 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109196132 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105786112 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065765894 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065550817 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066214731 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.11924346 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.069238296 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068306472 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071065882 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073573221 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.113336592 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124556341 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.126455545 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08176879 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070076929 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067400065 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.242685196 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.119948186 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069620353 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06465225 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065373323 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063972509 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069145537 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068805365 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069189233 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064148729 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074173796 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066912952 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06619085 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111668866 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064461681 seconds)
  done (took 9.913255251 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069694619 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067012692 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065503949 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065458178 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065586158 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065334112 seconds)
  done (took 2.035175377 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092176623 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065560256 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077104065 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065364952 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.087012775 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107635496 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.106700026 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067060122 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.0813502 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07648853 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107601393 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109176551 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.109356508 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066785677 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107085634 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066993139 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108600611 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069193738 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076555571 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067466605 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079490069 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067015135 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06727549 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.115929553 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068408825 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074793006 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066771405 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077058481 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076505704 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.067272011 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067023082 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068245146 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074966883 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.067286173 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.11026627 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075356084 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066434619 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070612386 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06797496 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068193369 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11210792 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067699149 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07011794 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070612675 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.06736787 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074953216 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070615682 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070019362 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109772673 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07081038 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070405519 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066395013 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068016419 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070524165 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074818171 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067153264 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070401397 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109998081 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067506553 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075185782 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066381367 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068368666 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067625562 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068355108 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071603375 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070990352 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075353091 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067774403 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067893632 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066560503 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071063446 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066698122 seconds)
  done (took 7.178193403 seconds)
done (took 29.424527356 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54302611 seconds)
  done (took 2.138590943 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.955465245 seconds)
  done (took 2.5963972 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.178875908 seconds)
  done (took 11.822859824 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389790244 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473205769 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.757282822 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139187292 seconds)
  done (took 3.428612184 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.87209643 seconds)
  done (took 2.522517381 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238740635 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225401001 seconds)
  done (took 2.132648307 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.452490784 seconds)
  done (took 2.090110014 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.208518035 seconds)
  done (took 2.850679391 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235212011 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160775916 seconds)
  done (took 2.045245171 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.626522319 seconds)
  done (took 2.264409881 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.71189927 seconds)
  done (took 6.35963427 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.329543268 seconds)
  done (took 2.029740102 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237995493 seconds)
  done (took 1.88243694 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.611092918 seconds)
  done (took 4.249958269 seconds)
done (took 50.074215208 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08646062 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083983185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083811334 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079118549 seconds)
  done (took 1.951130563 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075523893 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068744219 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071167065 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071486538 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069053912 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070715552 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071451263 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067720568 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069080516 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068418952 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066641887 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068242275 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070798462 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067819294 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070365351 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071748797 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068116917 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068397056 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069997067 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067722681 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070621474 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068260153 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066085121 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067685627 seconds)
  done (took 3.307634918 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079381178 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07019956 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.0730755 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068814455 seconds)
  done (took 1.941365153 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.077566542 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.074470257 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082550753 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087283778 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073681433 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074618466 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081514042 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081665863 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063582535 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084292399 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065839846 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064677038 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064600728 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082972047 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080620694 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060035638 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061337274 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074993858 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.076728416 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076886637 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066410857 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063486707 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07414782 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07538921 seconds)
  done (took 3.418428826 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083294008 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063671579 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080381847 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088630317 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089826636 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063559277 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077818546 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090120744 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126082328 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063930933 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06974041 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063649257 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10330013 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063661764 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078814011 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108393037 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111363326 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067507436 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096514166 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063589106 seconds)
  done (took 3.313897362 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07862127 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068689217 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06832825 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063789057 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074297735 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070492973 seconds)
  done (took 2.086900791 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06931225 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.066194444 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065994631 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070235489 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.065774513 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.065695357 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.065115966 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.064281624 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064165856 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.06488896 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064941929 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.065421312 seconds)
  done (took 2.445520329 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.2149084 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070864797 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068381142 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064022335 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.065742653 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064977431 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078994962 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067065135 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087486287 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064986436 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065150279 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067501868 seconds)
  done (took 2.636190072 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105928055 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.108510733 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.140728399 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113344322 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.111838435 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093393267 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.162836439 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.092388539 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.158316137 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.135950203 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115534431 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.091018032 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085783114 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068253517 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098421422 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118296562 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137228958 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071224105 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111565421 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.204712117 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131278279 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134369047 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.146059193 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115485095 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091067409 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.145655576 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095755302 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101024718 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.121678573 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126728589 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117531208 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.096843057 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070504073 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069434999 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150331326 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.108403078 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.120229667 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.09239049 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105834113 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.088426745 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108481499 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.069168808 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083058555 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.112492836 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085888573 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135896577 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.093295991 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116878228 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083016398 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.317845614 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125100704 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.133270691 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.083840207 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102629545 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133819465 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109032634 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130606584 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.10321054 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079803279 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.115701806 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.10320082 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096630156 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104790357 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077321797 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.172351959 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08654115 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.109002131 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108488027 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.092888281 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093331703 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103911654 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.134025826 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.126386107 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.126078566 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139082378 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.091847786 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119461578 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.100781176 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.128181077 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103766932 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.071861113 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.122044549 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129488334 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100091632 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101843516 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132707985 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092847037 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07542862 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.101720599 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.120142198 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080261584 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.115036793 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080735162 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.110889522 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139362535 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100307697 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11403524 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.123993146 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080676943 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.329388559 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106482761 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074074332 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.113761891 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109041417 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151931799 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09228425 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.074268345 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097939233 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099772605 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.149459894 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104099263 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077380168 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105770361 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135808875 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091448036 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.21476536 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092768319 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136804824 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107638538 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084802254 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073128957 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.088587213 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112258684 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106973763 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11089004 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09321683 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.083124294 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085681739 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114196929 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.092863255 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079860116 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.113495525 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.09862413 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073977075 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0873536 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.075510403 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.141293007 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.077793386 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137463144 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12654121 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076596254 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10805293 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.096168171 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.107461382 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.097855015 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119991989 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143673168 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116219806 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.091578 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.096115664 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111055253 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153193621 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.135276192 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.275331496 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.075923044 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098807187 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109799366 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.095096078 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.120566137 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.090986239 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103650402 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099988369 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136578065 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139222725 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095167637 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097749195 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103684172 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.118604449 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072576096 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151782527 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100516063 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115641131 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.085017951 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13748762 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.109721857 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087235119 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085731334 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09851051 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103737559 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107000357 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.143186044 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095146536 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071526269 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092075585 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.143927041 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076500752 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109278389 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.090463182 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.091645744 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.118349027 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.094265101 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080198868 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067289144 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127987061 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.160414522 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.069967689 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.113644898 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110456956 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104073005 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.124208921 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.069427462 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122202407 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.142363989 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122566741 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152274456 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.348826832 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115644763 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.116152974 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.110351946 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102934617 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077013847 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.121858416 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.130967066 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092733365 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092298065 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131238155 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.116069939 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131954668 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.113158554 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115370149 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102242781 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103419595 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100066802 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.10254136 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.141162657 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12103798 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.123223124 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082734015 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105035967 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.117309009 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136158308 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081095231 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.140843851 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.084489532 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119748582 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077545855 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.123354905 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.076951192 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108169945 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078697259 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100760298 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.068604289 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.07338467 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.144466632 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.11388324 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108509679 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102138345 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.140469705 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.139183097 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.078970659 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.108694877 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.115927811 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102845269 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120780965 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.111887314 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.092511954 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.280680583 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.105486891 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083246293 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079326998 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112392912 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091172835 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121146127 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.081867049 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072727108 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135169965 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101308694 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09151184 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07377028 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10399029 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.120499714 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090140261 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084256568 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.111795267 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102502383 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136919811 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.088614712 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.094805255 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.121134962 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077829257 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089722229 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.067310475 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.08353377 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074443616 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126520907 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074600502 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116299433 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067929192 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.130150129 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086760942 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.092159956 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10158624 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109171841 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127356648 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093768367 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.140579841 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088863089 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.120039796 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107180664 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094357672 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.086884366 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103603192 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100932565 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.123924509 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.096557847 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125104603 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147091695 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104616323 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.14527576 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092104399 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126059315 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112418426 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.132905748 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.291639988 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.164794444 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135012013 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108787972 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106957259 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073169131 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.092906275 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101970109 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.109189041 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.16869563 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121706082 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.070253584 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.101597127 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091565002 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105507255 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100766965 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079660022 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140687041 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099431962 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.086158375 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109070983 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088860454 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102414464 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074510441 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.099427722 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103978566 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.09458515 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09693497 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.114233677 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.129157346 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112260423 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.144525455 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.100280711 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.091407849 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.118190715 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110459217 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109152796 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085243087 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085802181 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.139880877 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.121711898 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.128989301 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102356389 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110332514 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.113167306 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101834345 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127891607 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109584991 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.131457659 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08333171 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079451231 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.070156576 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.074134386 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.301827105 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105829839 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109164669 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096090698 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.070452271 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100373664 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.100554512 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069859708 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085189867 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090616899 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.095332242 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.089264868 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103453449 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109355899 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.08857719 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100618985 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.094564813 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.142461384 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.099055927 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085737932 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139792838 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.145176503 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084975586 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089924751 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.070143575 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077446937 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110369121 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148352349 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.15139914 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078186328 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08616862 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.085348061 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085904929 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070694101 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.088844237 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.087742369 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105213854 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09760907 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.112987464 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105249859 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074519644 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101571539 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098557091 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092580445 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.10837134 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.122326998 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.131546112 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.144019194 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115867394 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109446622 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076372042 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080773073 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075867923 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079479 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102138485 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.0791123 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07699193 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.150267436 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.270273332 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103290624 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105622469 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.085523307 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073378597 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130233856 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067558503 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130908995 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.069296468 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079247716 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079734616 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076346742 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090022386 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13276794 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.105334654 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107867709 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10485353 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101072581 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15679121 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153437674 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078506042 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.137417536 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073356313 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073934541 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073955271 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108337031 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08770607 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.112518887 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14110508 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089892312 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101068768 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077152389 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.143213582 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.099092418 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10377568 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085403136 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.078317632 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1427464 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078834398 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.080379021 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088790549 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.111972773 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.07230179 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.102500141 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083274965 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079481297 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.166628996 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.712126838 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090989641 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075743156 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096795199 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.143592193 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136607991 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098655918 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11260728 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.125420763 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.278580738 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.09247597 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105245067 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.187999684 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072511503 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091706501 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.100733892 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094938768 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098522918 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.095853497 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085962595 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.089439037 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.084739091 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076972122 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104422151 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085557601 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093926286 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.104953849 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.081061257 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.085435727 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.12742062 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.100747782 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.080074883 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085039749 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102589736 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08527182 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100081265 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.068040372 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.109662464 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.08717408 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116801688 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.097417132 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107076563 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.124815568 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093694193 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136549133 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.107254437 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.122227247 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086945113 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077784489 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126073152 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.090078926 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077516723 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146701063 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.097359004 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091439841 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104377378 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.096904155 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114011404 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118394542 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114312253 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097659488 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079782956 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105478019 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107308077 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090073661 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081362892 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.253291605 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.075988495 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10498933 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083663177 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.084443285 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.10984187 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086363854 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.100366839 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100484069 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.118594191 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.085371699 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098229087 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10806221 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088660239 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106687577 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09862588 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.125284691 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.168967323 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120827994 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.125878583 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130749766 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075387291 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07304402 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.06684607 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.112011465 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.07811329 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.087954591 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077323401 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132780173 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.081819303 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112382158 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.243063839 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.080016684 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097143536 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096288838 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.068953143 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.082953151 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107498053 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.0866596 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079368788 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118907881 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080997623 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128676831 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110570478 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098949317 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.095551634 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080944734 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115591273 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.105019139 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.13129873 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.09579717 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075745254 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126060925 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104892497 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141051401 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.073255957 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081771403 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.136690035 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1108741 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.312678891 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07899442 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145924388 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.13912437 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.097778805 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13075554 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06924941 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.085721082 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086654052 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.123470243 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08128331 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107695824 seconds)
  done (took 68.11562878 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.149369365 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.180270526 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.12252756 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.132813298 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.290298337 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.299169956 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.152104357 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.123436395 seconds)
  done (took 3.259514135 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.070355316 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081931016 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.079738116 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.241885934 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.096407864 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.066496276 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.071887728 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.080526145 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.065904577 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.065646099 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099870196 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.065793691 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.066202164 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.521856229 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.06561223 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.071238864 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.065977448 seconds)
  done (took 3.684325045 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345570005 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.527907866 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.316073484 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.632011227 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.166607444 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.722183562 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074395497 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.081493304 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.801416306 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.211765106 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159001577 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087486662 seconds)
  done (took 20.928513865 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.077721202 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.118899531 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.117800462 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.072671239 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.072299387 seconds)
  done (took 2.252424874 seconds)
done (took 121.016705217 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.085432058 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.170921485 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.067297761 seconds)
  done (took 2.064985547 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.120902417 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.116232135 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115911605 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.117328081 seconds)
  done (took 2.269075744 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076294581 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074739527 seconds)
  done (took 1.948545782 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.225571992 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.21410649 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.089374635 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084673573 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078146274 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079405221 seconds)
  done (took 2.047686292 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07287915 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069416446 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069476757 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069673624 seconds)
  done (took 2.072646641 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.169920297 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065642427 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067920835 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069572642 seconds)
  done (took 2.1664331 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.086627325 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.085068749 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.113790882 seconds)
  done (took 2.084493605 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084973995 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083078339 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077250756 seconds)
  done (took 2.043803642 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110659256 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094795726 seconds)
  done (took 2.000176185 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080844266 seconds)
  done (took 1.879820748 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092816293 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.096443139 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.181674627 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.147486403 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.182817071 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.169039548 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075274944 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.07565637 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071560772 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070576688 seconds)
  done (took 2.956315344 seconds)
done (took 25.948367159 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085678341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.193410323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.439789868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085034929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.824089823 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.43635223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.730888092 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08844267 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098342465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066774087 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083297114 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.803314414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.733218744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.144706483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.716772605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.139510477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.560253162 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06705056 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066190665 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066865081 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.715974564 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066380781 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066740312 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067289162 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.55847982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.453237296 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06784904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.137730224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066493072 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070791198 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.436489889 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067950879 seconds)
  done (took 14.977070723 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076978196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144105641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071924195 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082543853 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068749046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068543883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070757814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06759788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10968176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067190875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08406614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066553595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071621807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06817257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087483624 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067048468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069281657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067635108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06694595 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067657733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085802906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066703441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067403293 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067521137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067262013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080795618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068078983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066986571 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067085361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070881323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072162161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06867724 seconds)
  done (took 4.210469491 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12915693 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128946973 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072491832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115226658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069725463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149823751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089447289 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112926345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067476125 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084281321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067024392 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102597877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068646103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087881022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067256171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069384252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067452929 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066788206 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067560028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086249385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06673227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067473472 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067633548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067614097 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083094839 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068271262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067250572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067121851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071241875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073257737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068570668 seconds)
  done (took 4.465391037 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071051928 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069610794 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075459259 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.07828824 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064580461 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066682736 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067762788 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064989663 seconds)
  done (took 2.378868071 seconds)
done (took 27.849000196 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08024807 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066150198 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068784095 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085523432 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071911848 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.109073925 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063384193 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072966922 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069472243 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069615938 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071097784 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065606397 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068081559 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062991211 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069774863 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063927192 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.111890507 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06840676 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108849394 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.11036939 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066703523 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069490608 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07249948 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.109938044 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109401209 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109554792 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073092537 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070072016 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064679711 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067383056 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.169821685 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.183483793 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073851688 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11646244 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064902156 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064492455 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068735246 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067092191 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.113416741 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073792259 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066750388 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073345844 seconds)
  done (took 5.289313644 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.190235562 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.19285186 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.185730084 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07853018 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091041606 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078279948 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.191567498 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075923881 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074235713 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.191143412 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070267525 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074319713 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07657862 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067396565 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074082379 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070261984 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075642035 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068371634 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074079031 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073954413 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.191401592 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070908651 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078652783 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075639044 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06972534 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075494014 seconds)
  done (took 4.476327845 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074375741 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08740299 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090921099 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145165116 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108827382 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081704341 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081333454 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092194219 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100150661 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066724549 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070498243 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093932815 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094935946 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073272476 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105769031 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084513453 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078471111 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06808846 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07314396 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100446574 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089118805 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084875851 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099267428 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086498967 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065651772 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07567002 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073578845 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082014059 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07372744 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078618386 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070276308 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069837825 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06705084 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078450755 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070789977 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064496632 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089344132 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079526116 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081577607 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106757693 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077042641 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068401266 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.0940068 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1809199 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066816267 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069060636 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070877849 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079472503 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068375015 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097688183 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082392713 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066666678 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085655869 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06840327 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068238568 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082995618 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068612503 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068640913 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078884862 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073148482 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087653037 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072200858 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087810646 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066733591 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078362388 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068380991 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068475895 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065586115 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100891131 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074446858 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117178764 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068234275 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064749712 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079210327 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078219386 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073923379 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066551456 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086052832 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078871837 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070630112 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077886328 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069567482 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070226458 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103252579 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065685694 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064701828 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064711453 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069006714 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070362151 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067749197 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079955102 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066630488 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070708921 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082197388 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067318438 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067721172 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069572787 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068318979 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066695785 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077702177 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071698764 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06954357 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080356581 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068671654 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071000476 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082678194 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076705721 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067109898 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068974335 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071101977 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071045551 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073853818 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072594769 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071086485 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074099255 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076974054 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07575233 seconds)
  done (took 11.052766959 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.20851775 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.193946667 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068072455 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.189892844 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075383184 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.123745904 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.19134513 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.129963915 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067510668 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068141218 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066452424 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.138000206 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131981436 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.142669029 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.114555568 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067689897 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093403096 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.143884744 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.196317226 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.190960458 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093216856 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075308963 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069906856 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068877081 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068732347 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076578845 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08282919 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076222208 seconds)
  done (took 5.107899593 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075791309 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.082436386 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070373817 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090832609 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.083340132 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06681524 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068970812 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07071235 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083676834 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072221992 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066567268 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071042352 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069990937 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067222866 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067392814 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073014036 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073218101 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065346323 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070082948 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071017859 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077672351 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154733036 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07130472 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067040514 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068982227 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06691611 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073258515 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.074724467 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066290371 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099651814 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.0636445 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070828332 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080996605 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068214718 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066989843 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067920211 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066983176 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067056293 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067417771 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065004319 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064977905 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073139657 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065970276 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072124706 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081537545 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076054621 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068521486 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.06944654 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069383602 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063906308 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070309165 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07045651 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070022343 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075832327 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070882442 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069505079 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068949029 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098213549 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073324607 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067064139 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067127877 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065413868 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068805247 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075177115 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083961488 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068882188 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065512218 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06724884 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074657706 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081615842 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066666294 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072625118 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063998198 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067127355 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069231767 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070204037 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068937156 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065541509 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067196717 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067435057 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068130415 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067055584 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067538563 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070109128 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064923709 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065479314 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068094268 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068689483 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072484223 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065902535 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070032432 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069178834 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066409356 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070676717 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073757138 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070752694 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088001379 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.0756934 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068278651 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065463496 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082661146 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069392372 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066842163 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071200792 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072205597 seconds)
  done (took 9.438029227 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098474012 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068095928 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086830098 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.098352664 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076627723 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07130491 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080833578 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067330492 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088038528 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065405855 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075160646 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064447494 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079936197 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075743517 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067867452 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076931779 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068786715 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087298064 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081119533 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064780233 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075577658 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.601277662 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08011862 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084821216 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084210477 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085347393 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.07875287 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068760461 seconds)
  done (took 4.598345395 seconds)
done (took 41.774064809 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.935152764 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.126591199 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.914441802 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.467220453 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.055937483 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.931393701 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.077333174 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.924277415 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.42069414 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.97881177 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.658328932 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.683172185 seconds)
done (took 69.076570015 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 7.032428817 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.049118706 seconds)
    (2/2) benchmarking "String"...
    done (took 2.14733285 seconds)
  done (took 6.072013426 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.330635448 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.893337377 seconds)
    (3/3) benchmarking "different"...
    done (took 1.932114627 seconds)
  done (took 7.98286657 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.174852389 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.41597005 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.172219606 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.892302309 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.901448655 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.377774016 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.058338362 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.531185804 seconds)
  done (took 33.185516838 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.906713117 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.184609976 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.272516039 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.351677066 seconds)
  done (took 21.626781266 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.337257392 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.287432187 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.287382905 seconds)
    (4/4) benchmarking "different"...
    done (took 2.587380567 seconds)
  done (took 11.422620955 seconds)
done (took 92.477674123 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.895459069 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.066244197 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.929345741 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.06683687 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.979201404 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.969721405 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.906874849 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.913944195 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.898904649 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.904092494 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.847334922 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.897772244 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.895166242 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.939091146 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.897703322 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.965233874 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.014066684 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.898567348 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.912410119 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.439453073 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 4.236665093 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.906327983 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.906076199 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 2.111395263 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.171064534 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.932012928 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.231668355 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.904395126 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.89324243 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.902429326 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.898916403 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.900024079 seconds)
  done (took 208.059641653 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.898077584 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.652741228 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.669540715 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.910751028 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 5.187444543 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.238801378 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.695324325 seconds)
    (8/36) benchmarking "gemv"...
    done (took 5.21643139 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.900593033 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.907149068 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.887237211 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.896117025 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.866263134 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.428776285 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.929338457 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.914318818 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.728641926 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.658530088 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.934351938 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.771175552 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.905519014 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.340940477 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.341151989 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.652836156 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.90404566 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.910155369 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.904406331 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.921609288 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.355082858 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.672816772 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.920714451 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.900678948 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.352766721 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 3.130272737 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.909149104 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.908973995 seconds)
  done (took 181.16195006 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.130413471 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.904248275 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.937025896 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.008573007 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.695570889 seconds)
    (5/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.899311361 seconds)
    (6/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.549069404 seconds)
    (7/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.899612437 seconds)
    (8/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.895629465 seconds)
    (9/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.896440754 seconds)
    (10/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.902044959 seconds)
    (11/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.898249318 seconds)
    (12/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.961727314 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.166988146 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.92212049 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.900750148 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.897256001 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.207857518 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.906306728 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.896437948 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.896358893 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.994641475 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.241236127 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.007027363 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.899964518 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.90740719 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.00670113 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.906139087 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.896754267 seconds)
    (29/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.005801225 seconds)
    (30/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.90087175 seconds)
    (31/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.021354638 seconds)
    (32/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.00918438 seconds)
    (33/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.908778866 seconds)
    (34/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.952601049 seconds)
    (35/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.907741544 seconds)
    (36/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.99780696 seconds)
    (37/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.90081593 seconds)
    (38/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.896726554 seconds)
    (39/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.898878052 seconds)
    (40/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.942019054 seconds)
    (41/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.90099199 seconds)
    (42/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.742670652 seconds)
    (43/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.998235428 seconds)
    (44/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.90172866 seconds)
    (45/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.915987083 seconds)
    (46/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.351630826 seconds)
    (47/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.451342216 seconds)
    (48/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.903713765 seconds)
    (49/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.898285595 seconds)
    (50/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.898101392 seconds)
    (51/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.89772957 seconds)
    (52/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.898103699 seconds)
    (53/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.897519906 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.984309997 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.902008868 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.932270119 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.831243175 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.902574861 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.898586444 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.898720657 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.897763169 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.898918292 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.905010421 seconds)
    (64/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.899036367 seconds)
    (65/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.936733182 seconds)
    (66/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.438525017 seconds)
    (67/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.628467967 seconds)
    (68/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.254113555 seconds)
    (69/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.552794538 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.902110505 seconds)
    (71/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.095669501 seconds)
    (72/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.959208128 seconds)
    (73/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.902446405 seconds)
    (74/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.06565956 seconds)
    (75/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.902490053 seconds)
    (76/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.89912104 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.898963931 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.899784818 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.741185947 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.734647064 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.904402555 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.009142803 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.903958555 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.900159867 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.301821998 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.168239658 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.906648367 seconds)
    (88/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.899045882 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.955796331 seconds)
    (90/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.920127822 seconds)
    (91/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.901172342 seconds)
    (92/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.899871531 seconds)
    (93/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.906027762 seconds)
    (94/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.742868321 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.90538743 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.900027476 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.899249447 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.05694745 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.904761121 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.281506207 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.24283367 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.991411004 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.283228928 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.667571164 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.906369589 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.900289494 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.918563074 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.902263408 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.900443226 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.912646738 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.900988962 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.900535058 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.902315407 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.902080251 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.901237894 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.902445603 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.919640567 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.902499392 seconds)
  done (took 418.850029896 seconds)
done (took 812.159193692 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.565663775 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.650793712 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.481564843 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.534858446 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.486274487 seconds)
  done (took 14.554931434 seconds)
done (took 16.389578605 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.930126187 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.925909275 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 1.913324067 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.927172571 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.924178502 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.921223518 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.930983095 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.940795672 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.933614672 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.921278501 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.929857556 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.922814479 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.933529817 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.936142013 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.935167201 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.934636859 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.926515165 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 1.916969805 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.932193209 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.924563714 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.925603371 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.925261156 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.924263439 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.930878589 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.936987407 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.926627406 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.923115288 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.930724278 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.927712191 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.932324425 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.943419668 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.938093862 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.936077235 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.935664195 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.935530999 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.938425197 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.928524211 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.940512332 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.926430531 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.941636589 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.935394951 seconds)
  done (took 80.981721689 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.914652357 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.08236293 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.182084242 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.95490778 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.914388847 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.182689047 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.980726218 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.066940388 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.069492299 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.191907308 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.19767178 seconds)
  done (took 24.579922652 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.913344756 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.084419592 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.183997374 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.956747911 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.914935025 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.182197146 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.986647971 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.09289852 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.075720874 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.192933564 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.204204912 seconds)
  done (took 24.645628441 seconds)
done (took 132.04549151 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.46174764 seconds)
    (2/2) benchmarking "11899"...
    done (took 2.143868587 seconds)
  done (took 6.444090307 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.908724834 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.931677023 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.089802718 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.908580598 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.90874804 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.912661507 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.912454527 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.90871444 seconds)
  done (took 17.32058117 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.909176825 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.908229438 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.909003885 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.909055954 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.909426259 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.909570255 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.908527745 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.908981501 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.908786393 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.909137998 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.908931882 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.909375889 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.909274619 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.909305953 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.909116855 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.910880067 seconds)
  done (took 32.387446705 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 1.909078219 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 1.909739257 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.909432292 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 1.909249732 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 1.910064884 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 1.909424066 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.912859182 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 1.910104088 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 1.910029438 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 1.909450795 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 1.909918748 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 1.909688358 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.909803376 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 1.910531043 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.910004559 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 1.910188263 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 1.910553113 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.910980235 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 1.912114301 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 1.910289442 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 1.911005978 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 1.91060544 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 1.918982313 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 1.910810507 seconds)
  done (took 47.696609755 seconds)
done (took 105.704909764 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.512037388 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.918201019 seconds)
  done (took 9.270959273 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.913720538 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.909582686 seconds)
  done (took 5.7722218 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.910003922 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.910818826 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.910453309 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.910212026 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.911143914 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.910887674 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.911138264 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.910596793 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.910209931 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.910250413 seconds)
  done (took 20.947752923 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.910655107 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.911156313 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.911023787 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.911219154 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.911231145 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.911198345 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.911115554 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.911581715 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.911034596 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.911458595 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.911306811 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.911311013 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.911693436 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.911648357 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.915010966 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.915309806 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.915824564 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.914654795 seconds)
  done (took 36.261235406 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.915373866 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.915958166 seconds)
  done (took 5.677511665 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.914704395 seconds)
    (2/7) benchmarking "second"...
    done (took 1.915651822 seconds)
    (3/7) benchmarking "month"...
    done (took 1.915486684 seconds)
    (4/7) benchmarking "year"...
    done (took 1.915368535 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.91524444 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.915747051 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.915103544 seconds)
  done (took 15.253352732 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.917200196 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.063651462 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.105835055 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.412553423 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.91793686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.919684797 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.541722599 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.918999553 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.920569551 seconds)
  done (took 20.564794381 seconds)
done (took 115.58941074 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 5.777914588 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.95147704 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.484780318 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.059248229 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.002492742 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.280631578 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.932703609 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.507780239 seconds)
done (took 44.84347269 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.983228521 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.914620716 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.955647122 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.95675451 seconds)
  done (took 22.674873315 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.924236452 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.549412448 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.949917956 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 4.009974716 seconds)
  done (took 23.366321444 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.407175966 seconds)
    (2/2) benchmarking "read"...
    done (took 2.328736112 seconds)
  done (took 6.597551532 seconds)
done (took 61.47021151 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.918347311 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.918127861 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.917213152 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.917600081 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.91694175 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.918178611 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.917685982 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.918258269 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.918951979 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.918453279 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.91830362 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.918614239 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.917712839 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.917719115 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.91756691 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.917930631 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.91805243 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.91786041 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.91797617 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.917806101 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.917564965 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.918278315 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.918118061 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.91986012 seconds)
  done (took 47.881686729 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.918290507 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.918573577 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.918115581 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.921190744 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.918595599 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.918391643 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.918480146 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.919157172 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.918947279 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.918502755 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.91893951 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.918927552 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.91933229 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.91967248 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.918698242 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.919448802 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.919206364 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.918813354 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.9188209 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.920037319 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.919455 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.919059763 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.919629916 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.919634248 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.919930907 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.919313281 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.91911884 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.919659748 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.919389833 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.91953426 seconds)
  done (took 59.424841163 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.919577955 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.919280534 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.919144413 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.919904205 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.920505491 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.919709787 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.920317144 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.920334942 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.919496583 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.920446486 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.919418478 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.920488495 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.920432172 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.920892202 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.920440174 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.92032843 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.920347268 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.920714094 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.920226855 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.920635244 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.920820374 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.920708102 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.92144741 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.920739265 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.920652511 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.920469333 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.920261934 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.921090611 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.920933133 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.920425036 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.920695815 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.921139043 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.92070328 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.921247773 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.920992824 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.921330946 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.921231043 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.925538504 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.930826555 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.92133767 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.921952573 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.921271255 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.921998323 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.921682815 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.92166185 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.922070273 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.922045074 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.921534959 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.922248065 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.921497188 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.922344851 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.922159617 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.922454529 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.921696174 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.922046055 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.921795226 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.921896819 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.92283332 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.921786657 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.92244374 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.922933686 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.922807885 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.922088165 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.92251863 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.922530585 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.922396266 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.923303908 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.923202014 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.922593799 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.923088768 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.9230303 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.923532321 seconds)
  done (took 140.20124016 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.922518291 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.927264551 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.927637412 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.92775586 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.923176676 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.923318511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.926929747 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.927153899 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.928189005 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.928233625 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.926992342 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.927651896 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.928330078 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.927498202 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.927676455 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.927837022 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.927243105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.928213887 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.927880912 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.928007495 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.92805601 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.927495909 seconds)
  done (took 44.249263689 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.928029802 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.928091441 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.927901059 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.92597137 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.92519908 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.925720046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.925330612 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.925959678 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.925676931 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.925960119 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.925744336 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.92625844 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.926172769 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.926041854 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.925830769 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.92619715 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.926214376 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.926417607 seconds)
  done (took 36.528130398 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.927094684 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.926452039 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.926588542 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.926828281 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.921504532 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.922251511 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.921135797 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.921842262 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.921325296 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.921475663 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.921906174 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.921556549 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.921489975 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921926677 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921287265 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.921531508 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.921372548 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.921443067 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.921902439 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.921574771 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.922527294 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.921391472 seconds)
  done (took 44.152882642 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.921722173 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.921682295 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.922293649 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.922022408 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.922076784 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.92152131 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.922875483 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.92237806 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.922347308 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.921742199 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.922301493 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.922667623 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.922895448 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.922404916 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.922554046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.922804712 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.92245918 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.922726485 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.922647562 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.922236178 seconds)
  done (took 40.300465896 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.922870413 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.922436383 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.923294097 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.923345838 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.923617482 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.923270171 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.923425644 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.922699909 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.923805381 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.924338153 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.923156533 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.923926766 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.923719898 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.924097821 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.924029565 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.923843719 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.924045309 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.924512131 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.923389913 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.924314018 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.925174906 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.924275083 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.924721045 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.923740964 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.924010088 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.924716831 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.924455049 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.924379775 seconds)
  done (took 55.722631906 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.924539361 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.924205647 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.924634324 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.924829869 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.924565962 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.924715836 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.924778217 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.924531367 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.924388889 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.924412645 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.925026106 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.924869927 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.924782103 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.92482669 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.92521139 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.926141743 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.925514429 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.925910295 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.925668295 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.925199751 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.925655158 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.925093302 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.925527193 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.925084582 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.925816224 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.925701469 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.925747736 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.926142383 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.92571737 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.925834752 seconds)
  done (took 59.612011608 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.945815579 seconds)
    (2/2) benchmarking "in"...
    done (took 1.949631993 seconds)
  done (took 5.752120946 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.92571706 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.925757161 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.925519319 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.925991031 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.925600056 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.926333967 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.926563408 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.926508252 seconds)
  done (took 17.265563369 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.925759383 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.930618409 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.926635952 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.926675732 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.926490573 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.93504131 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.927744206 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.928252277 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.929305426 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.928699836 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.932405041 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.932376239 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.93732433 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.932115664 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.927650816 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.928052523 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.928425118 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.930570087 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.9292782 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.92641927 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.930695942 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.928047927 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.926851481 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.928473275 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.927573612 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.93058405 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.939319889 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.929520946 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.930003811 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.927207225 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.935364522 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.927671623 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.927676674 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.929806491 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.928322896 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.928128984 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.93609131 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.928662622 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.928544522 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.927376118 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.930684768 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.931157249 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.932938922 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.936698818 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.928550282 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.927635921 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.928194778 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.928557819 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.930003352 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.939149911 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.957196275 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.948983238 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.972643182 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.959607057 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.982824403 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.966595203 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.929588524 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.939483248 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.937268443 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.937814916 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.977652739 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 2.008886632 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.968507526 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.959659894 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.950032 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.960179796 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.998897887 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.991924583 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.952628882 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.929709957 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.937822464 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.929191265 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.928562115 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.929050274 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.945090872 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.939673975 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.929386953 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.977174873 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.959561547 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.930067114 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.932674107 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.930330575 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.930709613 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.930233402 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.9430157 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.961702399 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.930246324 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.95535193 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 2.068734758 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.997250997 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.993656039 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.995365112 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.996554711 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.941796479 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.936169456 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.937079932 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.935152071 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.981633907 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.978045713 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.941505 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.933481194 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 2.19753332 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.29557144 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 2.304283053 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 2.299679999 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 2.304571362 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.305353314 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 2.302507387 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 2.308830061 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 2.304618464 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 2.305833252 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 2.303920942 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 2.311866448 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.312375822 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 2.302985546 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.307680833 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 2.308970438 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.318890239 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 2.308363805 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.314018364 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 2.311353573 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 2.313208319 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.318686601 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.333634355 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 2.30352137 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 2.305193543 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 2.315708642 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 2.327242286 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 2.310598008 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 2.305565651 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 2.317361778 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 2.308730054 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 2.307927374 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 2.304345062 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 2.301540857 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 2.299132357 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 2.307411901 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 2.317454575 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 2.302757349 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 2.304729825 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.311043593 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 2.305995807 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 2.309894003 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 2.306631452 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.310219713 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 2.305867864 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 2.316416942 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 2.307006998 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.310214045 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 2.306650002 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 2.305345076 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 2.314409159 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 2.301466869 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.307058194 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 2.311464524 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 2.309074701 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 2.302852192 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.304864317 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.310757455 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 2.306395274 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 2.307280254 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 2.304705358 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.309356002 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 2.315569246 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 2.306535982 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.309577289 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.314210823 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 2.30938004 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 2.30964639 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.306292651 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 2.310269271 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.307489465 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.310839412 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 2.309089642 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 2.303367516 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 2.30864772 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 2.305887054 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.309179899 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.313384728 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 2.327693099 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.320217532 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 2.324731859 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 2.311004705 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 2.318421182 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 2.310653204 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 2.305313195 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.314434486 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 2.304215508 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 2.314932557 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 2.307434783 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 2.311243604 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.310047098 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.335743001 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 2.321656551 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.311477756 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.307513656 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 2.323135841 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.31470741 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.317363223 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 2.317720816 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.310050282 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 2.323245256 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 2.311609168 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 2.313396282 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 2.310697753 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.309068836 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.304510805 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 2.306624892 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 2.314853293 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 2.310258566 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 2.30707148 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.308980265 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 2.31189806 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 2.314477894 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 2.305767762 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.309599717 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 2.310530721 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 2.309282317 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 2.320398124 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.308812071 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 2.309789252 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 2.312172898 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.316434508 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 2.312124921 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 2.311806128 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 2.313287731 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 2.319047822 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.319607826 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.316321057 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.320364381 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 2.310708506 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.312503061 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.311424165 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 2.303388116 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 2.31576927 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 2.308076966 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.321018864 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 2.324318194 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 2.307449874 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 2.304274442 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.322403541 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 2.310958121 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 2.314901897 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 2.309917327 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.30935712 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 2.315710593 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 2.311481951 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 2.318353846 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 2.306711562 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 2.318487624 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 2.311474591 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.311350147 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 2.30825729 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.317915318 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 2.31580825 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 2.314799021 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 2.313027952 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.317323351 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 2.324362977 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.31187434 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.311475582 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.317783025 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 2.319614908 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.312456976 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.315903682 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.312341775 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.325883412 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 2.329461466 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 2.313515018 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 2.318657258 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 2.32400035 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 2.320306323 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 2.317046176 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 2.319488669 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.32573907 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.329174586 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.315683649 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.325328641 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 2.318746546 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 2.323173792 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.325308915 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.317280534 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 2.32241407 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.330123148 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.320202397 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.320616412 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 2.326480308 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.324885157 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 2.331672555 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.333424121 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.335258082 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 2.323776393 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.322334597 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 2.312022212 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 2.32822404 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.319405582 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.321245047 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.331709723 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.320812612 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.322034078 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 2.328546252 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 2.317971614 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.322194652 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.321220952 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.318662866 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 2.317725101 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 2.319344836 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.322043068 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 2.33357586 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.331066191 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 2.336883811 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.317900923 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 2.328176291 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 2.317250238 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 2.294162086 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 2.249684483 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.172273851 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 2.143591023 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 2.045833376 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.020203146 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.187862936 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 2.191747224 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.206163416 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.22063186 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 2.264375251 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 2.274651368 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 2.179307971 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.188722079 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 2.24077648 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 2.273524725 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.268882193 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 2.242504444 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 2.197997741 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.23585459 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 2.258465304 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.250889475 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.216544393 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.19932829 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.236633469 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 2.274304407 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 2.257399769 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 2.225338983 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 2.228827239 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 2.204066157 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 2.239198251 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.272744424 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 2.227718483 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.222160211 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.226789546 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 2.22144559 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 2.269043501 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 2.24784648 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 2.216722098 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 2.238007307 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 2.250034533 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.243880662 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 2.253966972 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 2.23006285 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.213674793 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.226685648 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.262981399 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 2.265329422 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 2.25837554 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.218142674 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 2.233158734 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 2.251421288 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.258841658 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.249589606 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.276920923 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.230614447 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.231298854 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.242899637 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 2.260620863 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.244487951 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.261149177 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.268962121 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 2.232294514 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 2.239876793 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.223450939 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.233810437 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.274042074 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.249460619 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 2.222737086 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 2.219582421 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.25346324 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.26437469 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 2.257185917 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 2.240049026 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.230551027 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.223723006 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 2.265556757 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 2.232508436 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 2.239948942 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.238811632 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.22835359 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 2.246053578 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 2.244333023 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 2.233542665 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 2.247931232 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 2.234710048 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 2.236991946 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.249661242 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.2577658 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.231324081 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.260381503 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 2.261449128 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.225757443 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 2.227157585 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.233165995 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 2.262047682 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 2.25354963 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.235202995 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.205323202 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.247272347 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 2.26478899 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 2.262606014 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.248488503 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 2.238779074 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.238111696 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 2.237495008 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 2.241074143 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 2.257762586 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.244890494 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 2.246465267 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.22598388 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 2.219443995 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.259261669 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 2.273832558 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 2.252387058 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.243731586 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.205976581 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.228204174 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 2.279263324 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 2.251764501 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.240057338 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 2.236056262 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 2.244431983 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.24124739 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.244868167 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.235627842 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.233022371 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 2.259615493 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 2.227395493 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.20905611 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 2.221879883 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 2.247482375 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 2.258563918 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.245860398 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 2.255541617 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 2.227189867 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 2.226457096 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 2.238374511 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.239774127 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.25173522 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 2.239808106 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.221413552 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 2.231268207 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 2.241754992 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.248944533 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.257128859 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 2.242331606 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 2.235761357 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 2.242408532 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 2.25000995 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 2.244154608 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.244636938 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.220761699 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 2.247272216 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.250240617 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 2.258582113 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.2700212 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 2.236568898 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 2.231966556 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.236993571 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 2.238351614 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 2.275498738 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.260157552 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 2.20943851 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.228630894 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 2.252485672 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 2.243923086 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.258607937 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 2.23958049 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.23108018 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 2.240713868 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.249774557 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.246652147 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.244320927 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.253099733 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.250940312 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 2.24945365 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.253783132 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.23641187 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 2.261693815 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.26502048 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 2.233670305 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 2.228345994 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 2.251988057 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.252185887 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 2.258826275 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 2.259790104 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.245062149 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 2.223267098 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 2.219683131 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.264706844 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 2.270292021 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 2.253692453 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.231060607 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 2.220547637 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.246742664 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.265362214 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 2.264426226 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.242221096 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 2.242106016 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 2.222877764 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.259365738 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 2.254057929 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.246549782 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 2.247829753 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 2.224707266 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.248742189 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.282826361 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 2.252459319 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 2.240297702 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 2.242097459 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 2.216730505 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.264927417 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 2.291310468 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 2.24522764 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.237850211 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.266960839 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 2.264502516 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 2.276164564 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.259720684 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 2.223926568 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 2.222000828 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.252656829 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 2.250960631 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 2.248487366 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 2.242082285 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 2.265584274 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.261442336 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 2.23696641 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 2.247737965 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 2.239462879 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.254364759 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 2.284820239 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 2.224699683 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 2.253162416 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 2.251520552 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 2.254987679 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.250910435 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.248899528 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 2.252601337 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 2.254305309 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.233510426 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.258820585 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.257330863 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 2.262894515 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 2.264439033 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 2.237317157 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 2.252973165 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.260277228 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.248466835 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.258096994 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 2.247848816 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.242926512 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.254479642 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 2.248484274 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.25283546 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.263649446 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 2.264995667 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.24601235 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 2.264504173 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 2.231477598 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.234525149 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.232718278 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.250595395 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.267750171 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.257274016 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 2.238492514 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 2.243151907 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.270657398 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 2.262103083 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.270993094 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 2.252153513 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.227585024 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.270956213 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 2.260492149 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.248174357 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 2.233534026 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 2.22867521 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 2.253438984 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.25041889 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 2.285627748 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 2.259016787 seconds)
  done (took 1323.424548487 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.266461046 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.260968836 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.223362636 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.24110549 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.243324864 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.253891905 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.278959371 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.234703644 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.240819339 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.248226494 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.272719267 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.267755018 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.246930841 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.251330189 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.225776502 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.218413758 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.241010405 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.291552586 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.25669425 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.252568085 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.234885717 seconds)
  done (took 49.424544051 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 2.269606413 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 2.244704641 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.262199849 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.253859175 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.222606642 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.277325383 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.253232975 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.228415142 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.269025726 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.228020264 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.256323878 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.27876927 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.257935666 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.242143219 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.269308769 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.236332799 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.231158648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.263733031 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.246540114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.251951903 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.258279422 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.249873496 seconds)
  done (took 51.736083839 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.260783932 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.288945605 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.245423311 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.226842591 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 2.241291497 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.252252077 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 2.282049208 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.291018479 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.240830892 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.234887279 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.238625204 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 2.255719185 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 2.274519653 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.281279704 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.268775315 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 2.238955075 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.358463349 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 2.259797018 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.271923338 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 2.262926298 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.253285117 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.261065416 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.242085076 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 2.253076479 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.272448322 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.218227999 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 2.264126943 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 2.261048017 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 2.220130715 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.270819239 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.258880561 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.239213758 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.246573343 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.241922768 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.257440643 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.287068721 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.235882275 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.228315872 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 2.255386494 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.260193242 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.277152485 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.29205798 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 2.251252554 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.268437263 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 2.254644314 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.25139291 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 2.24479921 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.254537689 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 2.268886478 seconds)
  done (took 112.845282225 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.263398029 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.276529669 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.258521201 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.239138413 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.232191378 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.249014157 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.290570262 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.259492626 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.245573476 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.246185338 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.252273677 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.282098399 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.260612263 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.24720046 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.265227999 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.228006091 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.283825411 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.266901841 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.251943105 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.248800868 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.249876179 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.269158997 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.283196443 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.264905541 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.266966263 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.242343948 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.247018805 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.260786056 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.256349184 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.283267732 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.240641191 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.232586878 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.260255938 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.264919645 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.279350341 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.256513861 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.258744911 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.256810188 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.257981535 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.262679909 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.258741152 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.238091204 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.265679909 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.270141619 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.23575532 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.257914177 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.279318596 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.247273581 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.256407854 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.278117314 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.253251971 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.245502288 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.231362469 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.261505034 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.277690885 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.272587329 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.260751519 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.249545333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.244298933 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.266439201 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.283015298 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.249721589 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.247968472 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.250685865 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.265380287 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.259304987 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.251103578 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.259599094 seconds)
  done (took 155.749750433 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.26997011 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.256045328 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.271653032 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.236521839 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.254278196 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.272744065 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.254492351 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.252529375 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.257837844 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.251488791 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.26715861 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.29084264 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.264329174 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.247260982 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.229128671 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.253434905 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.295943343 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.26294007 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.240177094 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.236731209 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.248493764 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.265633868 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.304632992 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.272239713 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.254813912 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.245504601 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.243941572 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.261672237 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.272727924 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.291488797 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.266486195 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.246802889 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.226080803 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.259425347 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.28340909 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.287232132 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.269520381 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.228989155 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.247026272 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.288675882 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.286043906 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.271854917 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.253508751 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.237644266 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.252955791 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.270378396 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.261618785 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.282883357 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.243133813 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.226097472 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.267185394 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.274425017 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.267964355 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.280487214 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.262435272 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.259787215 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.263549821 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.261671992 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.241905059 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.236076744 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.26886124 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.293152389 seconds)
  done (took 142.382997594 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.223174904 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.266323897 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.279088941 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 2.24310858 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.273506531 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.285516534 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.241663292 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 2.251300927 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.257331023 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 2.259034405 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.257076259 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.285243321 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.276025218 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.261365117 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.282132411 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.24981105 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.263146507 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.270461187 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.266401878 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.272920693 seconds)
  done (took 47.464841557 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.252765984 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.254261982 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 2.288025754 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.277096887 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 2.254525035 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.241009991 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 2.239831937 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.275495618 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.268599611 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.262730289 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.268120557 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.263019963 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.28086933 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.277876229 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.258189701 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.217868429 seconds)
  done (took 38.368375744 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 2.288989925 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 2.288701408 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.247470534 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.251494231 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.250257483 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.284555504 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.28098229 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.255674117 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.250129395 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.277498279 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.260080547 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 2.274984163 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 2.255550172 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 2.257856058 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 2.285929742 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 2.255038611 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 2.26248354 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 2.288806095 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 2.258756936 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 2.272134703 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.273731779 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 2.239922619 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 2.270502767 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 2.274611006 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 2.256772734 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.24738377 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 2.273124734 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.28829413 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 2.265894804 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.251343496 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.258348597 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.285927063 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.273888725 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.268703137 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.246505407 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 2.257211121 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.276261376 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 2.278028822 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 2.275671393 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 2.256151879 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 2.246359595 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 2.283855252 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 2.276860486 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 2.27242337 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 2.245630191 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 2.246094786 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 2.243281272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.287623712 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 2.29345886 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 2.286837991 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 2.23292288 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 2.219008868 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 2.259872491 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.298071853 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 2.285119997 seconds)
  done (took 126.824366155 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.245099515 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.238252358 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.264386867 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.253520376 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.293018641 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 2.295727985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.266294444 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.273764363 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.268968841 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.231865082 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.269126963 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.292900682 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.288307664 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.272096292 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.263319697 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.245133059 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.284518935 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.262590231 seconds)
  done (took 43.019739233 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.292644442 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.256536021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 2.261675216 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.278985395 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 2.261211243 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.25830925 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.295822225 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 2.266349959 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.278015626 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.269371063 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.256537913 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 2.242403032 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.275607739 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 2.28007281 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.272568121 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.295340666 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 2.272947769 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.25669109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.27830428 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.249393834 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.262881796 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.282998085 seconds)
  done (took 52.145978621 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.253037181 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.267882266 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.307609693 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.304161953 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.303337834 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.311149999 seconds)
  done (took 15.943115352 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.288130254 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.258719547 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.280687161 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 2.26320915 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.241308771 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.282307534 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.286435631 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.296143189 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.274019097 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.247073043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.293523618 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.252970448 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.265372072 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.259457989 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.258972118 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.277555803 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.295106129 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.281583974 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 2.273371222 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.250306234 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.242274306 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.280935963 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.318020074 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.267177752 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.267394026 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.276492989 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.252523503 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.265453009 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.28439618 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.276173216 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.264481755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.256289671 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.259784766 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.281449045 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.291826726 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.301016882 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.272194443 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.246135484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.262502539 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.27085424 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.267534286 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.283076537 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.277221634 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.265896682 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.26360253 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.25439024 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.269570947 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.289611228 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.285268983 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.282024849 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.243507911 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.262666443 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.253022897 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.273140831 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.291965288 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.273632306 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.248313935 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.276636703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.280570263 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.27800233 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.27308347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.265912967 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.257723286 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.258338628 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.25952427 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.276580582 seconds)
  done (took 152.074517297 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.272904565 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.261121081 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.267637144 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.2606896 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.293470847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.267116208 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.252089458 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.284470618 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.272078078 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.244663231 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.268103324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.281147922 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.275268933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.275939247 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.250358951 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.258530745 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.278755399 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.270469121 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.278887971 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.27308425 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.23921519 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.268158861 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.287468245 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.272578153 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.278558412 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.273055561 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.263777636 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.266659122 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.272198274 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.265204295 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.289252894 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.26999359 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.25604971 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.277402468 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.297940031 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.273725733 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.276697375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.289337166 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.267076537 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.285137734 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.283397652 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.255212222 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.263120309 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.270189584 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.246951164 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.211379479 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.203497855 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.132935479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.099094571 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.085399923 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.051457012 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.064891289 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.091865132 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.078672591 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.045694023 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.021369316 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.046145482 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.018853671 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.021351578 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.034267059 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.044207215 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.213882236 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.364325979 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.383489142 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.376058867 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.373279284 seconds)
  done (took 149.343978766 seconds)
done (took 3013.687973957 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.397197799 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.364743957 seconds)
  done (took 17.064142104 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.389658776 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.381147832 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.36033098 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.353824491 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.253599582 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.271749349 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 2.243738952 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 2.245851601 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.328829818 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.252368229 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.257349961 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.226283329 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.2359416 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.239763734 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.238068548 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.249125906 seconds)
  done (took 58.757749241 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 2.267605557 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.254331877 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 2.240665805 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.242240122 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.25774748 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.346979184 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.273106873 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.248135351 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.267593542 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.287145605 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.267258561 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 2.268292585 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 2.271159405 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.267274581 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.366055742 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.297987119 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.317113892 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.335984478 seconds)
  done (took 43.265675323 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.327270747 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.237725591 seconds)
  done (took 11.7247565 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.245230877 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.253939642 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.268990847 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.272919019 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.255215319 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.139232745 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.150575122 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.183334097 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.129663127 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.127066577 seconds)
  done (took 74.218215911 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 2.141156081 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.144865791 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.452128018 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.132890372 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.142503819 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.185122653 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.129941461 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 2.164995052 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.15678588 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.125084939 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.037938402 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.351844958 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.044297574 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 2.045144309 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.476307193 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.062772646 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.039422746 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.074326321 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.086073919 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 2.032963125 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.991707493 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 1.989481881 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.280846109 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.902238945 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.047021936 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 2.055022244 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.002772177 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.99646208 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.014886382 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.984316617 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.988382385 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.986480697 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.990157156 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.990654427 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.001711426 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.991697521 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.652147367 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.007935384 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.99380451 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.076377104 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.046239107 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.992799539 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.982954899 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.993079601 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.98291956 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.991185469 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.708149623 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.051158592 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.987848119 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.150217818 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.594777198 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.006249132 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.123774387 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.135681753 seconds)
  done (took 142.779660207 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.982976505 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.429072259 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.131140729 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.987411615 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.388860176 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.197337634 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.776546554 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.030082359 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.987046174 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.207430594 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.152986871 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.113832394 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.986727158 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.987565363 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.985534409 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.985644576 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.16023522 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.054689011 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.988599561 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.984623238 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.009365485 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.222625194 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.109060274 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.987913232 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.007310608 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.201516665 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.034988555 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.112113244 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.399177225 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.984541444 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.049218421 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.988239513 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.98746808 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.986267027 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.02846388 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.097577103 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.090826477 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.988718436 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.644999108 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.986234603 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.591610752 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.187579076 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.100358671 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.115745472 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.13296259 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.197484964 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.729929169 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.985326252 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.705331986 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.153665733 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.202470828 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.210186537 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.086176892 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.990429652 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.424312128 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.986712446 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.986697129 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.217393673 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13812358 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.110886851 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.988613617 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.987443564 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.988106633 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.22045711 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.98946687 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.097789982 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.989040739 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.989963813 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.099423424 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.113142023 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.133884493 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.210563669 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.022338079 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.94217298 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.276563626 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.193010693 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.053888742 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.217809821 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.990141699 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.990171259 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.088730346 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.450149822 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.144483193 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.226165243 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.293862825 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.025858457 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.518053713 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.987307609 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.207603667 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.13822917 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.348319805 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.13637677 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.04256159 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.841324097 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.988530644 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.009227218 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.946009222 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.110199239 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.99257522 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.527655659 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.228294404 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 4.040451984 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.008467809 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.461373476 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110878185 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.031688361 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.647522454 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.989120208 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.204642227 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.035853325 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.991172797 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.990532992 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.133261665 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.971204367 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.989688563 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.356215117 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.050210451 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.99330454 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.145442791 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.993172382 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.246835656 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.742840526 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.224831537 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.992345968 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023880299 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.161291762 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.134969773 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.994161962 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319091385 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.229888273 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.085943556 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303252614 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.993468469 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.992424993 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.267161973 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.993547289 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.990259514 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.157452426 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.777543458 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.152743239 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.996366521 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.464437768 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.055027824 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076315869 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.032852275 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.249504574 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.026753788 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.040371989 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.993279208 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.125337081 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.001602861 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.072855046 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.288502581 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.071869228 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.002756572 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.984574309 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.116203191 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.249691889 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.344144008 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.151857381 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.14429803 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.451691198 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.051732467 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.200713144 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.028392184 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.460079904 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.613625905 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.198063597 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.706951147 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.33808499 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.003205816 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.284725351 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.294688956 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.005689048 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.002897056 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.940243869 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.451760551 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.061649475 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.164391152 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.743565249 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.424094775 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312495768 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.042479985 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.157550094 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.055612114 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.325782846 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.53928078 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.284753549 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.00316134 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.101924814 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.003807031 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.004696675 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.291920232 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.036242206 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.717480915 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.251312002 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.359236731 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.228964112 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.312477046 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.089204821 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.111334175 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.316274524 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.113472295 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.067076324 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.063805201 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.01842673 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.253821964 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.111619723 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.307053915 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.440554152 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.237267945 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050687668 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.00561526 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.004484549 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.06672751 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.203999488 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.21643789 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.021133161 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.287700459 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.048799392 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.150255949 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.314714048 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.302467354 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.968279839 seconds)
  done (took 918.999704826 seconds)
done (took 1269.1173568 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.001798236 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.073279959 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.067921605 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.014493234 seconds)
  done (took 30.097019974 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.006156969 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.008161309 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 2.07719081 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 2.087260064 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.002649779 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 2.004746659 seconds)
  done (took 14.130189328 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.077545207 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.004302399 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.00753636 seconds)
  done (took 23.026698905 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 2.452021124 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.305567137 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 2.0969506 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 2.236620341 seconds)
  done (took 11.123794594 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 2.011551133 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.004733948 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 2.004697136 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.089774193 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 2.094888459 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 2.007089366 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.012261727 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 2.008442556 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 2.105524138 seconds)
  done (took 20.357463794 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.58804987 seconds)
done (took 107.363120615 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 3.223521338 seconds)
    (2/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.717500356 seconds)
    (3/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.344724503 seconds)
    (4/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 3.419297923 seconds)
    (5/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.340896941 seconds)
    (6/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.008257023 seconds)
    (7/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.594148908 seconds)
    (8/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.014026259 seconds)
    (9/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.352065685 seconds)
    (10/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.009444011 seconds)
    (11/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.053202182 seconds)
    (12/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.910241136 seconds)
    (13/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.118621888 seconds)
    (14/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.129012808 seconds)
    (15/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 4.864725819 seconds)
    (16/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.882884347 seconds)
    (17/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.163332276 seconds)
    (18/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.271183444 seconds)
    (19/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.521337192 seconds)
    (20/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.162845227 seconds)
    (21/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.323348518 seconds)
    (22/341) benchmarking ("perf_sum", Bool, true)...
    done (took 2.029535285 seconds)
    (23/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.056918847 seconds)
    (24/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 8.519578663 seconds)
    (25/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.030679064 seconds)
    (26/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.283159743 seconds)
    (27/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.334992422 seconds)
    (28/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.170863138 seconds)
    (29/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.019111026 seconds)
    (30/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.370997193 seconds)
    (31/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.554169415 seconds)
    (32/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.135041786 seconds)
    (33/341) benchmarking ("perf_sum", Float32, true)...
    done (took 2.159524677 seconds)
    (34/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.149790156 seconds)
    (35/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.007262938 seconds)
    (36/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 4.033629892 seconds)
    (37/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.974602453 seconds)
    (38/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.166100884 seconds)
    (39/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.535925359 seconds)
    (40/341) benchmarking ("collect", "all", Int64, false)...
    done (took 2.165371844 seconds)
    (41/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.152735459 seconds)
    (42/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.919123434 seconds)
    (43/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.147772329 seconds)
    (44/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.171090502 seconds)
    (45/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.058370101 seconds)
    (46/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.771596164 seconds)
    (47/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.395938573 seconds)
    (48/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.275494321 seconds)
    (49/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.03698769 seconds)
    (50/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.561002013 seconds)
    (51/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.396841305 seconds)
    (52/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.470281154 seconds)
    (53/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.357812904 seconds)
    (54/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.618691185 seconds)
    (55/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.383202707 seconds)
    (56/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.531349508 seconds)
    (57/341) benchmarking ("map", abs, Float32, false)...
    done (took 2.116589844 seconds)
    (58/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.273038525 seconds)
    (59/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.120195483 seconds)
    (60/341) benchmarking ("map", identity, Float32, false)...
    done (took 2.186700409 seconds)
    (61/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.217963007 seconds)
    (62/341) benchmarking ("map", identity, Int64, false)...
    done (took 2.265026807 seconds)
    (63/341) benchmarking ("map", abs, Bool, true)...
    done (took 2.253313155 seconds)
    (64/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.032279921 seconds)
    (65/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.942770748 seconds)
    (66/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.490314788 seconds)
    (67/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.904618008 seconds)
    (68/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.972214471 seconds)
    (69/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.371431749 seconds)
    (70/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.164141142 seconds)
    (71/341) benchmarking ("collect", "all", Int8, true)...
    done (took 2.177402967 seconds)
    (72/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.438919023 seconds)
    (73/341) benchmarking ("sort", BigFloat, false)...
    done (took 7.049579414 seconds)
    (74/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.950156097 seconds)
    (75/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.204824982 seconds)
    (76/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.011267067 seconds)
    (77/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.349090326 seconds)
    (78/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.434594538 seconds)
    (79/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.23532122 seconds)
    (80/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.241988248 seconds)
    (81/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.751185009 seconds)
    (82/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.345943933 seconds)
    (83/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.125550527 seconds)
    (84/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.931224092 seconds)
    (85/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.015626774 seconds)
    (86/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.725140977 seconds)
    (87/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.535044429 seconds)
    (88/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.03313023 seconds)
    (89/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.104533001 seconds)
    (90/341) benchmarking ("map", identity, Int8, false)...
    done (took 2.191391877 seconds)
    (91/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 3.384929508 seconds)
    (92/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.034280105 seconds)
    (93/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.473718733 seconds)
    (94/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.109337729 seconds)
    (95/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.136333462 seconds)
    (96/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.024078141 seconds)
    (97/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.014924685 seconds)
    (98/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.123969875 seconds)
    (99/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.19984573 seconds)
    (100/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.025146877 seconds)
    (101/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.28069808 seconds)
    (102/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.204202842 seconds)
    (103/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.261283802 seconds)
    (104/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.904151331 seconds)
    (105/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.023584527 seconds)
    (106/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 3.876757089 seconds)
    (107/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.021019875 seconds)
    (108/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 4.009080938 seconds)
    (109/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.479389321 seconds)
    (110/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.519019782 seconds)
    (111/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.128725772 seconds)
    (112/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.013539213 seconds)
    (113/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.679474378 seconds)
    (114/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.282329057 seconds)
    (115/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.285439695 seconds)
    (116/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.052653104 seconds)
    (117/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.027326491 seconds)
    (118/341) benchmarking ("collect", "all", Float64, false)...
    done (took 4.713142177 seconds)
    (119/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.426799185 seconds)
    (120/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.361378162 seconds)
    (121/341) benchmarking ("map", identity, Bool, true)...
    done (took 2.286894188 seconds)
    (122/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.034095778 seconds)
    (123/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.494050177 seconds)
    (124/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.05494446 seconds)
    (125/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.338489166 seconds)
    (126/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.167567172 seconds)
    (127/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.071721432 seconds)
    (128/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.253479041 seconds)
    (129/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.311186943 seconds)
    (130/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.100416457 seconds)
    (131/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.126478767 seconds)
    (132/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.12221312 seconds)
    (133/341) benchmarking ("map", abs, Int64, true)...
    done (took 4.089765929 seconds)
    (134/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.067360711 seconds)
    (135/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.643864564 seconds)
    (136/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.430183685 seconds)
    (137/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.01388631 seconds)
    (138/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.261050119 seconds)
    (139/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.368833712 seconds)
    (140/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.145099928 seconds)
    (141/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.034110126 seconds)
    (142/341) benchmarking ("perf_sum", Int64, false)...
    done (took 2.126867422 seconds)
    (143/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.321305326 seconds)
    (144/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.02475279 seconds)
    (145/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.339794645 seconds)
    (146/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.072621472 seconds)
    (147/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.253200713 seconds)
    (148/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.450935416 seconds)
    (149/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.28949474 seconds)
    (150/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.455049523 seconds)
    (151/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.327920241 seconds)
    (152/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.35006887 seconds)
    (153/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.499550256 seconds)
    (154/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.213920013 seconds)
    (155/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.129509996 seconds)
    (156/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.205593844 seconds)
    (157/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.449292526 seconds)
    (158/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.159514159 seconds)
    (159/341) benchmarking ("sort", Bool, false)...
    done (took 2.254387628 seconds)
    (160/341) benchmarking ("map", identity, Bool, false)...
    done (took 2.11527398 seconds)
    (161/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.484172067 seconds)
    (162/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.088982147 seconds)
    (163/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.624596841 seconds)
    (164/341) benchmarking ("map", abs, Float64, false)...
    done (took 2.247266604 seconds)
    (165/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.564555808 seconds)
    (166/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.164660149 seconds)
    (167/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.508510306 seconds)
    (168/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.086581775 seconds)
    (169/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.012350771 seconds)
    (170/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.391361947 seconds)
    (171/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.081520332 seconds)
    (172/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 3.305989765 seconds)
    (173/341) benchmarking ("perf_sum", Int64, true)...
    done (took 2.081611517 seconds)
    (174/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.141159051 seconds)
    (175/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.807596743 seconds)
    (176/341) benchmarking ("sort", Int64, false)...
    done (took 6.863196949 seconds)
    (177/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.555156736 seconds)
    (178/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.222650853 seconds)
    (179/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.405013386 seconds)
    (180/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 3.070428739 seconds)
    (181/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.304015596 seconds)
    (182/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.036587291 seconds)
    (183/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 2.689452177 seconds)
    (184/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.387080849 seconds)
    (185/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.323193772 seconds)
    (186/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.057457754 seconds)
    (187/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 3.188230719 seconds)
    (188/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.578503655 seconds)
    (189/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.568688609 seconds)
    (190/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.689519815 seconds)
    (191/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.253184083 seconds)
    (192/341) benchmarking ("collect", "all", Bool, true)...
    done (took 2.194572575 seconds)
    (193/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.190321829 seconds)
    (194/341) benchmarking ("map", identity, Float64, false)...
    done (took 2.248101494 seconds)
    (195/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.066106305 seconds)
    (196/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.187559102 seconds)
    (197/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.143602425 seconds)
    (198/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.120683739 seconds)
    (199/341) benchmarking ("map", identity, Int8, true)...
    done (took 3.811715607 seconds)
    (200/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.26029432 seconds)
    (201/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.017100224 seconds)
    (202/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 3.651617846 seconds)
    (203/341) benchmarking ("perf_sum", Float64, true)...
    done (took 2.196186003 seconds)
    (204/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.161590724 seconds)
    (205/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.032236395 seconds)
    (206/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.307609931 seconds)
    (207/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.260055905 seconds)
    (208/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.661133894 seconds)
    (209/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.419271146 seconds)
    (210/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.029173215 seconds)
    (211/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.018593967 seconds)
    (212/341) benchmarking ("collect", "all", Float32, false)...
    done (took 2.176286161 seconds)
    (213/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.316976239 seconds)
    (214/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.50522849 seconds)
    (215/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.320346889 seconds)
    (216/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.134749477 seconds)
    (217/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.107544128 seconds)
    (218/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.516786886 seconds)
    (219/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.139673402 seconds)
    (220/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.193004782 seconds)
    (221/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.558878926 seconds)
    (222/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.483526386 seconds)
    (223/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.254784917 seconds)
    (224/341) benchmarking ("map", abs, Bool, false)...
    done (took 2.171778671 seconds)
    (225/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.563555617 seconds)
    (226/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.188776275 seconds)
    (227/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 3.363351314 seconds)
    (228/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.478412041 seconds)
    (229/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 3.319202634 seconds)
    (230/341) benchmarking ("perf_sum", Bool, false)...
    done (took 2.128098125 seconds)
    (231/341) benchmarking ("collect", "all", Int8, false)...
    done (took 2.188801693 seconds)
    (232/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.024031661 seconds)
    (233/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 5.857071373 seconds)
    (234/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.042086844 seconds)
    (235/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.189474385 seconds)
    (236/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.644747334 seconds)
    (237/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.153456575 seconds)
    (238/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.44604155 seconds)
    (239/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.614272473 seconds)
    (240/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.329566539 seconds)
    (241/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.279931011 seconds)
    (242/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.419635529 seconds)
    (243/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.916980635 seconds)
    (244/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.505896559 seconds)
    (245/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.764234112 seconds)
    (246/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.155670154 seconds)
    (247/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.500214913 seconds)
    (248/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.131220511 seconds)
    (249/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.018801156 seconds)
    (250/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.425156426 seconds)
    (251/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.02379252 seconds)
    (252/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.243169112 seconds)
    (253/341) benchmarking ("collect", "all", Bool, false)...
    done (took 2.14740552 seconds)
    (254/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.179155698 seconds)
    (255/341) benchmarking ("perf_sum", Float32, false)...
    done (took 2.17634887 seconds)
    (256/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.084667239 seconds)
    (257/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 3.014652849 seconds)
    (258/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.166934226 seconds)
    (259/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.34107577 seconds)
    (260/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 2.266715963 seconds)
    (261/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.243663029 seconds)
    (262/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.041469818 seconds)
    (263/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.015694755 seconds)
    (264/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 4.15346048 seconds)
    (265/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.101080249 seconds)
    (266/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.174400277 seconds)
    (267/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.420146644 seconds)
    (268/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.019240724 seconds)
    (269/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.665255417 seconds)
    (270/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.061556479 seconds)
    (271/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.06900154 seconds)
    (272/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.090120419 seconds)
    (273/341) benchmarking ("sort", Float64, false)...
    done (took 6.911524601 seconds)
    (274/341) benchmarking ("map", abs, Float32, true)...
    done (took 2.266320826 seconds)
    (275/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.116055406 seconds)
    (276/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.111087369 seconds)
    (277/341) benchmarking ("perf_sum", Int8, false)...
    done (took 4.587169486 seconds)
    (278/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.060958321 seconds)
    (279/341) benchmarking ("perf_sum", Float64, false)...
    done (took 2.388661317 seconds)
    (280/341) benchmarking ("sort", BigInt, false)...
    done (took 7.081661736 seconds)
    (281/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.636109941 seconds)
    (282/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.30720822 seconds)
    (283/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.549851333 seconds)
    (284/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.243805428 seconds)
    (285/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.469942943 seconds)
    (286/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.116206609 seconds)
    (287/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.128678755 seconds)
    (288/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.255226062 seconds)
    (289/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.121493641 seconds)
    (290/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.228486785 seconds)
    (291/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.041664666 seconds)
    (292/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.931447035 seconds)
    (293/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.444623709 seconds)
    (294/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 3.327939883 seconds)
    (295/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.617500397 seconds)
    (296/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.675420737 seconds)
    (297/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.022888267 seconds)
    (298/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.361903312 seconds)
    (299/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.031379363 seconds)
    (300/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.223791631 seconds)
    (301/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 3.290194215 seconds)
    (302/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.65272275 seconds)
    (303/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.432932095 seconds)
    (304/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.418020935 seconds)
    (305/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.133262439 seconds)
    (306/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.028059898 seconds)
    (307/341) benchmarking ("map", abs, BigInt, false)...
    done (took 7.794928334 seconds)
    (308/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.697091637 seconds)
    (309/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.537986215 seconds)
    (310/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.509460858 seconds)
    (311/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.078810138 seconds)
    (312/341) benchmarking ("sort", Int8, false)...
    done (took 5.683545641 seconds)
    (313/341) benchmarking ("map", abs, Int64, false)...
    done (took 2.164096966 seconds)
    (314/341) benchmarking ("map", abs, Int8, true)...
    done (took 2.220284383 seconds)
    (315/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.032384169 seconds)
    (316/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 4.946859081 seconds)
    (317/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.159193366 seconds)
    (318/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.221813645 seconds)
    (319/341) benchmarking ("sort", Float32, false)...
    done (took 7.023483305 seconds)
    (320/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.446571476 seconds)
    (321/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.021906364 seconds)
    (322/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 4.153563303 seconds)
    (323/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.588782496 seconds)
    (324/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.100114503 seconds)
    (325/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 8.726554662 seconds)
    (326/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.027074158 seconds)
    (327/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.877365439 seconds)
    (328/341) benchmarking ("map", abs, Int8, false)...
    done (took 2.157141761 seconds)
    (329/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.034805905 seconds)
    (330/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 4.887088187 seconds)
    (331/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.137261955 seconds)
    (332/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.192707921 seconds)
    (333/341) benchmarking ("perf_sum", Int8, true)...
    done (took 2.103299503 seconds)
    (334/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.103644508 seconds)
    (335/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.30804619 seconds)
    (336/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.42657445 seconds)
    (337/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.399310474 seconds)
    (338/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.501520154 seconds)
    (339/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.366915749 seconds)
    (340/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.03113693 seconds)
    (341/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 4.697514771 seconds)
  done (took 1197.808534644 seconds)
done (took 1199.915801499 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.181954891 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.107436582 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.611421747 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.054156449 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.053819566 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.1413241 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.615269394 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.072748319 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.043708277 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.653339506 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.136559958 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.034843297 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.043108582 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.050606347 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.142266218 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.108192902 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.039866808 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.058294337 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.074028707 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.146391165 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.190411632 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.038319297 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.032265859 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.135112998 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.131607514 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.048312861 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.101358131 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.141011064 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.228006767 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.10140548 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.043755751 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.43458825 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.120624294 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.146981515 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.073385676 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.044614412 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.041269412 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.088709062 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.184280756 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.049203237 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.035997471 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.049051179 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.097942596 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.148177411 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.043442892 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.034666308 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.044175379 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.215376622 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.111421526 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.445926997 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.123358956 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.092394855 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.256799986 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.080921728 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.03853571 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.038098591 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.194356174 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.151780573 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.056629281 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.444381821 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.217083564 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.152958211 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.498358695 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.121208372 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.071420401 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.111490589 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.170868021 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.125248348 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.450355597 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.671220688 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.233030824 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.136957089 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.071461462 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.081962098 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.130139699 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.7401125 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.060758915 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.725590692 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.101187858 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.171361904 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.074793884 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.057959134 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.050117568 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.105661983 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.191167156 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.053618606 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.044091595 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.047428637 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.127772847 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.548316615 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.102343736 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.617857203 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.095660049 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.189351439 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.087342121 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.725712421 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.11444889 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.180727126 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.118966563 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.455255304 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.111283751 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.149143588 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.17577989 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.073733518 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.142271525 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.116358462 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.200497926 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.150465751 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.087219771 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.050735853 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.057190534 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.150920275 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.117735892 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.049778986 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.043220145 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.051498597 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.151703799 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.114380299 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.092052187 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.059980964 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.100727183 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.179509535 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.10422101 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.107312834 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.07138688 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.11777133 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.22657427 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.078740864 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.138448037 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.050100066 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.142490854 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.112742542 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.444391869 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.096465238 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.089538846 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.157836518 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.088054945 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.063108465 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.043164638 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.098684331 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.154060121 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.050016466 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.144396616 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.093132138 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.184206427 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.168264518 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.048615663 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.045421318 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.076551997 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.156426949 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.103756881 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.043550948 seconds)
done (took 329.377495105 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.18146247 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 4.425572011 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.100149896 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.080562537 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.213762704 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.091197291 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.028407576 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.027764406 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.107753536 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.586089559 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.045082142 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.061252556 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 4.450549083 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.091815145 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.109840858 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.050765484 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.104421151 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.411713123 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.031584049 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.093262728 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 3.041238833 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.136903977 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.065668288 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.483378509 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.03722131 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 3.036972381 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.097131862 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.102472033 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.397980087 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 3.028608414 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.050376254 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.409398613 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.122578819 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.03228706 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.030048905 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.08171914 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.2696872 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.072866122 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.105044063 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.093691001 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.167607339 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.174529627 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 3.086744646 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 3.086425406 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.166401135 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.115507395 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.063479336 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.057188875 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.053190128 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.07769433 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.343037197 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.149233244 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.11474687 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.060302547 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.057957323 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.051611083 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.147448986 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.102435137 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.094694962 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.031199161 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.111877311 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.574365691 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.539435849 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.030721794 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.0462901 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.14130876 seconds)
  done (took 164.606583356 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.108824868 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.130716803 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.164892024 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.149284832 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.09627669 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.121945453 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.036378996 seconds)
  done (took 16.777248848 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.115169985 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.037229654 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.088357121 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.090806624 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.153321848 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.294241039 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.09124832 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.088023434 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.115568642 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.185485331 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.441671193 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.093418602 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.06690748 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 3.179527537 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.138799198 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.173664021 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.15641183 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.11371258 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.263081704 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.127314905 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.05355649 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.067917114 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.223260772 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.153827778 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.056343444 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.102081823 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.136231195 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.158716096 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.120986475 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.042751717 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.033909309 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.097999958 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.163021774 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 3.05759926 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.070823046 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.080646305 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.170862825 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.096460054 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.095225343 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.472121744 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.128327388 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.160918497 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.076432235 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.074894674 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.075598646 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.185487228 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.107788247 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.076388339 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.074733012 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.076324475 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.214087969 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.102943582 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.075691496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.079713164 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.144121841 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.179964622 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.078978067 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.080406553 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.082632668 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.133015141 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.150507616 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.151991517 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.102253959 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.075199305 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.195572063 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.153665165 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.076106724 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.074581682 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.092936286 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.210428273 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.085111166 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.105994825 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.081296241 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.212467847 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.163622654 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.253076699 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.103078845 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.079227938 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.160992641 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 3.085874018 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.091364512 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.075770584 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.130835906 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.165878971 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.077724177 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.078048851 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.075571661 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.157617081 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.135945127 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.076411787 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.125857775 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.077882027 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.18105681 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.187163068 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.076946139 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.184161268 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.168481704 seconds)
  done (took 211.405641237 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.088990966 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.086881252 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.104813538 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.152085867 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.117499078 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.089475191 seconds)
  done (took 14.741961105 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.0850296 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.182358146 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.116190247 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.081021563 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.07683501 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.089170489 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.190955227 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.109516766 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.099324055 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.08290404 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.132278823 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.170625855 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.097486691 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.085801581 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.079921721 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.148439391 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.144104469 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.07862749 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.087426305 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.08031073 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.377939961 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.113788054 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.078301291 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.082048728 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.113053648 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.159070786 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.089237221 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.078578417 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.090946005 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.1372543 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.168136862 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.079373136 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.081944164 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.090833941 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.169374847 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.105911558 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.085843977 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.080151291 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.080327911 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.182847302 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.116357005 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.080999747 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.082759504 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.113362744 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.186879434 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.090493716 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.085082923 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.110083627 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.142350268 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.167516506 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.093604293 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.080959157 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.08246419 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.167202501 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.135721863 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.088815923 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.086191397 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.094445296 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.185324066 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.101611515 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.086635244 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.081499255 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.124196619 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.180888619 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.084242091 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.08199987 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.085497924 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.175151035 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.153441442 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.089075291 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.097046622 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.083761545 seconds)
  done (took 154.286130243 seconds)
done (took 563.77075424 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.114675268 seconds)
  done (took 9.168714081 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.34681652 seconds)
  done (took 9.561651259 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.458958779 seconds)
  done (took 14.579563057 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.114286485 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.120368762 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.162231454 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.125518702 seconds)
  done (took 30.549364723 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.270319011 seconds)
  done (took 9.281947823 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.100857363 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.081685298 seconds)
  done (took 16.280404537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.084913424 seconds)
  done (took 9.185293284 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.385316989 seconds)
  done (took 9.538529509 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.113176206 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.161543383 seconds)
  done (took 16.424883449 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.108071908 seconds)
  done (took 9.119493364 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.674753272 seconds)
  done (took 10.774916187 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.122239234 seconds)
  done (took 9.16015629 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.086095035 seconds)
  done (took 9.098678965 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.881418878 seconds)
  done (took 9.896821951 seconds)
done (took 174.720137308 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.13485407 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.085455576 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.085627558 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.185441268 seconds)
  done (took 30.498381153 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.184971193 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.177263739 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.152960198 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.149383444 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.119802653 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.237872089 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.186960714 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.140203271 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.123300463 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.176279085 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.238211163 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.131240432 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.143762879 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.140430015 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.215861448 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.208511449 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.142410013 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.138860718 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.141339109 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.257432783 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.1688936 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.139660092 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.093041157 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.141589878 seconds)
  done (took 53.967217394 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.305993484 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.198573746 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.249433386 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.244558594 seconds)
  done (took 11.105142976 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.108210028 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.166808848 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.184436815 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.251921788 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.144732553 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.253415213 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.144773997 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.36739922 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.310190163 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.221689724 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.09078078 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.126143945 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.205535952 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.150878849 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.251284211 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.084918099 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.152715029 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.290064765 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.179459655 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.338476424 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.110188293 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.260107392 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.160067268 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.152453377 seconds)
  done (took 54.78839554 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.13689055 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.184500675 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.104447669 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.086178679 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.090961576 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.158651365 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.15521784 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.087881635 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.116193152 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.091155644 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.191481204 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.112182296 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.089482546 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.086898373 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.118575421 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.210570695 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.103622744 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.088852907 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.089211159 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.1564485 seconds)
  done (took 44.488239546 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.086177927 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 7.188805207 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.333115206 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.348275378 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.105987782 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.160660203 seconds)
  done (took 35.309272165 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.13736929 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.202496108 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.099362194 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.125869094 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.156006197 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.173336043 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.235829214 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.29603663 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.096323281 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.181924061 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.218984584 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.104989198 seconds)
  done (took 28.046287271 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.085677864 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.08765408 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.184281197 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.105472462 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.203914374 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.122147414 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.101500806 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.092806444 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.102043372 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.110580487 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.097771896 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.20587732 seconds)
  done (took 47.513228178 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.266507895 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.242956593 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.461225585 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.886120875 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.591579029 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.263857445 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.482208629 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.623201764 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 5.143982036 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.236187431 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.57944114 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.127305312 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.632335809 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 5.039718734 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.18891372 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.367126528 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.201383574 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.578889611 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.516457162 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.196506982 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.093914436 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.089724739 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.194832408 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.613589431 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.496526051 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.122747729 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.333960576 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.170471389 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.0884488 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.372263969 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.139260718 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.211248036 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.253268683 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.386248316 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.602127143 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.286103602 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.180586513 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.136868806 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.248751467 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.127244082 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.104753381 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.106257379 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.66839195 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.103645244 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.334115446 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.193245143 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.130040919 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.769507071 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.04601232 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.215542123 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.263885543 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.304821753 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.217882668 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.782837305 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.224342792 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.436896676 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.154021863 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.117403048 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.262168634 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 6.140536836 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.301281672 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.17483655 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.268417737 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.041805346 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.414109923 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.275939219 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.139631172 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.194138871 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.354879466 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.365254089 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.275169068 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.219328866 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.861854314 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.092444413 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.093735817 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.050944109 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.208118166 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.093563744 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.820262745 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.601760416 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 5.12299449 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.192127284 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.725729236 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.122722883 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.109007969 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.182461345 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.724487515 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.066585121 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.177040523 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 6.149522795 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.482067162 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.093484099 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093136058 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.149867998 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.208775307 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.081104369 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.790459224 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.175201094 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.049967447 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.680900833 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.165644064 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.104014973 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.192748089 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.11393225 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.500883408 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.173922531 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.83519386 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.743038433 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.410982275 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.672151312 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.12539242 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.19637998 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.176019283 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.275821778 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.124746209 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.853778224 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.130887443 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.282118289 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.270241485 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.141302239 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.046648281 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.192756592 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.246753165 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.179192163 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.122829726 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.093459802 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.146393312 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.093521263 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.179962859 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.128791963 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.11938471 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.677534843 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.234160682 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.098874337 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.038509211 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.164778104 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.577639986 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 7.1847813 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.196655258 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.519717056 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.706814706 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.651107219 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.08884015 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.946290644 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.660124767 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.203785016 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.186627292 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 4.246530802 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.288921353 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.179071879 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.093565795 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248890954 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.106293042 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.099478702 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 7.09580732 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.75263884 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.056024468 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.248031694 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.138547538 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.115706923 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.141099333 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.395415978 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.755596158 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.168921533 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.106293559 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.180685827 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.353755594 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.121105201 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.119478244 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.457167313 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.327190339 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.675617552 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.357715553 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.750174682 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.262505337 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.109632139 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.268951649 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.181384958 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.85129962 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.487121665 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.507644635 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.646300236 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.111369107 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.611557185 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.265952113 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.493615606 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.171510753 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.962443514 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.138664607 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.93657831 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.133771887 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.074206397 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 5.1150753 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.110738466 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.558130624 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 5.166740514 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.648455151 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.197495672 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.273296711 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.098209207 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.123637195 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.218710365 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.890028647 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.214396753 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.273655873 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.208516779 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.076205216 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.882056784 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.14387917 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125227279 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.200629187 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 6.510715185 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.324912601 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.204040602 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.11168414 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.273537861 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.254016169 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.847151952 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.215641571 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.172803822 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.666691304 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.234640272 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.163328496 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.255285424 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.326098023 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.207334872 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 6.214376774 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.339168752 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.693672438 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.357583847 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.273914422 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.167029135 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.217509515 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.495727273 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.156401956 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.417368386 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.704397511 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.752584871 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.849495469 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.318204775 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.768138706 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.164595515 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.104711823 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.670149686 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 2.228112396 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.102764145 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.257008607 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.802848313 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.308494185 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 6.146022784 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.187372692 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.104813629 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.573493429 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.695682466 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.136055911 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 3.138663496 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.266737284 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.102617806 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.351082028 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.988024538 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103670091 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.133211906 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.1114673 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.276731199 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.35557211 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.514803822 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.607163582 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.831899435 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.117755477 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.109163778 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.220884037 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.428599797 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.101569711 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.206013129 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.744963813 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.77458669 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.877455044 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.628873326 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.350540782 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.828565523 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.599146839 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.20553051 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.116364955 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 3.064249543 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.339724871 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.064614904 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.290232722 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 5.120052217 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.892135361 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.461968636 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.128527763 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.561676259 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.182886677 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.615925646 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.468553239 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.19689712 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.24235516 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.240902326 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.12872189 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.264476979 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.143026823 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.208482196 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.22610306 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.103403153 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.579498479 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.230933636 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.15061095 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.111526824 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.673931525 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.158624571 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.183852479 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.71322598 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.130061492 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.258648555 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.291392448 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.926439866 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.136405566 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.183471875 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.693312206 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.676954603 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.565491235 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.194055835 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.682069136 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.271957048 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.878409516 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.1059306 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.292545817 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.113662854 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.822386151 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.158426102 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.492505607 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.132682945 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.283688626 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.414900102 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.214730335 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.187192321 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.05980506 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.708528686 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 3.266186797 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.588631802 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.114400366 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.966548411 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.577660884 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.23583281 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.627695253 seconds)
    (346/608) benchmarking "3d"...
    done (took 3.118837363 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.160367576 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 6.377951005 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.906612883 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.835731421 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.247081197 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.140477568 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.250620954 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.399043091 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 6.221124174 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.862947951 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.102398095 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.11388597 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.25699334 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.289244985 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.081107918 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.615299284 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.917799665 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.346965672 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.102623923 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.348263317 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.185297868 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.342697543 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.126940376 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.162814279 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.882561237 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.587789961 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.188423989 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.037800997 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.143898789 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.391295062 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.241026958 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.169702487 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.397468271 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.613329753 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 7.139939277 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.251769931 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.262046269 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.351648422 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.899282555 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.776780524 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.434482422 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.708002348 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.672531649 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.089163652 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.828213053 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.259401958 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.281406256 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.523018761 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.985702121 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.462713128 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.436598051 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.094665526 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.040273556 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.332263096 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.10259453 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 7.271790024 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.790649913 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.428552428 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 6.138973202 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.962230467 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.667128448 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.182372248 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.115434051 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.209657369 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.129731385 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.109880235 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.169059143 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.615451641 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.547821306 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.158441659 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.044859677 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.897461698 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.08748096 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.263191117 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.21843111 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.131192021 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.915506637 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.21325218 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.242811555 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.733682525 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.19623617 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.189170579 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.13761656 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.157340807 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 5.141416204 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.760636837 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.882784672 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.114749482 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.093178437 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.32070292 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.133452046 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.138540426 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.146571823 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.502524721 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.779418707 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.590971059 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.358418323 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.447144338 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.374005249 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.828233623 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.193329847 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.440891432 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.058997417 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.108682746 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.162187266 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.247500282 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.193570521 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.095430934 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.1668835 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.328911091 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.205948653 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.271079285 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.253649758 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.183683538 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.165325952 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.29944933 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.232142752 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.094708578 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.096935686 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.134372027 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.336580228 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.123257031 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.046847591 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.37532724 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.176036436 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.492387722 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.18213653 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.978208711 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.107709792 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.915746254 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.254948522 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.659758988 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.111073781 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 5.279332625 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.162411859 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.091308424 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.55421884 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.739203522 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.358089014 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.34942835 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 3.055561171 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.261105767 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.140814122 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.129662702 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.216250579 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.710200123 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.575177756 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.092701421 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.664242051 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.168457741 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.213772095 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.873365173 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.570513823 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.140289611 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.154397813 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.163726049 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.564166016 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.40091149 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.103630689 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.348836755 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.099295087 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 5.144552653 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.098926614 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.199313949 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.60814719 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.197423634 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.6260336 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.356753341 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.245721273 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.09827118 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.171842824 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.094751636 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.386884152 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.685133934 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.119269587 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.356427997 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.281337749 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.10247999 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.690236647 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.78002932 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.287889283 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.143286995 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.156195551 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.523255381 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.778844283 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.193551827 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.641681397 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.249207707 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.204748626 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.361128018 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.345422829 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.097526495 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.322582421 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.175724564 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.462130872 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.334863148 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.639087346 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.201211444 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.269706313 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.303630209 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.143986664 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.623211012 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.570155632 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.279474913 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.094641765 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.226588835 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.104225767 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.970691053 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.700558554 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.274630957 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.288186431 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.030132543 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.708435485 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.116876618 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 5.049598972 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.099985628 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.229108744 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.141480368 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.046777773 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.95854343 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.927218358 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.27102054 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.497953893 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.092833064 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.249634191 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.164761581 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 5.05174992 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.657618561 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.098642438 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.516923 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.050598459 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.101132343 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.168268252 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.186875831 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.30978381 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.50804958 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.190708073 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.073045858 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.105381249 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.098225162 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.104421213 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.272613938 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.143437612 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.340571442 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.546980368 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.377115799 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.259223597 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.977900346 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.947597894 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.067388824 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.205785739 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.097752874 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.742700863 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.165134948 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.395769732 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.200004475 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.075570194 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.637656864 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.125401396 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.815677407 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199474038 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.102387586 seconds)
  done (took 2444.438955729 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.178173727 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.184748766 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.195795841 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.189317057 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.123564642 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.144550974 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.245824632 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.126704479 seconds)
  done (took 59.411812973 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.098042071 seconds)
    (2/17) benchmarking "4467"...
    done (took 5.084339794 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 2.567627666 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.172357524 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.137429913 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 2.108628102 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.430342367 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.254778466 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.107791064 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 2.200239143 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.152217966 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 2.167431655 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.186008647 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.122707522 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 2.11070764 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.381586242 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.236136927 seconds)
  done (took 82.592820313 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.244917157 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.99323132 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.105477746 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.377061749 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.216777412 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.356769532 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.134718447 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.255107036 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.794754196 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 8.829367067 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.157489815 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.213551673 seconds)
  done (took 91.733219694 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.24078284 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.173874118 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.172148515 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.166147892 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.254501733 seconds)
  done (took 13.13885797 seconds)
done (took 2999.172245847 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.39941455 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.333732047 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.315652195 seconds)
  done (took 6.754401619 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.229502978 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.312946526 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.430383037 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.303141436 seconds)
  done (took 11.356201722 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.432016482 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.671463126 seconds)
  done (took 7.176488662 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.690386084 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.186734714 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.731532397 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.139582221 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.151049712 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.23228983 seconds)
  done (took 23.602757387 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.263282675 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.170278814 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.140668668 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.148407402 seconds)
  done (took 10.787612507 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.233025665 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 4.158468916 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.163737965 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.255424813 seconds)
  done (took 22.913729776 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.458797479 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.423169136 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.953429733 seconds)
  done (took 9.976215096 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.98587144 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.554912617 seconds)
    (3/3) benchmarking "Float64"...
    done (took 3.023792458 seconds)
  done (took 10.707394629 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.1000624 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.133573626 seconds)
  done (took 8.356229763 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.290670836 seconds)
  done (took 4.468148625 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.615506236 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.755063611 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.977823663 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.009543286 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 3.179161888 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.459048835 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.511695227 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.530303873 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.894782015 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.66131121 seconds)
  done (took 29.680875638 seconds)
done (took 162.897580252 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.190398458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.532237603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.478889026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.191418923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.333281666 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.445081671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.259372262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.932864056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.734866545 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.740312832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.809447386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.392161501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.206193316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.556247908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.259401831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.553205698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.545753893 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.111548385 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.359291738 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.151927718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.216182532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.388579194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.51490886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.437733996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.548411822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.277943009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.43636559 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.516653385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.646256895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.329145333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.368951391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.449987837 seconds)
  done (took 186.973319566 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.135752083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.14219004 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.248231284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.137384916 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.991278649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.252445997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.142505118 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.138653842 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.992462435 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.948878048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.139452305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.071204255 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.162074068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.161091607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.205677107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.178248575 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.071597333 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.181087782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.199239567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.139046998 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.141701148 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.811518338 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.137103634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.70836304 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.128132776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.141014113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.145823163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.227164026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.159746127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.147192808 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.222687701 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.169012599 seconds)
  done (took 221.846274409 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.154969494 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.142741208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.178443532 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.198619805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.13941258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.141584318 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.250601688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.140802679 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 7.155087891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 7.174392833 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.21090452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.146304487 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.149072933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.240517388 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.142934357 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.145328623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.160878627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.220852388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.140034474 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.142861302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.233990687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.149148858 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.150208605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 7.160534451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.226257091 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.143891322 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.142669772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.234365784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.161158964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.139690601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.148646916 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.236850821 seconds)
  done (took 231.578232272 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.495871127 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.200423472 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.143164841 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.518256822 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.224742316 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.194558663 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.497693845 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.439843888 seconds)
  done (took 22.785703578 seconds)
done (took 665.26070308 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.831060608 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.033735212 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.40581656 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.172932234 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.760353103 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.309920593 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.231107548 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.264726459 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.920562984 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.338486953 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.694559731 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.173515382 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.986155043 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.264279269 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.37936018 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.256436386 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.571255023 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.917156177 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.405141088 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.994347515 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.411871045 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.210373086 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.30007351 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.984412648 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.645839592 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.28504078 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.256379171 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.577044781 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.256120607 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.496578943 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.186729766 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.583580212 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.228445399 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.172240058 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.243784528 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.264659997 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.569080488 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.191237381 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.309841385 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.986020251 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.012995654 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.806096451 seconds)
  done (took 116.004204776 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.25717044 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.179294851 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.15029175 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.150397888 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.18725944 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.249908056 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.156277195 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.15103745 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.150181197 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.234393141 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.203080258 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.151683819 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.150930193 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.170502285 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.268280255 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.157982325 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.15454659 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.151186816 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.216225839 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.216491 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.15308607 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.151616895 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.146962964 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.263232376 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.173642039 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.152161604 seconds)
  done (took 58.837287535 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.184013254 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.423721053 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.493223054 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.186050053 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.148363472 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.264005297 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.201881269 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.158286289 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.150183642 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.201974468 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.349149976 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.155167285 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.162975419 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.487831597 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.304138936 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.152037104 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.149102109 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.147289337 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.393340125 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.231445122 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.190790668 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.157593151 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.189799497 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.276482651 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.166582883 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.152584802 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.152253887 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.688641675 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.224628605 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.260000167 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.25398035 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.221084013 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.682098549 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.504594448 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.227092557 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.157048208 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.263316635 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.322711491 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.165440974 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.150133476 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.245747506 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.233388403 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.489661579 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.742948271 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.212997801 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.243111806 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.630558941 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.31893002 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.217017395 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.28075194 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.506722699 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.185096526 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.149099539 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.232342851 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.245521728 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.161053184 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.151344494 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.474456867 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.27384456 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.190923775 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.158608792 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.151478283 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.432690375 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.203721075 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.333021385 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.185893489 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.202484316 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.254807628 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.508065881 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.186147625 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.738019984 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.283872097 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.161425705 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.2624422 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.340717533 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.756984617 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.191337136 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.346355767 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.603767274 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.286053992 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.212383021 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.623941027 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.208332429 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.214055251 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.241937062 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.152996522 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.149765583 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.199751412 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.290679137 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.698523153 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.743032551 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.481289804 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.313628843 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.19346614 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.17930201 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.459128448 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.223610117 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.231719644 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.489781871 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.775228396 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.219378832 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.249537852 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.715078829 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.175488688 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.203250875 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.276181624 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.509323195 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.188535792 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.200670528 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.234449431 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.211035379 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.159188165 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.193507922 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.187103762 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.265395652 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.716170816 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.338175954 seconds)
  done (took 271.321118209 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.261866726 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.151871503 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.15224501 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.214826386 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.208337994 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.162291341 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.152850166 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.152658624 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.169334061 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.153529923 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.202171977 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.202578859 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.162638349 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.169619443 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.295593465 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.167369822 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.950127629 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.198402831 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.153176218 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.15515896 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.978116487 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.162497815 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.217350303 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.185634377 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.154429495 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.153360409 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.277173464 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.179472067 seconds)
  done (took 176.832467606 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.154765289 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.265770316 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.256811256 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.225493682 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.168509529 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.154662516 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.285124418 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.216832133 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.16244987 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.155984548 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.190696505 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.288471055 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.16354608 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.256891635 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.198029586 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.290739459 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.301134465 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.172800532 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.156484039 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.191543527 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.318550944 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.175757801 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.19492116 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.234236214 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.26435143 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.261530476 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.173902273 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.154631908 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.190805781 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.38846116 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.178438723 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.200068699 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.204666572 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.285599411 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.324579555 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.295263952 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.275613241 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.248232856 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.238579758 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.164039461 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.15690888 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.163665395 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.332451805 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.198368622 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.162886436 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.314626999 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.258543541 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.261738411 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.215528409 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.169821501 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.203063258 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.331536897 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.254687454 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.310386113 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.22061355 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.260312962 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.262004348 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.170918929 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.153150751 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.252355796 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.277244714 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.289688805 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.197682208 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.170254094 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.22108243 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.249395588 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.220998928 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.194737008 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.261417296 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.275969175 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.263557968 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.239057249 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.173927782 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.220633315 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.218217309 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.221344929 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.267776224 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.239742407 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.351252375 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.200672447 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.167116214 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.151068043 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.230082103 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.257389725 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.166764205 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.277860524 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.292876911 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.280086233 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.152426289 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.154448631 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.151911587 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.256662145 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.299586839 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.2055416 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.272673561 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.215290773 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.3150828 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.164673913 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.17143415 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.15937249 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.270865765 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.224973897 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.169430151 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.501505616 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.232828099 seconds)
  done (took 236.265762287 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.55647244 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.210316171 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.24183936 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.531735661 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.58543164 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.418205267 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.226652339 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.330783881 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.216136973 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.361099393 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.274873978 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.375033869 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.223642959 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.18792594 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.211380825 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.266865997 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.34860181 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.5656847 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.337684691 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 4.213462243 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.219257577 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.522150543 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.545149612 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.733159917 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.266197917 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.662574797 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.85468882 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.439966282 seconds)
  done (took 72.125595208 seconds)
done (took 933.543848323 seconds)
SAVING RESULT...
DONE!
