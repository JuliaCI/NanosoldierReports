cset: moving following pidspec: 3668685
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.925885028 seconds)
loading group "shootout"... done (took 0.88077697 seconds)
loading group "string"... done (took 0.254077749 seconds)
loading group "linalg"... done (took 3.347733885 seconds)
loading group "parallel"... done (took 0.024264826 seconds)
loading group "find"... done (took 1.293131288 seconds)
loading group "tuple"... done (took 0.770917084 seconds)
loading group "union"... done (took 3.377622789 seconds)
loading group "dates"... done (took 0.162913012 seconds)
loading group "micro"... done (took 0.061423346 seconds)
loading group "simd"... done (took 0.377838371 seconds)
loading group "io"... done (took 1.452210193 seconds)
loading group "random"... done (took 2.63184156 seconds)
loading group "problem"... done (took 1.249800368 seconds)
loading group "array"... done (took 4.962475027 seconds)
loading group "misc"... done (took 1.059832512 seconds)
loading group "scalar"... done (took 3.683661013 seconds)
loading group "sort"... done (took 0.329681219 seconds)
loading group "sparse"... done (took 3.799949892 seconds)
loading group "collection"... done (took 6.498470682 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.592537099 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.080256461 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.275216376 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.08522114 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.291920912 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.088731058 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.096404476 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.076812364 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.081120815 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174266104 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.228466028 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419510694 seconds)
done (took 5.463529174 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.272483384 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.034305834 seconds)
    (2/2) benchmarking "String"...
    done (took 0.13311694 seconds)
  done (took 0.836179437 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.145238771 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.017567832 seconds)
    (3/3) benchmarking "different"...
    done (took 0.025608045 seconds)
  done (took 0.856647751 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.023416561 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.10454716 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.024239236 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.025025431 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.024981851 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.024292235 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.023988291 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.024055106 seconds)
  done (took 0.922372962 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029833978 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.025758533 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.023844661 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.025330419 seconds)
  done (took 0.771982495 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.023413595 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.088133279 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.022820091 seconds)
    (4/4) benchmarking "different"...
    done (took 0.022641846 seconds)
  done (took 0.817132879 seconds)
done (took 5.18238115 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.211476479 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.824407621 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.88906473 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.19377005 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.372096667 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.312712961 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.083348961 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.25481949 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.158432198 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.034532603 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194917243 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.040340334 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.601905508 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.475382662 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.029711634 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.157720063 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.605923001 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.040455963 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.07359435 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.26214872 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.038783777 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.04256527 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.048118385 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.029085892 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.168031469 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.13830767 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.610581049 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.067954184 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.027296648 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.053945834 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.029183724 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.036226763 seconds)
  done (took 9.821553654 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.161186988 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.155772666 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.026888938 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.064420949 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.053910657 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.027157809 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.033960057 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.026423801 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.047772704 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.094955159 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.049391434 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.167083699 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.023887045 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.027359655 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.148560519 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.123295817 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.039699272 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.040976798 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.02512072 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.040842879 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.054066198 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.037470087 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.036880205 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.03657324 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.072827955 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.092823576 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.044884795 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.067998296 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.024067141 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.03817954 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.054959627 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.066060486 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.024734743 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.023712528 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.070666218 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.04362925 seconds)
  done (took 2.913233567 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.063845645 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.056707085 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.14862173 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.138675585 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068165584 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.05318487 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.189048498 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.084796709 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.060721485 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026940942 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.222582881 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.704180528 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.181753451 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.121599911 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.029272666 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.193047497 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.954473623 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.971181351 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026641169 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.027223529 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.142945088 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.029278001 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.189192768 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.026579765 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.148537317 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.87400885 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.029625588 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.02834197 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.059044352 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.152980238 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.023830835 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.106253527 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.056586822 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.028911313 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.597821649 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0243583 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.022500161 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.045978598 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.056256817 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.024887992 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.026124755 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.037807002 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.024437501 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.080186726 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.038826018 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.541782302 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.028591333 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.720533142 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.861016595 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.034022796 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.031041482 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064177692 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.022910575 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.026962818 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.616203963 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.115444601 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.025876033 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.266279932 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.026418515 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.026760464 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.027375878 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06253149 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.026353585 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.027943201 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.030489476 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.044884002 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.052814473 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.033780729 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.046221995 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.023489747 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025592528 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.023839488 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.416381361 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.030872576 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.028065047 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.023130991 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.030102411 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.025923859 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.025141387 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.070389175 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.052684597 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.050966025 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.029260874 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.026244635 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.025520065 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.553481966 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.970871673 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.026161844 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.027324244 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.50430961 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.023084287 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.025499796 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.027885719 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.04921851 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.026215867 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.022937731 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.062809196 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.027079927 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.140307361 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.556068959 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.027659511 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.023353047 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.637404394 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.028036532 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.062863709 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.085064768 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.026399965 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.069872499 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.02622876 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.022868946 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.030344971 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083824987 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.027728419 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.024415966 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025338063 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.023945483 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.026245842 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.027237292 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.026249636 seconds)
  done (took 21.038558456 seconds)
done (took 35.508540833 seconds)
(4/20) benchmarking "parallel"...
done (took 0.969099864 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.232251803 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.055843529 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.023335439 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.179202541 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.048801506 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.148084716 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.192143727 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.138939939 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.049806142 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.05001939 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.049648821 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.194940563 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.209705557 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.051151121 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.129936154 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.206974434 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.050959241 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.022692783 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.050211179 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.050682366 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.050848757 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.022576252 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.050310087 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.051334235 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.12741046 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.048950328 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.022261293 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.129234088 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.052019819 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.132018833 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.051602854 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.051076414 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.0517297 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.129109385 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.051990152 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.128473368 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.022738556 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.05208309 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.05273566 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.053394154 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.052857945 seconds)
  done (took 4.332476094 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.048914923 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.043239051 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.047053412 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.02062977 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.031720368 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.044491694 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.020722431 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.043638379 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.047960314 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.043433948 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.043469717 seconds)
  done (took 1.276077506 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.042758683 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.044026948 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.045814956 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.020512105 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.033028036 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.043745277 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.019975454 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.043613246 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.046117746 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.043738484 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.044111152 seconds)
  done (took 1.212122501 seconds)
done (took 7.596479327 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.161155167 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.129979513 seconds)
  done (took 1.072465303 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.566687528 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.241603841 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.139343482 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.263757272 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.131498569 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.163539774 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.415405231 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.166867255 seconds)
  done (took 6.921881308 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.082839581 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.150973164 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.026988137 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.025316575 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.025941013 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.025917199 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.02801834 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.026216795 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.025183 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.028389358 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.027921549 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.025587714 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.026622961 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.028037992 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.025819874 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.025786171 seconds)
  done (took 1.529462339 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.029968414 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.028366985 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.030135282 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.019278233 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.0312196 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.029655495 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.031074136 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.031347146 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.030293669 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.030077574 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.027994797 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.031164674 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.029989014 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.028821293 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.031159633 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.019283795 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.030849229 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.030681297 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.03262496 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.031478376 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.030734545 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.02785291 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.032318165 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.029212761 seconds)
  done (took 1.505007757 seconds)
done (took 11.812723995 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148470485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.032730049 seconds)
  done (took 0.97275364 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.133134049 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.134247574 seconds)
  done (took 1.064034514 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.029270899 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.017528261 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.034569408 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.026695508 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.018121433 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.017801525 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.033889317 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.018272486 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.018094409 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.018409722 seconds)
  done (took 1.033523623 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019534732 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.025150337 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.023177521 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.021354699 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.023293484 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.018998827 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.021743953 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.019629048 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.025659888 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.018678015 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.022417295 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.042428681 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.022178984 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.042708806 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.022116873 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.022376424 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.024030403 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.021611671 seconds)
  done (took 1.236069096 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017983699 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.018447242 seconds)
  done (took 0.836745336 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020988327 seconds)
    (2/7) benchmarking "second"...
    done (took 0.01873368 seconds)
    (3/7) benchmarking "month"...
    done (took 0.020780121 seconds)
    (4/7) benchmarking "year"...
    done (took 0.020767799 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.01878601 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.01827378 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.01875105 seconds)
  done (took 0.938719318 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.426468262 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.096303737 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.346684805 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.027275432 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.041680941 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243598665 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.022483863 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.027379048 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.027239976 seconds)
  done (took 2.059128984 seconds)
done (took 8.936633197 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.042641078 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.152829855 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.159214988 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.489807293 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.037434949 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.025618643 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.058606103 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.240517637 seconds)
done (took 2.017957583 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.499465012 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.361195298 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.276265186 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.027007653 seconds)
  done (took 2.472987436 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333913652 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152161834 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033211718 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.02564894 seconds)
  done (took 1.369738523 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.023076071 seconds)
    (2/2) benchmarking "read"...
    done (took 0.030610222 seconds)
  done (took 0.868827635 seconds)
done (took 6.024916822 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030437826 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.018394104 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.0251495 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.020602734 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.020170873 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.019473509 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.01956748 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.020419121 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.018706731 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.021115478 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.021031287 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021036627 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020419608 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020450091 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.019886589 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020737083 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.018479409 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.020361334 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02036693 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020627788 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.018829403 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021084271 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.020093828 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.020479632 seconds)
  done (took 1.304352793 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.037946224 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.023811927 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.024360881 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.024160059 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.024741398 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.024128285 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.024020847 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.023221703 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.024085318 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.022746317 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0245941 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.024557953 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.022756152 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.024772008 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023062347 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.024978158 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.024459779 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023602085 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023162243 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.025133933 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.024523813 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02369278 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.02519708 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024178306 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.024650652 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.025078886 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.02291619 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.023312127 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024586523 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.025382304 seconds)
  done (took 1.554367412 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023534131 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.016626432 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.017043645 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.028113452 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.016966901 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.017354293 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.017944752 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.016879737 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.017438989 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.018260978 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.017523002 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.016909568 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0178485 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.016770744 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.016801439 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.017681912 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.022739402 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.039890175 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.017154548 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.01720306 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.022142428 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.017221251 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.017432533 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.017224969 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.017649383 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.017077474 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.016884468 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.017470329 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.017404953 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.017815847 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.017282467 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.02219643 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.023964181 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.017164338 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.028460884 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.022660714 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.016981508 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.024584289 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.018192394 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.01695554 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.017116174 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.017064198 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.017207122 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.017291561 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.029079549 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.017383985 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.018218864 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.017464326 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.017454285 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.017044624 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.017166802 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.019052064 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.023784072 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.018657254 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.017107526 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.018531185 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.01697334 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.017654184 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.017302987 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.01721842 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.017143871 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.021890609 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.018656162 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.018001518 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.040760337 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.018518467 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.029631534 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.017422844 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.017940341 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.022171131 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.017860076 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.038245835 seconds)
  done (took 2.239309435 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.027857749 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.027988912 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.03838987 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.028337573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.021138001 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.018211135 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.021555752 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018213478 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.028699217 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.022287326 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018293956 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.02166163 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.028640431 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.022375163 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.01957653 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.028791247 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.02230201 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.021484265 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.01878211 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.022234314 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.019513183 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.021804472 seconds)
  done (took 1.343414263 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106224163 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.02440633 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.069739741 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.027346552 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.026437794 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.027915579 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.024386728 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.024098883 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024237734 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025034803 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02499052 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024298681 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.026234384 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024334352 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.02465119 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.025067827 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.024687271 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.02510024 seconds)
  done (took 1.403936773 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.035743425 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.024152513 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.054595266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.023921369 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.023949132 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.023543967 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.02770895 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.028021191 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.02381204 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.024323528 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.028292293 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023485263 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.023985469 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024273146 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024113451 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.024328714 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.02416922 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02453727 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02817233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.02805478 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.027935128 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.027542813 seconds)
  done (took 1.42987737 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03685058 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022917085 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.041337395 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.024748234 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.01766247 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.017692415 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.024971716 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.023018095 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.024588727 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.022541425 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023178045 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.017495105 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.025660536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023600433 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.026219266 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023992363 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.023381585 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023968379 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.023545968 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.018091432 seconds)
  done (took 1.309729904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137049063 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.01966809 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.019590347 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.024201124 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.019569506 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.019693026 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.024571969 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.01996974 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.01970438 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.045982844 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.019825376 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.019617675 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.024625096 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.022571934 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.019731732 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.024953631 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.025106245 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.025046023 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.02019929 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.019874532 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.045853371 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.020026009 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.025085174 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0201492 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.020109783 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.020034065 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.020111367 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.023350026 seconds)
  done (took 1.595272567 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039305021 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020078855 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.017682629 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.022140747 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.022088604 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.03570744 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.022034399 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.021733278 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.02025134 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.018059553 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.02019596 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.020138401 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.020086109 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.03151929 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020485652 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.020468388 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.031763321 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.02215383 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.036087077 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.036181083 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.020444557 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.031804066 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.020579519 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.018217764 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.036438096 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.020455447 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022507665 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023653905 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020580859 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.018237092 seconds)
  done (took 1.562766328 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.031148515 seconds)
    (2/2) benchmarking "in"...
    done (took 0.029681652 seconds)
  done (took 0.889674133 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018866982 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.036859392 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.016934219 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.032322363 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.027082122 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.021872356 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.027223238 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.026942501 seconds)
  done (took 1.032150204 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.131244619 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.161448718 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.019138203 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.019154749 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.13133165 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09219711 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.144348316 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.032742141 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.03465077 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.022758848 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.019562054 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.146177104 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.019017 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.034923888 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020547063 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.030451211 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.027705941 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.039680065 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.03384485 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.017774791 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.033600542 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.01963659 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.018702393 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.019766775 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.020094046 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.026970704 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.036656227 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.033289212 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.028366594 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.016848706 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.040358146 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.017995247 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.018794894 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.02847517 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.133460896 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.01824123 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.060187683 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.017971614 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.022739486 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.017735623 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.03160087 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.040941809 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.034486827 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.037834016 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.019417138 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.019999068 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.017600267 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.019627789 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.022320757 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.028299232 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.018171074 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.027001617 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.017731663 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.019852942 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.03059987 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.018289089 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.023324485 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.028782393 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.033681447 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.030838258 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.032707063 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.036530204 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.02894321 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.027445833 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.018996054 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.041182128 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.02000005 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.033802687 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.035193804 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.019717311 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.033012745 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.018492994 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.017258414 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.018304733 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.056995345 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.019532308 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.019244479 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.018252333 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.018245687 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.01987105 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.029008939 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.023229425 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.026843246 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.021853705 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.036757761 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.029299742 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.017955207 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.026224693 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.039054223 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.023023325 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.018169269 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.037536027 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.022992526 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.017901865 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.038383379 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.029780034 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.01967002 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.01917986 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.023043405 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.033499194 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.019592221 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.017023343 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.027369283 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.019880934 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.134121192 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.022699409 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.027668533 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.018063042 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.029813539 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.024501277 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.019581142 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.016993018 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.023292946 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.018924704 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.017117626 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.028975303 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.018513242 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.0354834 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.026636062 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.035342205 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.035146428 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.030467473 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.036712603 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.01823307 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.017431212 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.039904111 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.029463564 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.020045701 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.039587027 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.018361603 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0309749 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.01865392 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.020300963 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.029447659 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.01792125 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020369293 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.018853566 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.025623691 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.020355917 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.02066098 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.026078433 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.028377804 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.032602632 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.019963223 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.028924031 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.018956771 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.037009624 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.029779686 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.024542521 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.022205427 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.019477242 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.032862634 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.026779262 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.029175877 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.018554136 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.019412572 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.018609873 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.031324052 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.029613098 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.020360259 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.028141391 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.024148709 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.019454706 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.018533605 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.019796284 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.023117567 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.022151326 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.018883389 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.027602567 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.029380875 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.034654828 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.027101118 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.029227456 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.017946199 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.018550151 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.020890827 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.018803504 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.024238647 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.029381415 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.03685372 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.032624426 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.043342849 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.019035217 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.030073525 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.020659978 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.038680344 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.033999281 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.019726735 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.023971661 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.017751829 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020465976 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.029095867 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031870085 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.034614462 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.03582028 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.024712908 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.024506336 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.018772123 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.036205787 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.01913235 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.028222009 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.029515288 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.025813445 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.01865325 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.020711954 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.029528746 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.024687103 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.019945722 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.036775179 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.027462029 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.018648934 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.035396402 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.019259844 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.031309636 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.018561055 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.022762669 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.025207878 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.021072288 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.029893186 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.036888586 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.017888393 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.019373266 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.037315767 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.020912567 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.02067371 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.027802559 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.036346661 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.025087754 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.028031916 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.031136721 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.030633841 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.024340644 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.030128198 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.019847224 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.029584665 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.022711673 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.032556418 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.018793177 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.039976344 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.01806644 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.03673474 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.01974122 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.031858658 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.019270958 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.029760866 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.019776978 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.03905957 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.020887623 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.020063432 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.032751097 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.017876958 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.029288149 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.018729992 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.024995036 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.026828884 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.029456367 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.021022962 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.029765818 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.02061909 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.02904706 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.024307722 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.029096196 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.029574547 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.024628743 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.018646464 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.028800494 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.031939137 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.028559364 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.020701693 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.020869172 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.019447924 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.029325103 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.020662749 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.020180957 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.028337281 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.024832029 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.026241743 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020657585 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.020959682 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.020624212 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.028986363 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.029639221 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.040226706 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.028998876 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.027871335 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.029843737 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.01891029 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.037007294 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.018739218 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.027794872 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.017943305 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.027878778 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.029982352 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.019165469 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.0410121 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.02074991 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.027879645 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.033025212 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.028575936 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.023531527 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.040044281 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.022788014 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.027865068 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.027597804 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.024234246 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.026630348 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.020659579 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.028366964 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.02956152 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.031355833 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.019702589 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.027013187 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.029028584 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020694695 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.029745163 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.020644841 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.028066625 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.020562118 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.017552473 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.023888085 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031833904 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.024660927 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.024973016 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.019213992 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.017547504 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.019083888 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.028171767 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.02434654 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.028537901 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.036629041 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.017836989 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.019740374 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.018448522 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.023025195 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.039977474 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.030012869 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.027804175 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.02479604 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.018048172 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.020405333 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.020762067 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.018906711 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.022883068 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.018104419 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.01849395 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.031073758 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.020738313 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.024193553 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.019060358 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.020275856 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.030392443 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.024275718 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.019261489 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.027388661 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.018574687 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.025265739 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.017895871 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.020694656 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0243803 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.018410034 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.02372625 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.030897706 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.038407954 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.026736145 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.028356279 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.019421556 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.027848037 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.03660484 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.029021954 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.019636387 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.029699655 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.018331112 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.040329326 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.029668406 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.028591626 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.030123816 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.019729585 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.03830909 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.024552832 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.030246555 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.03616055 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019960929 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.028703204 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.018682547 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.036852901 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.024395925 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.018430044 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.028649455 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.027814231 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.026161241 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.032343665 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.019568074 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.028601234 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.024891939 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.023258898 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.020846646 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.02095166 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.028850243 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.037812677 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.01978673 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.025657309 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.027846135 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.02848656 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.024567834 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032771501 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.028271899 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.01970553 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.020552806 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.022799252 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.019392232 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.032373587 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.019116611 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.024274185 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.023941044 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.018444587 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.026686636 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.037315594 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.029233064 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.029315492 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.018465348 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.018063147 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.039547431 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.023113086 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.022553273 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.027768134 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.030165169 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.032847676 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.029443446 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.038629 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.019138375 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.026201382 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.03294976 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.019871047 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.018645051 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0233342 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.020679483 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.029673143 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.030335436 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.026808653 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020674711 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.026958553 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.03421803 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.020387728 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.024218239 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.025475824 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.019167682 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.030704301 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.027910849 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.028242565 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.020419931 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.018245917 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.022480356 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.028472013 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.026793871 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.029316379 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.019884444 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.028616859 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.034735545 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.027236107 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.02262422 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.018535155 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.022487094 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.028844892 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.025859727 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.018427499 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.024985981 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.023607834 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.028587181 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.029414071 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.024193928 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.018663341 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.038833183 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.028831592 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.029065171 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.020540818 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.020800955 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.01907036 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.018606906 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.03181247 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.018706797 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.020648902 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.024538917 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.020796093 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.039080296 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.027686804 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.036636616 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019833611 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.024269673 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.018442904 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.029276432 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.024151053 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.018410224 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.030234442 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.017906943 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.036551615 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.03233157 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.027206547 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.018455957 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.024733835 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.028681856 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.036022651 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.029860353 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.028985297 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.022673551 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.029948916 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.337227939 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.030538894 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.018327571 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.017130285 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.02915949 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.028006729 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031956322 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.017615483 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.029167715 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.019531838 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.027810914 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.028251222 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.019574728 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019742609 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.019773634 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029387507 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.024371473 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.029043855 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.023951269 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.037891825 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.018918293 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.031165657 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.029070148 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.030943304 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.035275814 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.032136109 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.028480236 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.018893931 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.027019961 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.028269035 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.019337045 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.025237571 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.021673896 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.044050459 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.019934668 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.019700487 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.034544384 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.025810689 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.018340511 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.02543494 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.023772053 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.030235778 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.019332723 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.030332738 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.023504649 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.019512349 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.024528572 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.024525392 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.01756092 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.018073619 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.018500828 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.029443324 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.024417261 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.018399503 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.040796598 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.020104531 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.028893201 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031501045 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.027020932 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.019820678 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.017464227 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.018944008 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.034072959 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.036054182 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.022964198 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.028704058 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.020068221 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.028967481 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.017345283 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.028367577 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.027432313 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.028235885 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.017962915 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.018554347 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.035784914 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035979442 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.023988171 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.038136825 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.028652968 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.019872036 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.042964285 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.028503971 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.019196251 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.030802137 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.02051782 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.017441451 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.017269922 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.019676217 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.031690965 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.018461956 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.02045065 seconds)
  done (took 17.407727549 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.063478535 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.018815743 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.017634891 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017752772 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025187157 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.019049361 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017765705 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.018889948 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.018889611 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.019987318 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.01783349 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017967932 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.023707956 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0340195 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.025922013 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.021553815 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017520668 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.018836959 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017938182 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.019009626 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.024165253 seconds)
  done (took 1.402564569 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020538788 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.021991133 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.021600966 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021989583 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.021268914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.017953834 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.02117964 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.017738352 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021392626 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018043099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.022176202 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018216617 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.018338719 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.018235137 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018394381 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.019458572 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.022219397 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.021375134 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.018121979 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.021841289 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.019520151 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.021703229 seconds)
  done (took 1.332312209 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018452096 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.017835052 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.026939241 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.016993391 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.017504557 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.020084396 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.016821441 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.02206504 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.022553567 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.02273679 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.027327315 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.01783008 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.017092841 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.02417901 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.017043966 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.01771354 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.065458389 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.017961364 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.018208499 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.017357676 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.019664836 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.027935437 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.017379732 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.017264804 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.022908298 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.020263004 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.017340771 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.019969265 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.017968874 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.022600031 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.018157924 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.017154651 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.027777744 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.026741932 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.022747639 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.022648728 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.018759336 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.018095445 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.017303711 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.017497507 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.027155112 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.01864776 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.017495682 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.018387889 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.027362766 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.017491805 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.017243986 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0273507 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.017122678 seconds)
  done (took 1.924485415 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.029156381 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.075097699 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.02456463 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.05738387 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.030207795 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.023335945 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.024155684 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06004416 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.018693102 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.019143704 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.031662729 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.031590754 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.020439949 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.021456194 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.024493203 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.020192467 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.020679529 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.019423121 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.022436992 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.019960053 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.022895968 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.025659969 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.031296067 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.031581214 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.021449432 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.019676408 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.019968882 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.021707775 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.031099338 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.023415605 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.021867449 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.022425754 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.031491906 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.026101965 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.019923675 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.020230429 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.032100392 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.020531624 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.02033562 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.018820436 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.0200218 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.021522735 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.025660779 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.032404487 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.020706457 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.026125238 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.020307038 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.018356678 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.031382633 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.020256772 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.023729398 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.032273123 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.021559122 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.020883579 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.02221126 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.031665971 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.020733473 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.019217314 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.020636803 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.031240012 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.018787632 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.021310947 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.032101491 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.020029165 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.023917144 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.032695171 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.026705334 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.021467978 seconds)
  done (took 2.782622167 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.025430553 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.05518596 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.032479317 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.032638444 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.028083865 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.027646961 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.028057728 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.028744307 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.028364025 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.03095018 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.028386285 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.17812099 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.025276875 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.030131198 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.028587773 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.028715812 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.028367131 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.028485567 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.028599044 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.028498188 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.028948052 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.033584151 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.028519607 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.033492481 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.033030233 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.025628088 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.028810281 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.028779855 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.033685232 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.028834047 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.033191943 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.028623769 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.028790317 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.03370662 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.032956026 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.028315103 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.018131182 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.028366214 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.028710958 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.028923933 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.024717355 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.033730037 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.028713178 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.02505325 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.028733208 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.028733377 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.033630262 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.033644191 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.030688842 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.032146867 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.029400369 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.034020607 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.028747462 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.029385908 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.034557677 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.037266683 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.034343174 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.034459202 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.029288972 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.03453233 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.034225727 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.037422593 seconds)
  done (took 2.943707564 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.031129881 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.02297127 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.03793697 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.017062914 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.016906628 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.02690628 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.017182452 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.017227437 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.023707536 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.023794563 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.025134156 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.02718109 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.029221234 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.025254896 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.02773 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.030074074 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.027880007 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.027542137 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.023551549 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.027646513 seconds)
  done (took 1.415128933 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019246329 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.02240837 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.017799926 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.03487056 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.017726453 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.026178165 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.01815155 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.017965457 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017979761 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0178737 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.02272057 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022984485 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018183723 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.027042201 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.021990913 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.026334287 seconds)
  done (took 1.240895608 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.02061617 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.025736108 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.134501491 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0185405 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.020421417 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.017654147 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.018617979 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.017893103 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.020172187 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.032698812 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.018721756 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.021002263 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.018760502 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.017540486 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.018216567 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.021183418 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.020384784 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.01899555 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.018920203 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.135633073 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.028085534 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.019380801 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.020848134 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0193135 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.020337978 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.027706475 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.020426768 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.020867744 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.018865542 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.021381171 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.020953961 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.030875257 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.020859331 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.019637603 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.017692797 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.01859875 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.019057453 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.021186825 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.021179749 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.018870594 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.017795681 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.020850826 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.019059338 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.019365165 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.02036512 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.021444715 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.020401211 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.029970791 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.018833278 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.020887583 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.018953505 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.020055636 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.019207267 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.031040996 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.021416663 seconds)
  done (took 2.275929165 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036162493 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.02339083 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.017056577 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.016965461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.023311718 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.023892747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.023381644 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.023723336 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023920735 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.016877021 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023819856 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.023145642 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024041365 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.023704142 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023898757 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02342857 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.017081299 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.024176372 seconds)
  done (took 1.320733606 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024709843 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.022753282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.02316559 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.018839997 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.018789719 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.023066673 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.017377546 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.018743534 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018455645 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.018851684 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.019008607 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.018952901 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.01904241 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.018647764 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.022821291 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018981596 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.018781548 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.01757923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.019167373 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.017347034 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.02366475 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0176681 seconds)
  done (took 1.332740514 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.19962241 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.159037609 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.044072956 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.039270848 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.030064453 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.057752408 seconds)
  done (took 1.420763112 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.054081714 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.058367447 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.023106677 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023174247 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.027418333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.025927173 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025691424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025991815 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028867591 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.031763341 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026183206 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029611691 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029092248 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.031122693 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027546974 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.027758211 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026299294 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026167242 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022981139 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.033412549 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026010506 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029876049 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026410272 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026203501 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026219786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.031375096 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029591503 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.032466171 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026457292 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029778433 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028276642 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026424133 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030011966 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.032515024 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023622327 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030295737 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026730125 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.03429805 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028584466 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.031449382 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.02336369 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028346855 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029543246 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029566584 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030110676 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026399629 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029493245 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026760613 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026697437 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.038300334 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.028525899 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.031839141 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028860309 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.030192998 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030230291 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.03874985 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.033079829 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.032042692 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028622633 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.033039969 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.032380765 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028581731 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.032072778 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.03335678 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029100045 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.032433103 seconds)
  done (took 2.869630663 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063372776 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.023633059 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0257751 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.031432422 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030576735 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025919183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026331011 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026216074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026376593 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023633933 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064389162 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026587456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031245996 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.03104207 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026028895 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025893704 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026390217 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.031024756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024080169 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.037539722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02651481 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031693739 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.031577543 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.031466878 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.032700387 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028143755 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026994591 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026816412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026727604 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026755685 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029713435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026741413 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.031649746 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.024051879 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.031836982 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026935268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026522071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029393946 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026621801 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028326542 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.031546197 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.03476866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026485435 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026471898 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032667206 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026561066 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02649239 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024198192 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026722851 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024118042 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.033059104 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.033006953 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.033263522 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.031966938 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026730317 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02720394 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026874616 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026752461 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026984322 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.028476168 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032000391 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026789903 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.038714941 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027346857 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027316976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.032542951 seconds)
  done (took 2.869144399 seconds)
done (took 59.013365238 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211101104 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176486533 seconds)
  done (took 1.282616952 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.145478703 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.145461988 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.171102293 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.027601789 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.087796048 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.184520903 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.130028314 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.027003404 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.026136301 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.029249992 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.026940756 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.02931545 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.029698658 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.026568231 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.093093226 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.027435847 seconds)
  done (took 2.111832575 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.078989049 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.262392061 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.065085845 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.025798117 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114563579 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.032703961 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.027781676 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.03248952 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.032819999 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.026290673 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.078707288 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.040490044 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.031094059 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.032537023 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.02774365 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.031730338 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.03255311 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.032578506 seconds)
  done (took 1.915419474 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.10071558 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.037452789 seconds)
  done (took 1.051377988 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.151271288 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.067826137 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.110062452 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.337147581 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.100711381 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.11596227 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.121092153 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.112239994 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.075162666 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.099826921 seconds)
  done (took 2.197932382 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.065677541 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.064364851 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.310900185 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.062298824 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.039684354 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.034361344 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.034092176 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.035424728 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.034030499 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.033548641 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.085085153 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.032306437 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.028641346 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.081692497 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.056188928 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.067961039 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.027144421 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.03432695 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.037433272 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.027396332 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.032776604 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.035387359 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.144145864 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.034809233 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.057493674 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.032143181 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.033807711 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.032845494 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.033254471 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.034810296 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.034821461 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.058908424 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.034583873 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.041332635 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.032963035 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.055007141 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.027977804 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.056465912 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.031224204 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.028145291 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.031717921 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.03548646 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.153582329 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.034738898 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.03420039 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.034178834 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.036020684 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.027270908 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.033956868 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.031309855 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.028114788 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.032747785 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.032554892 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.033984417 seconds)
  done (took 3.572073603 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.082009426 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.072662412 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.027665478 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082623397 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071337782 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.027358087 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.087068188 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066536715 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.085837142 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.027568688 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.027067257 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.027159203 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.035153793 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.038515414 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082275064 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075550637 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.028923354 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.027474359 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.074876625 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.075806527 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.026623516 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087766173 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.077892557 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.075090639 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.026082919 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.027595043 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.026493356 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.027199622 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.035530282 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.035031 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.026890379 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.038212205 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.038804165 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.034048464 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.025524855 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.02581008 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.026357543 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.035346862 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.036598645 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.036727581 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.033502505 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.025782657 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.026423246 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.026865971 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.027061381 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.025908567 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.036897031 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.03465835 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.03676731 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.026909118 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.027022643 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.026475169 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.027194358 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.034579065 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.03318951 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.03454705 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.037803799 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.02669584 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.026560435 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.028262223 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.038381819 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.035394953 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.035270637 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.027615032 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.036338876 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0262499 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.037451824 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.040508086 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.02647071 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.027148184 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.026991973 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.026738648 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.027628189 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.034175374 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.033943702 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.027290412 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.027206484 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02701372 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.036082217 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.034330831 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.026752767 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.036538644 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.026197531 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.027049787 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.027278316 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.027789092 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.037123423 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.035624728 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.027382153 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.026703192 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.026519131 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.026443715 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.026040353 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.036398569 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.035035166 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.035181123 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.037018982 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.027334845 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.037858515 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.035637259 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.027374886 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.034601704 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.026671399 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.027043925 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.026854753 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.035393055 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.035262329 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036713823 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.027315692 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.027090666 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.03637572 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.038870797 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.027382841 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.035215809 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.038133245 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.035943485 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.026922828 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.038358689 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.027236065 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.038249145 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02728122 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.038106416 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.027521728 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.035567222 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.027336817 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.026542261 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.02736511 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.039236028 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.028274442 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.027341192 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.027712702 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.026904716 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.035561781 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.040188564 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.028199576 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.036214445 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.036010255 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.027738639 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.038433109 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.027503325 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.038580259 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.027288605 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.027626563 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.026748273 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.040048031 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02713914 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.02751812 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.027376788 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.03816351 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.02734057 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.037853164 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.034857362 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.026837418 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.039280769 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.03725993 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.035113974 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.038136593 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.028145308 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.027393138 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.026631778 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.026871211 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.038380471 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.039722912 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.028059886 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.027236629 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.034810956 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.038741471 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.02644635 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.035483719 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.035250219 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.035695449 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.02739727 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.027174225 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.174137933 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.037933361 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.03365291 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.036471407 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.035062645 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.027347878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.033240724 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0360011 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.027317657 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.040881929 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.026977444 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.036873966 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.036426155 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.03277948 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.036257454 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.037283313 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.036208396 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.035787815 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.037364232 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.025960028 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.02634256 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.033381055 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.027075175 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.027087535 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.033121216 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.027110792 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.027746413 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.039355761 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.026734184 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.036074345 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.026195825 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.033663054 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.02566904 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.026745228 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.037817141 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.026247607 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.026346895 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.033447623 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.026358304 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.032864181 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.035878744 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.032720021 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.026009962 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.026589602 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.036237741 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.035643547 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.026127414 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.026061433 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.026707813 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.035534064 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.034970535 seconds)
  done (took 8.793597438 seconds)
done (took 21.835766199 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.161661575 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.077417736 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.173319548 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.098721381 seconds)
  done (took 1.427687291 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.059894108 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.021650319 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.149961602 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.161401128 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.022405835 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.144504187 seconds)
  done (took 1.488707039 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.22254679 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.146840376 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.1497733 seconds)
  done (took 1.450485845 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.139970226 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.288976285 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.577560059 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.138443302 seconds)
  done (took 2.081180206 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.189620835 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.175936028 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.03436805 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193333562 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.041520168 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.018213544 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.107069698 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.025853877 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.058999394 seconds)
  done (took 1.839109142 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.103746742 seconds)
done (took 9.325361079 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.193548955 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.150094784 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.037105705 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.030633455 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.145769468 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.140288615 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.153251921 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.032972476 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.142945452 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.330364652 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.177293282 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.052743006 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.168309927 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.048415665 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.27931171 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.03468729 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.032932081 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.028088397 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.15849598 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.140237902 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.258631404 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.031752706 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.103996984 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.03380069 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.116112127 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.087345312 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.183573542 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.311908087 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.293113388 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.034228518 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.139900644 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.047132524 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.132531103 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.145569132 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.144156193 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.054168226 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.022891575 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.26242848 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.123392657 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.328240111 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.165031841 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.030034028 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.153863268 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.028017957 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.021820036 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.151992409 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.037679574 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.029916062 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.048595438 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.029403754 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.045826041 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.030060307 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.152583425 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.026372855 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.100953397 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.147149721 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.177058949 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.107617903 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.027787098 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.041857602 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.032438746 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.165761156 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.043206579 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.028412854 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.035244861 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.022241284 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.143883609 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.04301008 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.022969643 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.033768766 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.031589107 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.123839546 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.164412075 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.06954291 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.035434416 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.127449399 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.103294244 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.052398695 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.053142774 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.033033387 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.02195415 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.181858847 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.027986398 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.042444131 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.029436685 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.057628801 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.022188888 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.039462399 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.166778346 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.161619964 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.095935021 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.023286912 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.254447383 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.024684762 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.199926443 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.023756539 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.022505113 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.1786811 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.021947975 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.02249817 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.033273181 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.031953164 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.02437651 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.163362197 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.115426271 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.030965819 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.029386772 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.023046811 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.028386242 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.023350441 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.022620068 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.022627051 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.102724471 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.038787641 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.021612424 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.116878192 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.138172735 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.034482907 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.042514153 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.094964719 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.026334731 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.032388222 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.030392464 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.136832269 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.031198983 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.146686441 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.023710413 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.047252617 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.129503465 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.104277093 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.115392623 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.022390785 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.167741846 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.033084055 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.021428716 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.030127849 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.053150787 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.03277823 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.039104166 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.031293731 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.167360445 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.033747532 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.028498868 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.129319484 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.021803744 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.122478566 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.106169932 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.14063875 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.02821041 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.033548223 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.101218082 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.047654817 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.053301904 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.047295537 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.026960146 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.022093408 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.021864769 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.038447193 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.021053367 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.022128278 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.038559792 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.029575715 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.02230489 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.255542558 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.033264441 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.027445891 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.278366215 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.036221685 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.110564108 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.046574618 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.022830697 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.116744195 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.024844551 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.045281974 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.091287608 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.023266105 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.105658657 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.023012404 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.022994447 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.031394056 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.024224792 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.032207952 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.037593586 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.022946438 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.037369668 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.030763618 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.022492425 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.114346471 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.024652607 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.181816247 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.112361449 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.125525692 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.022829459 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.041866316 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.022303242 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.145304928 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.022520194 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.074967295 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.126404035 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.041083753 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.044452749 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.023852397 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.103128782 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.039344374 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.022543395 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.111033101 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.140789715 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.110316522 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.031134736 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.261368398 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.032689673 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.023307358 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.030755411 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.031830411 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.023376428 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.105564644 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.027821805 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.021495641 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.022066619 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.02452979 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.021815148 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.050366517 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.021773877 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.030822866 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.022622594 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.025674228 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.024621811 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.021722667 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.03136722 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.105119434 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.140191078 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.028800205 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.043432384 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.036136927 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.034272184 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.073496597 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.029607664 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.154410434 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.021865237 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.033032753 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.047149636 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.02246638 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.027896478 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.022921337 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.043833805 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.02671615 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.024687342 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.032490479 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.02302157 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.02332343 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.022715018 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.023287616 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.03217482 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.024390371 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.022287367 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.022431614 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.022820078 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.027800456 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.028326861 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.034189202 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.04404955 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.488534343 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.024250146 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.024763613 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.022898293 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.022752491 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.022979646 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.02456928 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.022326452 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.024418599 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.022887178 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.022196412 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.054135679 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.028073291 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.023885505 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.046878179 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.022632991 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.0328967 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.13901328 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.040634088 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.02812704 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.022297524 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.284109044 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.120602382 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.04716189 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.045854001 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.02361133 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.197844144 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.02629385 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.023363483 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.022035948 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.0528859 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.027333432 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.023597903 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.022036679 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.022213616 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.07546363 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.031655501 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.0218751 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.031940989 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.022641627 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.02320746 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.053712804 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.023994604 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.022529075 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.043655065 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.037067377 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.107789206 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.034943934 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.025409779 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.077327266 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.021473435 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.022049556 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.023013857 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.121948129 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.036611148 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.023395698 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.022194084 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.030377737 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.03192742 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.079696676 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.028713287 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.025133168 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.030886317 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.021222044 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.022959657 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.049269303 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.05236596 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.023299495 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.026505562 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.022049467 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.022883484 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.102972256 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.030015096 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.026899847 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.113371978 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.02396887 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.030407206 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.020685566 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.488381666 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.027087263 seconds)
  done (took 24.185981018 seconds)
done (took 25.133578973 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.174132945 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.038086161 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.037613297 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.032310311 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.036573605 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.036634304 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.038047403 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.03308807 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.036308511 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.036379875 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.159760934 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.022333716 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.030864321 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.038868216 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.032308005 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.040721873 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.03629887 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.039578767 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.023152018 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.039801046 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.03435732 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.037711239 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.032916209 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.039171934 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.0230999 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.032178776 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.16758286 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.042751759 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.026104173 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.033131292 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.031086477 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.037778516 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.03085754 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.030326442 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.03297243 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.028701075 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.033846098 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.030020133 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16797978 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.028563886 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.023063561 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.036496504 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.030900381 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.031569139 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.032330088 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.035957432 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.028859706 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.038111276 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.022624302 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.036765465 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.167974763 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.027691842 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.02614355 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.031226658 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.029128638 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.033083434 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.025959553 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.035622773 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.028070994 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.036062953 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.031506687 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.03119398 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.022303438 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.032008728 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.030585264 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.030962255 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.021338028 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02792838 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.022321879 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.022065979 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.021812977 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.032199109 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.030333155 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.027922191 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.021830937 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.022437905 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.021474347 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.035628489 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.030156705 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.031999796 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.022561429 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.027852366 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.027803058 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.022867823 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.027735 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.035276694 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.02123127 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.022801643 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.021952129 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.035736325 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.029659954 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.022246337 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.035366423 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.027601494 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.027269966 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.022206619 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.021843254 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.027355086 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.031070251 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.022481682 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.021345052 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.027876717 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.028515588 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.03186912 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.022940633 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028183 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.027872789 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.021643341 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.032335165 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.030825151 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.03284739 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.036931475 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.032132808 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.034695223 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.022987629 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.021243504 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.033062455 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.022858725 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.027872961 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.030995433 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.028405682 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0313441 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.022674798 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.021685603 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.027427798 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.029200022 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.02294188 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.02269655 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.022425044 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.032150457 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.030724157 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.021653216 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.022282838 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.032150184 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.032014459 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.021620429 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.021268143 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.031606443 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.022777023 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.028583116 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.027890456 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.031881071 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.021982578 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.022850616 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.021853908 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.022327162 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.02164882 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.028679855 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.027649067 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.023339054 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.032092344 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.030525186 seconds)
done (took 6.191986504 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.037075303 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.070056874 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.189202506 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150794609 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.038007596 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.024046903 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.028430463 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.045394708 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.026975243 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.051232896 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.051830349 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.047555589 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.175190195 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.021401176 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.022443449 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.023345131 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020975433 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.03615861 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.156029436 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.0497939 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.069349148 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.022468482 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.040972442 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.045262719 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.037737182 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.044054999 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.02417418 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.023791012 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.025697664 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.042224209 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.052375001 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022594163 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.024188088 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.0442752 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.041595194 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.033111509 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.024009982 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.030613166 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.024228097 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.023167441 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.025314067 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.043646325 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.030896912 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.031126545 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.024033947 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.023573086 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.023596142 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.031849415 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.038782523 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.030125232 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.037452129 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.041498762 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.025136834 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.023405589 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.021544788 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.03142337 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.022981059 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.023614619 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.024260322 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.022597827 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.023847359 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.026214045 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.029621566 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.035383836 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.028160654 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.031666015 seconds)
  done (took 3.726224144 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.042427161 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.053800388 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.039269767 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.039427432 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.022849173 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.023782108 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.023586792 seconds)
  done (took 1.293489109 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071830573 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146756839 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.15640055 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.158030362 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.170164048 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.156734467 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.037892329 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.055888317 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.022824986 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.170008912 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.165699394 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.161585044 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.027817755 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.037661425 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.059920146 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.164106717 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.037637525 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.031315218 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.154817968 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.161230951 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.029184953 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.057908237 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.037417075 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.024480281 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.157999579 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150987649 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.027455329 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.024349583 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.026866829 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.023800424 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.024081075 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.049430761 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.149861905 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.040481061 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.024896796 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.022707115 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.147710161 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.025007494 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.151961978 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.032007674 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.150173045 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.026260261 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.026236089 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.023922134 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.025302149 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.154202009 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.025047715 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.02380453 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.023016506 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.152459656 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.023270358 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.151152142 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.026954013 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.029720132 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.031948867 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.030738245 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.031868136 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.024626348 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.154340353 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.034722951 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.025627465 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.162721655 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.162840302 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.152026736 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.163724621 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.033665685 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.15172922 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.15167786 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.023815825 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.032830575 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.024287632 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.164821953 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.027516948 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.026329763 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.029922012 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.031842018 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.166606701 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.167633733 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.169326336 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.039549276 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.027151301 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.024077294 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.166680038 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171391943 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.030155801 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.02383106 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.025133235 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.041810222 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.051922083 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.026252934 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.029594137 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.024384516 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.0350187 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.026619287 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.02697369 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.162492129 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.024342629 seconds)
  done (took 8.410437246 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.030078981 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.026171861 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.025184962 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.024811533 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.02534514 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.025059227 seconds)
  done (took 1.291743644 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.051728411 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.02477784 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.037401271 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.024531448 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.04814757 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.151580694 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.152112411 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.026262076 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.04257124 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.037569199 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.152679737 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.157922746 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.156221867 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.025933734 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.153129358 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.037236184 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.153458343 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.029745722 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.036673755 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.026111569 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.039747983 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.02578173 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.026069594 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.163071849 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.027586415 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.037038541 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.034917933 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.036957048 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.036264272 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.025953083 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.025492667 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.026205868 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.031637956 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.025541994 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.154167561 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.031962803 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.024843875 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.028782462 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.02685338 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.026548888 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.1584385 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.02609924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.02961521 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.028622303 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.025427374 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.032022102 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.029466462 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.029254741 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.155468805 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.028835216 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.028635699 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.02529397 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.026827945 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.029122099 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.032141016 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.026005724 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.02914472 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.155114282 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.02583311 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.032432379 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.025043303 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.026754754 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.025997793 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.026511202 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.030297942 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.028889515 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.032485852 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.026114457 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.026296043 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.025166746 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.028930548 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.024692425 seconds)
  done (took 4.721250839 seconds)
done (took 20.483226246 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.513901817 seconds)
  done (took 1.576891427 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.080547391 seconds)
  done (took 2.166824241 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.055815213 seconds)
  done (took 1.142459459 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.316720444 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.40392638 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.785087487 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.096990721 seconds)
  done (took 2.674870753 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.869641969 seconds)
  done (took 1.970940136 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235212535 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195340571 seconds)
  done (took 1.548080337 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.51318916 seconds)
  done (took 1.604417431 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.552025666 seconds)
  done (took 2.647193938 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.200354046 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.123411693 seconds)
  done (took 1.417151516 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.652734653 seconds)
  done (took 1.742854515 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.944741894 seconds)
  done (took 6.049340108 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213597712 seconds)
  done (took 1.375984914 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.20579419 seconds)
  done (took 1.314929071 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.736539828 seconds)
  done (took 1.833837124 seconds)
done (took 30.15565651 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.045551408 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.043999074 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.043549775 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.038258147 seconds)
  done (took 1.256005286 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031825298 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.027566796 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.030516619 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.0308471 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.027888608 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.030095091 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.030780343 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.026640651 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.028141402 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.026852972 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.024951738 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.026986463 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.030004735 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.026598088 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.029111393 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.030834395 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.027168334 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.027451366 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.028886708 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.026953984 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.029811593 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.027241202 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.027314768 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0285319 seconds)
  done (took 1.77574782 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034942995 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.028894035 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.032733463 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.028037522 seconds)
  done (took 1.216769791 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.034375089 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.034155988 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.043364763 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.048237592 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.033474987 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.034591172 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.041372601 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.041643568 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.048479716 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.044363415 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.024556956 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.024494497 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.023278564 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.044508435 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.041442524 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.018314942 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.020004288 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.034770684 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.034035675 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.037237544 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.026806309 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.022178946 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.034632586 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.035033388 seconds)
  done (took 1.918558022 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.039377269 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.02180071 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.039330703 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.049690321 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.050936306 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.021740844 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.036745856 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.050517221 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.09094845 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.022143271 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.028979218 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.022037201 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.064926258 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.021704004 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.038940684 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.071198795 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.074438224 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.026004844 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.05782628 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.021871871 seconds)
  done (took 1.956760931 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.029740103 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.02738264 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.027176054 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.022046427 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.034334934 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.030234714 seconds)
  done (took 1.274937588 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.025292362 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.024969867 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.024034103 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.029692276 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.024808698 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.024550424 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.024088002 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.022563701 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.022363969 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.023071506 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.023058223 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.024069792 seconds)
  done (took 1.395797462 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.18225278 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.029446711 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.027415609 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.022606279 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.024471391 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.023742447 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.038709899 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.025433923 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.042413697 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.023684826 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.023613323 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.026106379 seconds)
  done (took 1.597176168 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.065382499 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072760524 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108640888 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077113589 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076476128 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05500654 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.213673563 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.036545119 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.13014773 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102188967 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079230575 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051939638 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.045482658 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.02669876 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060478704 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.080539395 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102939401 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030719748 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077066428 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.260998667 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097432032 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.10127314 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113099515 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081244866 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.052399867 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112004473 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056996118 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.063743626 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.086254765 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090784581 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082064031 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.059398762 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.0288095 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.02827311 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117695687 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.068316123 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.083362203 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.053645703 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.067650702 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.048756002 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069408666 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.02670899 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.040981646 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.073463936 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.045371209 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099227107 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.051928928 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.077235276 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040254262 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104050946 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093514431 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.188415683 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.045901918 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067756589 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107045323 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.077331053 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104096076 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070957255 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043469097 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.232924454 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.065833148 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060758169 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068357261 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039355102 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.143769271 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.04844544 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.074411771 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072427727 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.055813716 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.055789007 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.067977502 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098747973 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.087383643 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.088081889 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099552045 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.051572398 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081085441 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.060120988 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.09009957 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063395625 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.030445713 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.083586575 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.092268974 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.059911932 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06140348 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093193578 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.052337666 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.034051323 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.062284295 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.08262397 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.038650539 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.076564174 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.039224622 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.071423403 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102296695 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0593333 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073872586 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.081239497 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.036386845 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122301452 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.071255674 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.030402951 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080150051 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075086982 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123355653 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056357671 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.034634559 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.061896193 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065726859 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.119410946 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069860119 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.039281888 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074355997 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109129057 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056263772 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.277291225 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.057911613 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111548363 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.077890873 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.047566627 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.034214827 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.051785145 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.227271169 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067801594 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072256402 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053391202 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.042425063 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.046543874 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075430461 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.052197844 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039020442 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075530584 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.06297778 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.032716623 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046480058 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.034710983 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104193016 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.036316886 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097175723 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087862779 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.032672543 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06721524 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.054810823 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066776594 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.05741746 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079365413 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100073239 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.152717878 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.048803202 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.053280691 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067086627 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108888652 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089161748 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0517631 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.035449482 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.061120364 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074411362 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.059856322 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.088512004 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.054806781 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070132862 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.064719401 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106936091 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110764828 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060462481 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.062211715 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070402459 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.085507024 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.03295801 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124158109 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065686783 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082321662 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.04648716 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108544567 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.072836436 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049746414 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.046410863 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.061287473 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.066666876 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069069542 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111328629 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.057967173 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.030458985 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055327084 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1143028 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.037106568 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075055635 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.052471757 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.054471404 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084664423 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.058352564 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041875813 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.026190056 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.251521963 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121203943 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.027106675 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074112548 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.066662551 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.06147559 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.081894698 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.02634389 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078273794 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.099243834 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076432284 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101312768 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128321197 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077140653 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.079556793 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.073987212 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066209995 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.0376575 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.08829198 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09715181 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054174509 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050774342 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096043146 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.080655612 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.101095014 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.081352125 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082107884 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.068872671 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070019418 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065010087 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.067027379 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112043276 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.084650482 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.0892007 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.042157845 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068296865 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.08066885 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101116345 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040907766 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107868689 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.045103191 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.082656249 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.036913443 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087520947 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.033168852 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.135611914 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.037449562 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.061738964 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.027587856 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.032797531 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.109668001 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.077523408 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072017348 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06501177 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.107202849 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104798669 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.03605962 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072123338 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.080603757 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.064756269 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.23431165 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070927976 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.048536876 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053993003 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.067931253 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.043541553 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.039070254 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077158187 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052233216 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086178787 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.042718383 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.032248524 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09994935 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063932236 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053357558 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.034383957 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067134312 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.086524911 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05211122 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.045779052 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076717528 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065058002 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103924991 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.050161187 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.05793688 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08506039 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03819806 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.052103459 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.026666156 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.044122163 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.034260033 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089717666 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033660563 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.076166256 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.02580287 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093975162 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047029755 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.053129677 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.064374287 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073020232 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091851809 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055500802 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107009998 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04914703 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.08295523 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069768655 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054949442 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046703491 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.064930257 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.06167299 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085019074 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.057738884 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086349249 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110482053 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06515993 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.108608449 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050537833 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.086424416 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068899378 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.089394342 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074478607 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134184597 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107851952 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076682801 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07369697 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.033795879 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.057694326 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06947267 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.078045282 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153960959 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.238159792 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.030020382 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.064606221 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.053658984 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06949862 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06379482 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040520674 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106459915 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062527998 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.047116612 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072072885 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.048753174 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.063918585 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033061904 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05917987 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.063931454 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053296285 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056384739 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074505799 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089018662 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073227289 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.106425408 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.061820076 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.051069448 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.079789235 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071663369 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070789566 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043636793 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.044707349 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100219602 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080780146 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.0881329 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.061548661 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071216006 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073015545 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060980216 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088412768 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069428198 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.090492813 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.038153763 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.035212841 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.025374213 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.029384535 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086070943 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069723159 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073214609 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059289772 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.029738194 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.065313054 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.064852843 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.02974287 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047341717 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054473229 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058748767 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.052790247 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070310975 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.073758169 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.057384881 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066888589 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059250827 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114030369 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.06128965 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047986792 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112655719 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120882328 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048992995 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055172475 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.029501789 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.037995988 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079042357 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120799448 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.267634652 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.036496327 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.045709155 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.044050869 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044396597 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.028490709 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.045933249 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.047619541 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064887634 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056847864 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.073309059 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065368867 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033137315 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.062958641 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.057928007 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.050659431 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.066104935 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079962079 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.086700339 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.103800788 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073819772 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067128755 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033639164 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.038238491 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033512485 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.037414851 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.060339324 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.036496773 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033624439 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10439259 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.051114344 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065006385 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069228863 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047098338 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032598991 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098109604 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.026650156 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098877699 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.028507233 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.041230447 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.041068556 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037432896 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053942857 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10389078 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071559658 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07395464 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067750886 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065257495 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126182871 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126597641 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040818305 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.107377293 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033978144 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034579242 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033730144 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072567225 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049459645 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.075432324 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106349725 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049936447 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062350953 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036204779 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109535722 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.06391423 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.065103304 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.045514159 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.037224511 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110591636 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.038418357 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.042347844 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.050494818 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075163317 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.030702742 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.064832161 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.042737349 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.038918421 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.279746408 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.670942393 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049872098 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.033240715 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055081839 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.103096793 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092115535 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055102619 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067556919 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.080035925 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.059642437 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.05236209 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06720693 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.155165094 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.031233116 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052397202 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.062937913 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057079344 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060390523 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.058206776 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.044423331 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.0504698 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.045277755 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036643917 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067455345 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046549719 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.055586894 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.066669713 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.040717614 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.046108117 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093212928 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.063905902 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.041210515 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047325399 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.063390493 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047069 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063967677 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.026874212 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073316456 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.048465245 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081068945 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.059657428 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070317772 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089270598 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054548876 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10192936 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.069811333 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085313998 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.046816949 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.036232407 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089670774 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.049428426 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035437932 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110163898 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.057743816 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.064397115 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064901862 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.056893225 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075773984 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081651917 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075335532 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05917722 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.038469495 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065471708 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.066820424 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.048460725 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03925212 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.033864674 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.035047001 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071749806 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.048175193 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045687102 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.076536147 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04995795 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.215157058 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.062949432 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083483122 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046706367 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061360056 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07083415 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050276194 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069808697 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060451131 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089671103 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138200625 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083844893 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090346875 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095807491 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.035296583 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.032499614 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.025736907 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.075295315 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.037455276 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.048150636 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.037427501 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096768438 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.042230325 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071329128 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.211212528 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.038449091 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053076316 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054688155 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.02685617 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.041623346 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067198521 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.045463032 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03754193 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.077921221 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.040400223 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.091597501 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072589918 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059976193 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.056141394 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039479854 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075500976 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.063441771 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.09325556 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.055318547 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.033321899 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.086398771 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.065518691 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104251515 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.031229213 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039966571 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094236187 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064817517 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097161903 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.039505295 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11868606 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.108659398 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.061735005 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100315953 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028660068 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.047363225 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.050056333 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.090932019 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044761878 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074528647 seconds)
  done (took 44.271473078 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.152035296 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143164878 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079301324 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.092349445 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.248545177 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.257699394 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.10875577 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.080396171 seconds)
  done (took 2.428789496 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.025680849 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.041242395 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.039026676 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.3023748 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.058200366 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.023818847 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.029316931 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.039835477 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.023956335 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.023104381 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.0614668 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.02384658 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.02420525 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.461525856 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.022475363 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.02886426 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.023876013 seconds)
  done (took 2.478123122 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.322400321 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.684446004 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.69514279 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.500470549 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.12199664 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.682314977 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.030826157 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.039169708 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.772491585 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.382359576 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.115968475 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.184440719 seconds)
  done (took 20.754782443 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.032825078 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.167259803 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.166505724 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.031959174 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.031518292 seconds)
  done (took 1.654185915 seconds)
done (took 85.145320172 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.042893739 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.140230421 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.023905812 seconds)
  done (took 1.423487181 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.169167123 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.167396869 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.165962074 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.169668256 seconds)
  done (took 1.899554111 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.032263971 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.033583761 seconds)
  done (took 1.307131998 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.198355076 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.269262614 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.049229183 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040979759 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.037959944 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.038466639 seconds)
  done (took 1.359648177 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.028510979 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.027930583 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.027993417 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.028165787 seconds)
  done (took 1.346089762 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.142820015 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.022047738 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.024693475 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.026985523 seconds)
  done (took 1.446887107 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.042415929 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.044553617 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.076490907 seconds)
  done (took 1.393226322 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.041124391 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.04236628 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.03673603 seconds)
  done (took 1.355637129 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.068804233 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.055930276 seconds)
  done (took 1.355398402 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.038406637 seconds)
  done (took 1.267206899 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.049803891 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.056643418 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.233276682 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.19900906 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.239568389 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.22330181 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.034123702 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.034889345 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.030210685 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.028926793 seconds)
  done (took 2.362941153 seconds)
done (took 18.309112708 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.038059964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.151043311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.396869838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.046787348 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.615376758 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.393430762 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.685894675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.049637837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.060857637 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.025008043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.04325182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.589201563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.690136927 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.104027887 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.672608404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.102441594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.519783979 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.025771763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.024484994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.025299716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.666655089 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.025015763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.025055905 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.025267289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.516652271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.292399132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.026547923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.10839029 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.024923602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.029288627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.274281936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.026316446 seconds)
  done (took 12.527643684 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.027346736 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.085103227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0301751 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.043032523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.027464603 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.026806982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.02893509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.026032219 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.073695627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.025213381 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.044708919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.024538657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.029754484 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.026766717 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.047967705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.025213959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.027380307 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.025410429 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.024803399 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.025987601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.046433253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.024885957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.025482884 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.025776403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.025218059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.040924306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.026781303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.024998184 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.025349305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.029620411 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.030633386 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.026585398 seconds)
  done (took 2.30569987 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083520011 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.087696859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.031095087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.070359797 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.082675289 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.027249628 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.116930861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.050783069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.076035918 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.025082003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.044512403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.024624129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.065884469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.026713156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.048140431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.025195577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.027650902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.025746136 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.024592543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.02580703 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.046771121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.025259364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.025967965 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.02569648 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.025687573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.043008828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.026726834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.025305753 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.025014833 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.029855724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.031659516 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.026479928 seconds)
  done (took 2.586143717 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.026401493 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.028381231 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.035235482 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.039165713 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.022854733 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.024814376 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.025880021 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.023102726 seconds)
  done (took 1.46948919 seconds)
done (took 20.140168634 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.038401107 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.025356029 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.028138375 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046210637 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.032673149 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.154075784 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.02182413 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.032752722 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.028738908 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.029148802 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.030079526 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.023205967 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.027453741 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.021351306 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.029330263 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.022680991 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.156904885 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.027251436 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.155308994 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.156789609 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.025954945 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.028907731 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.032846468 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.155771483 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.157107712 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.156666058 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.032696821 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.029540347 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.023654076 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.026619223 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.153484684 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.156691685 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.025999568 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.151748906 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.023801644 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.023068682 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.028096576 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.024971487 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.160497546 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.032991952 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.025994882 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.032416978 seconds)
  done (took 3.829591979 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.15621302 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.166966915 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.158624259 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.035770135 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.032306653 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.035730686 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.163183343 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.03247677 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.030759163 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.164440152 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.026408322 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.031042429 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.033433819 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.023497668 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.030834649 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.02691217 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.032966422 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.024996102 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.03085532 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.030829938 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.163029785 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.023985321 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.032167363 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.032186304 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.025856623 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.032743005 seconds)
  done (took 2.830731729 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.031891013 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.047743517 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.052261677 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10977954 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.069668811 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.04034081 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.041141835 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.052035444 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.060203884 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.023969487 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.048003464 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.053311291 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.056043766 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.031784582 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067071259 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.044634796 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.038064622 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.025872022 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.031465103 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.062515094 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.048941714 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.045471905 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.060517137 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.046518541 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.023631393 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.035002744 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.03283837 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.043718411 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.033011102 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.03836178 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.028961035 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.028222001 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.025128034 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.037619345 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.028633779 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.021928926 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.048631337 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.038150794 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.040358802 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066247356 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.034820549 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.025767889 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.056001321 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.097159525 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.023530734 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.026827318 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.029053468 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.0378869 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.025509167 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.057850569 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.042909929 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.024300066 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.045076203 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.025851986 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.025779246 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.043121567 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.026200215 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.02669758 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.037874535 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.031403692 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.04747859 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.030358656 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.049233182 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.024335401 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.037731297 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.026417266 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.026531166 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.023509212 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.06524472 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.033001044 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.08185986 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.025661251 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.022779151 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.038468934 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.037314521 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.032639289 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.024292951 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.045913831 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.038614793 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.028534006 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.03658977 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.027201721 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.027701227 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.063783524 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.023379189 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.022313478 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.022400366 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.027230411 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.028519657 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.024972346 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.038716488 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.023775173 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.028271316 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.040755245 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.024296221 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.024763648 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.02688598 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.02584489 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.024066451 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.03586176 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.028900285 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.026421232 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.038991577 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.025730669 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.028091372 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.040971572 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.03493021 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.023697241 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.02557317 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.027179674 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.026397102 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.029352958 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.027903643 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.026509388 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.030011922 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.033392115 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.031518629 seconds)
  done (took 5.614554964 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.257624441 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.248572016 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.025188432 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.246588777 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.033930353 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.172205922 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.248001828 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.252499782 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.025040379 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.025933599 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.02451776 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187930152 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.181942241 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.191959992 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17211623 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.027311092 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.05431703 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.195383739 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.252231421 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.247437868 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.052574923 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.032728359 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.027859973 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.02665499 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.025541519 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.034580767 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.042541639 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.034218476 seconds)
  done (took 4.638842157 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.031770598 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.072958473 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.028961014 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.052182463 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.043079226 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.024844766 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.026710174 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.025853139 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.043068791 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.030603752 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.024337413 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.029098432 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.028425819 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.026975524 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.025444195 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.031568271 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.031589664 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.033066773 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.028560367 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.029719329 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.036358921 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.05122776 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.029309903 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.024671036 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.028523991 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.024728998 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.030435793 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.033998101 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.02481482 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.025041108 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.022005808 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030131593 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.041150364 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.026075512 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.024934592 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.025594942 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.025225458 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.025298128 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.025585003 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.023362091 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.023247388 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.030737321 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.023938291 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.029911342 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.040099453 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.027454658 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.026982557 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.027795663 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.028044677 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.021623779 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.028741425 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.028564395 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.027446319 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.034231483 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.029018848 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.027686808 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.026611638 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.040775605 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.031006415 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.024271573 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.024123842 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.023465232 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.026748675 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.031733537 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.042955372 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.026760453 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.022920586 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.025018246 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.026574975 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.040286661 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.024197059 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.030163531 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.021576566 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.025440508 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.027551687 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.028125663 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.026532068 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.023259959 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.02449933 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.025148957 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.024806549 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.024868784 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.023894055 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.027607595 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.022566869 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.023389381 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.025688232 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.026410111 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.03034351 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.023339837 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.027778696 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.026179985 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.023367292 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.027456734 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.030098797 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.028026393 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.046835395 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.03316273 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.02523133 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.022719102 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.041284332 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.026774803 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.024241105 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.026462993 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.029789469 seconds)
  done (took 4.373525778 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.055042838 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.027225936 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.046099031 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.059101245 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.035696511 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.031047704 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.039756943 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.026322065 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.048346638 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.024078934 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.035130854 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.023372776 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.038959417 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.034639518 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.027055149 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.035875649 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.027880286 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.047041095 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.040776276 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.023895535 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.035120485 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.038678003 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.039303154 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.04469043 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.044060751 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.045215152 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.038592008 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.028080213 seconds)
  done (took 2.320915526 seconds)
done (took 24.843614478 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.336158542 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.510774989 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.282529066 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.954624852 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.343393955 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.417388977 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.464794184 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.273106842 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.050814569 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.380448939 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.044387129 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.231150685 seconds)
done (took 61.63485472 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.310273963 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.439690543 seconds)
    (2/2) benchmarking "String"...
    done (took 1.519147943 seconds)
  done (took 4.226163636 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.720218659 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.289143616 seconds)
    (3/3) benchmarking "different"...
    done (took 1.321592761 seconds)
  done (took 5.597756027 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.61541877 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.845328616 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.558966216 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.260361642 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.264022644 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.858482425 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.462718712 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.944630283 seconds)
  done (took 28.466301938 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.284393463 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.618343144 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.647533824 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.759058466 seconds)
  done (took 18.663882018 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.717395286 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.690122169 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.690564568 seconds)
    (4/4) benchmarking "different"...
    done (took 1.986359655 seconds)
  done (took 8.465007033 seconds)
done (took 75.61232643 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.264700291 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.786693681 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.26822234 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.457383361 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.295743295 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.398765746 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.296791494 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.283155694 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.262595468 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.260187428 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.265683701 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.261691301 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.265820984 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.299459192 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.271392346 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.293439567 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.7561444 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.266703643 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.293776793 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.34487362 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.604926829 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.280631118 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.273335347 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.330687772 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.914854183 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.356680129 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.388596328 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.271877481 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.883885168 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.285815842 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.280063727 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.271313545 seconds)
  done (took 188.29786342 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.275108727 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.114365772 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.167399584 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.285227452 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.744981184 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.635056044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.135125213 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.744110429 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.271972569 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.29173794 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.277976647 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.273095964 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.347443905 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.826229435 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.301440723 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.266215381 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.189082009 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.116755192 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.323668515 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.196456512 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.283325466 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.82268025 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.775807662 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.140795404 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.265493606 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.2898305 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.277602648 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.294394001 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.751395078 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.149534556 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.256609866 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.293078949 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.467757677 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.516486832 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.267121443 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.270144886 seconds)
  done (took 159.179067042 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.505133441 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.266682186 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.307514693 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.378224048 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.298530594 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.173428489 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.2756408 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.270823803 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.266865578 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.282182351 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.279087477 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.347299592 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.270168716 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.296515058 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.30184818 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.265466758 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.271117766 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.039530712 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.278925788 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.270669025 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.265851035 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.372306308 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.607998082 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.378485545 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.273907396 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.282184787 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.385714324 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.269670996 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.264499966 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.262739598 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.373884334 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.266421497 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.398174373 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.376878636 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.271715139 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.318377239 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.2682462 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.647091581 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.28017198 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.280452601 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.274537676 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.326856404 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.271487508 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.518786104 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.376400098 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.280986981 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.293199092 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.75012192 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.873554648 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.265690316 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.264236993 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.263611499 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.271750763 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.261835866 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.905071655 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.270605434 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.296578402 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.261123407 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.287913313 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.279295426 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.285452516 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.276285928 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.273923397 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.285175632 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.308850025 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.967023416 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.83271731 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.611072205 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.047543468 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.278528475 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.268120144 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.264075641 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.700964 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.338036827 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.289875587 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.290602872 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.461145555 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.281165147 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.283235592 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.236677477 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.234265417 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.283045736 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.392023652 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.278000658 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.274818312 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.69178135 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.046809685 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.2883888 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.297967793 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.334634472 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.279279473 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.270328501 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.281354378 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.22801868 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.269210404 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.280364914 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.733631309 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.265266223 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.267367719 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.268523893 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.622378907 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.251261953 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.334610904 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.663494803 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.24523155 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.257232653 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.259624245 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.275535337 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.269552227 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.278238121 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.288289798 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.277394519 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.273945378 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.275211933 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.265114168 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.265246493 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.260792991 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.277806386 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.259308651 seconds)
  done (took 349.613636202 seconds)
done (took 699.988669786 seconds)
(4/20) benchmarking "parallel"...
done (took 1.257095165 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.532264431 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.669755094 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.397476682 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.509793672 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.466181568 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.433841559 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.468578855 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.563634061 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.502231184 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.44265493 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.499224631 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.450989144 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.566135736 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.543288528 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.584648073 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.536736468 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.461310821 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 3.027126776 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.50935555 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.445666811 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.484043894 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.495128965 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.445170154 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.502345194 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.574153762 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.443041038 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.670290495 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.528913848 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.472971294 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.522478936 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.53525872 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.553145893 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.481892247 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.558093786 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.521052308 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.577527412 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.484763797 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.53791129 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.452090362 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.480252864 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.493538314 seconds)
  done (took 70.686441525 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.620575144 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.461897256 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.587961826 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.567761863 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.20247688 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.580952593 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.662374261 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.462792422 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.474127943 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.59907564 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.60348128 seconds)
  done (took 20.102593791 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.505659619 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.459362516 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.58027775 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.576546148 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.666093767 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.630314857 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.619364524 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.468119423 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.465202125 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.609803806 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.618604463 seconds)
  done (took 19.487437511 seconds)
done (took 111.537487614 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.844145225 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.333308981 seconds)
  done (took 4.447535767 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.295279079 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.278207604 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.272039621 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.275723422 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.273230509 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.272471901 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.328685445 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.287044354 seconds)
  done (took 11.554916948 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.26989093 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.266704136 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.267899596 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.26934536 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.280699743 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.273067589 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.279492855 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.271373225 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.278279679 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.26679694 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.277049352 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.275993265 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.271647036 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.275748483 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.275452946 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.278979607 seconds)
  done (took 21.637350644 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.26788817 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.272169012 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.26826482 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.2697657 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.270888216 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.277345548 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.270420463 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.284437609 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.274672097 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.274789646 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.275929298 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.281239551 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.290126598 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.285258641 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.28817895 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.285661148 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.288084067 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.28734622 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.286990404 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.279480721 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.279794368 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.274855304 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.278984812 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.280503577 seconds)
  done (took 31.959562983 seconds)
done (took 70.89141361 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.864234822 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.295358191 seconds)
  done (took 7.428002919 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.27005734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.268252016 seconds)
  done (took 3.900653405 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.264824916 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.266209729 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.267728902 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.272201859 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.274064982 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.277265063 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.274893135 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.268496138 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.268956337 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.274773086 seconds)
  done (took 13.969604141 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.275327761 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.266284415 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.260823281 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.261366693 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.270130401 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.263619073 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.269104614 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.274689974 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.274436138 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.275105512 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.279744997 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.466553647 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.287172188 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.531109396 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.287272947 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.286654342 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.29386423 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.279364819 seconds)
  done (took 24.670899179 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.280388809 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.279025226 seconds)
  done (took 3.831673884 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.275762996 seconds)
    (2/7) benchmarking "second"...
    done (took 1.279266548 seconds)
    (3/7) benchmarking "month"...
    done (took 1.28036555 seconds)
    (4/7) benchmarking "year"...
    done (took 1.275471306 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.272414976 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.272981332 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.278330962 seconds)
  done (took 10.21203741 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.725924697 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.439447004 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.488961664 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.739146146 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.93071677 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.200008715 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.937537615 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.19903071 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.090664874 seconds)
  done (took 18.009547689 seconds)
done (took 83.288984448 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.960992871 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.268811282 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.921516543 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.433679838 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.290833035 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.644721555 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.294609981 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.805264559 seconds)
done (took 38.894126261 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.575101227 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.257897262 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.301488851 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.305824926 seconds)
  done (took 20.125444119 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.256284021 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.876403795 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.295557688 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.376325811 seconds)
  done (took 20.159130136 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.798102615 seconds)
    (2/2) benchmarking "read"...
    done (took 1.819142751 seconds)
  done (took 4.909805537 seconds)
done (took 53.03465959 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292729386 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.289094097 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.289290537 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.288752617 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.289915387 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.277132333 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.280722093 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.278116618 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.271437224 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.278115854 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.275012639 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28181847 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279921955 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271626194 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.274763841 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277163143 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.266499951 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.26251331 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265185372 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261578425 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.269467259 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269757036 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.28501609 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.280137078 seconds)
  done (took 31.932530992 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.342810587 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.326671657 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.348271866 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.331534344 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.360553308 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.332647172 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.335268646 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.316396926 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.342996614 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.336949279 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320800778 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.37263774 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.3349154 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.377651698 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32605448 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.374915073 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.360711499 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334162105 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329521613 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.379145249 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.355456766 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317813268 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.374867033 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320817082 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.358795441 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316388761 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.333652089 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.334115703 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298691711 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.356094364 seconds)
  done (took 41.519851128 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.306290126 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.269989152 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.275311995 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.364327161 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.277586555 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.274363899 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.270408835 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.274654335 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.27485718 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.280966375 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.283298019 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.284887833 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.285325702 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.277796346 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.274293029 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.270807527 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.306663233 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.451196589 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.275090424 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.270833506 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.318782061 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.272063641 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.272330267 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.26970944 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.278947667 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.289417516 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.292716672 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.290684491 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.283989471 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.293596714 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.285204053 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.332054026 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.320743204 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.271345918 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.404002088 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.335724314 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.276537222 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 2.817786224 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 3.293582135 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.272324628 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.272685486 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.275698151 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.275971543 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.274993604 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.332665836 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.271996009 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.273799469 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.27751132 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.279359108 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.27586553 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.274109443 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.28432208 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.293296457 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.277367942 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.280861249 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.286106067 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.289329622 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.276434101 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.273769802 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.275283223 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.272110459 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.348544624 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.272760125 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.273868836 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.63633899 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.266365867 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.341310532 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.280134471 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.282610137 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.500447891 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.287497773 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.483585141 seconds)
  done (took 98.453574218 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.28895297 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280534493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.361328666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.357853247 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282465097 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280146779 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280355659 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279870833 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.939974578 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279966731 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284418484 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28322501 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.949756529 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.277529115 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270114287 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.35396144 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.276140866 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278289305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.269745513 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26745667 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27096603 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.263422067 seconds)
  done (took 30.952710557 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304407251 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27508555 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.305376281 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285086082 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292619681 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29316713 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314324899 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283336037 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31311224 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310952527 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317452356 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30907842 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29313261 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31790486 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318968973 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.368988859 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315605773 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.37923153 seconds)
  done (took 24.858163613 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.463582635 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.45004993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.37728448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.332450478 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.551314175 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.519575832 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.386808858 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.45993961 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.320428991 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.455200578 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.455547619 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330075233 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.52097398 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331365063 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322450717 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.537021735 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.357401013 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32241156 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.387324368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.380705702 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.452117916 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.392063672 seconds)
  done (took 32.381018658 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31267264 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.322324764 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.359332711 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.353575812 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.279269532 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278812897 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.336830125 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.323467621 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.297077108 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.317671771 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317044197 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.277565892 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.36942139 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.331081538 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.370143621 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316819994 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.327289618 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331864746 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322993151 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289835085 seconds)
  done (took 27.699039537 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293857374 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298266595 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292255491 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293497052 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292707451 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.289164681 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288849967 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.284247765 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285525822 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.532862551 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283694455 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284480493 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28078539 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281874112 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284246514 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285365282 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283518228 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275611147 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278993137 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276673415 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.531962636 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278778826 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279036107 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265681305 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270344652 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267300196 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27001097 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283194658 seconds)
  done (took 37.692160305 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328335074 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.280137162 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.284465548 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.280035442 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.279565245 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.339719802 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.272564143 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.264081518 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266471213 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269835706 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.270872006 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.271371448 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271328283 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.31501251 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277325791 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.281429097 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.344873564 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.28702585 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339959508 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.267041013 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.279888426 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.374099288 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.281667343 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277676763 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.260569575 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.267968177 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267967185 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268501856 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266817732 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275771114 seconds)
  done (took 57.882548889 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.295162635 seconds)
    (2/2) benchmarking "in"...
    done (took 1.296485535 seconds)
  done (took 3.858939027 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.264659809 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.379775627 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.267390666 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.463690202 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.434155752 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.443630574 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.430703552 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.36096539 seconds)
  done (took 12.300638824 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.275257521 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.714461165 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.296354338 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.287949066 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.297801592 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.788130094 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.234518788 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.203554974 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.095733694 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.255461842 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.404301974 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.779862033 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.259430715 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.589919482 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.379917579 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 3.145092666 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.503716544 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.86884152 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.359216371 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.393201842 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.032067047 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361491004 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.2660383 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.257518558 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.26682902 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.184345203 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 4.192839496 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.703026282 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.44349681 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.399063373 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 4.065622863 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.358329439 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.27866651 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.536065718 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.386040518 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.276464772 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.437325544 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.383136913 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.276758952 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.273570834 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 5.061123379 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 5.01959955 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.565605636 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.514938678 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.355340482 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.271859934 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.265228959 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.267244435 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.5429264 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.894533828 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.273765976 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.265421108 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.420166892 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.28116685 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 5.011880543 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.291835804 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.274217163 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.187633685 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.895252637 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.51787975 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.628706931 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.385611742 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.289891563 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.387174584 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.270512892 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.466599245 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.115564409 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 4.045515476 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.042943114 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.379307325 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.791172609 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.283864996 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.274626824 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.282561632 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.242423621 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.594728257 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.276729161 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.282864435 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.284190289 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.275968027 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.552210028 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.394350631 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.12912631 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.411686805 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.457293407 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.743480989 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.389575008 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.267967898 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.937509975 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.121929699 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.392965848 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.941612324 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.497712594 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.400277081 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.297573325 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.526409889 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.292824238 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.26721013 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.120199836 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.906680126 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.289056907 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.288558679 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.775729563 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.336098889 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.282135523 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.278419848 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.991772865 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.396548386 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.419743184 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.310599679 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.275005853 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.270595239 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.860091416 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.389260108 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.259618398 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.749566221 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.258522391 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.801504964 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.528914467 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.493450479 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.659344159 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.280123362 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.520924341 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.118463404 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.289084824 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.845168596 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.151311549 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.880980112 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.538497159 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.393926196 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 5.169644738 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.339902074 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.272407933 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.412910451 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.350991253 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.264445625 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.266097692 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.274095993 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.273039553 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.284438154 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.408005445 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.680603299 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 5.147999536 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.270040926 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.517386973 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.388510422 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 5.146940141 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.507513963 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 3.00430973 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.426330755 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.290434025 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 5.06574393 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.54370995 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 3.019448279 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.407604478 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.274065528 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.272470774 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.127167055 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.29544506 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.374481149 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.273911354 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.89947488 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.394360034 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.274012587 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.277842021 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.737545539 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.411289373 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.276313387 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.393513552 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 3.08451808 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 5.192634057 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291632391 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.599954053 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.397121918 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.279147173 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.276300012 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.27616292 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.086331151 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.913951923 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.468057351 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.891742447 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 6.046878508 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.359911961 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.440980615 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.362283249 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.54133406 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.511827835 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.408270408 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.27490057 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.281618947 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.277207791 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.755651086 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.1439612 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.345778231 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.144295353 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.303914937 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.278111608 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.385572454 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 3.078370066 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.290404078 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.012595515 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.302899397 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.37649574 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.273130325 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.2765019 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.435535911 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.455899481 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.408187542 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.866045012 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269917406 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.266621813 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.949020028 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.399697494 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.944706327 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.377077506 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.112957653 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.386655552 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.39444945 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.440512869 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.989541539 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.416419833 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.296129543 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 5.069051929 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.426421707 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.276567238 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.349350638 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.989020926 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.091346544 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 3.013026608 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.922121966 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.230108271 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.822458262 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.524928886 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.404730866 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 4.137212409 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.378336682 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.511572532 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.346989222 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.86852466 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.28336546 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 3.035528297 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.299970197 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 5.078914625 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.291910051 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.301930466 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.401799097 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.779319311 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.39633236 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.277298514 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.463351992 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.363635921 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.950467276 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.395709227 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.398539646 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.63342042 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.221310066 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.375488526 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.528396179 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.34640391 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.196556031 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.235896681 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.613101397 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.226066874 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.286472479 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.390583588 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 3.083845499 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.441086391 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.515967803 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.410477645 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.272001716 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.275503728 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.494048215 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.361918151 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.277591042 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.62372131 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.268039922 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.309838125 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.381882087 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.27116287 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.273082563 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.51516016 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.473490981 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.592252044 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.763688746 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.853019227 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 3.109195608 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.416745657 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.023654534 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.416445796 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.977049385 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.39808227 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.278692232 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.975934347 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.393296702 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.57409274 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.416466454 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.386978366 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.941048489 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.388628674 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.581004192 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.432239532 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.38879525 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 3.067195196 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.844923712 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.536894947 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.691771572 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.302617113 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.825722995 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.369643644 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.869948927 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.286444537 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.148412115 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.362442996 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.325725944 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.271563476 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.281402419 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.824143968 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.252029448 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.265287315 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.06767297 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.984508559 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.179774648 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.996704679 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.391828242 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.278479777 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.270991437 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272350137 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.186401154 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.385892342 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.665510753 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.409035005 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.284777162 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.288231326 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.283679002 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.668979878 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.128434779 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 3.185530364 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.266007496 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.408979417 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.274548468 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.273252031 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.273497239 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.265797373 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.274621307 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.274536452 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.79110083 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.279861241 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.889864195 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.405874037 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.280841216 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.516200351 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.346703311 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281842563 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.503121181 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.363441981 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.397852783 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.348615131 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.281857066 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.686120249 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.420513787 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.257371656 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.623908109 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.613648335 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.53761139 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.867389046 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.331903549 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.708358851 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.586500533 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 3.07189108 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281245557 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.197942678 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.39025178 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 4.09710808 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.256987205 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.737320281 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.880835414 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.281887236 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.547304162 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.190228919 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.650630696 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.451084553 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355708815 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.280925758 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.282467076 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.370096989 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.52466062 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.321756409 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.56675582 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.489583318 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.254558271 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.577329358 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.36413773 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.508106816 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294274541 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.289826973 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.269732728 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.264453049 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.741439786 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.176161127 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.356941263 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266046592 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.185325807 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 4.164109635 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.182025049 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.909759521 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.194000677 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.415249067 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.272725454 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.486217886 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.324381245 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 5.092087062 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289581951 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.07030935 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.600689973 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.308797492 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.48582993 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.670082342 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.996824953 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.677775508 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.383896368 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.273432184 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.666574149 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.273015847 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.405761185 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.175834678 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.61691783 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.839230222 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.739869593 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.55103252 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.388486853 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.181542609 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.8520508 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.275171515 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.265236885 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.12227514 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.401964637 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.621155502 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.249079035 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.552766656 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.416042675 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.917603708 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 4.000631995 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.412257249 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.895124568 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.409786256 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.275894094 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 5.101442202 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.192974544 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.486591968 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.407520656 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.280362975 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.30699031 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.987071479 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.876277652 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.528294588 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357038786 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.274353596 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 5.105372382 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.986902174 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.396185338 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.279787823 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.273286465 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.776913186 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.328442388 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.279859835 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.695179026 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.885373397 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.412164719 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.773980216 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.409510009 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.404637558 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.549662688 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.696395095 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.497467118 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.345159053 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.277137222 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285777994 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282307564 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.862197585 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.284232151 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.274969511 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.885436716 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.411712266 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 3.046559319 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.186699444 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.527917492 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.343450838 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.686433339 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.410149266 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.772656929 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.18615616 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.386276301 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.533995975 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.33847367 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.412462947 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 4.039287649 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.400851443 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.287408112 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.279104729 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.653856696 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.662023998 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.7123724 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.637927938 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.354371601 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.968235629 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.374439088 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 5.096307987 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285298672 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272553976 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.773973369 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.448892731 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.710185993 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.414690956 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.75984505 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.387834016 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.736623759 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.543064291 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.377632006 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.287767489 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.279888598 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.319673127 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.316649115 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.853446876 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.182692128 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.745756483 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.398788124 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.112361584 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.824028379 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 5.204546141 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.479266992 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.612596134 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.56327783 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.308090446 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.263893932 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.665270925 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.380389379 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.466419796 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.379274891 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 4.12584971 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.359965498 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.293903197 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.897393018 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.293586356 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.283979657 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288272738 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.19535703 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 5.092972786 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.390821156 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.532079483 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.361795548 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.275275619 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.894481582 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.550153138 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.314484723 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.275260419 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.270375421 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.169306002 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.38733412 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277296549 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.641018183 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.418488026 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.600556245 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.136537946 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.717717238 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.363279236 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.2668232 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.268095492 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.997961556 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.905846053 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.304814735 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.633664124 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.317561684 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.783192641 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.27541417 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.747837561 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.805660967 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.292544283 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.399242238 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281359393 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.294885291 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 5.230194355 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.186547297 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.013076182 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.750271624 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.378652411 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 4.118368851 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.294049423 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.336320453 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.465950756 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.351416221 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.294370323 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.283692358 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.286935365 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.772948309 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.276062917 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.268034751 seconds)
  done (took 1538.463856021 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.538793663 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269875024 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265883035 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271418103 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263417937 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264591042 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261117155 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269556079 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277263712 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282140551 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274838343 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274700878 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274355919 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.544736456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272684903 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266517232 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263916084 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263067434 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264507757 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272974956 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.273656886 seconds)
  done (took 28.471632545 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.290773414 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.284663779 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289995336 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287675257 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28442488 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.284981279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.288414492 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289316274 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280827398 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274817668 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28021082 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278501116 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267412371 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273627619 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272822269 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266826619 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265825762 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272030593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.265644728 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276673858 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271057997 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268597569 seconds)
  done (took 29.384738664 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.273977497 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.272102439 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 3.027088123 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.406729313 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.287357969 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279761428 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.280187796 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.479610491 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.325829884 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.172362542 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.717551815 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.326951074 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.27599401 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.467854838 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.367387658 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.285970607 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.406396018 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.275786633 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.278369738 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.279099192 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.288377812 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.526131465 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.416662501 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.280923234 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.128720179 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.418137783 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.275076438 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.280764755 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.278374473 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.259350745 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.388863555 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.270310207 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 3.155204866 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 4.07043839 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.621244343 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.272259091 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.384830119 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270674728 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.283544144 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.275586173 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.488683283 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 3.064310281 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.263382553 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.258330001 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.598814744 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.393182274 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.280449544 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.779835993 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.348111567 seconds)
  done (took 97.369701184 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290157228 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.410985989 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.348628372 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280513828 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.394880265 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.279465147 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.333694603 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272339101 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.282278737 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.275894218 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.421611668 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.424007721 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2766755 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.279437877 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.341826718 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277279071 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.284103059 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.284940576 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.285546493 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.276698343 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.278154987 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.330788076 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.385212446 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.412202836 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271273441 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276304621 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275563733 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.273085078 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.414912815 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.272572784 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.260903436 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263488436 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.392770908 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.378666104 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275201631 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.270715313 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.385063023 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.27029551 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271231578 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.276405556 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.273955816 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277658432 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.334802825 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.416816166 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28854571 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.382478744 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293252676 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28482204 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.426104664 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275444171 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.278581681 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.426407494 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276645379 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.280774005 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273379707 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.397850927 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.276893586 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.278417905 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278862312 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.402526151 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.269725515 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.271508599 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.409516717 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.269892783 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.26816432 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.41712819 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.373460652 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26863952 seconds)
  done (took 90.806947571 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269300941 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.407618508 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.441158168 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.449830582 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.41983276 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.412930421 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.414545458 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.409108212 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.405540858 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.409713958 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.411160746 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.356156323 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.38074811 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.348818229 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.410399072 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.394065222 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.404570485 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.398667449 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.425872218 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.42140022 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.408925975 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.453118181 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.422915837 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.461523919 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.637077296 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.386826155 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.402869734 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.417433193 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.452763674 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.407995312 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.63030923 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.416130905 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.413195652 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.44993919 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.63436525 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.401121215 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268111072 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407763639 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.404092073 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.404019448 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.372578677 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.444179244 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.399406424 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.374518274 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.399338667 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.401095661 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.447422429 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.631668226 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.353701835 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.405727653 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.403366599 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.444675837 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.399829289 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.400192254 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.443056358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.364079049 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.441958346 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.459701006 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.424077159 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.467142799 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.460992264 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.376384902 seconds)
  done (took 89.44635184 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284634502 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283046456 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.361754943 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.284292541 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.274883731 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.368399073 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278081947 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.276103826 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.273698086 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.27656832 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276224358 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.359637508 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.632910609 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27772297 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.360227891 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.626649113 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351988144 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.351243176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267012559 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.349397281 seconds)
  done (took 30.083238394 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.273865739 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272038355 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.272705019 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.426082804 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.278189597 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.413208443 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.26933542 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268656109 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271347306 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26821731 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269574142 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26497036 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272149461 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.42946115 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27136802 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.411938616 seconds)
  done (took 22.192995459 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.28382321 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.288251268 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.286684423 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.28347315 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.296221638 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.295029835 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291100927 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.283890504 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279600996 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.738455034 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281922965 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281776101 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.271194897 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.281773374 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279944362 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.279257122 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.281705187 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279248042 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.278499259 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277331758 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.850963012 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.27861216 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.2749668 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.283802402 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.283874706 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.850315864 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.280525959 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.286767739 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.275028412 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286322041 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.279549297 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.752986872 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.287162208 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294007859 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.279589898 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.276538817 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.27494567 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.269801927 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.272555944 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.273028413 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.260736785 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.272966567 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27262821 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.276861546 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.28515794 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.292511954 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.282975999 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.749459893 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.289393706 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.294278078 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.287198326 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.288362053 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.288118824 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.753089532 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.275695898 seconds)
  done (took 74.767960406 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317114311 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.332974549 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283017143 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.279896669 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.337245334 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.31563293 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.321652921 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293062389 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319723767 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.277656524 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.337753822 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293261584 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325907191 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.330257829 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.338116607 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310484271 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271876764 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.346160344 seconds)
  done (took 24.902584033 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.262735922 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272245966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.27427429 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.278542459 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.27850627 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272284426 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271298708 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.272252419 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266080498 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.267367949 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2594588 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.260479105 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270817839 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.267182524 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270307531 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265950214 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.277042353 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281194727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286816286 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287513507 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288774138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286574705 seconds)
  done (took 29.284365732 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.321256417 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.323685494 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.279817934 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.27972421 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.278732257 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.307489584 seconds)
  done (took 9.057879456 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326222343 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348031897 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322996894 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330755724 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357436154 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364603178 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362824621 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36304281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342786757 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.57180495 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360845819 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354122903 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348718869 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398664095 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346523692 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353956468 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367989257 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355898025 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334931764 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367453039 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365560511 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345761685 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366165486 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345145156 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36286813 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403294532 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348667277 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570199321 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360168054 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351597434 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348395723 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378603278 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361998728 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.58007586 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337229926 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353173598 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372993083 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367323138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345184385 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402604806 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311790243 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350111418 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354022871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374454947 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3487603 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377465374 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367999564 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376703292 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367401275 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.573767079 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346545073 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399184048 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348887968 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35479061 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350063674 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.562820556 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574602875 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399019056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343819557 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.573569528 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405410579 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358225344 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410150328 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.577372508 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337123884 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403984166 seconds)
  done (took 92.789970296 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397971859 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311875017 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371554863 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581992422 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394990038 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366654422 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372296838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382083318 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378383045 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358462597 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381372169 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383519703 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412967457 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422401051 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381313024 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374140045 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373547948 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410703586 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346096709 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570049583 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369149648 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409768473 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406953378 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407356268 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566274276 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345443814 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369306745 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359421581 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357613101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364142396 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376744275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365151253 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403923544 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.316545951 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414186206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375209586 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3585319 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369923342 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368826985 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351637752 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403996314 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352990205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354857551 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349645305 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.556616089 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365451234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366472136 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339283775 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361483165 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338361757 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570752325 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570903838 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.587951073 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412257831 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370137334 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367913762 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370991796 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372194858 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365045618 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343530195 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411567735 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363271577 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.57733436 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354177999 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3540012 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394099716 seconds)
  done (took 93.468569753 seconds)
done (took 2651.297091643 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.340555671 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.331333743 seconds)
  done (took 13.938260981 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.279857262 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.275122238 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.428380604 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.289661028 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.312298559 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.352866455 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.28587349 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.304064897 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.288377003 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.382019088 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.289983545 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.420079443 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.379149308 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.282323447 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.303362219 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.295091032 seconds)
  done (took 42.432735551 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.469079073 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.869626317 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.232732328 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 3.079801769 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.29824467 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.039798047 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.640711768 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 6.020790166 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.575648273 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.728151948 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.527912601 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 5.217351928 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 6.294097083 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.522280061 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.759701741 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.835570193 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.923634295 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.980499755 seconds)
  done (took 64.300952449 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.267288019 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.412623634 seconds)
  done (took 8.958975465 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.2816127 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.262418788 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.253588719 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.273646729 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.290336885 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.275453856 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.302273166 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.317308813 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.296294003 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.270105311 seconds)
  done (took 64.09158729 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.261496495 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.952301515 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.690366587 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.738283288 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.938939234 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.753623658 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.432148964 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.687995524 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.371799984 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.272985676 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.608139174 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.759390144 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 3.153779249 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.555833252 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.902837596 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.549529302 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 3.062918482 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.698995003 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.620378778 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.768919323 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.55395201 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.494642091 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.732659011 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.188248492 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.279129193 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.959140783 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.558492121 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.408848402 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.354736894 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.455897563 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.716261441 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.280924169 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.696939798 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.266867518 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.50762657 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.96109038 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.977952549 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.479267236 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.855594817 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.60145376 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.701076108 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.971032114 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.330967027 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.977048535 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.428064741 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.69206076 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.360977419 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.520796936 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.36251891 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.393604143 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.906700836 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.457832002 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.421620781 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.398576239 seconds)
  done (took 165.296704935 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.2635074 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.644400068 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.418056252 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.267732602 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.652604411 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.490369623 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.039552161 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.800961103 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.264938003 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.492784958 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.440341887 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.400332925 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.262925045 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.277750508 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.271871594 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.260963282 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.445126104 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.818981904 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.267459625 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.258445272 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.482867115 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.517501377 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.40201405 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.259853332 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.425737015 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.511977026 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.679198707 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.392229271 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.678807695 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.265093373 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.720034297 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.280531676 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.268519287 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.159574636 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.654557919 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.573162904 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.705148283 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.254855582 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.047936529 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.264814381 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.902463882 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.471360084 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.574223814 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.407469327 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.518745533 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.512495593 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.872986347 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.27100923 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.997785715 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.447948437 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.48508197 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.504180795 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.554130344 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.274599525 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.831265359 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.25574785 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.257651412 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.501967041 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.425537344 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.391751244 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.254866181 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.258555287 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.25824168 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.525286166 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.272815074 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.379296198 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.265536033 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.266061256 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.387181369 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.398897934 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.423763399 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.519799483 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.517690994 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.544362393 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.276407701 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.504243031 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.692737652 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.51304124 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.267572467 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.255427985 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.630881966 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.729551966 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.442379403 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.522176754 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.60225476 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.572194909 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.839706579 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.279924972 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.496498919 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.446787464 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.634813637 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.539284561 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.644504078 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.147128264 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.260521007 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.266989934 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.551192866 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.391488485 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.273330752 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.751434213 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.551426631 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.910357751 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.448416396 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.715334108 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.386784436 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.271656474 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.828414808 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.281628851 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.487010889 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.589916551 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.275560185 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.258774652 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.42492342 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.257829179 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.267541909 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.708738922 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.656279471 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.265356762 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.430438455 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.257610091 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.537877703 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.248907349 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.504133567 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.219581214 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.547147898 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.471553027 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.561492327 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.271247581 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.524782808 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.529109358 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.669651232 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.591442432 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.265847891 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.259620249 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.577931145 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.256926178 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.257866105 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.467220719 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.249869251 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.45546569 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.269225201 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.627915062 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.433388064 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.656010698 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.257769383 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.523098079 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.516613418 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.647177746 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.250332575 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.387208679 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.250357121 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.238808995 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.432182841 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.260860158 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.256070116 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.106824443 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.265701443 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442748785 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.501524679 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.982583036 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.651963819 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.627821947 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.259259277 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.695097343 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.464620377 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.703885674 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.810559189 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.437485129 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.002412588 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.501582656 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.260796059 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.509375496 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.573443128 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.271359877 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.283746564 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.993641182 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.40781289 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.272527661 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.440608156 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.209618086 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.709693261 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.4746851 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.267060043 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.643533504 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.269736314 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.51349366 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.731753578 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.572252794 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.271999951 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.270310353 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.268289456 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.258078792 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.481181591 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.510721809 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.825101723 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.406119291 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.56901985 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.486553971 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.589862585 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.730067022 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.277607797 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.596126193 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.260172331 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.669582425 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.270756707 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.455744234 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.543642497 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266818013 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.487241578 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.639020922 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.413738601 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.684291049 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.26947116 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.259485377 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.834164257 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.437440154 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.714539261 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.273023164 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.388032667 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.63547546 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.392954821 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466452069 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.528544519 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.282423735 seconds)
  done (took 764.442462378 seconds)
done (took 1124.729131503 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.268107278 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.276869617 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.268570957 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.264202176 seconds)
  done (took 26.353981756 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.261386659 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.346436478 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.44528807 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.281208109 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.650005004 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.327882007 seconds)
  done (took 12.588447434 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.253783639 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.263355313 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.266419552 seconds)
  done (took 20.037619238 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.55971594 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.680705916 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.423254198 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.371100778 seconds)
  done (took 7.298779488 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.296995852 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.29802533 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.273129369 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.298833164 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.26765754 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.266360314 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.301424321 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.290627065 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.26180612 seconds)
  done (took 12.811933849 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.769240633 seconds)
done (took 86.142091858 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.564695925 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.556917717 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.26135838 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.567780032 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.396758405 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.579491178 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.371528134 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.28411134 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.562615407 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.657644943 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.752873962 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.337826428 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.596922724 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.701521549 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.512430895 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.304887644 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.296992911 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.33964057 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.871920451 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.435894812 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.706158871 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.399546755 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.897343153 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.278242046 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.203376042 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.400097019 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.550190421 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.193931876 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.321274869 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.29206003 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.359827245 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.735456039 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.490584334 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.59945674 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.403401886 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.12613444 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.687474442 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.263376067 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.542312122 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.648059022 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.529635372 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.373529455 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.271482743 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.438019878 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.669216569 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.279887092 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.245763279 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.424715906 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.803788508 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.422628638 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.748371933 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.271669076 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.916572146 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.341114523 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.361719291 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.272523457 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.214252173 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.773348289 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.419859452 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.57844279 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.278744497 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.407805133 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.139552427 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.289896644 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.629506538 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.536489947 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.715900209 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.372552208 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.736330969 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.304111046 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.296013707 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.306593522 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.969347513 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.417341757 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.26366825 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.406916123 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.539175744 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.419052951 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.261555819 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.604474526 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.486899554 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.275328544 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.416940064 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.592507974 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.436744279 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.670111045 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.770321564 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.623220419 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.656302882 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 7.231641959 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 8.092764057 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.235012537 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.36486385 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.31950361 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.55815944 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 6.517689359 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.527623044 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.781243053 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.412239713 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.822210899 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.300884801 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.287613834 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.597480888 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.561397518 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 2.087362909 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.291382472 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.389402423 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.262323649 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.544994535 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.101871279 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.370573027 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.815173887 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.263568177 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.315037663 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.780628271 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.265530475 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.591775319 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.705659512 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.36304785 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.278970091 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.558500845 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.281967499 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.403797102 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.841186149 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.636289203 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.482386176 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.267090517 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.433931923 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.264798994 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.461308438 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.269237175 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.843605224 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.81508132 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.285613223 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.516627286 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.389649012 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.259666057 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.638052942 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.339515146 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.502355984 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.623894131 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.612359446 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.445401511 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.271442949 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.604623801 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.266824154 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.500752744 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.612085571 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.431538464 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589487747 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.395794371 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.282096207 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.192610608 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.666292864 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.854486163 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.821877337 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.530939663 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.390751992 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.782146793 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.509979381 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.098620251 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.347331406 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.322166227 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.256752552 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.272361567 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.327886954 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.250262146 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.274323926 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.548357158 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.501341439 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.759446527 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 2.070542666 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.975570548 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.542509779 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.406704611 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.167483028 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.856018257 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.270187169 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.564823057 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.767612325 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.34978342 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.290813113 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.264030294 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.318502985 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.962080775 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.305186569 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.56135418 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.784024996 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.612341604 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.621628641 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.536338384 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.301015872 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.62642554 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.532472505 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.532219206 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.475970509 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.645920735 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.405086512 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.624463535 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.380282963 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.535505568 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.2705219 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.27964011 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.496581764 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.757130707 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.64767281 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.484904884 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.421288113 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.575569899 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.251972912 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.657333919 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.367463774 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.635969623 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.291721075 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.643474452 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.358740111 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.653622994 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.17915366 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.380782391 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.564481937 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.405429102 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.366848175 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.770107473 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.27883923 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.581248151 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.417650376 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.466490112 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.494836545 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.281381981 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.403014801 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.461617018 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.391475486 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.532639437 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.109643486 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.700495941 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 8.083161675 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.395298011 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.267820348 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.698998584 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.292950666 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.292467821 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.52716546 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.431016288 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.571598534 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.387848958 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.437283004 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.374234604 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.296152604 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.663075254 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.096959591 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.84263885 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.263265156 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.294493811 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.261114156 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.650042589 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.664879982 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.323158617 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.396536053 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.861766998 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.308884315 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.441752109 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.275981292 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.272575476 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 3.021364829 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.3939421 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.509149692 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.758527281 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.256325243 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.450784378 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.317401927 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.67623969 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.791988207 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.311900696 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.404147143 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.696303081 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.260704521 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.634575655 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.274673951 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.434573258 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.643728189 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.391595544 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.391949424 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.272776761 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.303156608 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.783387599 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.494331173 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.747548917 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.287441882 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.611910281 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.375000788 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.497060168 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.282868445 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.396889193 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.600714947 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.412828232 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.613550862 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.262213213 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.420980014 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.518631012 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.293306874 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.302187399 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.394502863 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 8.113954089 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.852249165 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.549419943 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.43373556 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.225132759 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.501999608 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.256736531 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.753570572 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.39864836 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.372621114 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.860157273 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.725057573 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.248216891 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.483137217 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.256135954 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.622081615 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.284601042 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.275319831 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.419209206 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.356743213 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.260951086 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.766148618 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.456783153 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.755205515 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.387378326 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.141998955 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.389224562 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.434374807 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.379055836 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.549978158 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.042230019 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.277066554 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.411445352 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.89442397 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.461504337 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.295002806 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.53509306 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.273610382 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.861887639 seconds)
  done (took 920.966063518 seconds)
done (took 922.387060915 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.520881152 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.653253261 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.523890892 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.242244121 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.081669969 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.92188579 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.532313516 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.504910291 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.346655974 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.535312817 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.150039381 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.076476684 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.365883773 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.380946405 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.35957499 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.370542961 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.480295523 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.501218564 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.37825701 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.363234349 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.65329074 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.363116334 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.687937606 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.555831926 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.63915251 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.363858108 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.477189474 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.783887253 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.775278598 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.226779124 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.476061159 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.489354539 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.106825208 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.517403142 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.358718048 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.361551607 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.090356256 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.379012237 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.528597338 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.360196943 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.651969321 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.398831991 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.000251329 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.108439178 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.058919763 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.688124161 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.152098954 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.370274409 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.371378688 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.479135262 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.533201173 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.523058536 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.79200799 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.274918424 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.122509796 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.10085916 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.793057023 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.088979697 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.011872798 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.484488685 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.795823282 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.370109043 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.482629567 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.498501679 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.382552858 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.560699398 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.673584619 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.514043718 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.490548946 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.534190416 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.522738042 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.49467582 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.390398861 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.481703438 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.391251654 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.537391675 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.004778556 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.518341629 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.06800162 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.373417499 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.196058679 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.211083235 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.232918921 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.345070297 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.522326472 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.038597661 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.085915111 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.191101508 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.394460455 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.496160132 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.14899834 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.509125613 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.725354656 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.480667599 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.522467568 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.512920024 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.088207814 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.509711635 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.349114168 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.490795152 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.039525478 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.470466508 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.289367059 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.35745522 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.38222531 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.530147368 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.480719106 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.689547381 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.504949696 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.441197232 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.660246356 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.394839238 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.500062783 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.38831558 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.348113548 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.043934394 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.551953565 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.113630844 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.518695094 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.94622317 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.562166851 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.359250006 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.641419267 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.564932122 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.512071673 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.353362405 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.364134317 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.208995237 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.375578692 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373847115 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.456703893 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.722259735 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.466398893 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.22253327 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.486184337 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.934532043 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.494524168 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.493956131 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.349082066 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.185566827 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.371181384 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.344009268 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.57016789 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.641210315 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.504245472 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.569587184 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.393903432 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.565057809 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.518028545 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.384133908 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.48416829 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.397847674 seconds)
done (took 270.413680713 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.60515387 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.505060877 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.536129611 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.541995284 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.606013955 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.614674052 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329559799 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.698106981 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.374285248 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.674331902 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.528572852 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.21620451 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.426932765 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.485689677 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.605347713 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.511387003 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.388436778 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.533761663 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.719635757 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.625670002 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 3.021039409 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.511703604 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.412178554 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.683030263 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.250423298 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 3.018692789 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.616497283 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.392855274 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.532020317 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 3.027001758 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.06028217 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.531857037 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.632413554 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 5.067994319 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.691294548 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.98841021 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.611868208 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 3.080500601 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.599768964 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.600865393 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.54381654 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 6.162722386 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 3.066932079 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 3.053089478 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.426398887 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.634011263 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.340095797 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.225979837 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.262345394 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 3.017184154 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.519764706 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 3.083437998 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.163002612 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.595601584 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.483814933 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.938574564 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.741051077 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.759962121 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.606361226 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.572801844 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.590249645 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.677397522 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.678325553 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.444893306 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.093139746 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.55011278 seconds)
  done (took 158.34887296 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.668284991 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.57139225 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.686806546 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.689341694 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.833255809 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.664942008 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.803151891 seconds)
  done (took 15.176080373 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.322557978 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.297817945 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.509890627 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.517962693 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.316926981 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.43577081 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.404135512 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 3.041872086 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.536008524 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.356035611 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.628098487 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.535130996 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.982854647 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 3.035948882 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.399569015 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.550326756 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.290571229 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.381158272 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.37091118 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.565647758 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 3.063169275 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 3.040435012 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.503547279 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.4099765 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.338559639 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.370426887 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.312955317 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.286535192 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360059514 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.300645734 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323704055 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.432423936 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.315871549 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 3.019989792 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339640622 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.619960931 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.308521396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365845083 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.449654862 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.256535075 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.295661287 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.313497681 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.452879479 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.322064484 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.289108982 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.504097805 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.303055839 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.329830771 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.286609006 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.310772541 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.498286651 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.306665194 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.327957137 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.973967286 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.518574358 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 3.018342029 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.385988338 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.322601358 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.323415267 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.388574139 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328098183 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.583678828 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.566291775 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.300423352 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.536986771 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.612547654 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328582948 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.318172159 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.307249185 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.562257107 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.316155895 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.552089433 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.317070638 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.361461055 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.363363049 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.454470241 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.507831799 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.112318528 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.076762142 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.966886382 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.28584433 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.293860331 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.610345188 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.254392364 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.980077251 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296607143 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.363213793 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.951190435 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.224708798 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.310723676 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.625331085 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.299286273 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.383723248 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.376079859 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.364609162 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.396389846 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.555612045 seconds)
  done (took 167.848708068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.670268086 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.947972622 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.531695743 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.591937617 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.74029974 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.824758678 seconds)
  done (took 17.580807395 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.623040481 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.111417497 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.350309151 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.350128324 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.3843583 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.325765093 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.317155992 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.517711231 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.456170545 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.333029866 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.315351864 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.337250518 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.318493171 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.441878018 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.302572391 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.310300811 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.30446209 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337865768 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.310477022 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376819281 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.620592829 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.373882768 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394497603 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.403600052 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.365813322 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.32498114 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.294576892 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.319074644 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.320102721 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.676771401 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.499161455 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.312337412 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.314654681 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.645117588 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.071243775 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.39776542 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.464090549 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.341282945 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371334193 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.319848723 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.33903591 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389269723 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.34237674 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.344385687 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.664048995 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.317011175 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.383576263 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.581832727 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.30965652 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.340750491 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.331061345 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.323433979 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.298400164 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.341681912 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 4.045672844 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.739156781 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.290090454 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.318671935 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.372925813 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.335056315 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.385043843 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.31613731 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.674825329 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.255585667 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.995280453 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.342629638 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.330986306 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.441445696 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387040811 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.330769104 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.338032929 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.342447866 seconds)
  done (took 130.857979657 seconds)
done (took 491.06897193 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.278004023 seconds)
  done (took 7.530558673 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.297634311 seconds)
  done (took 7.686172004 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.260091936 seconds)
  done (took 7.523502926 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.273801849 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.305840188 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.294273079 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.285616347 seconds)
  done (took 26.462057621 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.4724557 seconds)
  done (took 7.734470579 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.257056946 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.268404476 seconds)
  done (took 13.886286895 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.461597437 seconds)
  done (took 7.732671528 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.78431996 seconds)
  done (took 8.047466597 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.284484173 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.303013284 seconds)
  done (took 13.880370586 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.26081086 seconds)
  done (took 7.527101327 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.104338679 seconds)
  done (took 9.447977317 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.270969245 seconds)
  done (took 7.570845694 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.331763409 seconds)
  done (took 7.591073282 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.452900025 seconds)
  done (took 7.699785633 seconds)
done (took 141.582662988 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.268665429 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.260089698 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.255973566 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.256949412 seconds)
  done (took 26.295474742 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.600519357 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.594181669 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.571373056 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.648794733 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.55072963 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.546819434 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.60521923 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.602847901 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.545558835 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.670713123 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.598226155 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.750094476 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.647415289 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.571268513 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.56842491 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.727243125 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.748205783 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.59378795 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.546784633 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.573973471 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.75406846 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.752028907 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.045072256 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.033686008 seconds)
  done (took 41.110118429 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.487654171 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.633588243 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.437619918 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.684509628 seconds)
  done (took 7.515062842 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.305507114 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.645933068 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.627894001 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.680642646 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.626539884 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.441455251 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.621202752 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.485487274 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.452393647 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.410757371 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.882599637 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.423924028 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.434910432 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.601375162 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.450665128 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.268872983 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.271381797 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.411737533 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.653589578 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.514928802 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.516652135 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.626167091 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.624930626 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.621761583 seconds)
  done (took 37.866315368 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.022059701 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.187533408 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.62199523 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.195342478 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.972832417 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.075958756 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.5537288 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.769669264 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.54161572 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.512385556 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.996941657 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.076800664 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.415442098 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.173671753 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.034107198 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.445831504 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.443679756 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.128746079 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.872977534 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.56842192 seconds)
  done (took 41.866182554 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.25487252 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.262588147 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.48883509 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.429297281 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.258221958 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.251054161 seconds)
  done (took 29.203548418 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.366040171 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.416976715 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.583439692 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.54076315 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.41914025 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.392462949 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.936696204 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.482844132 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.037699915 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.071722282 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.927579371 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.718188062 seconds)
  done (took 24.151838622 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.26784458 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.288394519 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.26445624 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.422522286 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.113202489 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.123281463 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.580555876 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.254841758 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.377286889 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.471508949 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.13814372 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.443869416 seconds)
  done (took 42.011706938 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.476863789 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.53360045 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.612471292 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.215673527 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.799541543 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.348364647 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.69134072 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.766887138 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 4.335623129 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.107890385 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.793814152 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.324475827 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.798775851 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.223285597 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.247314141 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.577609834 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.082777632 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.763168743 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.707317161 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.328935343 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.230240028 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.417565414 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.267179821 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.861650382 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580127258 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.270194047 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.483024514 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.504414925 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.260858973 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.446611417 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.304040991 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.741948204 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.450223358 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.576874529 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.800368722 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.353128184 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.369315367 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.483658605 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.849507753 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.563768945 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.414151644 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.437663297 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.264104989 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.486255623 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521236364 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.044785632 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.274050726 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.923485609 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.251461613 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.415259955 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.154334692 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.149418545 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.592095306 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.076554359 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.4073644 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.57830215 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.412894873 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.474861043 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.558909242 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.336947452 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.454006986 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.36587211 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.484244282 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.235890996 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.782939665 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.6062914 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.639678147 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.579474784 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.561685332 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.612809767 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.665769892 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.432614883 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.091261495 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.398149415 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.771819087 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.177979336 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.638173561 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.252024129 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.995770517 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.800255203 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.240189159 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.365611141 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.004747383 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.22445323 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.252027767 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.428976624 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.129178277 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.236320966 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.358379935 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.354431076 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.677610456 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.392768395 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406330777 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.522808154 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.956535061 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.25051088 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.131970594 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.55101137 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.229105581 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.819010908 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.30885141 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.224579996 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.2962127 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.813804205 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.676343648 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.302918021 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.038510448 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.009660196 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.621902035 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.8898951 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.435758882 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.271128514 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.647109963 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.59444384 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.269040183 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.010013294 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.469237729 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.379136808 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.618562436 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.262433064 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.220523881 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.673951391 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.460172986 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.335551918 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.496103254 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.265526432 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.410103814 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.260418727 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.091397246 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.872948713 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.502289313 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.794945879 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.576208133 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.343831256 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.242892065 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.39702361 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.768708409 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.345220766 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.575871849 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.704379485 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.850434468 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.037685676 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.265767167 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.120631535 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.737202291 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.518086036 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.595983414 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.410835548 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.419811144 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.344570573 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.255771535 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403522153 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.266321404 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.809842 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.261989053 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.031123442 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.984233761 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.556882047 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.261560341 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.252318037 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.507121597 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.504832616 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.988833037 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.313801524 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.412715805 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.519517595 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.514144163 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.256296356 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.223808516 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.632905026 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.539481663 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.788150616 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.522483914 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.967778889 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.62028405 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.772932491 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.492237999 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.625493561 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.058197294 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.717084544 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.607249211 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.977140702 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.289710391 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.258415908 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.366244577 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690115462 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.502876173 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.993103527 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.469633866 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.303895546 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.286073514 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.845302786 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.245965468 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.423290382 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.774041404 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.297581298 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.83248658 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.460276572 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.464401887 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.538389221 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.295622711 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.615386979 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.099688519 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.675770212 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.632682022 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.568704229 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.23860708 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.092101094 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.786295616 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.78379961 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.398088416 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.723066053 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.543573049 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.335693848 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.262726989 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.616246857 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.216903019 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.094962598 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.57123645 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.087579794 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 3.980707301 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.404641432 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.252372344 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.275720055 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.214282649 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.428093212 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.362187659 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.457457934 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.860397268 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.524116516 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.595083979 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.264063615 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.262493663 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.507901618 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.567072921 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.541069721 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.771641258 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.864961262 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.949214983 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.35415163 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.96854393 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.425007854 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.298178439 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.95331759 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.616244104 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.21405886 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.454913556 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.087664719 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.43946511 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.327068293 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.55341086 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.249502923 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.738771546 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.886216081 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.255657573 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.274500356 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.395086954 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.245405398 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.56342429 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.145489282 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.493491374 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.427068563 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.662031344 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.502113426 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.46051259 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.666338712 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.788419752 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.618472624 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.240994274 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.417632081 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.324561692 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.604360992 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.249194159 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.54822334 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.939091935 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.988105796 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.068864322 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.809210308 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.511817026 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.920821527 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.740950817 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.515975235 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.590343407 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.223341596 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936737082 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.254766959 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.395992368 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.229547536 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.068406153 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57935463 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.657888828 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.74057751 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.32604026 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.789195562 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.700391072 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.336459456 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.423015913 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.518478387 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.256624672 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.553548974 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.261518581 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.639816425 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.709062323 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.278449496 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.091882381 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.452535258 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.598368641 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.422703602 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.95451108 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.303899417 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.379005602 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.754041151 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.433718401 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.403282955 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.605754539 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.11154053 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.299851407 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.326611339 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.477086428 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.894402675 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.757258961 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.877303795 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.882390005 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.6454415 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.016733619 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.255747692 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.491640361 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.425781426 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.254312008 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.445293647 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.674935762 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.31018859 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.473626424 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.596716148 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.492386496 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.789395802 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.249129979 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.870321977 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.525565176 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.786977594 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.788648261 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.05264475 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.76992079 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.740130622 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.810158145 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.228713022 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.429505804 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.561102278 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.045265159 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.326430563 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.102013268 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.059607077 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.447690311 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.685101111 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.365157497 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.034932389 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.424665326 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.499992972 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.48487947 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.39683727 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.230795204 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.901356507 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.044432662 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.547664108 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.436283596 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.470021569 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.442670959 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.867402994 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.808377542 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.579473259 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.02413976 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.757369636 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.515555884 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.243921306 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.262134651 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.966432473 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.465807244 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.369831372 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.622653418 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.717583795 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.331578646 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.299695076 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.732006817 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.84955975 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.024101995 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.994894784 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.606621606 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.815135745 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.869267854 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.036377292 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.024574019 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.492247903 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.657422785 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.677411672 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.193482709 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.698160297 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.62524683 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.431898826 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.243782972 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.466434295 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.281095605 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.360991532 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.132592492 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.559895753 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.360451133 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.411551697 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.875426229 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.515310531 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.303382995 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.861684255 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.486396613 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.464194876 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.265704897 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.893720186 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.677174619 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.435538733 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.265432061 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.025979145 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.240812952 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.494291461 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.490960032 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.46271826 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.130592563 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.392977341 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.926350075 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.876409275 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.582651582 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.475219377 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.244664835 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.366513893 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.293944524 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.990331486 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.075327238 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.521003574 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.795323952 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.459290654 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.271827382 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.580907208 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.389941233 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.5823052 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.540726314 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.750403971 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.672894884 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.633432961 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554747812 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.792215334 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.409270594 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501696956 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.229220901 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.263988417 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.351759713 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.649119776 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.641068101 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.266277485 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.820009191 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51046042 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.411096399 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.426371281 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.357590428 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.81188608 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.469743967 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.430455385 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.422747798 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.522637215 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.619326024 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.261278103 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.472324772 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.275648119 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.259548517 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.4924961 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.515650577 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.642747414 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.574074818 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.859965952 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.430654869 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.796420292 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.195125198 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.812025288 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.259053696 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 4.387465998 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.633107908 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.261484906 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.762493121 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.910407017 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.464762374 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.972680435 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.35902067 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.336031041 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.460415198 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.763169131 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.275772522 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.917326802 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.696976857 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.255583812 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.73631436 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.339007666 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.423314417 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.015987066 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.762847558 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.261594057 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.354679676 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.410834261 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.828213643 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.974584296 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.27135249 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.407077179 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.095776522 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.249674128 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.258726003 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.376375941 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.805682691 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.27936131 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.850734913 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.439588297 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.440016888 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.271000349 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.4130576 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.269991639 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.486940381 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.865102004 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.511449148 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.537289195 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.455798587 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.259035775 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.87418915 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.969757522 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.472077348 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.478064825 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.313429508 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.650262099 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.04286799 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.320022023 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.862086493 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.541012571 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.490398891 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694145542 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521648893 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.301966943 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.487039246 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.269019699 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512245044 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.423025727 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.822516964 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.520075784 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.260079892 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.5312321 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.269694367 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.812563521 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.730270993 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.126022053 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.25241138 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.57031254 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.263532239 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.068617028 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.909041877 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.453072322 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.425459517 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.509862541 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.835534372 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.587384389 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.390553191 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.248069245 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.478524664 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.769430025 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.22911077 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.333949572 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.167919647 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.450311188 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.58381509 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.234695816 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.465210656 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.29057494 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.246590813 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.766842233 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.262604122 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.652418533 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.237098672 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.777135443 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.249860837 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.391815615 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.413916482 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.602992334 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.254648705 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.987805091 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.437431936 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.271349558 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.260258392 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.618337896 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.350535325 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.511571524 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.746698965 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.52582964 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.59951238 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.18793202 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.068865705 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.279649939 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.567482617 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.262340936 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.817056695 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.365449984 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.778218639 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.071922316 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.286284273 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.831218182 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.516705525 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.008564929 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420872483 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.778378545 seconds)
  done (took 2049.295443967 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.294415215 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.345344534 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.337771321 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.336755817 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.282959652 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.28307865 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.278597905 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.329979516 seconds)
  done (took 51.758037216 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.265489399 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.267544127 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.727581498 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.443788928 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.282668338 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.469965026 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.403084864 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.763771589 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.447670167 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.300744838 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.323852719 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.330208345 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.277026702 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.28984963 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.16015221 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.346485257 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.251103608 seconds)
  done (took 93.623353793 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.308911703 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.328058126 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.28248707 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.787709048 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.304094556 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.53704291 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.268024484 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.245096164 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.316555574 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.949697679 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.263733044 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.393575576 seconds)
  done (took 80.273642054 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.29680045 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.303631709 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.293712512 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.298737697 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.291862324 seconds)
  done (took 7.743486799 seconds)
done (took 2533.993172111 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.489051814 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.77778244 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.820171488 seconds)
  done (took 4.85063998 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.327645416 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.386292931 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.456834156 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.401702232 seconds)
  done (took 6.842133872 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.552415966 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.741017587 seconds)
  done (took 4.546604049 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.723648595 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.271417041 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.8017605 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.256682085 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.24887698 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.25792071 seconds)
  done (took 20.017744932 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.292198092 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.299857995 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.294994082 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.289241877 seconds)
  done (took 6.440491053 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.264230372 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.313974761 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.265174746 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.289083337 seconds)
  done (took 19.398259027 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.537592414 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.504202603 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.012528628 seconds)
  done (took 6.307532502 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.081161482 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.644211135 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.065000715 seconds)
  done (took 7.039913288 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.543578565 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.180721568 seconds)
  done (took 5.982263908 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.423160238 seconds)
  done (took 2.666446731 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.747719452 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.749493603 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.128312827 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.147437334 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.299225906 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.584854053 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.602056895 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.566787889 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.965859474 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.817859506 seconds)
  done (took 19.870976491 seconds)
done (took 116.501802883 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.239250202 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.663581124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.423064209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.332983056 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.350029129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.418201283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.873042013 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.087585834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.567524289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.574789629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.335371964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.349018538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.30101506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.664551837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.289600931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.654970677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.667285442 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.227144648 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.530276539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.18755638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.867948918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.86214975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.032678573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.863835412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.671553175 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.415458788 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.337350625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.6544116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.802569715 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.342928656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.410997355 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.482997399 seconds)
  done (took 158.744163582 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.270021332 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.26921745 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.274471176 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.262189276 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.246475822 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.269643589 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.261960324 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.256680716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.973714537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.991718147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.266604582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.24332627 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.273257443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.267279759 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.265938274 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.253189006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.212013129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.261828565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.264028803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.269837251 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.257540087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.096017183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.271133636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.125602788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.223282937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.270026885 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.253013647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.257487073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.265899731 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.256977532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.268109201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.254680766 seconds)
  done (took 192.728570096 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.2631499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.26898836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.264434171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.252699938 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.255772333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.262379879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.254267713 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.25571657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.261175342 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.261281389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.265640765 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.264059785 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.263930379 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.259951449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.256008629 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.26227163 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.258232713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.256471924 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.255432929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.266120551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.264950961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.258632355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.261161791 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.259664773 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.261572369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.259453363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.266041601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.255379173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.253481981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.271874592 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.263901218 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.260467744 seconds)
  done (took 201.613281619 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.571029971 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.305709885 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.196357151 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.047820996 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.168214525 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.293649209 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.629305237 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.567256767 seconds)
  done (took 17.031630252 seconds)
done (took 571.39111014 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.9616535 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.184613116 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.436810796 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.482473169 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.876763276 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.542493542 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.486725965 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.755434143 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.009469778 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.72438744 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.760834126 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.475825052 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.115363237 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.497846801 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.462123392 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.749121192 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.693959069 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.972775671 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.4675181 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.141517709 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.502417579 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.170448556 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.768950905 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.046950903 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.756741585 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.19851286 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.397394953 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.693187344 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463725424 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.49059902 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.314496415 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.666773466 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.494308761 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.488920841 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.752844178 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.727239238 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.634518977 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.701582685 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.430260246 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.95890125 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.13242423 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.865456383 seconds)
  done (took 81.710260455 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.324137981 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.330352753 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.49015131 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.368460087 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.921058898 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.363691474 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.532769047 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.504762674 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.384809145 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.508231141 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.552027022 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.946210478 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.542501253 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.901588383 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.517068184 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.537289208 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.352481438 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.885067142 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.502803425 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.483870191 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.310209768 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.459176958 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.325957615 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.484698429 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.315222973 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.345839678 seconds)
  done (took 40.471086037 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.343348451 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.464803416 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.543007079 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.657826696 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.511805082 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.308268223 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.629850088 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.408799684 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 3.250297519 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.618057526 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.40272355 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.411762969 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.489371886 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.566352471 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.895623007 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.448803873 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.462550748 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.469664865 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.464499158 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.53602391 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.433738453 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.368530359 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.641916464 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.595670843 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.996739718 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.682533042 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.685850088 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.932095558 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.834412969 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.453258253 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.428157961 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.620894879 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.678108511 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.545791441 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.43209443 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.323096655 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.321624094 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.404320249 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.358105021 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.481523797 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.635061172 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 3.494201427 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.681952871 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.838396507 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 3.370047933 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.541787168 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.800955637 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.414403092 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.423577255 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.10243379 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.574994702 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.309992693 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.450118317 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.507968482 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.433949695 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.726926409 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.503252187 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.625618014 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.512756817 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.9080679 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.370596285 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.688985774 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.476681875 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 3.365866143 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.601398077 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.524990546 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.52456153 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 3.739630979 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.696492916 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.835776398 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.856500547 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.36672913 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.332685445 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.407831769 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.457159975 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.824840232 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.729596626 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.539066237 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.699037136 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.620914978 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.831323705 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.789792612 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.320305858 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 3.019372631 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.343519736 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.306445789 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.375483869 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.666497423 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.616325776 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.776963421 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.841065151 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.631537951 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.6247354 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.71912244 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 3.716607063 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.749333682 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.305629241 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.326853579 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.541224261 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.854574751 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.382578918 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.616610806 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.963600945 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 3.83949396 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.618751133 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.603937645 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.690536913 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 3.36355147 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.745409622 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.296407197 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.570100639 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.646324627 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.566787043 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.658880749 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.286639499 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.8186421 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.410603048 seconds)
  done (took 248.321675696 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.246761443 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.255501796 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.255988871 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.259022458 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.254609269 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.897132684 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.325462043 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.257582917 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.900215753 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.333465306 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.256614617 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.260311716 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.25195204 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.270220639 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.885944511 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.863677758 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.089564563 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.267114428 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.268692158 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.26407507 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.09070714 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.257363199 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.255138985 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.263161362 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.267245597 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.266924046 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.269013116 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.303213272 seconds)
  done (took 156.892162465 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.312146188 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.73643313 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.338286303 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.406384279 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.341586027 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.325238951 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.832660823 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.437383075 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.383570899 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.323376114 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.314996833 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.550133725 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.557524901 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.923664507 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.432296868 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.397328907 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.96091773 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446325856 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.326034734 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.324309545 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.484309831 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.66914195 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.614970381 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.619594315 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.481206203 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.618282959 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.388350744 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.322859059 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.444526897 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.817540061 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.324895281 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.700634591 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.459225061 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.314545951 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.831608763 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.659519814 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.896010074 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.871359024 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.500259939 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.274935425 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.282184499 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.559297917 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.645197146 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.368479789 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.334277513 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.998489909 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.343995277 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.730688536 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.359903569 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.288832741 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.416113601 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.424189691 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.586206474 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.279201557 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.491874035 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.460769543 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.828485672 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.289683506 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.377772275 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.63893604 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.298010484 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.824207672 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.27199011 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.392604928 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.347382251 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.184384608 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.419402181 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.855599038 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.938790368 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.368764181 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.673570462 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.494268958 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.288732546 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.585260184 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.49086823 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.795649577 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.908088635 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.453923478 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.417672992 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.38959335 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.595388078 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.312487685 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.898110659 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.42210862 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.291166868 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.824171441 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.709858567 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.293942954 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.326893697 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.43835341 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.490768108 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.541435643 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.63416208 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.399725382 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.224526624 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.58829056 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.638638374 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.340825034 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.470842464 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.313784279 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.742517714 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.50660429 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.30866696 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.643544406 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.716269183 seconds)
  done (took 172.997987216 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.015955132 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.373984782 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.578764191 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.837353006 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.658424564 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.756996231 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.584301143 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.390136627 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.613508583 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.531791822 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.495087034 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.417174482 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.002438738 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.064043767 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.374399688 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.538060369 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.386242412 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.944181252 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.609462533 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.290872766 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.648632374 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.120691138 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.637968387 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.742627066 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.701065629 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.796259161 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.965423414 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.456456796 seconds)
  done (took 52.800166333 seconds)
done (took 754.447882144 seconds)
SAVING RESULT...
DONE!
