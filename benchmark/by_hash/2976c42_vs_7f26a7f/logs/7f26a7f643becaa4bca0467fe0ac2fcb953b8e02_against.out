cset: moving following pidspec: 1704774
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.235101231 seconds)
loading group "shootout"... done (took 0.783320781 seconds)
loading group "string"... done (took 0.217762095 seconds)
loading group "linalg"... done (took 3.142449439 seconds)
loading group "parallel"... done (took 0.021735134 seconds)
loading group "find"... done (took 1.174849537 seconds)
loading group "tuple"... done (took 0.681269207 seconds)
loading group "union"... done (took 3.038769614 seconds)
loading group "dates"... done (took 0.157675937 seconds)
loading group "micro"... done (took 0.058192193 seconds)
loading group "simd"... done (took 0.395520617 seconds)
loading group "io"... done (took 1.388389321 seconds)
loading group "random"... done (took 2.284394328 seconds)
loading group "problem"... done (took 1.146550344 seconds)
loading group "array"... done (took 4.324423321 seconds)
loading group "misc"... done (took 1.110611832 seconds)
loading group "scalar"... done (took 3.473627042 seconds)
loading group "sort"... done (took 0.3085292 seconds)
loading group "sparse"... done (took 3.351808915 seconds)
loading group "collection"... done (took 6.180061086 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.474250096 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.071730265 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.250221666 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.072863172 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.270454358 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.083624549 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.085974516 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.072122727 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.139033421 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15744758 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.212212081 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.36488783 seconds)
done (took 4.977723898 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.298569944 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.032751309 seconds)
    (2/2) benchmarking "String"...
    done (took 0.123064482 seconds)
  done (took 0.740171011 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.135304639 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015545001 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022641958 seconds)
  done (took 0.752811667 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.0203497 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.097749456 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021371181 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.021913469 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.0218782 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021296734 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021164341 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021183883 seconds)
  done (took 0.808848714 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.028793693 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022446072 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020601691 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.02203602 seconds)
  done (took 0.676707803 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022629327 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.092387438 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.026254074 seconds)
    (4/4) benchmarking "different"...
    done (took 0.026217907 seconds)
  done (took 0.742598204 seconds)
done (took 4.636455879 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.191072726 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.760460107 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.85490406 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.173570233 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.334601764 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.281777387 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.074840464 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.226064796 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.145156472 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.030386318 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.177818991 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.035818415 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.50409264 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.447133451 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.026279535 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.147390219 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.564184269 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.038064163 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.068015192 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.153423896 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.034744508 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.037857131 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.042423835 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.02702945 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.046489479 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.131375882 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.569410271 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.06469486 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.023867561 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.047212833 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.026662611 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.031427409 seconds)
  done (took 8.940307997 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.156810293 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139407098 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023365457 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.057164259 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.05201632 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024561941 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.029877901 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023066735 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.041920991 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.085463861 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.044908292 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153007714 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021040594 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.02426243 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.136827135 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.111430681 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.037130112 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.036523165 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022116128 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.035644378 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.047214438 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.033952615 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.031855314 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.031349553 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.066107123 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.085870861 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.043339171 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.065274331 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022253453 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034373985 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.053292667 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.061127604 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022503482 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021180869 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.063082931 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.04250838 seconds)
  done (took 2.629665559 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.621691685 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112977 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.137313356 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.177051726 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066708493 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.052413553 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.171585529 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.073533317 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.05323081 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.023684005 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.192618842 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.632508252 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.160560977 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.986980372 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.027508179 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.166166344 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.885179131 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.947112954 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.022983491 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023149777 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.127972211 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025636021 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.167255392 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.024338636 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.132033957 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.688006067 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.02923579 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024967022 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.050269533 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.256954973 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021610828 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.093718365 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.046076546 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.024962487 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.555619067 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.02168846 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.01977438 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.040842758 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.050680608 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021842684 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.022924424 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.031130681 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021225623 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069320857 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.032237626 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.473295351 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.024299637 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.657028868 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 4.648256046 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.029020033 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.026214255 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.055964415 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.019750003 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.02303181 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.542890317 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.087832291 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022463896 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.279058087 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025579933 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023926982 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024133347 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.053741005 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.022763235 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024072099 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.02581637 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.039537596 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.966567603 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.032807419 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.041597741 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021319082 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022338134 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021062252 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.382970004 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029186375 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.024793813 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020337522 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025723167 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022334711 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021931028 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.058804263 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.048323724 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.044737459 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025905079 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.022787731 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022012945 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.497763056 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.931348853 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.024909589 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024168621 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.508202194 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020579427 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022502787 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024053661 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.043357568 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023230921 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019912195 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.060310968 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.024734306 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.125016126 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.345394396 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.024446899 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.020389261 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.341274167 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024043225 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.056731762 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.075175356 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022452138 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.062527567 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.023147861 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020303742 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026348841 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020083602 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024262935 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021303595 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.021853665 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021175344 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.022884588 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023813661 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022709292 seconds)
  done (took 22.845229794 seconds)
done (took 36.61808287 seconds)
(4/20) benchmarking "parallel"...
done (took 0.790434284 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.202523699 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049274373 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019586478 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.152686344 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.042553962 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.128256909 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.163716562 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.12060459 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.043177533 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.043072126 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.043067371 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.169470441 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.177381379 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.044552798 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.11251408 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.177896466 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.044740668 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.02006715 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.044457134 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.044042143 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.044065406 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019974941 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.043970462 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.043982257 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.112042925 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.044650939 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019706477 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.112379069 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.044452169 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.113947546 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.045810732 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.045360227 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.046384754 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.114559334 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.046706552 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.114386562 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.019880129 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.046422772 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.046489475 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.047810427 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.047008198 seconds)
  done (took 3.757536508 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.046024272 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038152641 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.053659909 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018019725 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.027862386 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038387209 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018006338 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.037836877 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.055284361 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039143602 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038626528 seconds)
  done (took 1.136590269 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041192527 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038793053 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.04664603 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017939269 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029649836 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038792502 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.017993326 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.039155392 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.054965068 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.038863739 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038820384 seconds)
  done (took 1.075125616 seconds)
done (took 6.622091316 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.146181138 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.116910606 seconds)
  done (took 0.928669948 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.565846845 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.200091843 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.124223362 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.241290083 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.11782053 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.148969532 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.697511506 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.152072067 seconds)
  done (took 6.966684235 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.075015414 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.138692945 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024062661 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.02255003 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.022826923 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.022720111 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.02420754 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.022970575 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022227096 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.024645531 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024365116 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022477943 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023303509 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025124978 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.022855715 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.022841542 seconds)
  done (took 1.346349224 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.027707653 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025233361 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.02619687 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.016806027 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.02658227 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.025402163 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.026385804 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.027641349 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.025842242 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026745146 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.025182275 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027597248 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.02593383 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024602827 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027205686 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.016780988 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027393067 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026593195 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028512743 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.026731068 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026137258 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024850208 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.028279562 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.025871607 seconds)
  done (took 1.302954287 seconds)
done (took 11.21642352 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131956116 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.028669731 seconds)
  done (took 0.833840752 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.122106569 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120904874 seconds)
  done (took 0.926832304 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.027578285 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.015862314 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.030811405 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.0235149 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.01612396 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.01582673 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.029820149 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016022587 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.015883722 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016007771 seconds)
  done (took 0.896395141 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.01919088 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022380259 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.020504268 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.018852996 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020397019 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.016868602 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.018982869 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017098532 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022202263 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016210587 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.019679297 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.03759205 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019185801 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.037902958 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.01911266 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.019570234 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.020968779 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.01892044 seconds)
  done (took 1.073615891 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017701006 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.016723657 seconds)
  done (took 0.725402256 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020208203 seconds)
    (2/7) benchmarking "second"...
    done (took 0.016823016 seconds)
    (3/7) benchmarking "month"...
    done (took 0.01830236 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018247056 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016426776 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.015979706 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016406771 seconds)
  done (took 0.804915544 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387561723 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.089626141 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316931842 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.024588464 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.036060972 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.234611877 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019879393 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023722823 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.023528197 seconds)
  done (took 1.839797673 seconds)
done (took 7.787873202 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.044581552 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.142538476 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.146006092 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.432621915 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.033716112 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022354185 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.055385954 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.218990988 seconds)
done (took 1.792510729 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.281079119 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.256202507 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.182835213 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.02093728 seconds)
  done (took 2.152371969 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.308634111 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.136090892 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.030838356 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.022949312 seconds)
  done (took 1.20101969 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022201557 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027870408 seconds)
  done (took 0.747800207 seconds)
done (took 5.08636466 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.028907447 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.016590502 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.022351476 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018091071 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.017737373 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017220079 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017326942 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018065605 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016202845 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018047222 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.01803239 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.017998531 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017769928 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.01776757 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017296752 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018041291 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016265999 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.01776768 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017736832 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.01773825 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016257532 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.01807542 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017332471 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.017763557 seconds)
  done (took 1.124281163 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.036958445 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022020078 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.021949832 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.021924882 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.02305788 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.02192366 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022059326 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.021970598 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.02219722 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.020986174 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023094625 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.023158689 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.020778335 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.023270038 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020953288 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.023194925 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.02214262 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022076166 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020991591 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.023568453 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.022782224 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022359369 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.023454675 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022172443 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.023226552 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.023095819 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.02105407 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.022098933 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.022514479 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.023204362 seconds)
  done (took 1.384707322 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023088344 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015015469 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015168503 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025596584 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015271888 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015276463 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015599369 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014832441 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015134705 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.015925952 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015407629 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.014907241 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.01563298 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.014891819 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.014981831 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015497692 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020248628 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.035850875 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015336648 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.014973442 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019803248 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015153632 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.014915211 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015002853 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015425439 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.014994816 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.014844036 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015263382 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.014954558 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015543584 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.014981657 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019603663 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021128606 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015420595 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025408032 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020213615 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.01545243 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019538785 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.015761286 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.014787779 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.014840486 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.014854458 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.014982276 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0149231 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025501758 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.01514099 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016040345 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015390705 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.01516571 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.014846659 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.014964422 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016374449 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.020667577 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016022216 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.014814796 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.015966462 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.014826499 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015548629 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015021473 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.014858239 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.014841026 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019027671 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016149128 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015961589 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037278076 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.01636855 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025667808 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015039325 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015391787 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019152886 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015501788 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.034738975 seconds)
  done (took 1.95380472 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.026783878 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.024497834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.033728834 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024637482 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018830904 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016051283 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018829146 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015879167 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024794374 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019113115 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015847326 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018697308 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024775144 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019125625 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016836914 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.024663049 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019024003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018282488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.015808355 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019064238 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016807104 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018694259 seconds)
  done (took 1.155026029 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103816096 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.022244351 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.067254805 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.021780695 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020508416 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.021521039 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022356137 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.022216893 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022413927 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023379358 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023341316 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.02236342 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020408821 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023289271 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023389381 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023186686 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022453331 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.023300235 seconds)
  done (took 1.231186673 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.033615243 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.020871309 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.047686776 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.020684443 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.020810592 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020373448 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024471938 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024098471 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020417085 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.020893825 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024081353 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020470532 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.020480439 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020957669 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.02045476 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.020878187 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020472189 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020888159 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024109972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024675498 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024598349 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024026677 seconds)
  done (took 1.225560902 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036211376 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020876887 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0392604 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.02290173 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015331701 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015354171 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.022917557 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.021772681 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.022835329 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.020795199 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021927142 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015453872 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.023765595 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021904823 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.023932788 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021893156 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020838436 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.021888003 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020821127 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015371599 seconds)
  done (took 1.152390457 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124731316 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017496296 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017321077 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021452948 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017275347 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017273633 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021546418 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017254665 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017235316 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.041189333 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017359888 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017424177 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.022298734 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020194654 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.01746546 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021682368 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021569369 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021507825 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017324242 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017295002 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0413605 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017256284 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.021482393 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017282373 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017352144 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.01728855 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017367937 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.019956484 seconds)
  done (took 1.37802208 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.038259811 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.014760399 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.014890765 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.018590143 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.018616672 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.024390447 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.018676711 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.018923211 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.01466828 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.014969142 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.016848785 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.014683762 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014627779 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.023736159 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.01463064 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.016812667 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023774846 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.018657341 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.026554163 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024419252 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.016817646 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023646967 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.016895253 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.014992523 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024520924 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.016844616 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018636651 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.01945177 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.016859007 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015048912 seconds)
  done (took 1.280905728 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029122346 seconds)
    (2/2) benchmarking "in"...
    done (took 0.025935247 seconds)
  done (took 0.763635018 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018151634 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.032549558 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.014762482 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028195599 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.02393984 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019160613 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.023372324 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.02387213 seconds)
  done (took 0.882785838 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.123816071 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.146058246 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.016943189 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.01710516 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.12088866 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083620508 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.130392909 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028459382 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030195719 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.01962168 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016723885 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.130512269 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016333917 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.029841668 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017719321 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026055201 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023654342 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034148049 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029407988 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015907862 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029402789 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017095907 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016290151 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017064027 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017327745 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023196667 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.031944601 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.028765508 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024540622 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.014760174 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.034698991 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.01555662 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016172598 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024577676 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.121843633 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.015786948 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.052919659 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.015738351 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.019545948 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.01537829 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027329865 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036332667 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.029870687 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.033097763 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.016800963 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017341088 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015483981 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017014011 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.019709109 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.024570923 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.015621699 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.022953603 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015288997 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.016886847 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.025925582 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.015756388 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.019881842 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.024653762 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029172111 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026446679 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028532211 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031265973 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024373756 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.023466738 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.01629644 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.035499085 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017172223 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.028864182 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030434452 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.016720567 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028175229 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015570418 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.014805966 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.01564334 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049025722 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.016875056 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016416412 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.015755379 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.015836842 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.016913311 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025077637 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019966953 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023045786 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018415982 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031272931 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.024646434 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015487767 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.022142077 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.033595359 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019771417 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.015680971 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.032341015 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.019698788 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015436406 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.033273524 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026073506 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017011232 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016289854 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.019774336 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029248527 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017361127 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015155827 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024380233 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017895213 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.123608411 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.020500146 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024224256 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.015862147 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.02613891 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.021970376 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017424921 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015138814 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.020836924 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.016743712 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015191051 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025312197 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016042432 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.030675886 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.022955737 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.030586748 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.030948309 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.026480939 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.031866361 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.015960435 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015201743 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.034254473 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025395403 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017206737 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.034045458 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.015932627 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026525611 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.01606724 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017390805 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025279826 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015471707 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017557083 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016223679 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.022051975 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.017597189 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017780476 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022098882 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.024622768 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028336724 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017192414 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025253952 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.017056867 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.03239763 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026085037 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.02111502 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019369037 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.016941632 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.02817443 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023089451 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025187956 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016056599 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.016878469 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016235563 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027270421 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025569963 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.017760859 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.024930079 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021120959 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.016880777 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016164193 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017067353 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020096314 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.01934473 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.016678492 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023926774 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.024788947 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.030151393 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.02313117 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025138751 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.015605731 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016090107 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.017729429 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.015947602 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.020921826 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025140185 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031502672 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.027711486 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.037595572 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.01633645 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.025723693 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.017703847 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.033215556 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.029583348 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017155272 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020775058 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015565767 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018529625 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.025848114 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.027580253 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.030283125 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031304012 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021274244 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.02107878 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016193913 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031391538 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016664055 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024609321 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025471734 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.022159002 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016105759 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.017949282 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025257076 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021148275 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017267826 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032015484 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.023669042 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.01616487 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.030573517 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.016551083 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.026867518 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016165897 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020100061 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.021792998 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018188882 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.025765219 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.031438152 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015447985 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.01662257 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.031865444 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018075738 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.017913401 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.02435785 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.03149688 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021217719 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024079503 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026738037 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.026813305 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021106782 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.02648794 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017909327 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.025976155 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.019808315 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.028244191 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.01636585 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03466199 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015554981 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.03156137 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.016992664 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.027396538 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.016726198 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025560967 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.017149937 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.033672336 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.017883178 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.017189697 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.028041349 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015445047 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.025318131 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.016203391 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021603857 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.023247427 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.025574509 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.018097675 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025647569 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.017947002 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025219488 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.021268605 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.025120254 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.025409662 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021147342 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.016095695 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.024428556 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.027194074 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.024345546 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.017889487 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.168787969 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.01623256 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.025207637 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.017444018 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.01667978 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023937535 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020835155 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021838362 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016807633 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.016860589 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.01670291 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023825446 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024726337 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.032934569 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024038446 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.022840397 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024394131 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015304308 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.030578933 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015258488 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.022914881 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.014767092 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.020971977 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024438435 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015532214 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033751188 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.016574218 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023153325 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026590087 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023862957 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019591935 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.032741797 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.017863774 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.023618264 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023045776 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.02031076 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022349106 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.016609153 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.02366472 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024517838 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025421304 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.015865948 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.022715028 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024179043 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.016570079 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.022250793 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016454387 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023560843 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.016954074 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015170768 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020618312 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026356313 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020542362 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.020608044 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.015510606 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.014578491 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015469846 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.021231465 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.020325432 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.023660231 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030314616 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.01461026 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.015855429 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015175176 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019373038 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.032590854 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.024499458 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023155887 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020305273 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.01470985 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016280451 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.016494008 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015296988 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.017698739 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.014760719 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015052683 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025349241 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.016537943 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020049342 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015335935 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016013285 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.024840205 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.018839991 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.015664039 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.022353789 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015180255 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.020895301 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.014836096 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.016642307 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.02031891 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015139441 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019524547 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.025426823 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.031387596 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.022288088 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024126356 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.016208784 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.02316386 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.03053794 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.023302608 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016547477 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.024782076 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015176517 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.033897949 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.024743551 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023961585 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.024960234 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016316634 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.032168251 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020579691 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.02534706 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.030717665 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016466391 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.022640325 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.015516647 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031095194 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.02059814 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.015509188 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024017296 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023415167 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.021926706 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.026938389 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016286874 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.02398901 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019926123 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.019939457 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017016385 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017010658 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.02423397 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.0316301 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.016373807 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.020419577 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.023458026 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.023995277 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.020913061 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028070964 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024032983 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016907602 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.017574971 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020023927 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.016716453 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.027936553 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016327995 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.020884882 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021312341 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016268417 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023263189 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032643671 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025265814 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0253215 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.015980442 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.0153991 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.033806233 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020111105 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019118009 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.023904207 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.025699863 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028082084 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025125657 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.032869649 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016417677 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.02220939 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.027950968 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.016853466 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.015865398 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020013298 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.017407664 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.024938394 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025524987 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023410247 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017733786 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.02306418 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.029500278 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017283781 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.020926761 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.021588526 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.016736832 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.026325085 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.023831821 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024490178 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.017415881 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.015832197 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.019686612 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.024607342 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023527885 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.024969787 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.01693391 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.024203704 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030228059 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024079957 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.019499496 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016107258 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019285398 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025128636 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.022190467 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.01602707 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021149307 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.02009665 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.024329905 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025280007 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021019965 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.01595547 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.033061555 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.02446428 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025036016 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.017668961 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.017768468 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016294466 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.015969433 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027013527 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.015988983 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.017594949 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.02108202 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.017743544 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.150211334 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024569263 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031778171 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016981843 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.020986039 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016019796 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025402551 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.020952816 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016071597 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.026582299 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.01550302 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031314313 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.027697365 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.02314353 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.015960923 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021942038 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.025050698 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.031359992 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025621836 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.024961863 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.019326597 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025484584 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017672543 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.026898396 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.01603121 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015263968 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026000567 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.02451253 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.028157526 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016056715 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026151839 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.018004477 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024425435 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.024750967 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.017812604 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.01790907 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.017776126 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025635207 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021178317 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.025383286 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.021332137 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.033227432 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.017156418 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.027211994 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025057614 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027136217 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029932569 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.02830696 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.024707794 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.01661338 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023547341 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.02465841 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.017266869 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.021445828 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.0195221 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03841908 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.017814314 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.017847822 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031281022 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.024724588 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016472417 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.024166408 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021320726 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.02622359 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017152373 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.02643816 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.021692761 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.017044227 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.021175108 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021180408 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015327741 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016115655 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016428959 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.025909993 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021232532 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016332795 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.035542365 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017669542 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024749728 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.027048667 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.023172617 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017640413 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015381777 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016994967 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029415286 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031657482 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020397949 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024645998 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017900306 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.025355061 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015417415 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.02473599 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023991019 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024634454 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.168817882 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015957011 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030527758 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031643421 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.021009683 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032845189 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.02458595 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.016877391 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036689302 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024390372 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016170358 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.025841783 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017064119 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.014959823 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.014867424 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.016666213 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.026519408 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015323154 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.01698204 seconds)
  done (took 15.102365031 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.060855962 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016449664 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015292669 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015322028 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021839451 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016357493 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.01532829 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016333149 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016417928 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.01739175 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015369675 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015655942 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020365013 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029463901 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02250283 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.01867974 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015396511 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016361056 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015359221 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016367445 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020705936 seconds)
  done (took 1.173784006 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.01978967 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.019366146 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.018697521 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.018929374 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018286179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.01554129 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018637022 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015487792 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019062167 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015906352 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019070166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015541495 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.015835435 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.015830987 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015796267 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016858781 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019061651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018401892 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015549819 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018727307 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016880365 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018665361 seconds)
  done (took 1.130836948 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.01819948 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.015931161 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.023838082 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0148315 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.014800283 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017307493 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.014834682 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019681074 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019593946 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019598799 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023649794 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015576336 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.014772096 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.020902967 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.014835475 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015574709 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.059511959 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015673889 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.015761269 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.014974409 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017017798 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.023861485 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015112044 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015191162 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019726307 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017506418 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.01502329 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017077507 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015605867 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.019704806 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.015687688 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.014840619 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024304538 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023332234 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.019956397 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019769967 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016162784 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.015690336 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015042195 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.014972793 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023141354 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016097511 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015230154 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.01596374 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023692175 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015094813 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.01486173 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.023788274 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.014919961 seconds)
  done (took 1.652696967 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.027237156 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.067920391 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.022766735 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050105442 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.027475539 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.019917394 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.021788499 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.052552097 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016108018 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016466558 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.027986206 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.028801241 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017398914 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.018509486 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022840516 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017345855 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017910122 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.016731128 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.019376678 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017023162 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.019489076 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.022836085 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.02720013 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.02829978 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.01819453 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.016747734 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017059839 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.01835723 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.02803177 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.019831563 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.018507252 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.01893131 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.027680512 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.022957838 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017550189 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.01735153 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028509989 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.01760245 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017323966 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016015149 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017016745 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.018367423 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.022858497 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028305564 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017465612 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.023813119 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017348242 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.015703266 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028233572 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017219991 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.020290244 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.029273356 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018305475 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.017658053 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018597654 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.027951167 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.017592547 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.016437495 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.017654918 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028369163 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016092032 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018161137 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.028897723 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017081609 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020076792 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029185694 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.024013087 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018834861 seconds)
  done (took 2.401154587 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.026535837 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.021783819 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025624102 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025817208 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.021773728 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.021862555 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.021849452 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.021764138 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.021675417 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.024237162 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021856076 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131187812 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.019313696 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.022574335 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.02197361 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.021966632 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.02191967 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0219259 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.022218797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022543589 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.022270932 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.026243591 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.022033673 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.026147815 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.054729498 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.019145097 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.021744857 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.021896983 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.02619133 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.021868773 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.028452979 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.021927321 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.021865338 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.026158264 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.028429035 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.021786342 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015589112 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021771274 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.021974243 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.022069449 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.01911518 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.026535757 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.021962198 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.01920106 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.022162794 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.02201369 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.026526228 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.028754462 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.022808187 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.024754442 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.022194204 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.027026798 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.023183003 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.023555897 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.028608865 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.061533662 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.028585217 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.028772998 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.024407241 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.02890982 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.028765461 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.035414791 seconds)
  done (took 2.408193955 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029470654 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020420813 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.025486929 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015018804 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014959661 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020827735 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015368198 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015182631 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020526281 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020429068 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021690219 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020614567 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022121882 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021649628 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020457808 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022075628 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020479607 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020383742 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020291107 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.02041018 seconds)
  done (took 1.176219287 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.018691391 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.019959813 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.015573687 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.019193024 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015628665 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.018798966 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.01562205 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015550166 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015631022 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015660822 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.019769258 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.019687502 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015673919 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021512969 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.018883807 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.018933443 seconds)
  done (took 1.033545513 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.019835726 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.023196491 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120128631 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016253807 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018054587 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.01568334 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016436589 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015332566 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017493702 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.028937336 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016317078 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018265181 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016447021 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015213187 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.01576498 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018236485 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.017497332 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016413945 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016388573 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120705312 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.024523695 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.016925786 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.018316304 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.016953625 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018014728 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.024165512 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.017559301 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.017988107 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016370326 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018286707 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.017895829 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.027164152 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018079127 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.016827974 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015199204 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016040461 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016393868 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018276605 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018141486 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.01683845 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015720158 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018145912 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016527431 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.016766148 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.017486732 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.018275948 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.017439716 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.026403588 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.01620629 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.017962683 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016347501 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017342812 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.016700363 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.027284309 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018128549 seconds)
  done (took 1.958041135 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034953209 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021402752 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.014806009 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.014733935 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020952292 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.022292638 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021206186 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.021738998 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022338302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.014890893 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022385765 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.02078569 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022436632 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021356592 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022407166 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021374726 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.014871837 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022168751 seconds)
  done (took 1.135615248 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.02341156 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020070381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.020306222 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.016720641 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.016646485 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020430984 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015200514 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016341947 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016419313 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.016771038 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016687582 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.01634547 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016401955 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016329292 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019909723 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016730133 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016402197 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015371195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.016724428 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015213333 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020387795 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015364156 seconds)
  done (took 1.13768362 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.179865777 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.140856622 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038094463 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.033347427 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025167385 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.050741656 seconds)
  done (took 1.222106973 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053430221 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024288661 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021352378 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.047182476 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020484004 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019301789 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019327361 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019518751 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022258095 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027792117 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019669736 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02202162 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022303894 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023972543 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021030612 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020530735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019540413 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.01959206 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021611314 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.031332255 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02012742 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022189674 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019958884 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.01948496 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019614055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024053476 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022518609 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02789502 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019476072 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02197069 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020542743 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019678441 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02208341 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027868474 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021297528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022421922 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019661128 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.03033521 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020552052 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023955231 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021126092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021144381 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02242837 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022105136 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022017099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019788423 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022300168 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019817222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019917516 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032866377 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020874124 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024085117 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021400075 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022329947 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022687581 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032910324 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028230577 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025103336 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022557387 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02989887 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026051607 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022174954 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026701352 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030367934 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022896428 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026119604 seconds)
  done (took 2.330371125 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029743333 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049048092 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.01949472 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027659606 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024368484 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.01994162 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019831444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019684234 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019634114 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022072465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.058916853 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019815179 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02385985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02387733 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019758463 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019559291 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019576272 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023779518 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021962573 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.03234432 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019694669 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023772388 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023798397 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023844829 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027860253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02058665 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019561026 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019535656 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019511623 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019552837 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02221875 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019725675 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023814318 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021802014 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023752174 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019747099 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019556726 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022209219 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019512096 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020650641 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023923898 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02988442 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019667799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019581526 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02816722 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019804846 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019784093 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022164516 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020415344 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022404416 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028290999 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028240667 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028280717 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024384139 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020069305 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020045142 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019830387 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020158646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021095563 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021936477 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025799953 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02093983 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.035234506 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021079278 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020978438 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026104119 seconds)
  done (took 2.324783529 seconds)
done (took 50.414979606 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.21347904 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17727422 seconds)
  done (took 1.131845219 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.13091734 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.128795903 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.156949496 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023541915 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.080811004 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174931302 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.124636033 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.02591251 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.023687415 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.02499362 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023682224 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.02514292 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.024989997 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023285962 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.085411806 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.025804839 seconds)
  done (took 1.86724451 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.072546188 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.265555932 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.066336361 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022662792 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101685398 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.028104676 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.023566465 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.027629481 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.027933801 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.022796303 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.068803226 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.04326488 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.026520392 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.027586977 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.023526357 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.026490689 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.027450645 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028293225 seconds)
  done (took 1.689838123 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.089240873 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.030965764 seconds)
  done (took 0.881254932 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.135054506 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.061605249 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.104457661 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.305204004 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.094221219 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284545897 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.100110341 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.096601474 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.068730805 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.093608476 seconds)
  done (took 2.102562876 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.058990982 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.054136775 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.273654896 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.05372321 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.033589587 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.028568873 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.029576802 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.028868189 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.029976465 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.028963331 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.070948178 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.027545159 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.02402277 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.066685764 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.045702227 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.057964614 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023496315 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.028659706 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032353676 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023253469 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.02739022 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.028751445 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126691696 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.028893239 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.047278181 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.026708937 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.028175836 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029268519 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029416835 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030014713 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.029802551 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.050609643 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.02862205 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.036809965 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.027363311 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.046826975 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024088705 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.046114466 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.026460557 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.023980856 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.02636908 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.029776031 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.024535162 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.029424445 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.03010467 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.028883405 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.029111983 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023337182 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030158926 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.026609625 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024192464 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.027324488 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.027661839 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.028126198 seconds)
  done (took 2.92476357 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.074490327 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.064947407 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.02368046 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.072093258 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06423845 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023846692 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07650502 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.059815504 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075750551 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023437734 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023375808 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023262118 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030093047 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.034236284 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.074377228 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.067381519 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024836199 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023599986 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.066715116 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.066694494 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024086182 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077386623 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067086054 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.06535189 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022211452 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.02355148 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022380943 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023008742 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029368402 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.02978415 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.022809979 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.031657037 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.034450061 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.029671582 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022274052 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0225005 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022403684 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.030269298 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.030688763 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.030679663 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.028745451 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022225681 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022445326 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023041111 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023481456 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022074254 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.030624606 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.029885773 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.030534697 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023027198 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.022963061 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022248123 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023235993 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.029091198 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.028174507 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.029694819 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031545323 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022718121 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022730697 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024008666 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032273369 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.030293027 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.02995113 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023651341 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.030172121 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022624289 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031137317 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.035054662 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022610402 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023812534 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023193912 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023042892 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023299287 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.028648953 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.028650472 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023270635 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.02305933 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022556043 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.030014778 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.028797754 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022576434 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.029998065 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022269466 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022902668 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023181535 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023360358 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.030654258 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.030215511 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023454739 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023213794 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023290159 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023295681 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.02254225 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.03101716 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.030956795 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.03113827 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.031965559 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02367088 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.03272015 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031427481 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023855618 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.030396906 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023335837 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023661351 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023615421 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.030235772 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.029938829 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.032734156 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023731496 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023123563 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.03153955 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034211563 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023237698 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.029837809 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.031974879 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.030436035 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.022784379 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.033578311 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023407737 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.032435299 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023563668 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.031841064 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023689024 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.030873817 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023589986 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.022801046 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023498832 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.03310979 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023974037 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023445954 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023775376 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023414215 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.030865853 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.033916865 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023995544 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.03120922 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.030989653 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024062727 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.032079381 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023548559 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.032300912 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023636951 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023824549 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02306624 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034726168 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023651963 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023906591 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023395349 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.032736073 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.02331102 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.032501875 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.030010247 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.022901721 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032724522 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.032510027 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.030206541 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.033076112 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024160675 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023615501 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023365329 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.02357678 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032052706 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033587117 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024296627 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023542395 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.029746238 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.032525435 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023136547 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.030361889 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.03041907 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.030812198 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023773772 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.02367893 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.033747782 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034636118 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.030811168 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.032539131 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031740842 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023663865 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.030970978 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032849768 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023563408 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.037307712 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023514686 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.034076102 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.033027785 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.030047734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.032762665 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.034633236 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.032423189 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.032794475 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.034895345 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023109767 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023335452 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.030745177 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023398799 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023692137 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17687154 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023578792 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023415315 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.034420949 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023076843 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.030347224 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022410402 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.029009727 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022330171 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023257299 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033319146 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.02305121 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023907278 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.028677814 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.02303308 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.028206517 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.030832809 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.028174241 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.022640999 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023149093 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.03054372 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.029433441 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022534112 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022447175 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023021559 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.02947849 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.028903076 seconds)
  done (took 7.60624694 seconds)
done (took 18.976374167 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.135046152 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.070253083 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.128690438 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.07991242 seconds)
  done (took 1.168504459 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.05511678 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.01935661 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.134660543 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.145705902 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019618276 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.128745805 seconds)
  done (took 1.281169059 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.241736716 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.14398835 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.147897641 seconds)
  done (took 1.313203637 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.146806238 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.274772354 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.540165993 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.140592034 seconds)
  done (took 1.887801014 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.162352308 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.15472101 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.030462517 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172381791 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.036443839 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016002686 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.098705613 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.016753067 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.048476177 seconds)
  done (took 1.573382796 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.089344525 seconds)
done (took 8.092236534 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.195953181 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.131557578 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033161497 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.027538881 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.121091335 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.124975003 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.141545954 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.029724456 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.131950981 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.29753413 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.176378832 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.047953495 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.146656061 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.04061822 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.253629258 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030531682 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029718816 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024778724 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.13867223 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.129496692 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.232802912 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.032737623 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.094496887 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030209598 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.098677261 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.076945852 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.181783229 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.301724604 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.263105336 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030761416 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.116483559 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.040288251 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.113220578 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.120474277 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.128391471 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.047974586 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.0200621 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.234475509 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.098419217 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.310535855 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.161817488 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027183027 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.137061767 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025072387 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019516711 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.140026115 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.032643592 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.026721025 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.042507249 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027042467 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.038431717 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028030467 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.128081484 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.023717612 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.091914698 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.132650987 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.179615694 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.101601773 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.025898222 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.03719283 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029896362 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.155206298 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.037133467 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.02544866 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.031399882 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.019898154 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.130690893 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039593622 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020307869 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030570275 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.028779636 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.095531471 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.148072698 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.063783128 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031669673 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.105402139 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.096679205 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.045385962 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.047184222 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029149932 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.019566032 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.185842643 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025372847 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.037663744 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.026693227 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052380781 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.01972279 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.034099826 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.16629486 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.145100981 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.084537054 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.02099392 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.231572947 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.021809519 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.044309361 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021056571 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.0204938 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.181812639 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020157553 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020378485 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.030359386 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.029116507 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022394373 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.165269681 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.100820892 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.028520665 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.027176164 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.020858382 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.02619961 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021515334 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.020967561 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020340733 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.094617063 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.037049157 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019761713 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.101733431 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.118403386 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.030713504 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.037073159 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.247774483 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023992261 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.030306957 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027337949 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.1346689 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.02672812 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.130937837 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021608513 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.040424548 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.114085293 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.095551079 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.099685759 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019571542 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.1358134 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.030170453 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019378157 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.026959536 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.04628848 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029087018 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.036378843 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.027820839 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.135724254 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.029501242 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025354994 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.114479119 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.018917604 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.103742844 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.097102467 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.126430347 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.024426417 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.02907127 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.091587556 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.042345923 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.04871392 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.0402138 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024165715 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.019704189 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019384983 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.032506008 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.01883168 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019596351 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.032164125 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.02616868 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.035400122 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.231518031 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029042683 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.023646221 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.242275455 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.031455731 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.089266369 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.039582518 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.019956558 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.098706834 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021295026 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.039563655 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.081268708 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.019828926 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.095224806 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020271048 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.019750898 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.025673893 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021480139 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029129272 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.032847226 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020270861 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.032561816 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027427437 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.019717312 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.098684925 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.021898606 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.182007041 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.099489981 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.092917069 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020079955 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.038441679 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.019761921 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.130610675 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020041198 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.067512836 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.109582188 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.034286313 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.039949095 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021013655 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.097363543 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.033822267 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.024907581 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.09812195 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.12858517 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.089685983 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026213436 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.23813799 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.028724305 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.02028916 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.025662135 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.028733364 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020212533 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.098594941 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.0245813 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019248665 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019535248 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021689824 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.018903928 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.043051286 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019062983 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.027730492 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.025410401 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.02279913 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.02186093 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.018952973 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.02808495 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.099622105 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.117291217 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.025975616 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.039293231 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.032273728 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.030119126 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.065707711 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.027617115 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.155412641 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019057892 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.029340557 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.039603972 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019248208 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.024457127 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.025033779 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.036155978 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023053035 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.020935522 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.028838777 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020156662 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020117029 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.019887812 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020140649 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028761496 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021212201 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019491549 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019409377 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036450423 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.025250631 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025416805 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.030597604 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.039862668 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.46350276 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.021353088 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022366022 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.032495408 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025420283 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.02028819 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021247175 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.019867048 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022059202 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020073204 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019467023 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.04708138 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.025064296 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020399503 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.039878781 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.025730627 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.030395605 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.116863077 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036461191 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.024910855 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019257422 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.250971892 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.092216123 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.040982307 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.039078214 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020263225 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030747061 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020288752 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020750615 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019335306 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.045979276 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.025549981 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020333114 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019377423 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.01961187 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.066966336 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028350154 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019690399 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.029075391 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020505313 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020131227 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046339424 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020732383 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.019975085 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.037411903 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.031961249 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.103741864 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.031724491 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.023120056 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.069477094 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019506307 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020045612 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020355127 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.104811372 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.032207353 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.021584894 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.019999146 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.027423082 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.029091281 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.071845469 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.026184957 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.02341785 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.02764196 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019416141 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020271092 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.046135562 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.048785546 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021669105 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.023908276 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.019979594 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020311474 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.095279275 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027664004 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.024991947 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.107132071 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022397259 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.028129686 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019420623 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.472340538 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.025637435 seconds)
  done (took 21.658111175 seconds)
done (took 22.451301693 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.156506334 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.032945982 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.040063645 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028352972 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.031538409 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.031033216 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.041880818 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029099633 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032072301 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.039451812 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14098428 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.01985086 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027239304 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.033394814 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028181076 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.031879054 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.030812086 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.031600284 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020793759 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.031860605 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.030627138 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.03056132 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028567683 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.031151156 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020283683 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028149303 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145082248 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.034350654 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.030009004 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029077761 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027259827 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.041456796 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.02732201 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.026802554 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.02884698 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025073274 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029405544 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026106222 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.143354761 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025370235 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020205835 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.031138984 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.026746749 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027510557 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028270388 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.030481908 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.02503188 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.031976016 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.027795638 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039141009 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14286982 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.029207757 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.030000945 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028043006 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025139177 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.028718959 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.029638539 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.029867556 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.024936393 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.038502956 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028121636 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027345097 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019451251 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.027833374 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.026721629 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027028729 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.018682575 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02820647 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019613221 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019408236 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.027794459 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.027728021 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026189628 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.029989378 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.027774156 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019427617 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.027296086 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.038174074 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026452238 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028031572 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.019843288 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.024996831 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024614429 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020031982 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028229801 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.030331995 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.028519262 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.02043659 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.028276593 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.039039201 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026153485 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019438471 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.030286086 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028108309 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.027908072 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019518889 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.027860447 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.02786607 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027263704 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019388309 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.018679629 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.027928334 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024712152 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.027909647 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.019816857 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.027924487 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028009137 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.018834855 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.027754864 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026592749 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028156834 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030059347 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.027841536 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.030515445 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.019942474 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018632655 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.02904741 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019743983 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028168281 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027497954 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.024836667 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027139884 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.019971624 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.027188379 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.027895187 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025479755 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.020373422 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020289177 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.019983912 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028205176 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026713015 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.018750198 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019447506 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028011238 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.027766707 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.027402863 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.027764606 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.027866984 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.01996499 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025398884 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.024850402 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.027866416 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.027502288 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.01976477 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.027594195 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.027515165 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028367933 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.024915456 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028156269 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020074934 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.027859888 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.026434359 seconds)
done (took 5.709067314 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07451034 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.061898184 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.169596662 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.137920009 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.032671141 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.033405435 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.024615895 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.039291548 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.026298712 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.045483957 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045222488 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.042644067 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.155532772 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.040407079 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.01998141 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.031523099 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020466635 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.046094649 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.139445646 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.044464499 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.061308897 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.018777189 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.034895455 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.037979485 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.031421839 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.037736807 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.04376778 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021016211 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.037258498 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.036505901 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.047262895 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022970477 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020619208 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.03879633 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.035731163 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.028277163 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.019748042 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.026405737 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.031403192 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.019892154 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.062135715 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.037577312 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.026182608 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.02631406 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.020670178 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.034248837 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.02072434 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.02737221 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.033241317 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026125789 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.031950141 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.035878498 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.021798631 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.037089045 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.018955445 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.026908451 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.026546554 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.019692125 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020657476 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.019837701 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.019742637 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.022744424 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.031888842 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.037597521 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.023660963 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.02737527 seconds)
  done (took 3.478376635 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.045937695 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.066324783 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.034823092 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.034956209 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019759209 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020220213 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020166961 seconds)
  done (took 1.129188037 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091259857 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135381639 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.138380877 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139747898 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.15189047 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.136424138 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.032646467 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.049770089 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.054868533 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.156740162 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.147083412 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1408596 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024183482 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.032312417 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.051889533 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.143428579 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.032868738 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.027713722 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135066509 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141245367 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025185571 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.05238713 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033367724 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.02321274 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.144268242 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137221942 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024121268 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.061405863 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022975603 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.020772221 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0207088 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.042852286 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137471526 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.035427609 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021104006 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019768083 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13489023 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021332992 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13834211 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.027997818 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135077889 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023231643 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023474692 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021088923 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.021943298 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.134697959 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022121794 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020782818 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020416186 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139187282 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.031709051 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137810859 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022367111 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.025653858 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.027727055 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027251517 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.027794172 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021343751 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142060556 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031003486 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022718497 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.14314245 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142348988 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138106424 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142720202 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.029870869 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138892208 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.135559751 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021076383 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.028700027 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021401564 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145519247 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.024724465 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023307155 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.019525618 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028066346 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.149472426 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.149199742 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.149224237 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.034634974 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.022636469 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.021637412 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.150433573 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.151086895 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.02643008 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021226181 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021626718 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.03633546 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.045152361 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023436122 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.0258109 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021172979 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.031507536 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023471071 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023009442 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.144518037 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.020529816 seconds)
  done (took 7.535460699 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.038403322 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021292835 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.020830381 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021150895 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.02133951 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021200057 seconds)
  done (took 1.116043024 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.059888574 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.021552051 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.021431329 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021394269 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.043585796 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128539437 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130395774 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022897084 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.037993284 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.033402565 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128413077 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.131269475 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.130848802 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.022622064 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.128251385 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.03306814 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128575505 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.02599163 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032316271 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022621374 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.032398938 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022654597 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022660387 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.147710737 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.016693963 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.032634431 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.030538578 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.032591368 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.032070222 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022301741 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022154274 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.016365596 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.031109658 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022323347 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130118514 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.031460023 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.021609195 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.017377833 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.025475779 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.016336364 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.132207113 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022734043 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.025695706 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.017381319 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022310497 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.031374368 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.017468057 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.031750468 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.131604653 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.017734072 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.017491343 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022013071 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.016454245 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.017359756 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.031506506 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02244377 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.017427676 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130854556 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.022603353 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.031543772 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.021723087 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.016439129 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022302752 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.016386703 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026298146 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.017325739 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.031329555 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022551779 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022524236 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.021531217 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.017400203 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.021446718 seconds)
  done (took 3.96314519 seconds)
done (took 18.113174717 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.451111207 seconds)
  done (took 1.343177643 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.957560339 seconds)
  done (took 1.85921849 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.049803262 seconds)
  done (took 0.969124596 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.294535828 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.452363553 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.689428787 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.089794769 seconds)
  done (took 2.428838267 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.833955776 seconds)
  done (took 1.765105846 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.206456967 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.172303661 seconds)
  done (took 1.32263809 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.479910775 seconds)
  done (took 1.396053189 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.304603013 seconds)
  done (took 2.227764085 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.190727218 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.133158005 seconds)
  done (took 1.247027915 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.592212244 seconds)
  done (took 1.514737547 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.49139984 seconds)
  done (took 7.416454085 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.183803899 seconds)
  done (took 1.165445848 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239852509 seconds)
  done (took 1.163346516 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.695557415 seconds)
  done (took 1.621283269 seconds)
done (took 28.3689063 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043333963 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.036679901 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.036754258 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034055284 seconds)
  done (took 1.061170084 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030304047 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.024739417 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.0267746 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027124246 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.02459135 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026381004 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.027114689 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.023622644 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.024574644 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.023974763 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.022638467 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.02387518 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026361606 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023697321 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026071933 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.02730187 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024047405 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.024579455 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.025722179 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.023682694 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026420401 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.023966239 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.023982137 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025264376 seconds)
  done (took 1.531189536 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.03403556 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.025409061 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027300342 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024332436 seconds)
  done (took 1.042253948 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.032264076 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.029869644 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.037876454 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.037798446 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.029719659 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.030341909 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.036320865 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.036635621 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.043278793 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.040326075 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021805292 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021442963 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020674426 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.03383262 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.036083688 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.015689142 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.016881609 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.030517655 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.029554866 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.032249171 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023459036 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019258784 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.029881704 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.030266479 seconds)
  done (took 1.643361316 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.036869526 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019429945 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.034803321 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.043341995 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.043675956 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019290182 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.032442094 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.044056383 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.08190712 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019354072 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025295247 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019310699 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.05597619 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019247002 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.033592055 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.063988826 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.066950253 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023767979 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.050398312 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019513062 seconds)
  done (took 1.687040764 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028634268 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.023651547 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.024921041 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.01906833 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.029996728 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.02643495 seconds)
  done (took 1.08581963 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024074049 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021231464 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.020909539 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025269044 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.020863147 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.020832073 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.020845661 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.019735761 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019721941 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020539053 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020553706 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.020872321 seconds)
  done (took 1.183443338 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156705132 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026255926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.027182607 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019759729 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021461305 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020559437 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.033534518 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022362361 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.036583781 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020494371 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020776975 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.022884053 seconds)
  done (took 1.357299807 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059024898 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062421247 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094549994 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071604874 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076679101 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050146817 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.192620182 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.032987687 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.111073918 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086268613 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074160444 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044575722 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.038877425 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023173882 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05265483 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069561853 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087302768 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.026358402 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07123631 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.22948408 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08253074 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.082635458 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098339493 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075580816 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044995871 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098694018 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.04923877 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055119992 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073921857 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.078340529 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073524563 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.056569882 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025164121 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.024516138 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111426927 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.055791377 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071504143 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.046518071 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.057961139 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042439988 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.078942212 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.023933864 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.037009259 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.063470259 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040659197 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088283448 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.048569944 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070643812 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035501291 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094576689 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083697711 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.169606728 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.041059741 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058858281 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097815085 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068431142 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087785336 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06226896 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035774746 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.07524037 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.065059859 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.057622546 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06575154 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035502778 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132055539 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.044578871 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.234919276 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066542098 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.043329443 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.047493491 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.062742981 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086642362 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075767048 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.06878662 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08166289 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045302985 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079491728 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.052394992 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.075643506 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054336305 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026085852 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.071723623 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078646684 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.049392509 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052008738 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078061097 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.045354631 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029069577 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.04146884 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.070703707 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033363908 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.060366958 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038950836 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.081798846 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086407143 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050886436 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067508326 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.071416123 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03199678 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115964035 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.061466005 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026553241 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070900225 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066034147 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10396345 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049886171 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029163575 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.052961036 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056928789 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.112465187 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05704185 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034476789 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070260492 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094716107 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04866445 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.242947161 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.049701259 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096748616 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07000749 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040495904 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.029519313 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.04984795 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068420816 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066039307 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079100952 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050687043 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.037866179 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041048132 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07601671 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.048946081 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.033991987 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074174216 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.059191708 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.029294919 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045009131 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.031662337 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108012701 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.041407908 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097201122 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.247391328 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.029653452 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058683286 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049271868 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.057651995 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.053037991 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069782644 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089875306 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.142604612 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042354527 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.035661274 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060033791 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09369645 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07705975 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.043392992 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.037594788 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051629881 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062174687 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.052095577 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072961236 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.046085391 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062099678 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054923036 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089319317 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091994033 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052524196 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.057984495 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058424871 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.066642909 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029327753 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109279635 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056541623 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075502978 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041091156 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092608597 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.06926698 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059657769 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040053418 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057097768 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.055501855 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059287235 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095387298 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.047028909 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026086675 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047032214 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10078787 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03100419 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072290938 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.044208579 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.045908089 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069724224 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.047231684 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036037559 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022436951 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076824965 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110582407 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.024336277 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.071082503 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.070158028 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058668726 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.0778567 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.023747287 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082959386 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.092531802 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081775195 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104799199 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152908141 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078054752 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.073276941 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.080858284 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069935983 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.034075589 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.239486815 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085219626 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.045492027 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044548193 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085290972 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.070699277 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.084374282 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.06422365 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072818524 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.055827611 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058016981 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055123372 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.051739335 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092157414 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.073912115 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.077238454 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.036981503 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062037272 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068627642 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085561873 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033980015 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090464087 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.037695345 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094462586 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.031861153 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.078627344 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030229333 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.121976031 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.03339731 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053041072 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.023662031 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.026285769 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09558268 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.075300264 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.057778783 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051901094 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.086778464 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089506023 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.031776079 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06535834 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068026724 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057676521 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067820324 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.062271252 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042120565 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049062256 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06073013 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.038746454 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.035576651 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078692397 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049788242 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090227305 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.037661249 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029108388 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.352845436 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065853106 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048497089 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030684512 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06281289 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.081566108 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047333198 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041435151 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075581437 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060138329 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098087056 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.045146459 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.05687582 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.081596525 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.036271017 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.051354592 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.024332764 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.04466215 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031297038 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087201809 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031279098 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.076495024 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.023484409 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086389287 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201503594 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.05059278 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.056232803 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060229015 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085441677 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.046615991 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089459559 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041336884 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.067826192 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059531424 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063635601 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.038479738 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053919608 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.05539806 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.071754757 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.047204848 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072026519 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091436452 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053773006 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.091008785 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042515569 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.073831683 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057672529 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.072035228 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.063414832 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14545839 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090043854 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066265479 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.065439029 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029405583 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.048757566 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063732443 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.062857765 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126399859 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076949893 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.025992983 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.056560291 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047085072 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.059713196 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061432036 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.033423302 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094849947 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053660866 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.040938261 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.061067505 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.043200369 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05805009 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029631258 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.055753817 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.049166843 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048497138 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050874153 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.067554906 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080956946 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06376065 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.09902765 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.057234951 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.045723485 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.072762034 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072259748 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069852507 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.03803938 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039405837 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099069592 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073900267 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.081983584 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.053567186 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066795689 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.067940397 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056428534 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091219656 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064296363 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.233052885 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032791591 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.029839272 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022397805 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.026434878 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075525122 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062486301 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060896155 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056509534 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.025655106 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.056889787 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058616192 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025452056 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.038088102 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045681589 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.050870927 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.034767729 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056194418 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.066214635 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.046374926 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052856265 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054882701 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089685379 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.050814211 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040869748 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091926557 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096714297 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039939467 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045088347 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025085414 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.032346908 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074071387 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096122721 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099678798 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.032497229 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.039810338 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.037421255 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040491801 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.02535101 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.041694984 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.042457857 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057672169 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051787252 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.066838178 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057446 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028872208 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.060507864 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053094785 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.046261331 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.060819653 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071143039 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.078979812 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.09048548 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066766607 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068062287 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029713667 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.032940557 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029913072 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033217755 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.058854383 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.032814605 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030218809 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100021471 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.046187027 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065772041 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067681443 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.042187608 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029732305 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088022446 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023746596 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088849691 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025168719 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034207425 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036219341 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032990782 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049936376 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09791063 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06272119 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065701004 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063452603 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067315768 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147320568 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116127883 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042193239 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.249169339 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028882919 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.029629342 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029507302 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059297944 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041593597 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.068650855 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09335123 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040805295 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052247285 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031072006 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091755762 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.048210744 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.052772831 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.037779549 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.032212854 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091177313 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032578919 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.037060246 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041231983 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.062432272 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.025581215 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.05284072 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.035951697 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032558991 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138609306 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.662617506 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048667825 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.027469031 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.048522964 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.092805009 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085575255 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.04945597 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065376938 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.071387774 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.057136364 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.047053643 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066385005 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.153600441 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027716825 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04812628 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.050761033 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055410548 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061316462 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.049481098 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.040555492 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.048432747 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.039651823 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.032862158 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066159319 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039883979 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.050922478 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.05950036 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.03687269 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.041499896 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082072822 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.054022563 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.036642692 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042253612 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.065515632 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041080031 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061291955 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024004854 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.064164351 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043415707 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07511076 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.054157761 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.065266806 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079914877 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049949827 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093098004 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.063473222 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077140307 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041017952 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032296289 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08214932 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.045634067 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031945232 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103302305 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.053043018 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.058837159 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.215401649 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.048784073 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062082598 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064774011 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063651675 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.052234698 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031111753 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.04953985 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.056312967 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03791888 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031926969 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.025979973 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.028883043 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05913342 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036670455 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.039052705 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066460043 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040581332 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053953038 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.049443892 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072193157 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.041661461 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055188382 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062095197 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.043861667 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.080870969 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.052210346 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077546183 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123306757 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082400632 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081751735 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085257632 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.031702778 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.032645104 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.022905275 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.067707512 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033336767 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.040671112 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032622167 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086177236 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.038398793 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064375386 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.212104056 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.03419629 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.046431417 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049588826 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.023766174 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037064836 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062434788 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.039936106 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033419224 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064978477 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.035433924 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080632971 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061392046 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052057488 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.049713648 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034711551 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061416036 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.058621065 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.082475581 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.051746926 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.028316413 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077184573 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059079966 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093806017 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.02857143 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034404325 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082757857 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058622616 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088593508 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.035316145 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117122497 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.09969835 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.060017718 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091098156 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025795817 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044397318 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045103163 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.078439627 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041334672 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064398327 seconds)
  done (took 39.869821893 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.138190862 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.254528228 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.127628272 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.108640614 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.076932911 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.077521159 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.246422557 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.090691466 seconds)
  done (took 2.227056452 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024899123 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.052704743 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035465679 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.283167744 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.052971921 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.020945216 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.027507815 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.035937277 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.024533114 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020562741 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.058254017 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.020690677 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.024650823 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.435783328 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.019942012 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025226451 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.024810591 seconds)
  done (took 2.248675647 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.295433873 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.663059562 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.203785796 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.473328169 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.104845422 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560711694 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029099314 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.03399022 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.698768379 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.164110837 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.098845922 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.174314954 seconds)
  done (took 17.548262896 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.030851005 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.14712421 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146150776 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028512877 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027448515 seconds)
  done (took 1.493733939 seconds)
done (took 74.979299039 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040556952 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.120776046 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.020559039 seconds)
  done (took 1.219049867 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.149608025 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145333474 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.145921862 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.147374874 seconds)
  done (took 1.632628545 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030193808 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.029505346 seconds)
  done (took 1.109011605 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.172901461 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.275913904 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.043003633 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.039508034 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034698013 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.034842604 seconds)
  done (took 1.165184519 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.026761042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.02447141 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024486566 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.024908323 seconds)
  done (took 1.1436436 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.130298563 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019591259 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022120625 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023523359 seconds)
  done (took 1.239784707 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.039821023 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.038448674 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.067746227 seconds)
  done (took 1.196914366 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.038954443 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038142925 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.032712783 seconds)
  done (took 1.159909744 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.055544601 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.046652932 seconds)
  done (took 1.146903045 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.03559297 seconds)
  done (took 1.085225884 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.044710836 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.050005868 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.206197806 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.173251568 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.210361943 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.192520014 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.032319385 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.029527542 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.03183592 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.033882558 seconds)
  done (took 2.048068165 seconds)
done (took 15.726485315 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.035943479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.142203447 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.270292754 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.039448586 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.607835677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.267216512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.685107837 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.042952022 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053780205 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021956232 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037278723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.586574181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.685714196 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.101887483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.670730473 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.092574425 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.516273768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022267577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021219661 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021721418 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.664793899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.022585126 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021962447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022233908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.513283036 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.29019694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022501809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.093882566 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022604264 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025381985 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.270033268 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022755503 seconds)
  done (took 11.954174287 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.025955614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.074895799 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026754793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.036968124 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023588951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023921348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.03970168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022103856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.06366909 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021757382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037633393 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021295047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.02582628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022728758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.040549223 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021706613 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023459981 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022248381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.02163921 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022187821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.039542861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021486498 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022117611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022215418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.021947069 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.035661124 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.02268419 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021729531 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.02208708 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025282754 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.026430946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023007347 seconds)
  done (took 1.981093627 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07737772 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076642622 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.028059835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.060787686 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071740284 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024712628 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102261302 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043172733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.066013418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022169401 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037694995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021961524 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.056884608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023052438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.040861517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022056258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023981269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022567119 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021581709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021969659 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.039485268 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021769054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022024593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022426514 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022248382 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.03729075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022644986 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021873805 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021813536 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025369642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027351817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.02368382 seconds)
  done (took 2.23123648 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.025579558 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.025814001 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.031361249 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.034472477 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020237963 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.022760333 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.02394684 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020282745 seconds)
  done (took 1.263543468 seconds)
done (took 18.494390858 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035448794 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022031625 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.024900888 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.045979435 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028291738 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136217305 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.024576292 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027051653 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025524962 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.024868218 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.026963398 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019470384 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024158527 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024295645 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.025849703 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020025392 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140280634 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024806304 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137752788 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.138787236 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.022836544 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.025713423 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.02854214 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.137529294 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137151802 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137583297 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029353544 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026017173 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.025714761 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023142659 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.137319482 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.139368783 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.022965458 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.13445702 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020549012 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020350448 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.024791988 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.021906063 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.141009008 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029424942 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022508933 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.028971113 seconds)
  done (took 3.357286921 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.142014551 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.148084239 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.141092195 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.03251396 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.028652592 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.031771842 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.145631054 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029154991 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.027925483 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.144603591 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.023716799 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.027664603 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.029812606 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.020858379 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027379163 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.02421178 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029493502 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.02195286 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027417215 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.027623093 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.146591043 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021567905 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.028559909 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.028997099 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.02370637 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.029667821 seconds)
  done (took 2.48825493 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.031096331 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.04273334 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045028702 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108160202 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.062179664 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.04323395 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.036618597 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.046797399 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.052714414 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021042771 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.043063126 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.048875016 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.050012099 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.027324916 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.059453526 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040555382 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034327282 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022771846 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027456445 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.052087327 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.04435269 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040190752 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.053559852 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.032441627 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020185977 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.027521684 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025345264 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.036768179 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.031654561 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033156408 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.024614596 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.024553505 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022002909 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.031635243 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.024576147 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019522927 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.043872493 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.03352782 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.035789245 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.059524025 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031277234 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022288871 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.047135083 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.080421558 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020477642 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024083732 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025356134 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.033541289 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022495925 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.022779058 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.035825748 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020682416 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.04009508 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022417999 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022464418 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.041563005 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.022647676 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.02314698 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.041387832 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027396913 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.042599254 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.02655537 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.040551666 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020087103 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032338791 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.02230174 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.035109142 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.026933925 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.054430722 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028143873 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.066420967 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022047571 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019490404 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.032924613 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.032259807 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.021853227 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.053123118 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.039407977 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.032781427 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.024946762 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.039167092 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.02396488 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024368701 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.064800468 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020293385 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019441927 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019371402 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.023340188 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024201166 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.021513937 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.032967109 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020487342 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.024389668 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.047254736 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.020735642 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.021708269 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.02344524 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.02222017 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020405507 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.030096812 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024211659 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.039589133 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.033552517 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.021695599 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024428994 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.029766945 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030200652 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.019709464 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022144994 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.023408372 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.030441037 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.02279772 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025028407 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023172403 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026702685 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028402141 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.026643621 seconds)
  done (took 4.935842914 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231133034 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.220919338 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022298457 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.216954608 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.029466017 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.151100462 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220525871 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.220400255 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.021883495 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.022804124 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.020972094 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.164331664 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.15969818 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.173277843 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.151791628 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.023992766 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.054213638 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.169594836 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.224654723 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.220388629 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.053628567 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029565681 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024782213 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023452537 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022711781 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.03039329 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038930999 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030049334 seconds)
  done (took 4.061990812 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.029744209 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065424033 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025371313 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046024428 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.037275442 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022248109 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023600516 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022410581 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.042254261 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.027050509 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022025365 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.025753735 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025039382 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.023823452 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.021979037 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.027940928 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028239464 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.020656796 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.02533023 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0261914 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.032670309 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.044255943 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.025593951 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021943571 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.02554455 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021881416 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.026897809 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.029857883 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021539473 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021522513 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.018967569 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.03031203 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.036609917 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.022920679 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021386832 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022363147 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022093618 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022041039 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.021914093 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020156826 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020127102 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.026922319 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020482124 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.02678205 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035335946 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024202832 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023585114 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024436103 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024489992 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019026645 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025084344 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025220419 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024413257 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030189735 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024566614 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024537409 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023400041 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.036604422 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.027804278 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021421861 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021243682 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020337352 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024236092 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028406384 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038930933 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.024244954 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.02056198 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022340588 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023658156 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.03538073 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021463752 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028539241 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019127393 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022510169 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024274727 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024987282 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023430418 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020483309 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021601777 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021366069 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022040368 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021621663 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021306165 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024582602 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020020695 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020526396 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022700489 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.023673014 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.02674113 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021084032 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025299391 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023692685 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020673708 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024473197 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027287986 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.024604003 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.039564259 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.029281657 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023028381 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.019811439 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.038251914 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.024520817 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021569429 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024030083 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.03072611 seconds)
  done (took 3.81823624 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.05209414 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.023988927 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041303165 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.056876866 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.03195915 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.027603693 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035483151 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023147733 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.043168128 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021024452 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031031732 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020271549 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.03482475 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.030617169 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023783918 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.031750032 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.024625184 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.042331009 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.036798844 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020662978 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030487371 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034117146 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034297032 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039169558 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.038679809 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.039965744 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034302896 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025282219 seconds)
  done (took 2.020619667 seconds)
done (took 21.735163009 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.123212038 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.287054781 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.092843925 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.661883843 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.157420609 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.205228897 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.299482101 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.073458493 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.204669212 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.182642918 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.763752178 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.281812197 seconds)
done (took 59.485344973 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.128057869 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.246504777 seconds)
    (2/2) benchmarking "String"...
    done (took 1.33812005 seconds)
  done (took 3.661450362 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.516966376 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.082382568 seconds)
    (3/3) benchmarking "different"...
    done (took 1.116235705 seconds)
  done (took 4.786840595 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.447911923 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.616835017 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.343578935 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.07124618 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.084713693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.452149919 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.206200998 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.758021575 seconds)
  done (took 26.6101356 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.100175269 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.355640285 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.452270863 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.548566215 seconds)
  done (took 17.620756193 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.532698416 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.592021567 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.590631447 seconds)
    (4/4) benchmarking "different"...
    done (took 1.689933482 seconds)
  done (took 7.602227573 seconds)
done (took 70.025419658 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.069496179 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.217917447 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.107439856 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.26353039 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.170191159 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.148421678 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.087492666 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.081979402 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.081067751 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.08221907 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.999302711 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.085882868 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.077515562 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.133991184 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.084164578 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.096552468 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.203156792 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.088324151 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.088079789 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.661648729 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.406322523 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.081381003 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.080987918 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.151777294 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.187124988 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.095463444 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.368849078 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.084285412 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.671376229 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.084872954 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.083023385 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.080977869 seconds)
  done (took 180.278222185 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.067988176 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.755903376 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.803870549 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.081376699 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.4269537 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.434281873 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.870687564 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.446259139 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.083065767 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.077815957 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.053606085 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.077612422 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.105544125 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.604693794 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.119020297 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.071929591 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.928472226 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.966664344 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.123762101 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.000424184 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.072527043 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.457441381 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.401946599 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.962428013 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.088038029 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.102236288 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.090617182 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.107826988 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.556837288 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.879990632 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.099440103 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.107945015 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.262089401 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.31520748 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.073098239 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.08867622 seconds)
  done (took 150.845874239 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.25075941 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.076454873 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.113717774 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.187701731 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.89749178 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.733757866 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.078168861 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.071930038 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.070632273 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.075795453 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.070119541 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.13843224 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.0778384 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.370401166 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.10365644 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.072371433 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.072811352 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.366448324 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.084669479 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.072900685 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.069986461 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.171262099 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.419648103 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.185415504 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.077501641 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.081159729 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.179348273 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.083944838 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.070310042 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.071163478 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.182184774 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.079962254 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.198607031 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.186796669 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.085604103 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.127241149 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.085689387 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.173612353 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.079872774 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.071429741 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.072703787 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.114129147 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.076256003 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.941543369 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.17452405 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.084617576 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.090719318 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.528261992 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.667807698 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.080836287 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.0689514 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.069437614 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.076325079 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.069647026 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.40704086 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.082663193 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.102860822 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.136095269 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.08284623 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.071693153 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.072614136 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.068415098 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.069466666 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.078556612 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.107744514 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.610561372 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.750956485 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.43296869 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.727090114 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.080934226 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.071432214 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.06798701 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.5922038 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.139017412 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.071082603 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.071640496 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.240139468 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.077902906 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.068923082 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 2.928199553 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 2.927603867 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.078811126 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.179772194 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.078970282 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.068294794 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.499523065 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.38005251 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.084259169 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.08819602 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.127280991 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.072197553 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.068698951 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.0794654 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 2.922694005 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.083483221 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.079926832 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.242366081 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.079925593 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.072051848 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.147770242 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.423852914 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.078337751 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.151914587 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.457458531 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.853737239 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.079586526 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.072257441 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.086305819 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.07000351 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.083406565 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.084181078 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.069840113 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.070737724 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.077146093 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.069940025 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.070804276 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.071814745 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.08793952 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.070168935 seconds)
  done (took 321.221911667 seconds)
done (took 654.77605724 seconds)
(4/20) benchmarking "parallel"...
done (took 1.072590574 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.321025133 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.080411304 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.263397847 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.330321347 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.275663477 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.248311068 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.283059256 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.370904139 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.303169767 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.244923171 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.301407865 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.249604905 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.349865275 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.331546998 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.330816749 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.354671434 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.270527855 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.769576336 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.289646683 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.246555864 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.266397388 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.242842631 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.230546318 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.298217933 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.33362707 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.274014875 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.474986108 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.310651335 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.277671025 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.318922802 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.342187325 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.358113682 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.290316767 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.320159282 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.341999661 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.338774821 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.261751167 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.344666832 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.255938894 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.289111951 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.300498302 seconds)
  done (took 61.756653396 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.54176615 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.273598694 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.403381086 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.383121744 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.025054816 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.386516587 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.477149594 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.263560943 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.277546198 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.400376392 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.400822657 seconds)
  done (took 17.930664344 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.343005778 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.27040949 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.404709608 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.404150068 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.4873213 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.39031762 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.439780562 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.265204819 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.272617624 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.406067529 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.42042813 seconds)
  done (took 17.199800267 seconds)
done (took 97.95528168 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.674487614 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.150699517 seconds)
  done (took 3.893842736 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.102665382 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.08905391 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.083821021 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.087746403 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.082060513 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.083434853 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.135448131 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.096773238 seconds)
  done (took 9.833516108 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.080275404 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.083783566 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.083481414 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.080036106 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.080828223 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.084533685 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.080453355 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.080916335 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.083404671 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.082767086 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.082928142 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.082437272 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.080996203 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.08200133 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.084462329 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.080274432 seconds)
  done (took 18.385497161 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.083281033 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.081798688 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.080443124 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.083362122 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.082910321 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.081118629 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.084692872 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.088528324 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.081273736 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.083946757 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.080207995 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.080869831 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.083825135 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.079727771 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.080923874 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.082597486 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.08734312 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.081124439 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.083732482 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.080439256 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.080189932 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.083834133 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.079738672 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.083712311 seconds)
  done (took 27.049533762 seconds)
done (took 60.258626737 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.654674744 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.836873637 seconds)
  done (took 6.56438837 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.085356658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.079840293 seconds)
  done (took 3.297543997 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.083387101 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.082016815 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.080414009 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.08202039 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.084612557 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.092080642 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.083937072 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.079782403 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.08152043 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.083161106 seconds)
  done (took 11.902304837 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.080325905 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.082424492 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.083745757 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.080948724 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.080880622 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.085447436 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.08115686 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.083827946 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.0809736 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.080478194 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.083328734 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.271100761 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.083903656 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.306201334 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.085937508 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.083305387 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.080684209 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.082491275 seconds)
  done (took 20.966988397 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.081023795 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.081088152 seconds)
  done (took 3.233687426 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.0795966 seconds)
    (2/7) benchmarking "second"...
    done (took 1.08093845 seconds)
    (3/7) benchmarking "month"...
    done (took 1.082959184 seconds)
    (4/7) benchmarking "year"...
    done (took 1.085561116 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.082093006 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.083940218 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.080409375 seconds)
  done (took 8.648244842 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.533950462 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.245718347 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.296182503 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.548753915 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.738143165 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.026231381 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.738961031 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.024970576 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.837392344 seconds)
  done (took 16.060092905 seconds)
done (took 71.745410145 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.821788526 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.081059675 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.508317399 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.234518583 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.087699308 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.446435913 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.087273118 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.613269001 seconds)
done (took 36.963047112 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.110001865 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.070764482 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.109758647 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.107264972 seconds)
  done (took 19.365210679 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.070260917 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.648711144 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.109117998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.118007193 seconds)
  done (took 19.098385524 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.473734464 seconds)
    (2/2) benchmarking "read"...
    done (took 1.590838562 seconds)
  done (took 4.152915879 seconds)
done (took 49.804644723 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.081235453 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.083464443 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.083277495 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.08060908 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.082157038 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.084161801 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.082214151 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.08165171 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.084754258 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.081660438 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.083903697 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.082229459 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.0808822 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.082980008 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.083593815 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.081273044 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.081417854 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.084664221 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.080604011 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.081367382 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.085327032 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.083896751 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.083731402 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.083472548 seconds)
  done (took 27.054404065 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.150088112 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.141615557 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.154885088 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.143565281 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.182246022 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.148845709 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.14549384 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.123590102 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.149774626 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.139546517 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.119620297 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.176654865 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.122506346 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.176255226 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.121365385 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.175719177 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.155694965 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.120832612 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.120400806 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.182147192 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.143518497 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.124010993 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.17301618 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.121854405 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.170317421 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.117055232 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.136100056 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.140580647 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.118254393 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.170131222 seconds)
  done (took 35.435750627 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.114191164 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.082800854 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.085473097 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.169389883 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.08203684 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.082519812 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.084669802 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.080640072 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.081523669 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.083764119 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.084863594 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.081294148 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.082606029 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.085864621 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.082520852 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.085019021 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.111252739 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.267696982 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.081765389 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.085696904 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.130235755 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.083855779 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.086143087 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.082053564 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.084983919 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.082006602 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.081963081 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.084443534 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.0821221 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.081372866 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.084524219 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.127466501 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.115088731 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.085590285 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.205633767 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.138601244 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.084778871 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.112834074 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.082145169 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.085775245 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.081363933 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.081807707 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.085376611 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.084207902 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.149204908 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.081325125 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.082560791 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.084638006 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.081989714 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.081712113 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.085319484 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.081020663 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.097054048 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.085406901 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.08439652 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.083843383 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.084722373 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.082403356 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.082709501 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.085391563 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.082320453 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.153672947 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.080128246 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.082152471 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.45883774 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.08694263 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.150832437 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.082350951 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.085022648 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.298628136 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.084693049 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.294407177 seconds)
  done (took 80.759424645 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.080892772 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.080910699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.164344338 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.158367207 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.084099466 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.082858881 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.083894146 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.080489584 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747572358 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.085623042 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.084612532 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.080929456 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751718761 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.085325719 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.084115267 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.158521482 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.084022505 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.080295151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.081540948 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.085186559 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.080357662 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.080810429 seconds)
  done (took 26.458785389 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.119057702 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.098784934 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.121992117 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.081634003 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.084624199 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.081247911 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.119723861 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.099529628 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.119601977 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.124335892 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.126963845 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.117024117 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.080644909 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.126050174 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.116759844 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.096161061 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.129591804 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.096260725 seconds)
  done (took 21.012724628 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.261020784 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.246023484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.163747764 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.128022913 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.342960971 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.321827548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.186312381 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.260127797 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.12604377 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.248638744 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.256747462 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.124703471 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.319650053 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.128452903 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.127342764 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.343558371 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.164808061 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.124683023 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193232539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189685945 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.259329086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192404997 seconds)
  done (took 27.783691883 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.116881226 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.143040965 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.160895133 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.164427564 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.083077641 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.08326531 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.14013733 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.120421355 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.096590443 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.125969206 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.122087207 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.085088735 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.095893919 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.136113066 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.17214695 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.128705375 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.140129825 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.137185899 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.126037751 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.085442664 seconds)
  done (took 23.537477897 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.081414465 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.084775029 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.081102269 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.081423872 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.083861335 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.084003399 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.081186658 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.083191924 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.086457271 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.359079167 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.086164669 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.080985658 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.081339484 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.084745042 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.081714611 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.081424215 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.08494755 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.085250704 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.082908729 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.084963512 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.358531095 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.082730601 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.084609574 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.081524885 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.082098839 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.086311234 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.082194553 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.085159095 seconds)
  done (took 31.95518024 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144541412 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.085400607 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.081296354 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.081967062 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.084918743 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.150673614 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.083452555 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.087123863 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.082507162 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.084580318 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.081891741 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.081655431 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.085488048 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.140178128 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.083012166 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.084767862 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.185076845 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.089975775 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.157138258 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.070213056 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.089288103 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.202750988 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.089937738 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.085116794 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.070481408 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.088744019 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.084498396 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.086237879 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.082431914 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.08460997 seconds)
  done (took 52.062454458 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.10278888 seconds)
    (2/2) benchmarking "in"...
    done (took 1.103376456 seconds)
  done (took 3.276709013 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.081479335 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185508362 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.082315971 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.284989424 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249580344 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257929523 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245548243 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.181316227 seconds)
  done (took 10.639122139 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.081611265 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.157378351 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.204187638 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.085513989 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.081486209 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.31306468 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.081153251 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.836626644 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.713717629 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.0539933 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.188672894 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.652330179 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.069155942 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.356088796 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.195758173 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.866971913 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.207900501 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.428808873 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 2.975992758 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.183802316 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.675813443 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.144314656 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.081680188 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.082490615 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.085706521 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.00501109 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.807263236 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.670361365 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.111929828 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.186242102 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.710945712 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.12140868 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.085484639 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.225416045 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.179290677 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.086416029 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.146972426 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.171635713 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.081820953 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.083329342 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.555723006 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.691057855 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.261863521 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.217906181 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.146825601 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.082087028 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.085101097 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.081237346 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.296194539 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.736299085 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.07124317 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.006642814 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.221130865 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.085747637 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.480824208 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.193456974 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.0857786 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.008435001 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.504856145 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.182390319 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.459656158 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.160331736 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.004126718 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.191345707 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.0820218 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.298077879 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.916024453 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.741182798 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.688824336 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.174473272 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.384664291 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.230105742 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.083877074 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.08522683 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.980493631 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.389936151 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.094922185 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.085009869 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.082647907 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.081867993 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.2327257 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.178124113 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.851650651 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.220183125 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.290683507 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.470297054 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.187269844 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.084200216 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.628349442 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.935530835 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.195352341 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.457591117 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.359948467 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.222045636 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 2.96628515 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.308049469 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.120255746 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.083118305 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.873943522 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.467648733 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.221305408 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.0825353 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.45680717 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.12885443 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.099428879 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.083852871 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.67256587 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.186269704 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.146213528 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.110341981 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.081981114 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.082094131 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.709970175 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.204577561 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.097603397 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.59977569 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.077993267 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.391736559 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.38099107 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.221003738 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.332231792 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 4.895308043 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.311545639 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.917010511 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.098153209 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.346847759 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.087269572 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.693180901 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.243524071 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.186292226 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.826289759 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.100149392 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.086264569 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.075657698 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.114417545 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.086678406 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.081470545 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.082060698 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.084972726 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.084025863 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.181747649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.35828641 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.586200969 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.190780866 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.280757586 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.203180144 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.646831528 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.322488205 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.696369664 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.223959891 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.082821031 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.523003365 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.386990594 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.683811119 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.187274354 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.085428435 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.0850443 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.886764022 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.982279054 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.156333115 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.082407 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.716902181 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.205481588 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.097619393 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.085917845 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.552576276 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.223937884 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.081949691 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.088002585 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.7550649 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.628380537 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197300108 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.351557751 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.200456222 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.082482563 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.084898608 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.086560296 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.824461461 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.742365197 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.091502178 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.679074755 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.725901387 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.130397576 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.151941556 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.15164705 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.244294383 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.238651212 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.225610649 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.083096991 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.08393532 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.086655544 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.600309451 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.909257955 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.805746628 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.926245271 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.088141851 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.074372699 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.19050808 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.718482235 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.24977104 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.683444033 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 3.930989175 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.161823599 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.083225396 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.087228921 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.200659068 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.216632628 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.222698261 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.410443915 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.215944126 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.083181096 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.66275716 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.190111987 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.650315826 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.163677574 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.851775193 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.073698636 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.186314241 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.180029601 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.54377932 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.137806878 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.086566568 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.592022898 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.156836188 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.083195438 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.048507837 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.509307552 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.958963141 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.771570989 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.49207465 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.098561366 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.638134718 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.274858374 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.222353289 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.844896271 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.158472125 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.366055497 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.157209065 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.316618721 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.207318138 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.656077908 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249854517 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.511252854 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.188137826 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.982775144 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.183984427 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.43982777 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.175554498 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.084843888 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.175825379 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.15583429 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.661081598 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.185061295 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.182588371 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.334187332 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.868349778 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.159147836 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.359506823 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.156760699 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.940060174 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.01001369 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.386291388 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.938226808 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.071021544 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.192765793 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.782818332 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.166613175 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.333409422 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.220792504 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.08531768 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.083247133 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.190418036 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.147933175 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.082722483 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.324489843 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.97939074 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.136689983 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.190285449 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.100774769 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.084596802 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.209352504 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.100540173 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.186465926 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.430053527 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.644548895 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.809972622 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.18472155 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.545401282 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.137236999 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.798663731 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.205086666 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.100206078 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.669329486 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.184164214 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.258856904 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.205519303 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.15059491 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.524085898 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.244762305 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.295536533 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.134672855 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.179139041 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.771138725 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.606870704 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.281842136 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.261050458 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257714316 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.64896335 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.096976236 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.640849486 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.095333847 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.811663067 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.104101688 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.110635444 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.087311407 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.085307427 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.648118608 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.06950792 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.099034132 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.820556813 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.551812061 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.11645826 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.844430488 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.203846167 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.098465524 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.084346512 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.087204414 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.007741698 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.090994687 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.247825238 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.163681673 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.083744306 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.087587517 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.003381329 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.270042703 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.750922838 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.850255557 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.990030502 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.220340607 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.084544052 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.085726061 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.086885392 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.083422762 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.085880301 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.087762107 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.362365831 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.221250924 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.725791393 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.207560279 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.09832611 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.232857332 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.11828228 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.084646631 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.136345472 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.113352875 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.1730241 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.153063149 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.087422625 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.494873264 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.226344717 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.068687609 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.299940099 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.255915243 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.260467417 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.365956971 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.23614379 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.515588973 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.412868317 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.872981613 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.097636641 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.008489975 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.192021677 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.77198645 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.031041391 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.470767529 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.688974037 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.0920004 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.263317981 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.900062543 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.497515869 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.175576058 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.121916676 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.085083965 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.086137625 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.076521172 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.283605782 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.132941152 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.281191756 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.205511616 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.077762314 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.31071051 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.154084319 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.08717873 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246076968 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.102583059 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.082724387 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.08313587 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.442735613 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.815028163 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.119989659 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.083189455 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.001604463 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.887055181 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.905972144 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.745146475 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.0110036 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218376167 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.084595224 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.264424394 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.135990895 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.600383151 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.206860323 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.812917691 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.390660719 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.133610405 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.1335371 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.452711815 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.733488895 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.349881741 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.170133531 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.085270704 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.361846142 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.994987851 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.226351965 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.994224736 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.337696901 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.637805557 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.569064409 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.260085879 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.17265255 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.99997362 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.684060598 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.093766446 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.098327794 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.877945855 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.224372408 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.322133374 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.911663713 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.276824937 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.222922815 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.741613912 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.763857202 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.221465594 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.63914126 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.2203715 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.087083477 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.58078134 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.100144093 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.177143755 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.175941753 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.086788218 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.103109055 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.673851977 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.667455834 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.219603651 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.128927451 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.087157614 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.556735785 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.912853594 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.199144521 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.09742621 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.083563779 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.263455116 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.233870333 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.08720201 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.502746628 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.693890232 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.221345368 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.610201435 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.152549869 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.22294751 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.246650973 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.378719773 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.221299805 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.144578986 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.086283007 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.088703796 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.084978096 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.396742094 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.217419549 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.083569739 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.620084209 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.22340792 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.65559173 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.154542172 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.25872147 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.121268679 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.502442518 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.221575094 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.605842867 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 3.991822409 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.187587252 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.387797392 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.154525193 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.130780698 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.688356945 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.157356515 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.086971272 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.932136132 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.250320833 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.285480437 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.338464262 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.279251853 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.142970626 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.662397021 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.16345334 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.572736671 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.2008641 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.084387732 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.594632461 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.163804968 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.389681757 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.20754304 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.441028329 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.168602818 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.445168259 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.314305772 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.178308706 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.083683301 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.085357106 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.99155197 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.097231751 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.678704358 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 4.999168917 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.449282088 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.184583333 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.9689389 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.573681817 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.604666377 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.378420466 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.175920351 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.274735329 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.250712219 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.003897748 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.291584224 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.108862872 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.220980852 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.177456527 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.78056197 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.104476696 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.084839934 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.404054213 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.210676214 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.088143787 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.085785549 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.00409259 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.784975545 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.156735288 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.213711097 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.151228683 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.084685801 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.641632859 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.343036808 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.121691295 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.087463171 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.084437792 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.862718542 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.161331164 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.0845812 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.337543054 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.207745293 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.284418002 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845669401 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.490811538 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.176859076 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.084572286 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.086568008 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.6081503 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.539675557 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.22101841 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.454202009 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.140416884 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.61341159 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.080235952 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.470215385 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.595848667 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.98361585 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.174591002 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.085118285 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.062077961 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.722933353 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.087826045 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.855845871 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.463490081 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.145873861 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.789021887 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.960434567 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.112243087 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.141797451 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.102962276 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.084535394 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.088391096 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.085531416 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.603779187 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.087288426 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.099588938 seconds)
  done (took 1393.943346179 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.401377729 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.088133309 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.084738453 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.084122711 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.086156709 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.087522714 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.084192494 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.085340722 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.089214075 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.085376075 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.087909484 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.084094367 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.084347583 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.39874269 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.08410434 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.085540562 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.088870084 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.084556346 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.08772415 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.084849713 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.084202213 seconds)
  done (took 24.506406443 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.08370049 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.084295994 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.087102514 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.085936647 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.083771674 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.086788006 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.088093811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.085841509 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.088297735 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.084063925 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.084673776 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.088287943 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.084162352 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.084283012 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.08823963 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.084364428 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.085169796 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.088191424 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.086752452 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.086347021 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.087076593 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.084227083 seconds)
  done (took 24.967050805 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.087581025 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.083853037 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.699053709 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.178258066 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.08527867 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.08469885 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.088212888 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.263493188 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.046944047 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.99186828 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.535489391 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.142050999 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.102939944 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.227897939 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.182980092 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.084005044 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.209130099 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.083605872 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.085349534 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.087456312 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.084316223 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.219594315 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.189771799 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.084013734 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.856526594 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.22653168 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.088371621 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.083719043 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.085382829 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.075034895 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.187144759 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.102404043 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.833937316 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.739344584 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.314468743 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.996751185 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.200755541 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.104186753 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.084050336 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.085248265 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.313599491 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.877582208 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.100498163 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.087104533 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.300925198 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.170274262 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.084699756 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.463666809 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.135888867 seconds)
  done (took 86.602417127 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.099528923 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.213087527 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.149275766 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.084693429 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.211986369 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.084798106 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.142434127 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.088512363 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.086455608 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.088153337 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.220108952 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.240733998 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.087356566 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.084519578 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.176265502 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.087584738 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.087362387 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.084377545 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.084820549 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.087911484 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.083446255 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.139466752 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.201662211 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.247673457 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.089597 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.085285781 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.085971346 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.087555914 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.236746314 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.083644231 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.085299123 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.088029118 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.220292259 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.159605424 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.087880055 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.084719275 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.20999719 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.084494523 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.084768892 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.088922786 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.085463056 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.088017141 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.136120538 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.223541814 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.085745155 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.192482336 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.084933801 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.088199237 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.234844421 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.084869551 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.085324206 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.256685662 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.087948135 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.084606199 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.085044227 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.211805883 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.089242898 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.084052502 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.085397844 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.232312573 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.087880505 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.084722352 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.241562718 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.087784724 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.087902468 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.252569764 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.18692901 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.088825666 seconds)
  done (took 77.83014486 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.084955572 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.088306788 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.087694952 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.08746548 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.087560392 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.084805658 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.087092543 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.08866297 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.0846375 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.086680863 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.089333655 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.084762773 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.085997467 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.089280399 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.085432295 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.088557898 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.085360774 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.085244626 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.089146683 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.084070674 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.085012977 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.088807616 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.085914741 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.085067257 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.464411756 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.090706325 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.085140839 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.084461807 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.087362 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.088004202 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.45672676 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.087616862 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.086939837 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.088329603 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.457851397 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.088859652 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.086412106 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.088742173 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.084549923 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.085597044 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.088065826 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.085503787 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.085386005 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.089563646 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.08449576 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.085524699 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.088700694 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.458405838 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.08505453 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.08494086 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.088626314 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.084161541 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.084979707 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.087411524 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.089501819 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.182183354 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.084869121 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.086897009 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.087793307 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.084977869 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.086113992 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.188782638 seconds)
  done (took 70.138152993 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.090617306 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.086174791 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.088865405 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.084981163 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.085061933 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.089073827 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.084662343 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.085418072 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.08859631 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.085181675 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.084788507 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.088683578 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.088152281 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.087605502 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.088383363 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.084359437 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.087119592 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.089098111 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.085269468 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.08641523 seconds)
  done (took 22.81456518 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.085097792 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.085488946 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.089158489 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.086680625 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.089184986 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.08433885 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.085479211 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.088660116 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.086720287 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.08551759 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.08812388 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.085961873 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.085624223 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.087080656 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.090784911 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.086665982 seconds)
  done (took 18.469128563 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.08439768 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.08593118 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.089693644 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.08552561 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.085559594 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.088566429 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.085553514 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.084604387 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.088313638 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.546049419 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.085805542 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.088606191 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.08476116 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.085615609 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.086951951 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.090206105 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.086347318 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.088419917 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.085077804 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.085686442 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.659221099 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.089114826 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.088074266 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.085293922 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.085711779 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.66531028 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.090162061 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.087603054 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.08454512 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.086473756 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.087815902 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.558498501 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.089757943 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.088055172 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.084987382 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.086088747 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.08865439 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.084770835 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.085275951 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.088951686 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.084871446 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.086045076 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.089569146 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.086566953 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.088573952 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.084378875 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.084891427 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.543636766 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.133747703 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.114487187 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.087742143 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.084722652 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.086125374 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.565127998 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.08979794 seconds)
  done (took 63.94501286 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.127967862 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.145022255 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.088338252 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.08465181 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.139914985 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.126495671 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.128617889 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.10244582 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.130931761 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.085460896 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.147544908 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.101125541 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.125169394 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.142452318 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.147739316 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.13497376 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.088957111 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.161959685 seconds)
  done (took 21.286354589 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.086764977 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.084804805 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.086850194 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.088595096 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.085373548 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.086362794 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.089923865 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.086313515 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.089249844 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.084846076 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.085285378 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.08827202 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.084969312 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.085666411 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.088649865 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.084476211 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.085260113 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.089116391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.08830823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.087815928 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.088339167 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.08529263 seconds)
  done (took 24.988014038 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.120757475 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.130282914 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.090005635 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.085021946 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.086292981 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.112305541 seconds)
  done (took 7.701044587 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142299172 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.085413526 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.125232738 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.135780339 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.088664224 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.084702457 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.084914075 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.087471383 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.090270572 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402376582 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.084927015 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.085588368 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.08898159 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.085663415 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.085298892 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.088709074 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.087921872 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.087399378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.134451549 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168465303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.085046929 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.08560217 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.088828172 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.085614012 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.085633899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.088021904 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.090750596 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415791469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.085425083 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.085661342 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088976025 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.085243988 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.085632419 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419349435 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.139451897 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.08497805 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.085649428 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173037425 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.085712281 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.088720593 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.134373689 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.089516654 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.085511744 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.086353598 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.089389232 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.085518 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.085567364 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.089249664 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.084592722 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405247964 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.087981467 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.085853506 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.089772858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.085476284 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.085826038 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402461489 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424599413 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.085207206 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.08600589 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404905507 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.090006384 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.089042944 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.085466811 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415355087 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.085814357 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.085440137 seconds)
  done (took 75.881393947 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.086068193 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.124083336 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.085981566 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416256097 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.089406077 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.085324768 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.087706072 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.090643386 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.086800816 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.143243204 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173100937 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.086184151 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.08535784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.088774888 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.085513043 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.085648781 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.08760326 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.08993726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.141642137 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400612709 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.087513152 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088082597 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.085852186 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.086895906 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407068738 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.090192535 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.085547654 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.085872331 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.088501045 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088120501 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.085057469 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088146267 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.089842563 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.124007874 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.086751613 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.085514725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.088925172 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.085882765 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.086277636 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088413356 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.088518205 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171241267 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.090437454 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.08711308 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421037114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.085921771 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.088652819 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.146021278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.087620736 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.145330906 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422386025 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402549932 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422093383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.090007571 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.086384234 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.085941413 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.088164538 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.088652673 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.084818692 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.087803938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.089913838 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.087143455 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40610821 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.086222172 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.089154398 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.085355049 seconds)
  done (took 75.917207774 seconds)
done (took 2330.042833689 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.160882637 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.253857302 seconds)
  done (took 13.490964055 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.086074433 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.087809478 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.240643293 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.090257877 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.084417228 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.224925151 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.10640866 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.099500516 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.086240317 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.170797968 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.086747998 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.218344083 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.191070972 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.087264945 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.107933982 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.096766453 seconds)
  done (took 39.201420539 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.077163464 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.266244372 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.067606158 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.836605072 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.301911851 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.99631731 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.415338196 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.287548916 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.382883113 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.537443476 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.350435964 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.541206555 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.921669611 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.207277602 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.723779441 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.799149524 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.870368505 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.924120989 seconds)
  done (took 59.582953516 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.079069735 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.230225042 seconds)
  done (took 8.403272933 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.096058716 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.088123532 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.090546428 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.105891951 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.104410438 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.112906854 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.096708212 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.097928275 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.112694985 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.106773402 seconds)
  done (took 62.105856024 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.078524417 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.681845097 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.510963901 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.634662963 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.619261121 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.478303204 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.236422363 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.436053271 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.173767279 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.074868075 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 4.906685906 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.600406811 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.80737683 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.026362682 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.58974407 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.367102104 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.641265405 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.617233895 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.400913007 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.371866955 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.302065835 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.776550086 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.548588242 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.946813895 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.096069349 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.146004362 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.137990018 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.189915784 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.163580904 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.973098668 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.932771273 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.117956484 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.012171023 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.092396688 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.161775418 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.704446292 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.741106917 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.295603452 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.383662792 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.402286829 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.453694809 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.335713251 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.214594277 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.318939695 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.313011027 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.26470879 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.047427257 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.325323626 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.188854542 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.20188386 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.655798793 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.282098758 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.221155372 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.192946168 seconds)
  done (took 148.48311683 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.078961748 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.537173124 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.253174017 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.080162591 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.476523385 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.291632171 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.670323379 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.577483011 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.096418211 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.296222092 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.257883223 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.209516126 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.083115401 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.086975281 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.090061764 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.084431487 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.274228511 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.595499997 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.10004902 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.084757347 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.290848548 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.320290417 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.216530712 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.084179785 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.256631046 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.326164336 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.545601087 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.21807612 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.469214231 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.079935294 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.560614428 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.097126563 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.084300262 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.983325355 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.498873194 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.416384142 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.578592634 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.08792699 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.839901547 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.084512233 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.779187173 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.288862754 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.417845054 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.225503588 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.243169988 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.315993591 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.711538693 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.079933647 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.883890192 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.255863931 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.300196331 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.294078257 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.367372016 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.085149084 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.541037816 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.0888276 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.083420433 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.377955752 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.235818082 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.215102356 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.083847199 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.084590377 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.085253114 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.334436002 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.078495801 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.206292989 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.083546336 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.088067313 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.210526539 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.215415168 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.235388387 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.325931041 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.344965685 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.022308021 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.442529162 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.320422614 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.509155374 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.344386701 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.086038685 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.083675712 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.550247524 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.528957261 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.251490771 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.326282078 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.39515857 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.375838184 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.620975538 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.082328333 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.304534007 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.239600707 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.316549875 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.236816418 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.418763833 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.001993653 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.081280918 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.084226201 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.357369701 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.217038854 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.083584569 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.596566022 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.355702376 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.734882829 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.260678316 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.525934109 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.194514652 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.082843288 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.671028126 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.081198051 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.309360184 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.373228752 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.090834221 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.085923718 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.242568606 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.876891294 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.07901716 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.230570066 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.515321976 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.099495384 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.243658295 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.083127295 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.341544479 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.895832263 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.318914851 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.0841333 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.365995146 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.268227242 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.235418967 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.08375487 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.441762212 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.350771951 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.486442338 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.324469034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 5.937997077 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.088177949 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.399207967 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.085750103 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.085547933 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.266288415 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 4.794599109 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.268019838 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.081812015 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.355432396 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.251198219 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.431875374 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.09514699 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.322823338 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.337722223 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.489324596 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.098254229 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.225764185 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.080497866 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.144273665 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.251119401 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.078468812 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.085194283 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.970747587 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.085133338 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.235166783 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.313426487 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703932671 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.586159566 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.426055951 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.078468343 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.573498899 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.290668691 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.598966702 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.572700778 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.265568195 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.083200278 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.085809649 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.083848883 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.329437358 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.278706513 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.079592506 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.085984008 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.814688691 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.025598836 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.082735088 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.276241733 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.696802298 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.303750176 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.303323032 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.085055906 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.424762682 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.093635319 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.283666298 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.589667456 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.102666729 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.09033455 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.084979489 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.084430068 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.086957012 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.300780254 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.33583135 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.649065062 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.235193565 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.382036996 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.300536599 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.394733483 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.553762931 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.095496476 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.347583355 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.081364454 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.539085972 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.094119811 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.21193987 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.394692294 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.082610256 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.397133378 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.444938811 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.232678322 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.525174664 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.091008848 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.087668917 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.084810942 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.261498141 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.593832872 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.086397546 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.401412099 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.469611047 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.211488676 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.280869997 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.110711643 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.09892861 seconds)
  done (took 722.518181791 seconds)
done (took 1054.860454234 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.075578085 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.088767792 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.087413506 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.085653028 seconds)
  done (took 25.413470345 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.907996612 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.895795288 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.181789083 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.094627219 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.197277803 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.32030615 seconds)
  done (took 10.6826054 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.613589567 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.085712609 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.088025781 seconds)
  done (took 17.864543669 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.392698888 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.559456412 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.266113004 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.181822679 seconds)
  done (took 6.48964349 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.091479592 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.091282414 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.08809681 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.087326755 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.090284558 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.08733009 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.089994786 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.091315936 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.091574236 seconds)
  done (took 10.893545586 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.56662469 seconds)
done (took 76.994398122 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.508781669 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.389671373 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.093247878 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.318648751 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.217200316 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.404663817 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.203763507 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.108523847 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.438832097 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.511334521 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.58994173 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.136048048 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.409271414 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.514446323 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.306466041 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.109519889 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.107067165 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.151202178 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.59098181 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.277733673 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.095460305 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.220853599 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.841507808 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.11836695 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.953975822 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.166185786 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.334828025 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.079867106 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.782534098 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.109903884 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.177032598 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.630968292 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.267965858 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.375581359 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.183160299 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.928351612 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.570239197 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.089609462 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.342488159 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.64277181 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.380179179 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.213662783 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.078660518 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.390188193 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.524533436 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.11033527 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 1.986557812 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.247488031 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.520192821 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.276343191 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.459445785 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.092818443 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.697552149 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.16132275 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.174398982 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.080028669 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.153639933 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.552748929 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.309177221 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.399270694 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.103251911 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.080228998 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.101045699 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.117498277 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.076651283 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.369464906 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.504111802 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.180584092 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.55016234 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.11240128 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.105506708 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.121413151 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.749588369 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.172006186 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.078558277 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.118234794 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.379468673 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.128940562 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.087052029 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.178396211 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 3.280858454 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.087137465 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.303990708 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.42416595 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.247624909 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.36808825 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.58740254 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.501805231 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.602457872 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.092037714 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.469681555 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.663109146 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.420358072 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.09079207 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.16893858 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.32683489 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.645532218 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.600112518 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.217982623 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.767735198 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.114880567 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.107388425 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.442646994 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.445940965 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.85035584 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.125595679 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.220063616 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.076207561 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.271801001 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.080896512 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.574559192 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.522694979 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.089053357 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.147902736 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.574087886 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.091262552 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.372437267 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.549404614 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.128671509 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.08674973 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.322472423 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.094024107 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.208290806 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.585670127 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.490689162 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.288665908 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.081886741 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.610046314 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.089919509 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.338997257 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.093255559 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.721088199 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.617705816 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.123922699 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.3363677 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.213354102 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.081381399 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.279970909 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.141162809 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.222434703 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.381950397 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.360243488 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.208510309 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.076273313 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.403810376 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 5.198926809 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.329930175 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.389899672 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.251281083 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.350638107 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.170374608 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.103769873 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.028986931 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.587673751 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.670805755 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.816527603 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.307679998 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.219575512 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.630386673 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.404734025 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.875178386 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.189799178 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.136676679 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.088063468 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.104280846 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.150888102 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.076378017 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.087552146 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.326016009 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.270897068 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.729861135 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.852863493 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.986834589 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.375726067 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.222159976 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.093192115 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.724059164 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.085978948 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.508148139 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.530907258 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.173718635 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.114699265 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.081929549 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.217855749 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.860889375 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.126669318 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.397444583 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.556488556 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.347002379 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.53582353 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.262843439 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.123555256 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.434013741 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.330860714 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.367934435 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.319302055 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.605378145 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.168948798 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.393729805 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.116631412 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.368248654 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.089991029 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.383688708 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.247146813 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.56684601 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.437316227 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.309856854 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.3147392 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.420015234 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.089586654 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.088321168 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 8.020757078 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.468008641 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.120239944 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.077050309 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 7.848557339 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.594034675 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.181815422 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.213040587 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.335009596 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.188757484 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.255592208 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.613683084 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.104787585 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.4186417 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.313086518 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.254616198 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.298073065 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.120854884 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.231073619 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.261444904 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.224982587 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.29589397 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.079024316 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.499895981 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.135787198 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.002615036 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.084477259 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 1.818441997 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.121033929 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.10172595 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.423211689 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.27089692 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.386811078 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.130076299 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.252008013 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.080697186 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.184985721 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.652663091 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.022337471 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.634890647 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.192707627 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.119643158 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.078200809 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.590309492 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.515663441 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.152828937 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.222556867 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.72629058 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.120084177 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.262048655 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.093200035 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.090263406 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.818132368 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.212781611 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.33366757 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.710385302 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.088701317 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.534008108 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.091124365 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.612309417 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.619875886 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.139760174 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.208585357 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.080033535 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 4.906778729 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.465874976 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.118085999 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.244182608 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.444833565 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.204068016 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.202346821 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.085822439 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.128795419 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.577936053 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.327703955 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.658545993 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.125151044 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.500476278 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.089838879 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.603491174 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.111178416 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.173684402 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.484676135 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.229121456 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.522698503 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.093581756 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.134545105 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.338883787 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.117358274 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.080024371 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.232314229 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.152314281 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.727862542 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 2.871111514 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.167887565 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 1.969646663 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.321609308 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.087632806 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.113108935 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.22073548 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.174531576 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.663713119 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.628870595 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.094154133 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.361611633 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.084517555 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.535502706 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.115304254 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.104505931 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.212673582 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.178039047 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.077837649 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 2.11421602 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.247336821 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.666237302 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.137992658 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.928930022 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.095188741 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.532632433 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.209835484 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.42493665 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.090092636 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.104519539 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.291042352 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.768834157 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.18773091 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.120085316 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.30404082 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.096365193 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.725495957 seconds)
  done (took 857.398188343 seconds)
done (took 858.692714187 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.130579339 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.462201106 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.286304423 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.043626293 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.902218641 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.729795922 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.305430925 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.319088852 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.167617035 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.304197672 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.991714688 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.8888813 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.182999747 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.20525213 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.165535322 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.19284102 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.300016749 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.326922525 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.202397729 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.170425706 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.452006827 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.165082147 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.505178218 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.387064569 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.457283541 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.193881312 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.152749469 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.439060052 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.440162058 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.067701385 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.265635135 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.286154003 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.926088877 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.328576463 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.166718127 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.167246044 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.887767574 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.182601786 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.112044447 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.166991044 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.462585012 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.210259059 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.806614594 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.959939755 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.868423296 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.504548291 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.950234925 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.190740578 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.226849063 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.26138533 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.114027707 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.110361428 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.441810302 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.094675887 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.925523872 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.938877725 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.442490104 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.885375826 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.835862144 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.26367866 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.455484871 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.188026416 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.264912415 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.318129356 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.208911701 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.37686747 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.503592579 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.111642569 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.288069857 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.31098893 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.332397551 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.31130803 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.204079418 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.30773601 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.230926624 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.307018652 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.814507482 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.286134734 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.877872515 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.191890521 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.931172555 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.98685301 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.042192652 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.168154299 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.128162941 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.869166131 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.911576385 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.932462733 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.206942887 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.284427998 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.999132867 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.28782261 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.548404632 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.153946686 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.128350107 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.287254643 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.919974784 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.112118222 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.062094494 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.289762723 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.873602988 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.153229345 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.126329198 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.177008751 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.191714022 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.112733411 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.150066571 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.505827934 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.315132695 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.253971808 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.459671681 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.231257562 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.310158582 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.201843082 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.164397934 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.867395612 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.363928391 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.891866348 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.11239734 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.762094348 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.383728384 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.178676643 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.463042145 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.384833787 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.130691727 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.182505581 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.189406353 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.946013551 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.190543813 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.18593661 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.279933841 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.547154704 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.265392386 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.046335981 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.313220994 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.870316999 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.328100037 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.310046416 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.165113559 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.95511537 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.181375176 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.048964517 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.388010235 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.458834664 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.330121019 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.382176435 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.206197856 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.344242614 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.110785089 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.203790345 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.31001436 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.207009774 seconds)
done (took 237.474538514 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.413678613 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 3.437637147 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.370636284 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.306609166 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.454063521 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.383771343 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.153635447 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.52568969 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.137715386 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.524597569 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.306615384 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.222183161 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 3.447127635 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.302851866 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.438953541 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.332025539 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.142809761 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.358737134 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.535358085 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.48747987 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.105041585 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.307580721 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.272926164 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.52974651 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.137638821 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.116918488 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.395426153 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.202624779 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.350681052 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.097299339 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.111748604 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.355903383 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.394232976 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 3.200761223 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.477669252 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.078691078 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.411174297 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.147946632 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.34358784 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.412699719 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.304114071 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 3.85650137 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.102116417 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.118635979 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.193450921 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371731687 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.156554935 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 3.321613666 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.086378197 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.084900133 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.347218471 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.126575679 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.216555773 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.361832581 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.294649034 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 3.188855554 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.491160346 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.482967089 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474155148 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.387052653 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.342932043 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.504366726 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.488129825 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.205653974 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.108883469 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.374652094 seconds)
  done (took 123.805898715 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.520660723 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.373053838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.494970369 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.325357545 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.622961746 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.535161498 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.448238438 seconds)
  done (took 13.400495469 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.142271242 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.146869743 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.336842712 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.380929761 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.137473739 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.281388308 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.224786238 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.095879805 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.361416063 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.194346033 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.505029571 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386376474 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.066171557 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.10582103 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.22434601 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.37958799 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.130442351 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.206216754 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.198824914 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.395716897 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.105259131 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.122882027 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.351100952 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.250627444 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.26772051 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.319228671 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.243241327 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.19988144 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.213130663 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.191550596 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.19970793 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.300127563 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.178185093 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.12851674 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.159119067 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.486953123 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.148886597 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.179112524 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.284540782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.086154157 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.177107337 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.18735298 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.297844165 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.164501615 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.16873423 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.375749594 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.217971807 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.232325821 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.244558023 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.2764706 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.480439891 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.26175301 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.213007169 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.10453433 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.361566996 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.090998067 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.212106977 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.153749465 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.1777179 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.332778646 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.260021471 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.539720861 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.465434403 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.242089771 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.475662945 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.600911157 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329332895 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.331131427 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.307932672 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.573700056 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.306598909 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.531160087 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.314208967 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.325857749 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.225618275 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.341507285 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.397007435 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.995323898 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.962923801 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.118094893 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.644020481 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.203412721 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.533373315 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.109889844 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.103415205 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.139530877 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.145069983 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.797260038 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.074003424 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.173847152 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.461234659 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.171380899 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.210515641 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.247768817 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.170195396 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.204547986 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.307070139 seconds)
  done (took 147.611800028 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.211839507 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.425665995 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.535668811 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.080384657 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.217541156 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.490209734 seconds)
  done (took 15.055094415 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.712507361 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.112268339 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.321433896 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.288765091 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.320876574 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.219669379 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.232832943 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.434617907 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.427042234 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.280475708 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.229407324 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.216481833 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.254018193 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.480624522 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.294437255 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.310057385 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.231620795 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.291367322 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.350894455 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389785123 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.435203219 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.371551514 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385166833 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.012580534 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.281109181 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.264912006 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.06174257 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.324960358 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.299523591 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.642468177 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.49369488 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.231913468 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.999857823 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.340300478 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.019455671 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.942571832 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.393189767 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.204439139 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.320083416 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.291218363 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.283906623 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351932969 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.233508294 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.146544874 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.569061738 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.784885539 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.234682524 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.578148664 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.272216624 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.215012028 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.257977655 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.275531504 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.271360336 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.29713537 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.551921883 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.67672874 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.103887158 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.292311218 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.388378125 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.951550738 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.336124758 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.222895274 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.580532837 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.18343701 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.196815305 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.21385509 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.932755332 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.434976054 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309373091 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.254347814 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.199218354 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.226773681 seconds)
  done (took 121.803959558 seconds)
done (took 422.760322516 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.539023163 seconds)
  done (took 7.721883184 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.228642535 seconds)
  done (took 7.514751604 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.229154088 seconds)
  done (took 7.429460906 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.21760983 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.194833468 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.179785482 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.166776733 seconds)
  done (took 25.978008643 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.793141682 seconds)
  done (took 7.97848316 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.154870233 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.218166044 seconds)
  done (took 13.518207757 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.332061591 seconds)
  done (took 7.596054359 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.308960931 seconds)
  done (took 7.524106673 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.135281519 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.203271928 seconds)
  done (took 13.475888157 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.18912476 seconds)
  done (took 7.362399047 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.691436485 seconds)
  done (took 7.891041022 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.194514996 seconds)
  done (took 7.556992551 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.278566782 seconds)
  done (took 7.517633921 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.261185926 seconds)
  done (took 7.424475113 seconds)
done (took 137.680839948 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.201288303 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.27139328 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.121606612 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.110295988 seconds)
  done (took 25.94788191 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.571552572 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.602543803 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.496661801 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.655360363 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.499292523 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.452733446 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.546915019 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.561848575 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.502557761 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.616056971 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.569973954 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.707215366 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.627454887 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.522429405 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.535599298 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.605168318 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.593863968 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.539373744 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.478008621 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.533987614 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.597634548 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.656937737 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.96195885 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.980647557 seconds)
  done (took 39.617921773 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.426139517 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.672069472 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.418026722 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.586744169 seconds)
  done (took 7.334455234 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.264838517 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.677633586 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.566563508 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.670976937 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.574268688 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.379924769 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.566886277 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.425343612 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.398731315 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.319417398 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.833008594 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.383805079 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.39327967 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.62837011 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.395724268 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.229997497 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.258464736 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.422675579 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.592055231 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.441365947 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.48825366 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.558080782 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.587228822 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.551771337 seconds)
  done (took 36.837206581 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.957747849 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.115713694 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.552229945 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.153489125 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.918328299 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.030127475 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.460554296 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.732254428 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.474700192 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.49372933 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.97731433 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.952428596 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.283770526 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.004006405 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.053910087 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.390525081 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.310868837 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.104336818 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.629605065 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.476726882 seconds)
  done (took 40.241489678 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.260679346 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.468690663 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.488740871 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.362929203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.214731601 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.230031497 seconds)
  done (took 27.175950351 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.535658642 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.270115605 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.520945988 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.500895174 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.385930372 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.351545441 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.763869759 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.440528715 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.021258551 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.904622985 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.72573157 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.612178782 seconds)
  done (took 23.256179243 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.270859277 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.316364923 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.13256393 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.450631359 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.094506274 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.049244286 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.439287715 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.251293541 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.31053003 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.410477154 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.03730038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.459560348 seconds)
  done (took 41.404699693 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.352793079 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.357201976 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.592021791 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.297935085 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.654237133 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.239886433 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.615959917 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 6.233583798 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.9074409 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.984379269 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.799768996 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.250092473 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.798993657 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.208438161 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.923136504 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.510039032 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.05578222 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.725176844 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.55635355 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.278471536 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.182153013 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.298991953 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.22944339 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.667673303 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.490533007 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.222337496 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.379780416 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.47828324 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.235022157 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.363798832 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.253920909 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.771126722 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.37067377 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.502223617 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.648022641 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.492811837 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.222221528 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.25999472 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.70751633 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.556062801 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.379271744 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.401698463 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.234832344 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.22881579 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502139881 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.984646691 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.426807189 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.817842601 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.233434242 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.552742826 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.953265589 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.50944994 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.54995512 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.97314509 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.283510889 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.46702767 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.39520098 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.236314042 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.537054309 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.475084838 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.487565085 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.218302445 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.368176246 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.143670396 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.620588726 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.372097611 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.276292922 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.387187366 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.489457632 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.469179947 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.507425823 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.502421737 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.874858929 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.252845241 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.773336002 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.120230351 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.550817216 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.191887251 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.915100125 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.732688795 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.183199733 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.308213931 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.825148231 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.157001169 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.1937937 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.360731837 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.072042335 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.161723925 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.198051443 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.443433067 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.399877825 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.218479696 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.264420296 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.372837684 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.888563374 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.165628794 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.184225983 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.435339039 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.162511513 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.7335615 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.173414828 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.239891079 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.182068612 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.821445129 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.578188661 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.956775593 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.945929078 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.840440086 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.456221692 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.751967493 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.35452779 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.020655471 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.518045249 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.500589706 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.157112357 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.90071468 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.18609716 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.431309985 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.382603828 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.159165014 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.147838477 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.568747178 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.315998676 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.165694717 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.420252962 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.136128411 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.263362807 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.114409289 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.692646586 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.585944509 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.437094863 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.642435654 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.258811991 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.345956191 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.123768058 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.30031857 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.589508143 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.229787441 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.453033394 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.45511727 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.339490383 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.652133989 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.148444646 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.970617149 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.536856351 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.367257316 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.475521797 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.840114807 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.322007991 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.22374894 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.295127981 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283255302 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.172583492 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.798966706 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.183458965 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.876122619 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.868039174 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.499462918 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.21619086 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.329383132 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.172199948 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.375304729 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.667559579 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.347751005 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.33225275 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.470867422 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.41292899 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.201096131 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.176977636 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.474285462 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.405912479 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.665641134 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.434764149 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.704370275 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.67827064 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.713229555 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.41284252 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.533718235 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.064872249 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.909415816 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.475489793 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.973771581 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.316710798 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.222414377 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.508787912 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.437445933 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.445449914 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.006968918 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.922411403 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.956630509 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.280957428 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.205464685 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.165725451 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.342886581 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.574261352 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.189738192 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.708129373 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.265837369 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.628245149 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.707877077 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.242849615 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.516892422 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.80787402 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.717455565 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.495235684 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.475465739 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.132505686 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.737287004 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.720587854 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.30886561 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.17262993 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.728742702 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.82575558 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.380255583 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.196511951 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.519134426 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.130698359 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.996823255 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.713901398 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.75733393 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.190693724 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.333539833 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.169683263 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.199711092 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.012183449 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.475183926 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.431358963 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.68684689 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.641915461 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.407993245 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.522904755 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.190935049 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.201724279 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.481946839 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.504926652 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.481302527 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.641444856 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.432588227 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.88058384 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.291009252 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.852956952 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.360742648 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.21854955 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.576709898 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.281433322 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.001771006 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.289675468 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.978735347 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.53347659 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.683574617 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.439964791 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.172179062 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.54738698 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.75947997 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.18008792 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.101357157 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.298107928 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.176548463 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.485593972 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.970688016 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262022768 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.906213997 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.438255675 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.403488089 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.356290316 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.587286751 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.60446401 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.947015803 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.175735788 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.360990203 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.303276578 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.514804008 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.205236474 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.469833493 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.793945214 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.663172737 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.156755262 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.671802826 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.599945614 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.247278221 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.568020826 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.409419793 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.519338648 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.098525046 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767222473 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.219466324 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.348209974 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.175685524 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.824542788 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661792064 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.578814837 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.571659465 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.230123964 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.614977991 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.545479489 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.468607489 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.2150947 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.42677711 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.170228121 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.506410642 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.173220298 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.911546945 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.607614163 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.176127045 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.966211818 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.404353397 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.503887677 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.331864946 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.695194918 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.352922585 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.332784932 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.726497871 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.268269629 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.228921442 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.432695941 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.726829698 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.269694936 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.15157048 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.709330023 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.750158565 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.475977147 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.6561031 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.605492074 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.487490006 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.914106552 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.153272139 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.347646153 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.308616255 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.17662617 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.386529723 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.546779298 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.1632161 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.29742121 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.444445131 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.410075977 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.700893213 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.111912256 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.809399966 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.524908219 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.655243296 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.693801578 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.916302431 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.394139667 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.274603621 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.427106555 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.237420726 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.293393965 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.689600012 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.60087515 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.159135686 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.004742605 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.924030268 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.224067912 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.66337645 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.41414883 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.764768656 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.282428163 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.328999443 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.270395142 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.23349095 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.057815367 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.845185951 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.898018236 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.389615783 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.277198351 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.260222257 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.21818156 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.361883444 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.610839501 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.427685683 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.891837531 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.477102745 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.272540143 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.064030246 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.096288392 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.376866747 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.456101062 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.106709978 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.39593942 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.451077897 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.177549205 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.11049084 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.137416586 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.353058112 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.936688907 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.85211683 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.365940416 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.519110095 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.700365175 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.142097946 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.891587591 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.29768462 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.468845917 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.493896764 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.927562103 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.555066737 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.443164573 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.297009496 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.122746744 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.311347646 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.159914379 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.34314448 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.891703671 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.446536075 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.244414577 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.166622852 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.854872561 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.199670104 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.180016208 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.59589544 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.383261144 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.361583512 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.148416669 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.894599018 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.520371303 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.340445013 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.171231315 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.938382254 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.133750935 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.351087198 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.164056586 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.335234941 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.010257616 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.207631236 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.904477413 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.554579391 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.168052622 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.277783305 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.08724779 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.69381348 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.23910018 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.549140526 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.069321053 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.370044964 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.638710428 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.257315309 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.120347154 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.441937968 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.258637187 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.480826387 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.629921141 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.539317927 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.558168546 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.466536761 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.445965369 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.699884474 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.443070531 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428056466 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.1601971 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.184924593 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.2887584 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.544182403 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.521507374 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.163583036 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.699769076 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430044618 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.3295741 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.475355103 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.408480525 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.885150739 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.429196472 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.333796044 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.468325017 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.262038731 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.533457801 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.307215491 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.358833351 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.214787618 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.29896791 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.40011067 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.464636423 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.595448605 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.54032498 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.834522426 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.3825728 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.970745936 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.046047163 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.778035113 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.221151261 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.918757092 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.711404717 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.228220518 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.576293432 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.829639276 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.35482161 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.909920679 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.437206486 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.361969162 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.34691643 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.721759222 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.226452672 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.893159883 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.583599964 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.204987448 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.576036195 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.245842573 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.373047192 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.991160275 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.714723801 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.214695241 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.854138028 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.621079015 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.776314092 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.91700012 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.219818579 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.382221772 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.813743476 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.193128967 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.209173272 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.28683423 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.753056714 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.216072747 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.772113402 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.315186381 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.458513579 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.213841193 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.278520131 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.213200948 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.392242074 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.401117905 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.456134349 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.492316109 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.352664829 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.216454615 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.003140416 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.911615898 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.316934498 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.480099368 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.208325482 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.608251487 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.055011013 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.205268522 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.818993296 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.428067445 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.194929753 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600663646 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.469860667 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.237185729 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.381304022 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.206456812 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58639693 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.371380357 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.699303772 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.440201835 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.199243983 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.29367195 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.210595848 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.747578222 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.58153051 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.037673652 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.20661654 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.503118669 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.194578608 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.820588502 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.854535249 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.35492019 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.283319832 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.119890226 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.910971335 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.998175935 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.472084786 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.199769727 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.418559064 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.710381282 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.180599372 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.829958876 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.216719732 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.418651287 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.531179098 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.177955009 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.352455166 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.232582865 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.198770514 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.716781216 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.211005631 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.525582135 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.192343209 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.771813919 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.222221702 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.290384817 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.463013096 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.613431581 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.24748469 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.938435982 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.389090478 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.22978626 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.221949089 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.553118575 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.401985035 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.466614026 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.59756904 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.410634271 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.651638494 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.105716274 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.841299331 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.362404734 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.510792201 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.061010192 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.765550834 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.293250443 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.844363224 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.825254246 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.35874171 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.794227466 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.455554354 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.940271007 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.286834541 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.679443742 seconds)
  done (took 1992.593704859 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.196182005 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.329901422 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.231200167 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.221675335 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.27397316 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.237648765 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.316472682 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.238130853 seconds)
  done (took 51.223924273 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.204989881 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.216372359 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.494266554 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.435496658 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.19542069 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.27330275 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.439185814 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.877385385 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.22210268 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.146539875 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.330899387 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.430901702 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.222063811 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.223788652 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.021434182 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.355204241 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.202773566 seconds)
  done (took 94.535252264 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.237057689 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.248996011 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.202634072 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.961861745 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.197259987 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.646307607 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.221612943 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.215200224 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.713013402 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.901664066 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.271374907 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.362110822 seconds)
  done (took 82.392584823 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.246448756 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.243373133 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.241559046 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.238814996 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.238081836 seconds)
  done (took 7.414424565 seconds)
done (took 2471.383762019 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.43709845 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.64414711 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.754874851 seconds)
  done (took 4.602433683 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.268210079 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.330185189 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.418271982 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.353733634 seconds)
  done (took 6.582950628 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.512247429 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.696260025 seconds)
  done (took 4.414769645 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.555536927 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.226054716 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.763338465 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.228495869 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.226752452 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.218845526 seconds)
  done (took 19.901118467 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.238961891 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.244565386 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.246874404 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.236603046 seconds)
  done (took 6.172414598 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.208435795 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.261445207 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.21611601 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.237311603 seconds)
  done (took 19.137962249 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.523678983 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.488232316 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.985712633 seconds)
  done (took 6.220647966 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.042366983 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.354312738 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.019095634 seconds)
  done (took 6.634308634 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.109370653 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.138673948 seconds)
  done (took 5.46137528 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.388880481 seconds)
  done (took 2.604274327 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.702516791 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.709248428 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.873255416 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.946479937 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.125460905 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.516635798 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.631544271 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.458392564 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.737953916 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.759089447 seconds)
  done (took 18.672480461 seconds)
done (took 112.599042597 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.157195764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.686771302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.37522367 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.358383436 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.321611683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.372270329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.275484299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.17212569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.622026579 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.616110246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.017867781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.326046318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.315144079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.673940586 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.310155137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.636254023 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.636599829 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.162891564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.950101083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.565126997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.293309009 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.59662066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.763082692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.620624742 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.646248752 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.389341713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.172533322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.644166701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.162238233 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.182406126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.389028732 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.780996839 seconds)
  done (took 155.416163467 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.227203159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.238162397 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.242164841 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.222990468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.184375084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.230876267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.224951008 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.22074308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.010297772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.000999098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.243849356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.201230981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.239077563 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.221524352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.245597076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.216306075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.240987071 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.231902576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.233508171 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.236026733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.238368385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.931197086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.237485017 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.959071414 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.235946151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.236953263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.218713792 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.237943111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.239702932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.239760651 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.248149959 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.224747795 seconds)
  done (took 191.601410837 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.226168115 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.248600694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.239446366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.22615863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.243135606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.239206022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.230672578 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.230905492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.244508152 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.24946928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.242925149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.242194046 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.246908516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.232440182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.260228967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.248280008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.248560413 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.268373148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.27696796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.260317039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.244718227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.233456075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.245211641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.240914801 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.2533889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.250129663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.244084027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.24853475 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.261340822 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.266675671 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.262375809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.232299146 seconds)
  done (took 201.129642521 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.524601052 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.290980312 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.207454152 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.811166241 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.172801824 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.258599898 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.798566125 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.539887609 seconds)
  done (took 14.846065517 seconds)
done (took 564.240107808 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.878092657 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.135712018 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.406122771 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.469855459 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.800494554 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.548573127 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.472687175 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.661596849 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.967675569 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.639623153 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.693029063 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.455152765 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.046378907 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.453001072 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.420451175 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.670527849 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.61423948 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.936593416 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.435719659 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.078695941 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.443045545 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.118920552 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.700740299 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.025836177 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.689910143 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.165165087 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.445166749 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.628399822 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446716679 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.451950314 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.291074272 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.71416671 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.45686272 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.467125552 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.726243029 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.669852193 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.661507875 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.656733933 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.421481164 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.922029769 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.078210748 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.831717795 seconds)
  done (took 80.037728369 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.251096738 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.26345997 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.430110686 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.320087469 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.908902648 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.32699853 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.487903484 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.467960634 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.337626968 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.446358893 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.502177191 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.9340863 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.509027051 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.91040711 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.486685953 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.506657575 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.334980124 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.89174435 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.491174483 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.472713186 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.293431366 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.420895072 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.316743231 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.469085031 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.295361189 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.304975218 seconds)
  done (took 39.625050939 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.310943265 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.421051092 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.488137211 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.330616812 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.475629279 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.252341182 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.5704033 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.452236947 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.920220606 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.798545685 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.358972703 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.388932109 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 3.220606425 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.525207309 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.536678939 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.441107356 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.46766121 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.444571757 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.440834442 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 6.23394034 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.349068619 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.344782072 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.582352416 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 6.261787218 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.896880826 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 6.244264828 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.518306126 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.927426681 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.43854881 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.462353069 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.44990595 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.556544864 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.617059876 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.415257271 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.42993288 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.287662996 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.278055528 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.377351455 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.249195378 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.449315993 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.577203117 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.698435271 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.604010915 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.82608097 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.619496006 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.465776786 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.783406349 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.416006608 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.390687098 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 6.218961468 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.565006372 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.844650533 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.489531925 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.431773015 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.398200242 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.736762164 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.448865601 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.72013003 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.378984292 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.8548252 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.362272726 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.657496024 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.437038576 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.569364244 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.501078043 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.483440743 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.448978615 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.811559333 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.56790134 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.419048979 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.87284425 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.364724334 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.313509289 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.333202315 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.453417579 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.833108657 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.154113783 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.579199066 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.591487196 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.511736087 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.520264123 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.867435639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.270169283 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.602132254 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.326461881 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.157864529 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.35569287 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.708176622 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.451421654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.740649054 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.844072402 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.684871127 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.7051562 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.390382545 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.902132384 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.669489498 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.278070407 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.313395837 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.470856163 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.793438987 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.36421067 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.606589813 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.858747548 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.711172079 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.561557289 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 6.24837645 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.493213764 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.485658697 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.688058621 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.199512868 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.565419953 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.295170704 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.502746609 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.539562694 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.26693747 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.75085383 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.377236339 seconds)
  done (took 267.755683238 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.219507682 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.225070083 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.227067071 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.220741002 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.229433695 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.764193829 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.283538577 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.214768905 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.739529928 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.260988332 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.174392239 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.180982522 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.21397296 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.25877674 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.356460267 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.381277975 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.321258565 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.207574591 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.195057234 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.195957754 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.300093915 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.193635377 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.193167354 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.189658818 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.172937616 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.192899349 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.222321677 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.193351405 seconds)
  done (took 154.750690088 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.263815553 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.643423274 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.292263654 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.355065955 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.282765276 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.282885685 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.770820348 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.388482751 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.331735858 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.26180706 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.274453586 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.494664473 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.57436132 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.878414971 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.414972367 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.480632575 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.925620476 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.400405427 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.270736285 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.262219264 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.423648398 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.593333412 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.516219155 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.520498561 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.392962437 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.518067308 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.312180258 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.265750649 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.370053164 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.749906873 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.280017146 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.599557613 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.424200589 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.272299874 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.765542476 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.620426752 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.835875591 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.913080954 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.466256773 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.220432714 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.204720101 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.481356912 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.543185915 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.274734926 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.236796518 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.878427107 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.284778682 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.526390478 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.271993967 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.200146799 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.334601594 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.364319876 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.484801396 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.170502572 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.442001076 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.38047492 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.835799178 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.22064108 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.22602251 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.546545071 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.22373871 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.715391308 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.743945833 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.305236804 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.276257193 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.419442274 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.363122061 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.784958758 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.864430226 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.284698384 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.589559983 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.442036037 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.222712869 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.518235899 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.435396378 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.707335503 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.84370396 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.404029316 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.363258712 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.332899175 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.525953836 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.256022073 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.804698978 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.377983633 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.239648771 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.751968493 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.654186258 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.230940706 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.261457816 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.351577093 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.406058407 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.466328299 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.506263807 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.321220626 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.15327015 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.516509072 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.532190146 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.276204893 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.391560203 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.248059226 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.651377646 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.441946085 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.247699804 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.579365801 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.639161334 seconds)
  done (took 165.696181943 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.974165088 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.307492569 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.431502448 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.764466198 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.604025339 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.666381121 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.509479214 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.324517741 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.558275919 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.473803154 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.431147199 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.315943431 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.901622749 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.972438986 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.280066947 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.461671028 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.315134085 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.893569188 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.508534164 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.220522818 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.623575616 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.968529137 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.579537597 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.612198427 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.595704972 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.705169557 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.892104282 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.333611886 seconds)
  done (took 50.418764712 seconds)
done (took 759.516064074 seconds)
SAVING RESULT...
DONE!
