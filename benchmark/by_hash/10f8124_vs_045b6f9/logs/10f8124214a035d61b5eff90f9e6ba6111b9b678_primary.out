cset: moving following pidspec: 2020637
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.46645911 seconds)
loading group "string"... done (took 0.298991591 seconds)
loading group "linalg"... done (took 4.335042544 seconds)
loading group "parallel"... done (took 0.02308713 seconds)
loading group "find"... done (took 1.521272029 seconds)
loading group "tuple"... done (took 0.965846758 seconds)
loading group "dates"... done (took 0.265787902 seconds)
loading group "micro"... done (took 0.063174166 seconds)
loading group "io"... done (took 1.45318089 seconds)
loading group "frontend"... done (took 0.01229926 seconds)
loading group "scalar"... done (took 5.351708639 seconds)
loading group "sparse"... done (took 4.149724497 seconds)
loading group "alloc"... done (took 0.017455297 seconds)
loading group "broadcast"... done (took 0.414925981 seconds)
loading group "union"... done (took 3.977040786 seconds)
loading group "simd"... done (took 3.212421142 seconds)
loading group "random"... done (took 4.067152827 seconds)
loading group "inference"... done (took 1.90639857 seconds)
loading group "problem"... done (took 1.022423131 seconds)
loading group "array"... done (took 4.875734959 seconds)
loading group "misc"... done (took 1.103625673 seconds)
loading group "sort"... done (took 0.40676185 seconds)
loading group "collection"... done (took 6.317486342 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "inference"...
  (1/3) benchmarking "abstract interpretation"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 6.169186342 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.079904079 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.237038597 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.056199222 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 0.51843773 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 1.115122773 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.038972047 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.095529839 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.128655629 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.037517911 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.038296428 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.163631492 seconds)
  done (took 9.399137138 seconds)
  (2/3) benchmarking "optimization"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 6.666096279 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.128519386 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.326665937 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.176255591 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 1.860434901 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 0.171243233 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.071696671 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.312943392 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.266789942 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.065294107 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.060744623 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.485863115 seconds)
  done (took 11.374568594 seconds)
  (3/3) benchmarking "allinference"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 0.463320732 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.121387812 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.351933365 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.172863002 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 1.685772519 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 0.063713499 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.067866738 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.296008843 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.193055681 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.054746464 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.052239034 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.477180113 seconds)
  done (took 4.729343747 seconds)
done (took 26.266248308 seconds)
(2/4) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.047583543 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.146793935 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.02226434 seconds)
  done (took 0.924375772 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.028887091 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.036212118 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.037600994 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.026212254 seconds)
  done (took 0.853943689 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.02738761 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.028947083 seconds)
  done (took 0.780469387 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.194385627 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.206333042 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.057734076 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.037381636 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.0353144 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.037191826 seconds)
  done (took 0.84283607 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.032663681 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.022983484 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.023148126 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.023279984 seconds)
  done (took 0.864287116 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.022171027 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.021441707 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022434823 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.044139521 seconds)
  done (took 0.836977212 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.055781829 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.057542173 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.141828744 seconds)
  done (took 0.982180096 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.041014433 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.03305219 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.034862834 seconds)
  done (took 0.838986098 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.059677527 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.045907533 seconds)
  done (took 0.834603244 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.042624466 seconds)
  done (took 0.772070507 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.040487906 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.053343426 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.090422997 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.051798072 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.106660324 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.080763183 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.019837406 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.03709747 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.033765481 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.019825789 seconds)
  done (took 1.26445842 seconds)
done (took 11.064202409 seconds)
(3/4) benchmarking "tuple"...
  (1/1) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.047442508 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.021341136 seconds)
  done (took 0.800372935 seconds)
done (took 1.535548381 seconds)
(4/4) benchmarking "scalar"...
  (1/1) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063876942 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077835011 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.050933375 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.050620319 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.050901118 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.050690404 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.050810997 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.050863592 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.051341088 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.051120883 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.050987655 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.050962991 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.050768266 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.050861681 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.050836242 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.050464968 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.050903338 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.050310359 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.050580966 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.050603156 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.05119544 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.051042744 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.05125141 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.050730103 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.050821701 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.050830566 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.050745181 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.050494917 seconds)
  done (took 2.232172169 seconds)
done (took 2.966666985 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "inference"...
  (1/3) benchmarking "abstract interpretation"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 31.039599657 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.253275199 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 30.794422517 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.351229562 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 31.273201913 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 32.160208013 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 30.954022774 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 31.278109267 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.006438303 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 31.068666234 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 31.022883953 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.295016613 seconds)
  done (took 375.232892397 seconds)
  (2/3) benchmarking "optimization"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 31.155406624 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 30.881897869 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 31.043265504 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.371467824 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 30.939068517 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 31.29085648 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.338645313 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 31.026655527 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.157891133 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 31.468764552 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 30.930020243 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.440471952 seconds)
  done (took 374.7795178 seconds)
  (3/3) benchmarking "allinference"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 31.488203385 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.319831751 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 31.393749186 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 30.746829577 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 32.121795603 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 31.366245565 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.114550704 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 31.130722116 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.29722975 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 31.049297811 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 30.967125068 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.887628714 seconds)
  done (took 376.619194322 seconds)
done (took 1127.42046269 seconds)
(2/4) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.006419675 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.341437857 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.514981127 seconds)
  done (took 3.58975483 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.886971499 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.933291504 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.053371172 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.1863001 seconds)
  done (took 4.79349363 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.012989243 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.135656453 seconds)
  done (took 2.882485707 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.037090327 seconds)
  (6/15) benchmarking "18129"...
  done (took 5.756096959 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.107584035 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.734996299 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.734665824 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.731797133 seconds)
  done (took 17.939791325 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.772707509 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.777061567 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.772680412 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.767190014 seconds)
  done (took 3.822210917 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.924754653 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.226755383 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.370017851 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 5.739340261 seconds)
  done (took 15.994044574 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.899231682 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.81775007 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.483334155 seconds)
  done (took 3.966295973 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.369767829 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.799276815 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.341664811 seconds)
  done (took 4.243864392 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.68850007 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.929728804 seconds)
  done (took 4.351198205 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.906424892 seconds)
  done (took 1.638930554 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.57461246 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.053125237 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.053701208 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.089493822 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 1.251070129 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.874271286 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.113840459 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.968890096 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.014918696 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.301365336 seconds)
  done (took 12.03010676 seconds)
done (took 84.900938837 seconds)
(3/4) benchmarking "tuple"...
  (1/1) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.135822913 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.802478772 seconds)
  done (took 2.671815336 seconds)
done (took 3.428312576 seconds)
(4/4) benchmarking "scalar"...
  (1/1) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.820511904 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.793770382 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.793368221 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.822369581 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.794240447 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.793412678 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.820440583 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.791295108 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.796568699 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.044928384 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.793925294 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.79413181 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.826346816 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.799501465 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.79107338 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.822853761 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.820023192 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.819898751 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.798565261 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.794224897 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.041856508 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.794024683 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.820268178 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.789286489 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.798623012 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.789917066 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.794671119 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.799706562 seconds)
  done (took 23.697610462 seconds)
done (took 24.43026649 seconds)
SAVING RESULT...
DONE!
