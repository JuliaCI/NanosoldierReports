cset: moving following pidspec: 2031367
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.488569173 seconds)
loading group "string"... done (took 0.315702389 seconds)
loading group "linalg"... done (took 4.360230711 seconds)
loading group "parallel"... done (took 0.023529204 seconds)
loading group "find"... done (took 1.546362444 seconds)
loading group "tuple"... done (took 0.972337727 seconds)
loading group "dates"... done (took 0.266113542 seconds)
loading group "micro"... done (took 0.063944691 seconds)
loading group "io"... done (took 1.461125853 seconds)
loading group "frontend"... done (took 0.012402188 seconds)
loading group "scalar"... done (took 5.362307348 seconds)
loading group "sparse"... done (took 4.151617119 seconds)
loading group "alloc"... done (took 0.016377476 seconds)
loading group "broadcast"... done (took 0.416403253 seconds)
loading group "union"... done (took 3.988022178 seconds)
loading group "simd"... done (took 3.203832051 seconds)
loading group "random"... done (took 3.949037652 seconds)
loading group "inference"... done (took 1.907997807 seconds)
loading group "problem"... done (took 1.170487321 seconds)
loading group "array"... done (took 4.712586249 seconds)
loading group "misc"... done (took 1.023939581 seconds)
loading group "sort"... done (took 0.395069595 seconds)
loading group "collection"... done (took 6.279382348 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "inference"...
  (1/3) benchmarking "abstract interpretation"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 6.245370522 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.08417507 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.240131392 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.05658101 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 0.540538775 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 1.125884923 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.038929378 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.093272031 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.130046148 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.037476109 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.03797989 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.162811376 seconds)
  done (took 9.512387636 seconds)
  (2/3) benchmarking "optimization"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 6.710747614 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.12943276 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.326121191 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.174791278 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 1.825510567 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 0.171424846 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.069880619 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.291473589 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.261301859 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.06304077 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.060862407 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.478340274 seconds)
  done (took 11.338887218 seconds)
  (3/3) benchmarking "allinference"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 0.452486338 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.121097189 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.354843547 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.169810284 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 1.653568659 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 0.063161729 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.066812227 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.290981731 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.196272134 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.055580938 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.051889012 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.46860936 seconds)
  done (took 4.670381422 seconds)
done (took 26.283061637 seconds)
(2/4) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.04733028 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.155076645 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.023273422 seconds)
  done (took 0.930966497 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.028907467 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.03666352 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.0387981 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.026535769 seconds)
  done (took 0.852170784 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.027199365 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.029810559 seconds)
  done (took 0.778321533 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.198176821 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.208209609 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.057693433 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.037566257 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034814602 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.037110635 seconds)
  done (took 0.835305023 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.033463025 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.023283628 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.023386708 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.023387507 seconds)
  done (took 0.863660141 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.022049528 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.021455095 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022195848 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.04475938 seconds)
  done (took 0.834609841 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.056153634 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.057994113 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.142846998 seconds)
  done (took 0.981517875 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.041020581 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.032954436 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.034956268 seconds)
  done (took 0.836572959 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.059836782 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.045519054 seconds)
  done (took 0.832696165 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.042770131 seconds)
  done (took 0.770761391 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.041667447 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.053357437 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.096661351 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.054050176 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.110092168 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.082689703 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.020850545 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.038333562 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.034366675 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.020584984 seconds)
  done (took 1.277370725 seconds)
done (took 11.069129893 seconds)
(3/4) benchmarking "tuple"...
  (1/1) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.047895508 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.021194818 seconds)
  done (took 0.796030429 seconds)
done (took 1.527256443 seconds)
(4/4) benchmarking "scalar"...
  (1/1) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06384053 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079901795 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.053109878 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.052328672 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.052766372 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.052543902 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.052568417 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.052752277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.05241606 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.052708587 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.052537215 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.052354616 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.052258358 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.052458268 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.052523113 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.052561326 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.052362721 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.052399508 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.052458079 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.052554047 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.052406083 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.052381038 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.052275381 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.052633911 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.052290591 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.051954962 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.052713908 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.052348552 seconds)
  done (took 2.273870825 seconds)
done (took 3.005137699 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "inference"...
  (1/3) benchmarking "abstract interpretation"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 30.875148502 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.119831635 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 31.626589537 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.256668705 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 31.152347155 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 32.337242743 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 30.85121365 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 31.085805357 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 30.843713618 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 30.954335427 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 30.91952142 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.143349394 seconds)
  done (took 374.896042397 seconds)
  (2/3) benchmarking "optimization"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 30.77182685 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.52269526 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 30.802077821 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.21930961 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 32.66777687 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 31.166153268 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.213199423 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 30.758776753 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 30.821228348 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 30.911305629 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 30.827042066 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.140011732 seconds)
  done (took 374.553522499 seconds)
  (3/3) benchmarking "allinference"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 31.15145337 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.127950454 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 31.2449434 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.433695142 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 31.485245359 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 31.236404275 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 30.962417409 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 30.835867368 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.102295609 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 31.23185995 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 31.032817475 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.578783039 seconds)
  done (took 375.156409544 seconds)
done (took 1125.393273787 seconds)
(2/4) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.003537725 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.33035429 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.505165049 seconds)
  done (took 3.565370723 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.882689509 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.93210445 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.083035065 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.238975637 seconds)
  done (took 4.868916286 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.01161907 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.135564461 seconds)
  done (took 2.880750567 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.02902785 seconds)
  (6/15) benchmarking "18129"...
  done (took 5.75059086 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.108594503 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.733140219 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.728727687 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.730935809 seconds)
  done (took 17.928212617 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.770448687 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.774440127 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.770245303 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.764979346 seconds)
  done (took 3.809733061 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 3.04804189 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.204325027 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.518508998 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 5.735340474 seconds)
  done (took 16.236822798 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.897790855 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.815019464 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.484820346 seconds)
  done (took 3.957208728 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.365249747 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.796631134 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.342252584 seconds)
  done (took 4.235011555 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.677470738 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.927272921 seconds)
  done (took 4.33474322 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.904093403 seconds)
  done (took 1.634657645 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.57846633 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.050153243 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.051489596 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.087299476 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 1.226843392 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.872422822 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.112199642 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.96988315 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.012960076 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.298313012 seconds)
  done (took 11.99297724 seconds)
done (took 85.079469186 seconds)
(3/4) benchmarking "tuple"...
  (1/1) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.131239748 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.800565734 seconds)
  done (took 2.661043705 seconds)
done (took 3.414947564 seconds)
(4/4) benchmarking "scalar"...
  (1/1) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.816568954 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.786083663 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.784371104 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.820117308 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.786412347 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.78544662 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.815047827 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.787997916 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.792618989 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.979777944 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.786527131 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.786209964 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.81516453 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.794619423 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.786338605 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.817250283 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.816062213 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.815717567 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.785934916 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.791428724 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.980204766 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.783712401 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.820686687 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.782855194 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.792028573 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.783317473 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.786197469 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.793038204 seconds)
  done (took 23.402404583 seconds)
done (took 24.133055802 seconds)
SAVING RESULT...
DONE!
