cset: moving following pidspec: 2715352
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.267069839 seconds)
loading group "string"... done (took 0.283797158 seconds)
loading group "linalg"... done (took 3.733777538 seconds)
loading group "parallel"... done (took 0.025859922 seconds)
loading group "find"... done (took 1.380123861 seconds)
loading group "tuple"... done (took 0.990194585 seconds)
loading group "dates"... done (took 0.248631852 seconds)
loading group "micro"... done (took 0.062590665 seconds)
loading group "io"... done (took 1.377954463 seconds)
loading group "frontend"... done (took 0.0119752 seconds)
loading group "scalar"... done (took 4.862724462 seconds)
loading group "sparse"... done (took 3.382708631 seconds)
loading group "alloc"... done (took 0.015282097 seconds)
loading group "broadcast"... done (took 0.368194958 seconds)
loading group "union"... done (took 3.759458773 seconds)
loading group "simd"... done (took 2.854379201 seconds)
loading group "random"... done (took 3.13401885 seconds)
loading group "inference"... done (took 2.096031709 seconds)
loading group "problem"... done (took 1.203728535 seconds)
loading group "array"... done (took 4.749412871 seconds)
loading group "misc"... done (took 0.864732553 seconds)
loading group "sort"... done (took 0.355136355 seconds)
loading group "collection"... done (took 6.43473563 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.390904889 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.174712824 seconds)
    (2/2) benchmarking "String"...
    done (took 0.116448155 seconds)
  done (took 0.957779633 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.134151453 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.021365507 seconds)
    (3/3) benchmarking "different"...
    done (took 0.02100986 seconds)
  done (took 0.835168699 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021647899 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.082383176 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022768379 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0234539 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.023405651 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022774645 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022545185 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022609815 seconds)
  done (took 0.879998757 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.032711822 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019830276 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020736181 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020200172 seconds)
  done (took 0.752413613 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.026849691 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.076115956 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.0199193 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019814582 seconds)
  done (took 0.799340666 seconds)
done (took 5.421908841 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.381510868 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.129276819 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033730409 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.160912027 seconds)
  done (took 1.394855158 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020774887 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025717849 seconds)
  done (took 0.712621303 seconds)
done (took 2.766606798 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.39931408 seconds)
  done (took 4.055317757 seconds)
done (took 4.716276249 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162062585 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020903971 seconds)
  done (took 0.846175181 seconds)
done (took 1.561372089 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.696631975 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.810927155 seconds)
    (2/2) benchmarking "String"...
    done (took 0.887835859 seconds)
  done (took 2.407129956 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.969132008 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.703738777 seconds)
    (3/3) benchmarking "different"...
    done (took 0.7219443 seconds)
  done (took 3.058308468 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.713097857 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.419112628 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.938614613 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.66353969 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.674701154 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.105715567 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.321791119 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.013875307 seconds)
  done (took 22.802209125 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.89100965 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.969314917 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.882456912 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.94756316 seconds)
  done (took 8.398030102 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.969605885 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.054270269 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.053288483 seconds)
    (4/4) benchmarking "different"...
    done (took 5.665751577 seconds)
  done (took 9.483478356 seconds)
done (took 54.294310399 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.578573974 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.750017596 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.696839639 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.327964102 seconds)
  done (took 16.015686011 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.893672848 seconds)
    (2/2) benchmarking "read"...
    done (took 1.024304118 seconds)
  done (took 2.593541366 seconds)
done (took 19.27168806 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.869650819 seconds)
  done (took 7.532705393 seconds)
done (took 8.195237502 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.778476597 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.041913903 seconds)
  done (took 4.484555744 seconds)
done (took 5.158984052 seconds)
SAVING RESULT...
DONE!
