cset: moving following pidspec: 2717036
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.285098075 seconds)
loading group "string"... done (took 0.283697429 seconds)
loading group "linalg"... done (took 4.225038658 seconds)
loading group "parallel"... done (took 0.026057155 seconds)
loading group "find"... done (took 1.605967505 seconds)
loading group "tuple"... done (took 1.00965439 seconds)
loading group "dates"... done (took 0.247548538 seconds)
loading group "micro"... done (took 0.062502762 seconds)
loading group "io"... done (took 1.403730154 seconds)
loading group "frontend"... done (took 0.011715068 seconds)
loading group "scalar"... done (took 4.946257295 seconds)
loading group "sparse"... done (took 3.462348899 seconds)
loading group "alloc"... done (took 0.015145613 seconds)
loading group "broadcast"... done (took 0.37376326 seconds)
loading group "union"... done (took 3.785792449 seconds)
loading group "simd"... done (took 2.940965074 seconds)
loading group "random"... done (took 3.28129263 seconds)
loading group "inference"... done (took 2.062110108 seconds)
loading group "problem"... done (took 1.236048212 seconds)
loading group "array"... done (took 4.905610529 seconds)
loading group "misc"... done (took 0.90042141 seconds)
loading group "sort"... done (took 0.353250284 seconds)
loading group "collection"... done (took 6.482540387 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.399349595 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.180087568 seconds)
    (2/2) benchmarking "String"...
    done (took 0.122248107 seconds)
  done (took 0.985012123 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.141831892 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020856721 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020752724 seconds)
  done (took 0.861602215 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021377706 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.082034252 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022691241 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.023063577 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.02308323 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.02251354 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022356441 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022511691 seconds)
  done (took 0.898325146 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031524544 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019884709 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.02086251 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.019982903 seconds)
  done (took 0.769904421 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.026166534 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.083521286 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019403674 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019561102 seconds)
  done (took 0.827005867 seconds)
done (took 5.566147501 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385121646 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.135332066 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033112363 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.166537828 seconds)
  done (took 1.426917558 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020139321 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025261512 seconds)
  done (took 0.730394788 seconds)
done (took 2.837612874 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.737346046 seconds)
  done (took 4.411331955 seconds)
done (took 5.089947162 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159716257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020449754 seconds)
  done (took 0.862527374 seconds)
done (took 1.561257419 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.772073575 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.831286016 seconds)
    (2/2) benchmarking "String"...
    done (took 0.916217193 seconds)
  done (took 2.450815241 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.995642251 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.727203371 seconds)
    (3/3) benchmarking "different"...
    done (took 0.742353044 seconds)
  done (took 3.149494545 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.695598651 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.204351712 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.957906143 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.684674748 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.694448854 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.134158351 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.353835693 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.050183654 seconds)
  done (took 22.764965771 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.98968028 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.948997734 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.962680632 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.96927352 seconds)
  done (took 8.599244594 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.995842679 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.955259018 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.955429489 seconds)
    (4/4) benchmarking "different"...
    done (took 0.78302203 seconds)
  done (took 4.392858556 seconds)
done (took 49.576196395 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.584992408 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.769939672 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.719171138 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.325853326 seconds)
  done (took 16.085578821 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.920276367 seconds)
    (2/2) benchmarking "read"...
    done (took 1.042563571 seconds)
  done (took 2.658706762 seconds)
done (took 19.428599623 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.912689785 seconds)
  done (took 7.595573443 seconds)
done (took 8.27980347 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.79514881 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.036244928 seconds)
  done (took 4.514035117 seconds)
done (took 5.22086235 seconds)
SAVING RESULT...
DONE!
