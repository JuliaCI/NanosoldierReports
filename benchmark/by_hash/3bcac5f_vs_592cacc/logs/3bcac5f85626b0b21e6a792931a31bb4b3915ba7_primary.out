cset: moving following pidspec: 237015
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.278916946 seconds)
loading group "shootout"... done (took 0.806062799 seconds)
loading group "string"... done (took 0.2224419 seconds)
loading group "linalg"... done (took 3.224094287 seconds)
loading group "parallel"... done (took 0.022076718 seconds)
loading group "find"... done (took 1.200366938 seconds)
loading group "tuple"... done (took 0.717760012 seconds)
loading group "union"... done (took 3.265261803 seconds)
loading group "dates"... done (took 0.162479203 seconds)
loading group "micro"... done (took 0.059433837 seconds)
loading group "simd"... done (took 0.371468147 seconds)
loading group "io"... done (took 1.423490898 seconds)
loading group "random"... done (took 2.322835464 seconds)
loading group "problem"... done (took 1.16335965 seconds)
loading group "array"... done (took 4.394867351 seconds)
loading group "misc"... done (took 1.123280444 seconds)
loading group "scalar"... done (took 3.640532854 seconds)
loading group "sort"... done (took 0.317641822 seconds)
loading group "sparse"... done (took 3.582578785 seconds)
loading group "collection"... done (took 6.095910471 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486947886 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.076247459 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.257606355 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.074893565 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.276557473 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.085153129 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.086720918 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.073621713 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.148872668 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159716326 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.215589548 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.365984173 seconds)
done (took 5.065780552 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.314038515 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.032801597 seconds)
    (2/2) benchmarking "String"...
    done (took 0.126941837 seconds)
  done (took 0.761386048 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.137801907 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.016319569 seconds)
    (3/3) benchmarking "different"...
    done (took 0.023062773 seconds)
  done (took 0.785918208 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020597059 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.097860331 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021394798 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022005746 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022056642 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021369788 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021217839 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021302769 seconds)
  done (took 0.820073408 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029524653 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023354849 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021675305 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.023093359 seconds)
  done (took 0.718627115 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022757913 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.091781221 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.027304501 seconds)
    (4/4) benchmarking "different"...
    done (took 0.026869761 seconds)
  done (took 0.761952236 seconds)
done (took 4.782116356 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.199035015 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.783509617 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.867616336 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.177678657 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.34457258 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.319971656 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.077811603 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.233695075 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.149705994 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.035032469 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.18584322 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.037867603 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.518998307 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.502663841 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.029557736 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.159478456 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.596789993 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.03916754 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.072182814 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.226468408 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.034916019 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039411849 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043854916 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.029551275 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.105248087 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.138057231 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.594543184 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.065292146 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.024741991 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.048988076 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.028192607 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.029375156 seconds)
  done (took 9.377888576 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.160250844 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.147867473 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.025727701 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.06161388 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.05697888 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.027066416 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.033675544 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.026056161 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.048548519 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.095896131 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.049364033 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.163636494 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.025205883 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.028337442 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147205167 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.121545499 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.039382335 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.040330219 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.024639011 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.039122262 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.051475791 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.036740702 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.034777085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.033517844 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.070930592 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.09246699 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.042667943 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.069043837 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.02348775 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034861451 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.056654222 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.06478082 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.024888644 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.02287946 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.067825579 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.045858963 seconds)
  done (took 2.802352563 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.776101713 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.117404897 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.140821594 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.181253322 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068526632 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.051800314 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.175168338 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.079046308 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.058079846 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025887543 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.200106449 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.681762045 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.17105156 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.348946421 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028774525 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.28526098 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.902258903 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.980083126 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.024407182 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.025164906 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.13617752 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.028326026 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.175583822 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.023366319 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.25785512 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.706269794 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.028478309 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026146655 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.054320333 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.144412057 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.023322345 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.099117126 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.048878601 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.026764791 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.572491107 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.023084952 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.021350043 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.044406285 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.053021456 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.02309837 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.024566006 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.032267787 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.022249724 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.073055769 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.033972109 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.494151449 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025824873 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.686701711 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 4.80639914 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.031627154 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.02921072 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06278187 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.021873638 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.025064931 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.561065335 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.092348144 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.024392661 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.299651858 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.026140144 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.025202728 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.047338181 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.057082318 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.024767191 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.02623543 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.028633885 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.042807259 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.106185695 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.034828798 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.044780483 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.023807624 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.026272515 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.023794638 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.411909587 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.030307279 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.13055583 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.022477942 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.029010403 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.025003453 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.02483094 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.065642624 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.052107019 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.050848386 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.030471857 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.026736908 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.026118974 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.550183333 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.988295302 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.026112202 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.027378705 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.541064975 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.021885958 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024106812 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.026016751 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.045955445 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.025093773 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.020965496 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.062791784 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.026070267 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.131257723 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.352155777 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.027285508 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.022561726 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.432519523 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.025501595 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.235499802 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.076021193 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.026087205 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.061063696 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.025270202 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.022568905 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.029669793 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.022817645 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.049357725 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.024030641 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.024621179 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.024093956 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.025272109 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.027063459 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.02593962 seconds)
  done (took 24.78084799 seconds)
done (took 39.333216612 seconds)
(4/20) benchmarking "parallel"...
done (took 0.746469152 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.209330632 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.051006049 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019901762 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.161470031 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.047026527 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.133439029 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.169890661 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.123663609 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.045227423 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.044492312 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.045209325 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.176104728 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.181527202 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.04857235 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.118380568 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.18405242 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.046673629 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019947116 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.04485735 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.045183749 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.046067076 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020132282 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.046597478 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.047629765 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.115761828 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.045169661 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.02017821 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.113832459 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.046329924 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.116538572 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.046717921 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.046488447 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.046765681 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.116221675 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.048014418 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.117067876 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020483109 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.04794003 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.049007196 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.050070468 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.049324274 seconds)
  done (took 3.899899814 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.046283731 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039180738 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.05732778 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.019416153 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.02986818 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.040689874 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.019110762 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.039842818 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.057062507 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039394857 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039083041 seconds)
  done (took 1.195723121 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041392938 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039056693 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.046973792 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018154979 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029838159 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039102235 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018060381 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038705549 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.05507975 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039901409 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.040966933 seconds)
  done (took 1.123794225 seconds)
done (took 6.911090619 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.154203467 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.122401424 seconds)
  done (took 1.004418168 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.580549265 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.201975363 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.126523794 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.243758708 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.12116388 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.153086008 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.726401599 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.156031508 seconds)
  done (took 7.059930771 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.079606535 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.145250535 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.027241664 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.025283107 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.026053647 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.026343643 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.028243461 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.026417092 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.025497833 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.027374783 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.02621626 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.023982694 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.024546487 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025626082 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.023691048 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.023732156 seconds)
  done (took 1.44353466 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.028477335 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.027972253 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.028301629 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017960622 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.028043027 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.026671059 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.028242417 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.030071044 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.027683463 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.027923763 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.026521133 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.029663441 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.028066956 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.026664894 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.028799759 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.01805743 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.029127127 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.028418524 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.030244791 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.02827316 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.028014789 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.026616344 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.029538589 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.027399699 seconds)
  done (took 1.407862917 seconds)
done (took 11.632829707 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.135424981 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.031701594 seconds)
  done (took 0.894265829 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.125723103 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.126116606 seconds)
  done (took 1.003523673 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.02822661 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016686731 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.032350391 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.024791144 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016971058 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016693627 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.031281276 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016923164 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016688102 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016925128 seconds)
  done (took 0.952584819 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019588357 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.024136601 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.022114612 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.020579019 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.02227539 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.018459183 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.020496246 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.018061634 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.023805069 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.017636321 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.021148697 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.039588599 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.021803649 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.04185392 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.021540136 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.022417144 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.023418764 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.021502755 seconds)
  done (took 1.159692147 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.018331546 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.018022952 seconds)
  done (took 0.798238407 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.02111833 seconds)
    (2/7) benchmarking "second"...
    done (took 0.018714756 seconds)
    (3/7) benchmarking "month"...
    done (took 0.020222457 seconds)
    (4/7) benchmarking "year"...
    done (took 0.019627825 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.017782664 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.017356308 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.017839776 seconds)
  done (took 0.879236402 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.428505825 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.098289724 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338695286 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.027466071 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.039386482 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247683572 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.021647604 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.026845803 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.026524095 seconds)
  done (took 2.02962446 seconds)
done (took 8.47890327 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.045639417 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.148544676 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.151607946 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.45271111 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.037569858 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.025212511 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.059371358 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.225913326 seconds)
done (took 1.926075003 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.280495486 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.360756714 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.200184449 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.022047235 seconds)
  done (took 2.309984171 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.317342177 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141259694 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.03334045 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.02400306 seconds)
  done (took 1.275939286 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022448391 seconds)
    (2/2) benchmarking "read"...
    done (took 0.028462976 seconds)
  done (took 0.781785482 seconds)
done (took 5.384647029 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030964552 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.017477836 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.028213724 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.020020258 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.0195208 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.019152672 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.018787042 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.019410109 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.017510629 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.019531338 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.01919097 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.019249594 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.018505377 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018299325 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017980969 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.019196343 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.017179712 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.018942145 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018804998 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018691567 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.01700808 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.019466749 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.018775311 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.019302409 seconds)
  done (took 1.199371394 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.039338134 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022377258 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022342589 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.022219527 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023476342 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.022315915 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022932109 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.023152893 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.023627989 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.022271831 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024800694 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.025229991 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.022801854 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.025382521 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022977248 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.024991904 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.023847312 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022761248 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022221634 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.024865194 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.02423542 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024015916 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.025097167 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.023937558 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.024700835 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.025277945 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.023206953 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.024070166 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024185006 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.025258067 seconds)
  done (took 1.503159603 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023413107 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015435302 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015733411 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025997059 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015171212 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015373515 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015706685 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015398298 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.016392049 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.01717144 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.016434043 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015426727 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.01606909 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015167639 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015442489 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.016295552 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.02127331 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.037902285 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.016696702 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.016065995 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.020926185 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.016024376 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015692092 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015793621 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.016061881 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015578487 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.015601342 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015956071 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.016006132 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.01653913 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015775809 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.020591579 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.022484366 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.016468942 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.027091822 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.021478161 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.016643342 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.020642619 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.017078414 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015867743 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.016144563 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.016079384 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.016130491 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.016194326 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.026884441 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.0157284 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016399121 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.016066117 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.016137957 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015561715 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015726802 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.017697221 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.022380962 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.017671627 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.016101104 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.017378634 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015764671 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.016589306 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.016284803 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.016396923 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.016025773 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019886443 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016649665 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015929591 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037272494 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016493568 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0257298 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015230785 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015509103 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019428046 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015788139 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035355763 seconds)
  done (took 2.085262176 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028793621 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025400989 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.034584246 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024969851 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018648119 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016068688 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019037213 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016115191 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02557342 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.01957998 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016063282 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.01909108 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.026050743 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019936609 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017278943 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.025392211 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.020051509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019391718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016918397 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019951794 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017383403 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0193692 seconds)
  done (took 1.19843827 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111843225 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.024028784 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.070492248 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.02323934 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.022502398 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.024068416 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.025250874 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.024671102 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024822105 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025443506 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02562333 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024092185 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021872269 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024471738 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024587633 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024365853 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.023429026 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024329102 seconds)
  done (took 1.345055395 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.040702762 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.025610539 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.051968334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.025111541 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.025977891 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.02252961 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.030034657 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.028872643 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.021978256 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.025595125 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.02825067 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021799195 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.021708462 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.026075637 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.02288839 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.02717124 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.022558346 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.026433338 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.028924623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.029568368 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.030265166 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.028552335 seconds)
  done (took 1.367734666 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.037129058 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021885086 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.040323014 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.025202625 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.016866148 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.017064857 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.02493335 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.023889483 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.024917151 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.022313582 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023286631 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.016641511 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.025802054 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.02467882 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.026779804 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023890392 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022931102 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.024736693 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.023514497 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.016961102 seconds)
  done (took 1.250280233 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130544045 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.01947509 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.018811588 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.023228669 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.018959288 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.019241499 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.024299159 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.019576249 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.019649541 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.045279615 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.019377432 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.019200268 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.02376464 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021892286 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.018993345 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023319209 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.023186948 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.023239596 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.01859122 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.018753913 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.044162361 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.018662838 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022728361 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017952889 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.018420084 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.018551524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.019151893 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.022065923 seconds)
  done (took 1.501043879 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039627689 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015882805 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.016062766 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019926092 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.01978967 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.025563664 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019499845 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019411066 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015548344 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.016304227 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.018259438 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.015735523 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015674342 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.025165739 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.015272344 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017561908 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024730931 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019405333 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.027680902 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.026409879 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.018856956 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.026407686 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.019073122 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.016809289 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.027102408 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.019027402 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020769125 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.021488416 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018930085 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.016416782 seconds)
  done (took 1.396776921 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.030827807 seconds)
    (2/2) benchmarking "in"...
    done (took 0.02872588 seconds)
  done (took 0.824608968 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.021215602 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0361413 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015743173 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.03031953 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.027785981 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020235624 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.027508084 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.029406213 seconds)
  done (took 0.967860924 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.129162421 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.154545046 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.018750572 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.018419459 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.1279136 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088594852 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.139219618 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.031849904 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032930182 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.021737776 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.018886767 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.138239248 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.017976118 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.032279028 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020024343 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.029306486 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.026756299 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.038593669 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.032896296 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.017204553 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.031496515 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.018761375 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.017999227 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.0190758 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.019235219 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.025918669 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.034853818 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.031952389 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027001569 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.016459108 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.038130313 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.017428155 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.018117057 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.027418604 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.130305442 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.018012879 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.057653583 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.017484755 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.02174163 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.01723013 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.030474962 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.039303896 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.032501722 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.036341192 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.018453451 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.01935453 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.017648899 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.018977283 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.021499846 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.026814097 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.017464701 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.025471816 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.017380581 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.019086639 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.028728777 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0173557 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.021837538 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.027245814 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.031677175 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.02811273 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.029965715 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.033050662 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.026403213 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.025181513 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.017477344 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.038616554 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.019174708 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.031341306 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.032680376 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.018557573 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.031015675 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.017358455 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.01646161 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.017131316 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.052679776 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.018476525 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.017802476 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.017539284 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.017507578 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.018486401 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.027082537 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.021603039 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024723675 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020200018 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033680951 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.027016224 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.017525582 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.024736717 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.036322039 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.021458052 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.017185215 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.034621043 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.02123302 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.017163254 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.036060224 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.027950336 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.0184349 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.01744793 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020759764 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031179346 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.018359125 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.016094948 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.025639557 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.018883137 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.128641274 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.022369727 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.025675216 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.017443797 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.028407893 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.023666378 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.018567709 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.016216786 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021806759 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017931895 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.016350109 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.027081938 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.017989461 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.033373435 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.02531558 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.033757627 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.034413831 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.028854464 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.034293511 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.017191473 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.016136456 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035504842 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.026115975 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017967955 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035610436 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.017093765 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.02823655 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.017167727 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.018515817 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.026433174 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.016490622 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019104731 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.018063588 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.024359418 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.019709287 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019863369 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.024254293 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.026473772 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.030599249 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.018913761 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.026736527 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.01813501 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.035086128 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.028255967 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.023524172 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021284784 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.018387941 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.029989858 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.024553551 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.026176605 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.01703693 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.018286674 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.017313669 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.02870104 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026978256 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.019139513 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026727445 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.022905489 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.018649505 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.017712851 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.01853211 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.021532697 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020889053 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.01783737 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.025243 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.026830188 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.032089691 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024662484 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.026593583 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016672172 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016969974 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018972599 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.017037691 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.022187326 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.026963511 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.034640542 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.030821794 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.040882456 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.01821618 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.027876373 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.019382805 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.036067646 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.032431891 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.019289839 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.022634138 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.016755701 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019488608 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.027060265 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.030180326 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.033440605 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.034049564 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.023440035 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.022254304 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.017213932 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.033587833 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.018649917 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.027449967 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.028498965 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.024882592 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.018436698 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.019955006 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.028555625 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.02395321 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.019498912 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.034456378 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.025586763 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.017563481 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.033486923 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.018453785 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.029490284 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.017968837 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.021652556 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0239503 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.020131363 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.028469342 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.035660999 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.017781016 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.019280037 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.036104035 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.020517745 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020656948 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.027873046 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.035525084 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.023503357 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.026410118 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029492602 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.028906522 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.022539153 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.027581342 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017988521 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.02665084 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.021501306 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.030356964 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.018106455 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.036910835 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.016940367 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.033834729 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.018486278 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.029810594 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.018421348 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.02802327 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.018733178 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.035305844 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.018936104 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.018312878 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.029613623 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.016580902 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.027104198 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.017225779 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.022707234 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.024408983 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.026511253 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.019090405 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026797935 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.018833109 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.026049173 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.022098932 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.026223525 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.026600587 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021986024 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.016923245 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.02524332 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.028248149 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.025445649 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.019235563 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.019357331 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.17018529 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.026721684 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.018207931 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.017557118 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.025251326 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.022358023 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.023516698 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.017988924 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.018150411 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.018034247 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025016429 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025337594 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033520309 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024170467 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.023115053 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024742886 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015595772 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031784956 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.0162675 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.024011356 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.015699442 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021936547 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.025082519 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015930399 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034279591 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.016860291 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023350924 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027001797 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024068884 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019779653 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.03350015 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018705876 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.024565257 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.024023872 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.021338492 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.023641385 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.018437379 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.025431054 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.025865167 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.026718851 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016928918 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.023763695 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.025092429 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017445231 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.023322884 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.017841563 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.025697899 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.018864064 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.016338463 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.022119601 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.028349375 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.022106198 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.021838588 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.016461816 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.015472896 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.016931775 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.023301914 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.022554342 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.025844797 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.032634898 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.015735289 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.017090125 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.01663016 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.021405679 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.03480628 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026216447 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.024507266 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.02129417 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.015645074 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.017500263 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017578486 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.016335867 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.018648057 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015368089 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015654684 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025929667 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017505654 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.021334438 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016258341 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.01700892 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025907694 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.019617405 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016583892 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.023991753 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.016835269 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.022214206 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015676457 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.017594791 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.021025913 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.016464817 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.021292222 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.027845212 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.033836927 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.024414609 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.026274713 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.018105348 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.025867982 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.033171973 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.024793362 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017576704 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.025791112 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.01592058 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.035679224 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.027449372 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026273404 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.027250509 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.018140325 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.035114236 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.022479551 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.027496063 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.032873841 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017857699 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.024525972 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.016806439 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.032867117 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.022054335 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.016569032 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.025409185 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024788769 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.023026527 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.028105512 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.017538655 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.025240276 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.021100929 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020738638 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017672002 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.018010694 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.024879326 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032236452 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.017033447 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.021518547 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024078569 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.025129079 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.022306781 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.02980792 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.025381765 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017760212 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.018614404 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020946444 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017548476 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.029607262 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.01732719 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.02170246 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.02146257 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016592819 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023824413 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033740194 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.027851039 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027769878 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016805121 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.016461463 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.035307724 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020963805 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019819277 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024742054 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026974209 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029986713 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.026600554 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.034477451 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.01722389 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022742265 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029743369 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.018045358 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016955013 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.021008232 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018684842 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.026403574 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.027273619 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.02542667 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020144969 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.025405452 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.03158796 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.018770564 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.023043737 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023885588 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.018311584 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027865112 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.025151629 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.026044804 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018653107 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016974511 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.021535867 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.026626 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.02525438 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.027144696 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.018245631 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.025807837 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.031479378 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024965931 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020542703 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.017272584 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020908658 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.026620087 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.02405551 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.138971884 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.023195264 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.021672776 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.026308384 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.027569439 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.023129745 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.017875209 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.03620532 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.027012299 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.027377573 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.019664711 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.019986677 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.018596067 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.017952531 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030179673 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.017958115 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.019794793 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.023644379 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.019856962 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.037039539 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.027378266 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.03504721 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019118067 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.023384496 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.017715251 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.027372223 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.022518293 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.017291182 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.028856676 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.017115085 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.033985583 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.029912159 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.024714286 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.017680859 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.023071385 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.026548919 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.033323269 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027055404 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.026441317 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.021010969 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.02833708 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.019908175 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.029972439 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.018022334 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0172933 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.028660697 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.027356385 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031288182 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.018135803 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.028957119 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.019865987 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.026803454 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.027256898 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.020258181 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020039139 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.019662035 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.027753198 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.023093131 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.027254911 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.023266409 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.03615279 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.019088855 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.02960354 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.027176238 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.029460092 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.032527725 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031164907 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.027397091 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.018654902 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.025911667 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.02704417 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.019370507 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.023962076 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.021666694 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.041630555 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.019710984 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.019562804 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.033170587 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.026366174 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.018596815 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.026247744 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.023553418 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.028244323 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.019900353 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.028601205 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.024019386 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.019135049 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.023812999 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.023394379 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.016766044 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.017748193 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.017895934 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027578958 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.024100841 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.018969866 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.038888964 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.019779152 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.027215283 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.029911313 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.025360466 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.019782915 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.016910963 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.018755073 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.031699829 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034893116 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.022568276 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.027120833 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.020019494 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.028085235 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.01720933 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.027349232 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.026813722 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.027482314 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.018101507 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174760931 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.033740564 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.033517557 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.022548885 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.034414673 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.025943454 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.018154502 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.03926127 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.025974868 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017343193 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.028314237 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018386138 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.016298846 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.016185436 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.01778336 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027954616 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.016216516 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.017782709 seconds)
  done (took 16.283997997 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061888935 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.018470149 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.017234885 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.016251446 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.023047547 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018214525 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017153539 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0185657 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.019175867 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.02021415 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.017191527 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017122755 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.02250657 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.032431688 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.025584381 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.021395552 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017369558 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.018354252 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017234592 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018394442 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.022874982 seconds)
  done (took 1.279414252 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020393724 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.020624655 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020161137 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020836372 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.020624293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.017535262 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.021376865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.017275352 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021096833 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018140723 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.021021541 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.01697835 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.01741622 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.017277241 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017381231 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.018451438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.020891255 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019875804 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.016611679 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020011432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.018012944 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.020294371 seconds)
  done (took 1.217082739 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018269881 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016234553 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024138068 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015160478 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015051067 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017826324 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.01512532 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.020066607 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.020219025 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019924372 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023931558 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015818485 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.014919545 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021054713 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.0149467 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015731269 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.069009753 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015915883 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.01589673 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015132578 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017124634 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.02400351 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015181876 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015321682 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019785569 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017670795 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015128386 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017255091 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.016245656 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020524755 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016706166 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015476976 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.025889708 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.024175308 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.020226151 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020056585 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016662113 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.01626218 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015715349 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015733369 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.024160171 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.01684816 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015989788 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.01673512 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.024510327 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015559563 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015048665 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024081207 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.01517245 seconds)
  done (took 1.718749162 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.027660971 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.070829238 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023527104 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.053113111 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.030351636 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.021989755 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.023798157 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.055747429 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.01748964 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.017252567 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.030027169 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.030511728 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018326528 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.019583956 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.024285121 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.01869349 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.01896626 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017580161 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020923665 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018392953 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.021132057 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.025214213 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.029384796 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.029810071 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.018926776 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.018175648 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018636693 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.020087874 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.030598015 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.022502426 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.020742732 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.021055286 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.031115213 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.027070078 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.019232695 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.019254828 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.032076845 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.020151202 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.019639937 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.018194528 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.019337719 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.020233236 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.025291396 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.031444611 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.019645228 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.026669353 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.019387448 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.017401012 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.031156762 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.019017099 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.022020772 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.031710817 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019828466 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018959771 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.01981443 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.029606221 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.018239858 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.016879004 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.01807024 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.029373329 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016626117 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018612477 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.029783661 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.01732485 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020453306 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029768298 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.024348622 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018598189 seconds)
  done (took 2.565248047 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.026486153 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.022162717 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.026243916 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.026579086 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.023240641 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.023926809 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.024071005 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.023943171 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.023773868 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.025785524 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.023333737 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137210576 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.020879139 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023847177 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.023245652 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.023335595 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.02354834 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.023158205 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.022733152 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.02263568 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.022578409 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.026708366 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.022428285 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.026856333 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.05549661 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.019667748 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.022242471 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.022345858 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026901515 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.022324579 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.028896821 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.022541409 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.022908269 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.027103151 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.028966854 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.022422447 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015842834 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022196911 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.022440741 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.022955241 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.020463031 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.028362192 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.023679172 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.020265194 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.023153094 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.022863634 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.027366068 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029840424 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023872625 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.026412602 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.023157567 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.027477037 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022969711 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.024919803 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.030742617 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.068376164 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.03068016 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030646285 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.024856926 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.03039474 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.030706627 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.040292502 seconds)
  done (took 2.537229015 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030371943 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.02112669 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.02647279 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0154014 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015205829 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.021079776 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015439362 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015417351 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021403604 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.021635107 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023075536 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021587748 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023322166 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022668599 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021161871 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022746586 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020895694 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020871449 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020802506 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.021099657 seconds)
  done (took 1.256619861 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019072515 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021862462 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.017152616 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.021133535 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.016996362 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.020881534 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016979162 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016992322 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016891354 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.017273466 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022177432 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022010996 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.01731625 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023946107 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020442247 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.020411982 seconds)
  done (took 1.110892504 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020298368 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.026877848 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124552816 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.017095073 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018539622 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015861878 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016715231 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015169968 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017766902 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.031338237 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016296283 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.019148546 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.017128846 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015802352 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.01703288 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.020166497 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018824089 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016831512 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.017465012 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125092627 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.030069955 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017868666 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019069212 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017534716 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018710261 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.029283547 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018584949 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.019408877 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.01746258 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.019507 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018985092 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.027164504 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.019081483 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017205853 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015767355 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016780984 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.017036935 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018849153 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.019440288 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.017901023 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015775873 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018826387 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.017479676 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017605297 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018461199 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019348607 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018214329 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.025787382 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016547828 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018317711 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.017075481 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017985133 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017314886 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.024333267 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.01937098 seconds)
  done (took 2.095606233 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035796063 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022138087 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015461882 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015323784 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021971447 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.023953535 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.023574344 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.023699749 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023706837 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0156244 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023421817 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.021303883 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023052502 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.023875497 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.024037204 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02261805 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015429212 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023166734 seconds)
  done (took 1.227024808 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.023773735 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020547671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.02062636 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017628379 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017996391 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.02199531 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.016030729 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.01733189 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.017023973 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017194265 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017368361 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.017206667 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.017744498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.01757013 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020984324 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017444986 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016887093 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015736543 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017272675 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.016127333 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.022082713 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016912355 seconds)
  done (took 1.200407049 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.18460941 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.150086781 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.041116135 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.03461796 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.026002274 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.052565332 seconds)
  done (took 1.290210445 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053629987 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024724394 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021648577 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.047530792 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020935786 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019669592 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019991523 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019913898 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022755187 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028205742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019951363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022400834 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022620342 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024266486 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022058512 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021524067 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020666578 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020554957 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022155934 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.03326681 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020234101 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023556506 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021248018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020855699 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021803254 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026430002 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024059508 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029568873 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021049607 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023431002 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022619375 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021852048 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023944864 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029600331 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022572659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023929717 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0206061 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.033735561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021707873 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025419704 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.02250307 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022521975 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024839432 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024647185 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024272022 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022098687 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.025392257 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02232515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02179169 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.037558732 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023377134 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027090689 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024418404 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025040824 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025718452 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.039038453 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.032074 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027764026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025321561 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.033706954 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029434043 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025203536 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029505756 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.034291443 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026115358 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029398786 seconds)
  done (took 2.499816671 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030931834 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.053485142 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022033729 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.031023794 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026012675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021896177 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021784418 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021528182 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022340592 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024665473 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067141979 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022861903 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027161225 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027253115 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022745431 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022190681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02230424 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027012838 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024910244 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.037170142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021850214 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026898167 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027371872 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027274986 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.031289687 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023669595 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02256717 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022857587 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022704529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022814696 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025565954 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023129389 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026229816 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.022721153 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026749997 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023230249 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02250923 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025326261 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022864771 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023844774 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028103419 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.035677124 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022222929 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021986845 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.03090301 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021827526 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021876235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023991141 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021576954 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023900436 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032200569 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.031668409 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030815726 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026800673 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022289359 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022130316 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02197799 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.021868623 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021973301 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023999432 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028111503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022845521 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.039701396 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02304406 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023036337 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028417127 seconds)
  done (took 2.612529662 seconds)
done (took 54.294305319 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214364919 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.178353282 seconds)
  done (took 1.182626224 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.139690733 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.138875666 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.17058969 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.027883812 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.087330728 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.182548538 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.129497766 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026825489 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.025153167 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.026318687 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.024645207 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.026072287 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.02627922 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.024603825 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.088232804 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026513185 seconds)
  done (took 2.010340708 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.074636773 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.273616969 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.067407966 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.023154477 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104570479 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.02892091 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024095352 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028617502 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.029823453 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.024554108 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072314228 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.045009587 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.027280162 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028274931 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024416601 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.027698552 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028639781 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.029005056 seconds)
  done (took 1.809205889 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.08649975 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.033870954 seconds)
  done (took 0.933215111 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.142976618 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.065530227 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.108466711 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.317117681 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.097598943 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.301074336 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.105971285 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.100087492 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.069645677 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.096592521 seconds)
  done (took 2.201936396 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.061212627 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.057845951 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.294116843 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.056779718 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.035270986 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.031163385 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.031857336 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.03147143 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.032665872 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.030932203 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073758943 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028722745 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024545004 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.06770097 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.046601265 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.05866685 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023727565 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.028812173 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032472472 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.02329423 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.027685259 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.029477176 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129788271 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.029540354 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.047806519 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.026947602 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.028507859 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029175294 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029043242 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030041292 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.030316191 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.052250107 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.030014659 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.038257693 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.028602172 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.048118064 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024576383 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.046621153 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.026846462 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024311331 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.026737316 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.030137188 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.024836885 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030213854 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030394156 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.030139628 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.031325393 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.024275075 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030559529 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027499327 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.026043878 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.029191755 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028754279 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.029522059 seconds)
  done (took 3.066280269 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.078781719 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.072157732 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.026970872 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073813879 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068246671 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02583305 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083401691 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063752328 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079690682 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.025151165 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02514316 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.025582752 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.033430964 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035999148 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078495038 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.071090234 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.027002741 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.025987507 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.071644064 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.071289114 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023955877 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.081634638 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071397935 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.071714833 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.024372402 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.025601629 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.024375867 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.025659209 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.033254673 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.03327858 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.025251992 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034104562 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035689392 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030769038 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022590815 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023069481 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023691898 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031772506 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032143368 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.031562298 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.029893992 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022835749 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023860201 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.024180827 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024220924 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022728134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032026497 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.031509221 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.031920101 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023828885 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023729629 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0230639 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.02423169 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030529693 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.02920629 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.031282253 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.032708432 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024738781 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02421683 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.025110225 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032867991 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.030802995 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031675099 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025343611 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032356653 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.024410475 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032538774 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.035744894 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023190642 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023920647 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023689613 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023875959 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.024169001 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029349427 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.029168796 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023596288 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023416166 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022985008 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.030590015 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.029112273 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022789075 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.030222117 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022603774 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023109614 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02338708 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023679119 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.030938064 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.030387237 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.0236027 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023056143 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023133191 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023141831 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.022462759 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.031537258 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031432963 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.03220766 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.034406137 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02528317 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.034716225 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.033255477 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.025266707 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.032664994 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024708214 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024835827 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024487176 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031922072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.031400481 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.032485656 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023827781 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023556323 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.031752839 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034623407 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023529895 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.030123116 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032277814 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.031019077 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.02299346 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034961489 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024766146 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034116899 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.025331634 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034317458 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024878365 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.03338999 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.025236739 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.024302285 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024516763 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.034632435 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.025475458 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.025132022 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.025835844 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.025285971 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.033496343 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.03652165 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02611498 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033666213 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.034302736 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.026073265 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034284138 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024642659 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.033634274 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024747924 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.025013748 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023749276 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.035605993 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023856618 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024442919 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024307533 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.033350865 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023549042 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033067349 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.030685165 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.024179054 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034771603 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.034621941 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.031991715 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.034347116 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.025724528 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024386854 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023769472 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023910926 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033912591 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.037292684 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.026713579 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.02578027 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.032039327 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.034275163 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.024340998 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.031871683 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.031738091 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.032737465 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.025224626 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.025184816 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.035394091 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.036671156 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.033275389 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.035228378 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034648032 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.026176519 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.033533568 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.035716445 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.025709833 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0399766 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.025431024 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.036345113 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.035045053 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031341159 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.035449682 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.035820848 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.033616064 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.033822039 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.036893234 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.024035034 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.024429354 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.032375991 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.024400254 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024255341 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.03105047 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.172173571 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.024721335 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035470446 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023648696 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.030906301 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022891422 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.030127404 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023907412 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.025052944 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035105008 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.024577078 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024961102 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029473435 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023504754 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.029029734 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031530921 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.028754585 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023043544 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023577188 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.031150114 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.029945898 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022836497 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022917277 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023562643 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.03004741 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.029495441 seconds)
  done (took 8.003109105 seconds)
done (took 20.02952997 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.134208228 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.072210129 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.126556417 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.07760898 seconds)
  done (took 1.190584114 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.057938766 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.021294472 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.142060388 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.155038065 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.021552715 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.136936796 seconds)
  done (took 1.347191226 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.249170628 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.147345091 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.149157389 seconds)
  done (took 1.426904548 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.148994384 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.275578399 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.557690455 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.143673582 seconds)
  done (took 1.950084471 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.164113077 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.160142372 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031137268 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175188634 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.038247309 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016254673 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.101689185 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017774989 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.052071944 seconds)
  done (took 1.62527709 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.093252745 seconds)
done (took 8.433579219 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.20634285 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.139579444 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.036125419 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.029596242 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.129366197 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.134709412 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.153482554 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.03228755 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.140936272 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.314855619 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.186585827 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.051399396 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.153946716 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.044136216 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.273414525 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.033313016 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.031508708 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.026190139 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.146110453 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.136507818 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.24437441 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.030448852 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.102730134 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.033539962 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.108612921 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.083395951 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.193224235 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.315575853 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.283640231 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.034034631 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.126673775 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.044804868 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.123344558 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.132100377 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.137718491 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.052620079 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.021680002 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.247857156 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.108130779 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.333039752 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.172135662 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.029779935 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.145928817 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.027886653 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.021519364 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.14746691 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.035405811 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.029079165 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.046353939 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.029825718 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.04177674 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.030873965 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.135240336 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.0258177 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.097713251 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.138337365 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.187593473 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.106535294 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.02748646 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.039534653 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.032026294 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.163196694 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.041953988 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.028020684 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.034253218 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.021308733 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.136431324 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.0439164 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.022875837 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.033961298 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.031737296 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.104900271 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.154066836 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.068761601 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.034371729 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.112334907 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.103733438 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.049423465 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.051164407 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.032501366 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.021693802 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.197026291 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.028616989 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.042191338 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.030047281 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.056354475 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.021686275 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.037262086 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.172719007 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.150594767 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.091635096 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.022548534 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.249627124 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.023852828 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.048343734 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.02334914 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.022802468 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.195827504 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.023432017 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.02356023 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.034671363 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.033614336 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.025692873 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.176768061 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.110535421 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.032359051 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.030383955 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.023273818 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.028982661 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.023291686 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.022825374 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.022167953 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.102060236 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.040605128 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.021429311 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.107238889 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.123627869 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.033377487 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.040961146 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.257291478 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.026229121 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.03377229 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.030115479 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.144987058 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.029498724 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.141428154 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.024354698 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.044514713 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.121281818 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.102476862 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.107390846 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.021453778 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.144515297 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.03275867 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.021313407 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.030369202 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.05098199 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.03248267 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.040198123 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.031225025 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.145491779 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.033510572 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.028722429 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.124285155 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.020871809 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.110599601 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.104720227 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.134608163 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.02646115 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.032317694 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.100078992 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.045612721 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.051884395 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.043462987 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.026382612 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.021332594 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.021033755 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.034980896 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.020324553 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.021022807 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.035353156 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.028952316 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.038359824 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.244069167 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.031823572 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.02595369 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.257647367 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.034982765 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.098670708 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.043443377 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.022293625 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.107880249 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.02351945 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.043612282 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.087914597 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.021822251 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.101395401 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.021852965 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.021301332 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.028924542 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.02450048 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.032222326 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.036133464 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.022423154 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.035536433 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.031095753 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.022414522 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.109184984 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.024613801 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.19750751 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.107852262 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.103490801 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.022835887 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.042273577 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.022063613 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.13930652 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.021950501 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.072417503 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.11734559 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.038063383 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.044174202 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.023083217 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.107471504 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.038505521 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.028525321 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.109603608 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.143398092 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.098091638 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.029528517 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.255867787 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.033123099 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.023245218 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.028931658 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.032192163 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.022833407 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.10486683 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.026691119 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.020668337 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.02118365 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.023650008 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.020454923 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.046177785 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.020626781 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.029917467 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.027521324 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.024814383 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.023514427 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.020466494 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.030422742 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.105804776 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.12574371 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.028680547 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.042898273 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.035682991 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.033337643 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.071815185 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.03022038 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.168967203 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.021414482 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.032427843 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.044165086 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.021662351 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.027963944 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.028574687 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.040277508 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.025834716 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.022854792 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.031448144 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.021891081 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.022391358 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.021948595 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.022345036 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.031637843 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.023023317 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.021312576 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.021211313 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.038595401 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.027226419 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.02730077 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.033179575 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.042461777 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.48629964 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.023131093 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.0242616 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.034942887 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.027732572 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.022393734 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.0242575 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.02178228 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.024038959 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.021834402 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.021961373 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.052988996 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.028524514 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.023435728 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.044584557 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.028731388 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.033067884 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.125912673 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.041090221 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.028591697 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.022252681 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.264017747 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.098909891 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.043957167 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.042385762 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.022646265 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.034271317 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.022738145 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.023071542 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.022077348 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.051560213 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.027944947 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.022198973 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.020893345 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.021219351 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.072241803 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.031449784 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.021860182 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.030996238 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.021607406 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.021761921 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.049262732 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.022386543 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.021596904 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.040386985 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.034917654 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.109982762 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.034465663 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.024984781 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.074481717 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.021398955 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.021897769 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.022077276 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.111148677 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.035736536 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.024279752 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.023082935 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.030571394 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.032365865 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.076868943 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.028562608 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.025627612 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.030210581 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.021151141 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.022249449 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.049561414 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.051209323 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.023266775 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.026110972 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.02175151 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.022223892 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.101151869 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.029962962 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.02732833 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.116013761 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.024851002 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.031454594 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.02141226 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.50241025 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.028959777 seconds)
  done (took 23.366318462 seconds)
done (took 24.237122434 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166176902 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.036549152 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.04477627 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.032235378 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.035931868 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.035687086 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.047077607 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.033516316 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.037043987 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.044364218 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.151202789 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.022463354 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.030088496 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.036875138 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.0312701 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.036053157 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.034755877 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.035723584 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.022730229 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.035518354 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.034438901 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.034576583 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.032772731 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.035688271 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.023119936 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.031718097 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.15361052 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.037432878 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.032985423 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.032132032 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.029757832 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.045121916 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.029989992 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.030085546 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.032446433 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.027823946 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.032396033 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.029341045 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.15356333 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.02880689 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.023026412 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.035672824 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.030705104 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.031027479 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.032308238 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.034139015 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.028466687 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.035563765 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.031373782 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.043827901 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.152519194 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.031402204 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.032648937 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.031201135 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.027742728 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.031533064 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.032463245 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.033428231 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.028246421 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.042295707 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.031088593 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.03033875 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.021310669 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.030785384 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.029609464 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.02968306 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.020740248 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.03137741 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.021557251 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.027404315 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.031244437 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.031359783 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.029787182 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.027394931 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.030818062 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.021454791 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.030315654 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.042950501 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.030932796 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.032680498 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.023443228 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.029684083 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.029096263 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.023443229 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.032295161 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.0346407 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.032194927 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.023080111 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.032327963 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.044952142 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.030626245 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.022941792 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.035169797 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.032815248 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.033009992 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.02291614 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.031863926 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.032534676 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.031947478 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.022873062 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.021978607 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.033058225 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.029089531 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.032132134 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.022710187 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.03186525 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.03193486 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.021320099 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.031105896 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.029614477 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.03101618 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.033589176 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.031648616 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.034401043 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.022688982 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.020897675 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.032022147 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.021743489 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.030605524 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.029886731 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.027368978 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.029695197 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.021630029 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.030724905 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.031143441 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.028423887 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.022425589 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.022111599 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.021993337 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.030940108 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.029921294 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.021172172 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.022032347 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.031679282 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.03208667 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.031779323 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.032559236 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.032551438 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.023531175 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.029877445 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.029075297 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.032519706 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.032547564 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.023546472 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.032453837 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0327233 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.033328977 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.029669483 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.032658643 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.023586848 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.032600919 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.030764338 seconds)
done (took 6.38541097 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.079726048 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.068823592 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.185649058 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.15084275 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.037900588 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.038850123 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.028480776 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.044436725 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.030398685 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.049399101 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.050233593 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.047501801 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.16693797 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.046082637 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.023129674 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.036519618 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.023409932 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.051472158 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153531525 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.051667508 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.069529193 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.021870873 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.040565161 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.04363303 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.036078842 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.043513314 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.050564645 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.024577716 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.043754962 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.042198962 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.053981515 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.026217438 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.024031862 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.045083877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.041627423 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.03318952 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.022792 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.030932821 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.036705678 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.023260798 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070647811 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.043214365 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.030680053 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.031040907 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.02415784 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.040131661 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.024134611 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.032064527 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.038544183 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.030883534 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.037607767 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.041179543 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.026173129 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.043062835 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.022452903 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.03158444 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.031688448 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.022571273 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.023963464 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.023208133 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.023258628 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.026791045 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.03737631 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.043187787 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.028365942 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.031656384 seconds)
  done (took 3.954010264 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.049995247 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.074215525 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.039903913 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.040257032 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.023131838 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.02384915 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.023794768 seconds)
  done (took 1.292450886 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.097729783 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144911436 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.149839509 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151474837 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.165243684 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.150918148 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.038221672 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.056488179 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.061867241 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.169667328 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.1608457 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.15526965 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.028029144 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.037528336 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.059587013 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.156725948 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.037418285 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.031385066 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.148588823 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.154504933 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.028894215 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.058185819 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.037916565 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.026914871 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.156397882 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.147931314 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.027525749 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068703525 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.026595064 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.023979363 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.024242101 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.048816063 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148982436 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.040715847 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.024240525 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.022390153 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.146268727 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.024929643 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.150322706 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.031746601 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.144944819 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.026291356 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.026291246 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.023771827 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.025255691 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.145830291 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.025443865 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.023499918 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.023272658 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149391259 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.035500482 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.149416421 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.026256163 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.03021021 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.033056754 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.032462038 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.032536538 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.024810655 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.152246007 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.035241652 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.026246485 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.156235453 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.15438038 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.14813925 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.153723351 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.033128574 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148938299 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.144212894 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.023461141 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.032246325 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.024093883 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.155335451 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.028622185 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.026977384 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.022410798 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.032107733 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.162974821 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.164503758 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.161558964 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.038706056 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.026074264 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.025007989 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.161727561 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.163352699 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.029961126 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.024025009 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.024181658 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.039913067 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.049491417 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.025970125 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.029159861 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.023736122 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.03402798 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.025525087 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.025487057 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.153518656 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.023166262 seconds)
  done (took 8.318785812 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.041835051 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.024534241 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.023953058 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.02421081 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.024460007 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.024323852 seconds)
  done (took 1.240043489 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.062859039 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.023598252 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.023471907 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.023417807 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.047444111 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135825157 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.136931727 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.026124152 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.041851462 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.036212548 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135464176 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.140705265 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140152462 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.025772961 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.13729505 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.037275187 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137751546 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.029557101 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.037231144 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.026401502 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.036362056 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.026836533 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.026760195 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.162387833 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.019315569 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.037207188 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.034708341 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.036565484 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.037179416 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.025899846 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.025818651 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.018856078 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.035525532 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.026752373 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.141836285 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.036213262 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.025057679 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.020450598 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.029857975 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.019335615 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.14358142 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.026829173 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.029899005 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.020445407 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.026318592 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.036458076 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.020471731 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.03614618 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.142923009 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.020554593 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.020254044 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.025378245 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.019217457 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.020347929 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.036047379 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.025741528 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.0199567 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.140319408 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.025528129 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.035694626 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.024830876 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.018975363 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.025309191 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.018667397 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.029643724 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.020108341 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.035660328 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.025485103 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.025163916 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.024319702 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.019808396 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.023926209 seconds)
  done (took 4.389395899 seconds)
done (took 20.198512413 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.460226261 seconds)
  done (took 1.486115506 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.021872561 seconds)
  done (took 2.061376198 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.052492414 seconds)
  done (took 1.079406936 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.306664526 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476940102 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.747023945 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.092868736 seconds)
  done (took 2.648759799 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.864609772 seconds)
  done (took 1.921687306 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224588681 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.18793407 seconds)
  done (took 1.4851207 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.498227761 seconds)
  done (took 1.539452591 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.461923299 seconds)
  done (took 2.51231568 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.204182729 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.141612886 seconds)
  done (took 1.385248393 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.643791618 seconds)
  done (took 1.687601998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.853843002 seconds)
  done (took 7.886635437 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206317864 seconds)
  done (took 1.317485381 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.255523495 seconds)
  done (took 1.312417664 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.728716947 seconds)
  done (took 1.794478551 seconds)
done (took 31.166080314 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.046252182 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.041035587 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.041600507 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.038981507 seconds)
  done (took 1.212750091 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031788925 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.027675465 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.030322082 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.031152684 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.028340549 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.030669672 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.031836345 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.028046717 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.029580787 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.028470249 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.026187976 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.027638303 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.030465087 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.027704415 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.030370555 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.032029264 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.02841863 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.028800225 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.030011077 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.027537457 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.030713107 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.028187413 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.027968446 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.029274649 seconds)
  done (took 1.757578274 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.036416209 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.028749674 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.030832783 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.028006797 seconds)
  done (took 1.183803461 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.035259822 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.034206097 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.042941813 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.04254186 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.033639289 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.035100845 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.041154194 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.042681252 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.049840418 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.045938058 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.025986479 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.025707139 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.024667075 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.039435654 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.04207103 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.01875512 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.019960487 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.035735273 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.034441654 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.037556152 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.027272814 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.022215443 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.032482933 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.035219153 seconds)
  done (took 1.895504792 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.039413729 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.022636023 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.0395826 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.050484009 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.050395585 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.023034524 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.037782108 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.051970637 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137107341 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.022601207 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.03023885 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.023001661 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.065341227 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.023150917 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.039312645 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.12161474 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.124670554 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.027534911 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.056933663 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.022764754 seconds)
  done (took 2.099233869 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.030135611 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.026921471 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.027254741 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.021977241 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.032988166 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.029890153 seconds)
  done (took 1.227863734 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.025784438 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.024765099 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0244921 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.029807432 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.024574093 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.024791002 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.024810077 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.023697835 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.023408365 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.024407941 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.023886722 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.024952492 seconds)
  done (took 1.36309646 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.172208573 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.030637202 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.028637468 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.024086295 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.025701539 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.024743108 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.03924425 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.026087076 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.042174233 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.023657223 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.024018348 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.026226358 seconds)
  done (took 1.572117377 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.062972849 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069941081 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105454961 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079851204 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084886455 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054001008 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.206375054 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.036662858 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.120915344 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.094715631 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081356373 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.04921223 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.043480294 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.025930262 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058632577 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.076221326 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098019847 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030418019 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079067018 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.249240237 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089770362 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.089551783 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107157564 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086672333 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.050785769 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108657092 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056330039 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.061686505 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.085557074 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088299899 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081824499 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.064573133 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.029804594 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.029197873 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121492373 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.063173779 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082586737 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.053418988 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.067124812 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.049785053 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085494072 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.028159539 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.042825297 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.072598211 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.046254395 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0956525 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.054271395 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07680708 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040645736 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102316082 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091210187 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.183194404 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.045984222 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065177053 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104954809 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07381442 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094968008 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068252085 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039526563 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.08078546 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.070673281 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062086216 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069953619 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039576822 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.140091383 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.04826391 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.248574125 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075878384 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.050052435 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.055378476 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073711146 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09953237 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.085055034 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.077325454 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089436639 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.050931031 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088812329 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.059328671 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.08523307 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061798618 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.030182416 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.080354976 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.089099295 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.05550878 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.058507 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086820716 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.051515161 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033436017 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.046895639 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.077382191 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.037710888 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.066355497 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.043280401 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.087738635 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093231064 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056360678 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074292784 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.078610334 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.036038508 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125338636 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.068357885 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.030303396 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078512936 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073744062 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115079982 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055627413 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.033763244 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059430287 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062516705 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.122283221 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062464657 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.039547416 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078030159 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10173906 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053348142 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.260474035 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055570443 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103887587 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075689638 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.045289126 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.033544529 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.05378726 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073303653 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070656773 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084643267 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054551209 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.04119863 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.045243596 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081420652 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053813881 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037363188 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.081056078 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.065063713 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.032872311 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049405838 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.035558309 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117003484 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.046169817 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104682442 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.260420732 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.033631915 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0653195 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.054962404 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.064395548 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.059296929 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076382274 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097163371 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.156577227 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.048556605 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.041178616 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066065205 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102465521 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083600741 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.048396826 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.044380153 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056659195 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067792606 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.057247072 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080949623 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.051359216 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067813283 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060508614 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098749592 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099018884 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058070058 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.06422302 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064745055 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.074072422 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033029018 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118729253 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062400164 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.083236054 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.046043139 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102101402 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.077494997 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06556383 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.045448895 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.063606433 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.061327104 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065699587 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103261266 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.052398383 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.029345787 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050652088 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108043321 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03441616 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077824097 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.048273677 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.049566642 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07625921 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.052648163 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040272763 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.025327142 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080975783 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11651379 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.026738629 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.076013955 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.075298362 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.061920671 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.084316461 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.026311002 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087323188 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.098775614 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086856627 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109501904 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.161354811 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082738513 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.079173276 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.086524865 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075956967 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.037779812 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.25166435 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092939936 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050167837 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050523489 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093685977 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.077295379 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.091798643 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.070227646 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081271719 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.062621647 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063393551 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059553295 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.057147032 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101131228 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.080000504 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.082730515 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.040511458 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067616697 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.07415239 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091954635 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.037797999 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095595993 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.041744418 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100537813 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.035142942 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085275081 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.033421934 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.132444818 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.037118461 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.058791174 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.027426178 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.03014004 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.102451432 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.081402125 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062468114 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056383227 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.094570984 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099855928 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.035599083 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07218627 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074196093 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.063194704 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072821278 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.329909323 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.045913504 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053460947 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.067163138 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.04331511 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.038863828 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085629377 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053751628 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096955134 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.042368296 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.033538031 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100141328 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072412743 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053477461 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.035092781 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069624306 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.088523417 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.052808733 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.045679024 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.08206109 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064380177 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104784217 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.050201353 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.062224461 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08596165 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040262807 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.056705563 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.027971428 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.049448343 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.035127926 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093144775 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.0353393 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.081706193 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.026497484 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092806115 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047252274 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.221910005 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.064105314 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067636941 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095369601 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.052476209 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098989158 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046366596 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074956735 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065301133 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069927946 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.043638302 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059745627 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.062576283 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077459771 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.050771325 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078447618 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100168996 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059040849 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.099524722 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04787401 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.081315768 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064061837 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.079410157 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.069914178 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155356276 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099269852 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074438408 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072990547 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.033624406 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054693667 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0707017 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070174496 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137871113 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084439757 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.030188189 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.06337587 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.052953017 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066500134 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066730859 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037411101 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102818093 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059304115 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.046182626 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.066620443 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.046694828 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.06410547 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033554156 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061397203 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.053563351 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.052495398 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055490679 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073792207 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.086895764 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068299938 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.106002291 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.06211596 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.050221262 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.078804723 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07802057 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07482199 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042013364 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042725376 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103356534 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.078288329 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.086617826 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.057100093 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071152512 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072555436 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061530927 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096962737 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069188626 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.248068214 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037791131 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.034325582 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.025953577 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.029700142 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081874521 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070277653 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067785152 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062753659 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.029092324 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.062378027 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06509651 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028621367 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043121309 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051426383 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.056390022 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.039707005 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063430449 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.073772325 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.051385905 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057908663 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059168974 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097002385 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.055164764 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045405594 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101570617 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104884373 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044105579 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048919035 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.027776221 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.03575991 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079196516 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102011856 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105837832 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.035681046 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.043659665 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.041198856 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044827516 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.028917241 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.047363453 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.047741535 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063599058 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.055008751 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.072257727 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062615238 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032767436 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.065875371 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058082594 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.050803428 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.065468725 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078725299 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.086627933 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.097262199 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072277772 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073970806 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033020525 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.036302958 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033153803 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036749776 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063977755 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.036448481 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033118284 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107034531 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.050560808 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072214993 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072894244 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.046875572 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033071457 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094450454 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.026687834 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095222219 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.02813993 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038495021 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.040041209 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036662525 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053950399 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104673897 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06680223 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069816502 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067801753 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072355338 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154847544 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124256116 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.046554382 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.263357545 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032934665 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033397277 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033347968 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065860751 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04666437 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.076685703 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100511518 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045320173 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057903794 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034705295 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100631389 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.055581639 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059538515 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042767326 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.036802754 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099487365 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036892339 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.041471793 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.046891496 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.06922334 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.029110245 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058338994 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.040325948 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.037172105 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148414394 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.668129709 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053581947 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.030802524 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.052912039 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.100222045 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092495016 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054511509 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068890403 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.078986613 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.062174203 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.051773995 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071327299 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.160464479 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030684457 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052390953 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.055798002 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059786564 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066967943 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.055018897 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.045087777 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.054027816 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.044548829 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.037174651 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074085066 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0446388 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.055512512 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.063771352 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.039966975 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.044988564 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087728297 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.05921769 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.041068783 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046375144 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.067740308 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044103223 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065432387 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.02662107 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.069680301 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.047660286 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080051438 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.059378252 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.069902857 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.08610922 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05336861 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098455222 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.068852966 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083560387 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.046761276 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.036159512 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087289633 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.050045839 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03585039 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107366956 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.056053747 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.062722749 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.228905596 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.055471744 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067033223 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.070195221 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069644222 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057723922 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034652588 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054507586 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.061360782 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042289993 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035581403 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.028850648 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.032676466 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064099344 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041246508 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043538551 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073066979 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.045561722 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.060238768 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.055804034 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078821161 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046829798 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061406555 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.067941153 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048912251 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08797796 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.0590911 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086625311 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135098875 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090479732 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08985382 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09290875 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.035975357 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.037068288 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.026246341 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.075000453 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.037113127 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.044931615 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.037334161 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09286501 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.043503964 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071359491 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.221947862 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.037960716 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.051019499 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05501964 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.027546486 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.041494547 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068247261 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.044863749 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.038082033 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070287767 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.039694681 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.08736852 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067890015 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057655746 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.054100488 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03866291 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067934624 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.064837959 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.090949185 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.056647093 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.031771191 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082210155 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.064295138 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100340477 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.03230369 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.038552791 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087800888 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062850455 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094427762 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.039074516 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121925598 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.107379996 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.06570813 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096156691 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028805842 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.048758132 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.04920594 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.08571031 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044923383 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070237492 seconds)
  done (took 43.591882201 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.142160937 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.260147791 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.130535856 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.114608611 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.07985044 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.082535154 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.2508514 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.092230938 seconds)
  done (took 2.411503346 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.026009909 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.059064959 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.039002006 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.308299483 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.05856766 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.024156038 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.030936326 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.039996353 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.023849792 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.023053163 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.061776877 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.024293303 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.028316543 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.470244067 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.022492314 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.027830678 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.028018322 seconds)
  done (took 2.493110015 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.3210485 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.766172671 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.288642852 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.503186493 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.106657098 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.564305872 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.031477918 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.037871637 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.64585641 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.372064528 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.099394243 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.182655983 seconds)
  done (took 18.117280736 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031769524 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.15389502 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.153936083 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.030037524 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.029645832 seconds)
  done (took 1.586918111 seconds)
done (took 81.656319728 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.041841042 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.131271477 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.022248765 seconds)
  done (took 1.311007114 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.155355935 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.152814207 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.15170022 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.153195075 seconds)
  done (took 1.71618028 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.031297863 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.031841282 seconds)
  done (took 1.166940601 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.177174212 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.284352435 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.044632532 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.04025123 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.035331459 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.036576463 seconds)
  done (took 1.242741909 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027382253 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.026697299 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.026162831 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025660087 seconds)
  done (took 1.22858196 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.133700174 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.021046018 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.023386371 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.02568322 seconds)
  done (took 1.324860401 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.040341596 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.040313574 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.07099071 seconds)
  done (took 1.26998023 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039305533 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038705877 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033515353 seconds)
  done (took 1.208191891 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.057240999 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.050842285 seconds)
  done (took 1.224739109 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.037438933 seconds)
  done (took 1.155949734 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.04485696 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.052481692 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.211248736 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.178983123 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.217866391 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.199283726 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.033883136 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031092397 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.034252737 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.035890199 seconds)
  done (took 2.176204238 seconds)
done (took 16.699588251 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036031912 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.151823689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.271849031 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.043902924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.611580883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.269184986 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.689113924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.046270116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.054525871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022967934 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.04025276 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.587687654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.691993082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.104746708 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.673584163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.096844661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.518332042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.025298704 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022410243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022623565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.665263076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.024731285 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022547815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022633961 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.514085369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.413022135 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.025850839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.093810385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.024351462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025840996 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392998954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.025368063 seconds)
  done (took 12.324485637 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.027313335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.082838967 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.029514552 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040374235 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.026139593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.026282843 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.042581109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.023466126 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.065575423 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.023137186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039895636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021984301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026424318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023115926 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041946135 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022520019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024423642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022758171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022047527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022641261 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040156861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.022562523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.023302013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022803243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022628993 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037280563 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023848341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022492305 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022597852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025887641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027293348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.024215901 seconds)
  done (took 2.088943975 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077478037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.077442215 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027962155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.063356925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077742015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.025588447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.108354345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.047462397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.070273522 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.024113615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039353545 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.022349573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.059014205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.02395515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041811118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022038721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024551407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022575023 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022286341 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022743858 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041514511 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.023115744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.023144507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0229009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022668069 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038543363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.02387495 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022082464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022217309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026492661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.028706566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023802899 seconds)
  done (took 2.347838778 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.026234184 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.027466472 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.033803798 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.037217312 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.021382645 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.023981664 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.02518624 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.021188499 seconds)
  done (took 1.325584446 seconds)
done (took 19.221030321 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035323109 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.02211095 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.02546577 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046390472 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028497488 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.138325689 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.025028119 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027413347 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.026129937 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025687294 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027553343 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019782424 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024602351 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.025104385 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026499487 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020252784 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140677625 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.025773464 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.141387745 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.143324094 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.024964286 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.027792812 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.030333471 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.143382598 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.141331279 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.14074221 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029783647 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026264992 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026171247 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023354315 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.137401522 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.142326031 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.024486581 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.1393918 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.0217474 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020904729 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.025474892 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022325564 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.143602219 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.03015706 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022765679 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029447967 seconds)
  done (took 3.460057043 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.146132287 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.154688802 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.147171767 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.034478142 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.030606943 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.034702337 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.154945314 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.032440978 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.030662066 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.153271938 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0260651 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.030390193 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.032404809 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.022834501 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.030093447 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.026728219 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.032470673 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.024802669 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.030314769 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.030557414 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.15436126 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.023616951 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.03072206 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.03066104 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.025651461 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.032170902 seconds)
  done (took 2.614470231 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.03189669 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.045361366 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.047841658 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117452489 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.068251695 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.048554915 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.040764761 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.052323559 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.058021859 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.024208061 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.048392543 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.053968066 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.05624995 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.0316753 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.065475183 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.04446578 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.038199871 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.026312622 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.031889301 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.063086574 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.049010582 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.044378222 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.058104749 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.044614777 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.022478651 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033068882 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.027195736 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.03950686 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.035481076 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.038309691 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.028098665 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.027511528 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.024785689 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.035639893 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.027282789 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.021434664 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.047926839 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.037241761 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.039839112 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.064545886 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.034300187 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.024488343 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.049218927 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.090840757 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.022748112 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.027180029 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.028744425 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.038358651 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.026066089 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07210691 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.041665988 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.023310033 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.045394434 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.026310566 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.026098161 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.048173741 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.026085137 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.026575644 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.046594429 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.03047369 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.047337247 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.030399265 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.047405907 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.02342964 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.037765906 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.025936171 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.026761918 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.022776289 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.060913394 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.031788269 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.075862022 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.024892548 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.02172817 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.03645013 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.036804227 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.032112413 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.022113313 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.041791257 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.034939776 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.027110152 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.043695761 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.026487884 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.027110436 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.070776357 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.023665832 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.022553054 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.022012202 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.025734403 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.02758214 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.025036425 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.038002439 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.023019362 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.027329049 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.053222082 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.023716922 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.024764114 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.02664151 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.025132152 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.022945737 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.033836666 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.026262106 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.024575299 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.036112034 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.024626991 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.027416121 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.039810712 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.033793584 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.022307443 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.024931292 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.025609259 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.02439856 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.025144502 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.026356299 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.024839133 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.029135216 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.032254643 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.029715866 seconds)
  done (took 5.471579667 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.250750775 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.241484676 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.024787987 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.233152663 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.033060187 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.162930865 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.240537028 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.238967878 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.025363509 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.02576525 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.024018992 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180658946 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.174354055 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.188280072 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.163999774 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.027247175 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.061262344 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1859799 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2463238 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.236924532 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.058892633 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.03195118 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.031661306 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.025687665 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.025355085 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.033485012 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.042927003 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.035701616 seconds)
  done (took 4.445608501 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.031824531 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.071444429 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.028371924 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.049980739 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.040627366 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.024721262 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.02590609 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.024870123 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.041969956 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.030583041 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.02451466 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.027894668 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.027387168 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.026314237 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.024530415 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.031546585 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.032061619 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.023808984 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.028588785 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.029289105 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.036848734 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.050216601 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.029059144 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.025381683 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.029156007 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.024989642 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.03076911 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.034778497 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.024997692 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.025013795 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.022275474 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.035158533 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.042209058 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.026424306 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.02484671 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.025481199 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.025059477 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.025596218 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.025551188 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.023147725 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.022988482 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.030431178 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.02368826 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.029951027 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.040148101 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.027937893 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.026817591 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.02750124 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.027504341 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.02133039 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.027881495 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.028141668 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.027660575 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.033714744 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.027583915 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.028348309 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.026107707 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.040703284 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.030395702 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.024013152 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.023343855 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.022699726 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.026422387 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0313157 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.041900593 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.026794915 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.023016949 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.02541881 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.027779014 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.039955304 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.024446986 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.033161615 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.021945249 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.025943557 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.027423244 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.028235826 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.026596702 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.023905099 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.024250172 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.023398717 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.023994232 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.023872938 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.023183795 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.026825251 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.02188612 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.022164902 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.024758497 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.02588793 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.029750003 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.02329527 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.027723301 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.026162266 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.023130457 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.027177966 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.03032131 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.028020678 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.043588615 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.032891582 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.025548853 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.022635804 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.043673134 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.027406438 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.023587933 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.026235875 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.03369191 seconds)
  done (took 4.29225291 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.055777777 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.027694238 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.04647819 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.064181425 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.036169324 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.02991163 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.038406303 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.025491526 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.046067056 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.023999695 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.034663823 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.022824845 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.039055277 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.035071342 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.026066049 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.033758944 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.026560273 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.044468571 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.039386064 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.022025333 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.03291667 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.037877774 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.038325278 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.04333213 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.042720541 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.046312548 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.039774734 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.029237599 seconds)
  done (took 2.233663066 seconds)
done (took 23.629973233 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.234647691 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.373862525 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.170465394 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.778060019 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.237802756 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.211591639 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.37363791 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.153193079 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.254023447 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.284493991 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.022942116 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.424463477 seconds)
done (took 60.771692195 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.168340477 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.294362373 seconds)
    (2/2) benchmarking "String"...
    done (took 1.370342202 seconds)
  done (took 3.762817057 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.624736269 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.178766666 seconds)
    (3/3) benchmarking "different"...
    done (took 1.160741339 seconds)
  done (took 5.084731532 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.504015265 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.139418943 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.484516302 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.136233231 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.149576281 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.916107649 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.35289963 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.921831433 seconds)
  done (took 28.229780681 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.261401085 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.453300644 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.571574551 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.655509275 seconds)
  done (took 18.195499084 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.609216434 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.519378466 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.535399128 seconds)
    (4/4) benchmarking "different"...
    done (took 1.770968459 seconds)
  done (took 7.679873531 seconds)
done (took 72.843065926 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.117107254 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.526792216 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.174428699 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.349862756 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.255698288 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.187284015 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.182283481 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.1414382 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.134470219 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.155319715 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.123835473 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.132633789 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.127788853 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.180212464 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.138213883 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.205471251 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.470184602 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.157719204 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.162970214 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.058095556 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.469138935 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.128858427 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.147299956 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.228587361 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.559551355 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.220250437 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.747097337 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.121273038 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.739785844 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.144320746 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.169970568 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.19681892 seconds)
  done (took 184.003344954 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.115318986 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.00602325 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.033175754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.157692254 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.522821588 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.529437064 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.993301589 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.542877514 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.125909655 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.137318438 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.192983766 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.133056368 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.190342145 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.683961872 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.16697578 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.142779205 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.020806493 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.948210746 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.178465886 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.065097685 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.140624414 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.751026745 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.666807784 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.973427169 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.154121517 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.18522117 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.140671718 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.128253997 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.617636767 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.983131076 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.16222527 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.173132777 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.342530417 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.387072023 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.148693478 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.173198125 seconds)
  done (took 154.140856405 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.346105602 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.121600278 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.172582715 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.23642705 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.069337414 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.982211957 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.12234005 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.166354658 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.135365661 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.147740786 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.118172518 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.198776136 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.132442046 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.327134832 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.186431682 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.174117757 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.168972308 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.485176371 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.151640769 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.155512509 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.125732155 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.278602782 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.476349742 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.258665337 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.16533084 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.199831215 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.279982238 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.157541104 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.107855826 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.158735201 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.273877751 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.104263316 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.256277789 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.250255021 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.200783703 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.160655166 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.133882477 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.400919459 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.139362424 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.150985044 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.169521672 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.199327187 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.120621618 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.238556808 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.226316261 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.1183726 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.15753023 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.66560943 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.77000314 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.140286671 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.099324703 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.140666086 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.125017333 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.127928785 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.569549879 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.15831919 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.202078457 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.847617579 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.132532577 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.109024716 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.110998207 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.097316823 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.113773962 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.139281049 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.16202162 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.734418363 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.031028268 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.48252515 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.83332075 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.1452336 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.180126276 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.160522955 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.36000505 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.243904425 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.143658524 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.122891302 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.304295911 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.152373256 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.169015834 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.066999449 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.053936033 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.15505756 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.235103351 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.121277734 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.112437571 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.226940409 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.489258147 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.185685992 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.235589562 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.232283705 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.168944423 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.168646699 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.203532013 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.078265768 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.205799954 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.198042973 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.601157403 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.184595874 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.156549845 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.224133991 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.545130778 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.202766886 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.278007191 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.617867999 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.120371216 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.213329525 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.164412254 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.192724085 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.191364107 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207332661 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.172689521 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.167865612 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.170062028 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.182588604 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.191872566 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.191975028 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.207199231 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.215166408 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.19995497 seconds)
  done (took 333.441885891 seconds)
done (took 674.177843915 seconds)
(4/20) benchmarking "parallel"...
done (took 1.151598805 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.44958497 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.201099993 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.474273436 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.417043499 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.341970167 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.352597988 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.358810352 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.462376636 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.370574398 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.299709706 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.381123147 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.343543888 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.409721028 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.460234001 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.428199864 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.461926527 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.372086531 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.905603598 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.357945893 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.345653072 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.333680584 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.351864909 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.320576212 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.3689841 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.433968066 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.371652333 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.576783648 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.416948347 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.369137199 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.411096454 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.414013332 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.444150705 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.397150636 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.40665266 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.444562143 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.424248222 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.380223684 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.481475422 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.389298761 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.399766183 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.405389994 seconds)
  done (took 65.933947722 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.645407153 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.3839 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.48402176 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.491373681 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.162993355 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.453447081 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.558687342 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.334063039 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.329621197 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.465885971 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.464274003 seconds)
  done (took 18.958030968 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.457946084 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.381297184 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.537742097 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.485707891 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.576119167 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.4787503 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.551031578 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.36340797 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.380562555 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.463018954 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.500843036 seconds)
  done (took 18.340194779 seconds)
done (took 104.400934734 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.772613755 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.226255761 seconds)
  done (took 4.154115926 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.163482999 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.172574966 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.16293888 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.173517096 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.165948621 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.159667869 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.217941721 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.158703721 seconds)
  done (took 10.517564674 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.177405862 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.158671446 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.172065297 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.180367834 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.157845483 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.165951154 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.167755409 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.159664002 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.162948774 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.184886521 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.173412991 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.164443351 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.160132466 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.21464666 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.153932754 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.155981618 seconds)
  done (took 19.873929237 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.164285026 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.146705514 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.176880436 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.160374171 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.18178421 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.142131097 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.166812323 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.173571483 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.177135873 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.167934125 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.172456372 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.16825247 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.153054069 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.163861166 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.179777983 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.157452681 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.166839376 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.153359343 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.185377272 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.166718975 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.166951618 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.167347582 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.162626205 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.155881526 seconds)
  done (took 29.105137215 seconds)
done (took 64.826613331 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.798112406 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.964252189 seconds)
  done (took 6.915536533 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.171667196 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.183970151 seconds)
  done (took 3.572290379 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.17419825 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.175406706 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.200822942 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.184107879 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.167806912 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.174656277 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.151947367 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.190719837 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.15867604 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.168926046 seconds)
  done (took 12.907876699 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.179223241 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.211928276 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.182814694 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.170989509 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.201155992 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.174386587 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.167438592 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.186496224 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.152752832 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.180396764 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.217081078 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.36710561 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.202215252 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.419501727 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.191833873 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.187047162 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.189892648 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.176484845 seconds)
  done (took 22.912049945 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.182313785 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.155772924 seconds)
  done (took 3.48314555 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.162713236 seconds)
    (2/7) benchmarking "second"...
    done (took 1.151688824 seconds)
    (3/7) benchmarking "month"...
    done (took 1.168747056 seconds)
    (4/7) benchmarking "year"...
    done (took 1.150182573 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.176362445 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.161845104 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.162821229 seconds)
  done (took 9.281591598 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.5993308 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.297543628 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.369921887 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.605735203 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.771326446 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.098963211 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.824773573 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.141532672 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.943505336 seconds)
  done (took 16.799701396 seconds)
done (took 77.021548266 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.862093577 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.161005676 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.637015993 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.249035893 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.21984283 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.481603139 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.170682654 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.701263451 seconds)
done (took 37.620305178 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.315000543 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.135191779 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.177148032 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.210654683 seconds)
  done (took 19.658301872 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.148200579 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.744041623 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.212882195 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.249412248 seconds)
  done (took 19.593672634 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.567169656 seconds)
    (2/2) benchmarking "read"...
    done (took 1.584947716 seconds)
  done (took 4.355632184 seconds)
done (took 51.107040748 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172804134 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.172255894 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.185067042 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.186695877 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.16800354 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.166066391 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.172786032 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.165389918 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.179373783 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.168470319 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.163700496 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.157718359 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.152839315 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163638843 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.16271847 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.14034961 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.191748646 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.171374023 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165334737 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.157291743 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.174545157 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235917007 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.165716358 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.202863595 seconds)
  done (took 29.303896013 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.331277215 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.287185682 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.344355072 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.354782465 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.393669778 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.391034457 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.375499727 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.310246119 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.384473252 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.411936502 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271976155 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.325260756 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.351766723 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.310772854 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323359687 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.31807175 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.314120759 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264216525 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351423737 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.292003415 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.311802886 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230237941 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.278668552 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278483954 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.282878889 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233574468 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.343006164 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.275437102 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280894358 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.277524138 seconds)
  done (took 40.665385202 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.209625031 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.179380396 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.18994799 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.280696052 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.243017751 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.219212469 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.197542725 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.189116239 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.187108528 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.195867265 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.202362682 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.206328272 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.199588628 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.204745388 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.188541715 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221416714 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225472999 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.357557969 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.192449585 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.191985299 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.250296564 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.186732126 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.198017083 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.193180354 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.225946439 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.194308209 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.175975995 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.191872022 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.210123484 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.160271586 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.179538472 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.234824713 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.202942161 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.188591661 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.315353306 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.246217629 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.171480283 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225528518 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.169315106 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.192110098 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.179392479 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.184649368 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.190073136 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.19972265 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.270869732 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.190819548 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.205410808 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.194156917 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.206491755 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.219782073 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.235840539 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.227883044 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219162004 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.198824541 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.200690532 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.245164969 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.237386047 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227125131 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.200198179 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.205572157 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.217529997 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.308668602 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.212895324 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231121589 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.604404395 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.245876245 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.303743802 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.207679087 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.19655705 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.412272162 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.188897623 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.416063145 seconds)
  done (took 89.34923738 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240117572 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21265975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272483999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.294120523 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20948779 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.210457355 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.199918686 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223446076 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861046419 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.172259029 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197868811 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.20530853 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849237116 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.17630804 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179369724 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.251411737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.184949282 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.186539622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.204725018 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216077545 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23662631 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.180132178 seconds)
  done (took 29.200486588 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210967273 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.197388344 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.209669633 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.176043992 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.176350741 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.198627084 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232217428 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208124959 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235902893 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241476757 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228275825 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242545379 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.191894534 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262520329 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289881717 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295272657 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269482213 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231016807 seconds)
  done (took 23.273300234 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.393820628 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.400545264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.364176539 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.28668207 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.486672707 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.513458807 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3073733 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.405727596 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.289574195 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.353405114 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.413836446 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299846693 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.436629962 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217326908 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302109123 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.485517092 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.321399096 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236877741 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331385043 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281460699 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.398085812 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.38256153 seconds)
  done (took 31.104773593 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27853125 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279984564 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269485959 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27004272 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.180460309 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.184766448 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224184941 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220298752 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.190461924 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.273408053 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228512488 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.158095116 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.182083324 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200934067 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.304947664 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194649403 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25053727 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250387782 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283654462 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.160090715 seconds)
  done (took 25.7877907 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.159034387 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185032727 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.161893391 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192126504 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165037936 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.170897348 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.182394837 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.207713457 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235489318 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.455397921 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.161033255 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.179299197 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201714019 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.196880992 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.189903382 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195629649 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234853654 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20815788 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196122825 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200412594 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.477584378 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197087846 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.190171464 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.170837591 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.206526404 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221451833 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192477727 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.216005672 seconds)
  done (took 35.129620241 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343944672 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281058624 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.264301498 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.23790502 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.259511381 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.296465416 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.211509479 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.225844246 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249650469 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238663082 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.250371646 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.22409637 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230294748 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.288734193 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23611731 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225002625 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.360415301 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.261769877 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328953115 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.219229895 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.2456096 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.385917402 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.240400224 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238155669 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.244899191 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.174622612 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.175563898 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.17440531 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.165177084 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.197203161 seconds)
  done (took 56.688521125 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.199049769 seconds)
    (2/2) benchmarking "in"...
    done (took 1.208712407 seconds)
  done (took 3.558005053 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.187304716 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.360448596 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.228397062 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.388387687 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.352155465 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.366787297 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.405021675 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286449684 seconds)
  done (took 11.746378747 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.184030016 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.309610948 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.29497069 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.172903699 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.176557703 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.445535303 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.217558827 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.990596331 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.83601673 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.08052004 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.320237067 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.930554126 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.234253309 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.457677893 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.350425541 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 3.097386742 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.348462395 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.614057699 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.112095309 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251700581 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.779168839 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242768486 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.158235019 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225143754 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.181000887 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.087506499 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.823336783 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.765847438 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.203516919 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.271721951 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.815423185 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.224915866 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.21285398 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.393103568 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.323444364 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.217170876 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.311558022 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.275709336 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.215911164 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.245463434 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.701683877 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.886851862 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.388820901 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.439662036 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.276803875 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.220818816 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.22863205 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.244145339 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.445967612 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.863226981 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.240994688 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.087963533 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.328171812 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.239147858 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.622004492 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.299902574 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.205576807 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.133265898 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.531786657 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.31376579 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.582330471 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.321500038 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.142813368 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.324720911 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.199709048 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.420050687 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.069829276 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.898434091 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.826061809 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.296838665 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.559950096 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.365199247 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.21482771 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.236660394 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.12258674 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.492483963 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.254634957 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.260071526 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244415846 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.220952633 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.422951916 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.333209274 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.036126731 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.379923717 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.432585371 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.643213696 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.301946899 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.192286929 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.783789506 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.050198234 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.237092547 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.642192544 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.514033318 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.362728545 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.133956882 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.428994869 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.250840002 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230452205 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.040071414 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.600111832 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.31895475 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.18883492 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.549576097 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.326134807 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.238369056 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.230014334 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.823042272 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.299829454 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.278160647 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.199375612 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.19008711 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.197495552 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.845350671 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.217634155 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.242477713 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.731235812 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.223483599 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.50220457 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.450690033 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.325619489 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.448374566 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.051957065 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.422644147 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.081578974 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.214920132 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.477525879 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.226021104 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.839295835 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.375956469 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.276258956 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.984404782 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.212162519 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.198001919 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.229636326 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.234532616 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.210403179 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.189038738 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.188016801 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.181357336 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.211006194 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.299539316 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.49337849 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.739248272 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.262379351 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.357935521 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264204129 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.776334862 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.454571673 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.790303497 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.321213949 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.179008086 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.656212087 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.387186444 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.969766445 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.333529822 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.216529581 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.21679073 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.022935858 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.120320196 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247596502 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.187264342 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.842255705 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.200238749 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.197900821 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.179324624 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.668538838 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.329240283 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.193439381 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.240093713 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.860107148 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.790077921 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298499978 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.467008655 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.313904552 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.190091088 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.186928829 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.168294081 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.951855213 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.825653304 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.214620523 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.742885058 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.833936986 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.182924531 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.245833459 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.206256399 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.358683259 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.353270464 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.28060443 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.156681067 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.183688811 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.179717449 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.705643841 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.015926164 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.918844331 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.044256057 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.177389766 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.066478664 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.157509414 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.793019861 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.311501397 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.78927802 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.02813118 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.231003258 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.168306193 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.170119755 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.281364783 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.304270555 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.306689755 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.503224887 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.288578928 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.157996487 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.754397169 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.300385054 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.741151882 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.279212355 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.96513773 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.160609712 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.265284334 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.244629457 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.628679118 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.21005009 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.178921276 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.699164303 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.221119196 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.163522219 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.111452352 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.5778577 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.053836522 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.859203569 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.578998657 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.191602566 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.732914102 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.349324026 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.321674445 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.95280794 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.227622191 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.445392804 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.252633886 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.412579479 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.269363931 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.720063719 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.320955437 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.636491466 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.36255845 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.150219351 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.267731346 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.580260639 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.304900747 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.172446059 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.249629072 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.228766717 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.725695339 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.23695665 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.249091326 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.446424427 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.950811058 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235583919 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.418099458 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.248212964 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.013224521 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.167155335 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.452394213 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.003519105 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.147586672 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.177225558 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.856024017 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.231902606 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.440806252 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.270060837 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.142890978 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.170785738 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.262985893 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.196378546 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.173054201 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.427246069 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.030897422 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.185695143 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.173577128 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.174852455 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.137803059 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.29744789 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.172208738 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.258543518 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.484588835 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.764428847 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.87184192 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.239202353 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.624581793 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.214213544 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.88567597 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.169564837 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.157724046 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.756547093 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.235753707 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.330848755 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258103904 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.236836051 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.603810616 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.325795496 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.370677653 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.203928908 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.246184213 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.845962268 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.710726051 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.363925816 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.344305873 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.344156695 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.726429047 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.181378016 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.720202071 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.179325044 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.877831941 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.076934428 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.203272061 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.166837306 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.167114495 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.716922322 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.184076 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.198880142 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.929862402 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.678251409 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.264490617 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.924895032 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.19815239 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.173673359 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.183138648 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.177493749 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.105927213 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.054003712 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.317432319 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.258069914 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.145782218 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.152645928 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.117187455 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.412138188 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.781914633 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.981307595 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.08404351 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.336751198 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.18008036 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.136703056 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.194290033 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.192097348 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.146177937 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.152456444 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.442204652 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.26855985 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.785875659 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.201706228 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.19696586 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.324095219 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.193901671 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.174192941 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.294364941 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.186396655 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.263779914 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.237019474 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.208139762 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.634328655 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.359176916 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.190869581 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.322664938 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.384712183 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.376961234 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.482889372 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.349904088 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.658946499 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.528864057 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 3.006015238 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256542995 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.154696417 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.210843284 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.964082659 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.155516872 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.547444103 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.788868771 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.209330124 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.421710581 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.029971405 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.585773615 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.297396341 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.220928844 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.190055744 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.179414668 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.208374569 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.377660539 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.261148073 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.465790701 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.327106525 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.189114486 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.351835555 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.270246476 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.215997674 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.372459719 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.230274456 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.15117033 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.191214024 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.541003643 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.928089808 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.207114976 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.182746035 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.117407461 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.913061006 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.018740693 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.858609125 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.14980371 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310618857 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.191982549 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.3840059 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.263239397 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.767956118 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301906254 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.950823266 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.537094375 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.254991291 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.290418155 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.556661913 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.925694627 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.512250981 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.301779679 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.237938491 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.493669908 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.105884109 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.337405036 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.113857377 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.430652071 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.739138583 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.709246707 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.416081655 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.258663189 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.1026882 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.727471043 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.211316526 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.188292807 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.993077285 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.302254887 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.407526348 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.01427416 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.424373741 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29396149 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.847175384 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.764012891 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.327801698 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.734967042 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.304108809 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.184048776 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.691382889 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.223651175 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.205105917 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.278765191 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.184429542 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.206126848 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.783934877 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.729499371 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.329980504 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241873883 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.150548303 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.707883485 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.001334933 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.216938908 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.213260321 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.207501782 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.381992397 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.32783301 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.161402217 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.588685053 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.782721124 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.303559197 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.69034965 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.289166326 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.303571441 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.390021305 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.46828051 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.28068995 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.223057885 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.178040312 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.167664618 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.134137512 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.481823562 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.261634896 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.158713569 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.707355798 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.324113023 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.732252367 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.225196757 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.319112035 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.185102052 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.601703633 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.304122905 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.64927768 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.110145777 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.182355542 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.497743961 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.213242003 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.190072777 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.761828057 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.219405446 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.154941675 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.98504717 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.368767558 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.343942022 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.459199784 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.368197348 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.204383914 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.738658457 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.221283473 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.703081968 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.277385961 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.150648609 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.662721264 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.24085359 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.45113771 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.256930185 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.512395913 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.22566841 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.493095769 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.375060088 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.243305184 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.144066328 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.152619656 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.079081732 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.16559794 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.659677902 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.084770678 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.595128243 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.256794634 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.005596883 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.698573042 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.671179199 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.478987548 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.322519566 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.34913129 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.318603149 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.076660794 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.415049032 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.176343039 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.269414923 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.232080786 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.850642093 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.173945958 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.142131694 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.460721556 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.304568378 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.156442463 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.158827745 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.073688742 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.743680784 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.22138952 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.282523063 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.25217374 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.167500425 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.709477605 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.40276828 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.177389001 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.150205889 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.199551822 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.957570602 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.210355114 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.150798305 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.417505499 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.258028109 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.518711939 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.901464783 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.551276113 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.225624785 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.141777142 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.140592165 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.66514087 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.637339043 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.276259158 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.541185857 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.262038025 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.726932121 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.18684321 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.522300666 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.67518678 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.084874146 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.242051278 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.147674849 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.139950323 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.793137253 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.155440618 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.91739363 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.438535494 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.199423583 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.864401819 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.077982103 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.167276428 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.232344487 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.153982476 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.1717598 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.158875149 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.158385938 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.657681317 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.203890807 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.195270562 seconds)
  done (took 1452.603703051 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.441953592 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.174847053 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.158253779 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.160630596 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.17144403 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.188537355 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154664676 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.188524108 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.208140871 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.153057924 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.188550591 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.157944374 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.152702265 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.419010207 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173632141 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.155125353 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.162203006 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.162956775 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.161038605 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.142740653 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.161894467 seconds)
  done (took 26.200264698 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.157032694 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.174029073 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.139649125 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.183029974 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176804728 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.174037201 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.185993914 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175191132 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.190417012 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19350315 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.177780964 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173864041 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.177524748 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.182096734 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165475687 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199081412 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216598691 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200165974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.183220055 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.177484435 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.168494544 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.191230581 seconds)
  done (took 27.120351165 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.185549076 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.17796424 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.781094692 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.236591954 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.19417767 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.201826663 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.212300353 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.408859439 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.142907493 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.064017755 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.563846553 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.261605247 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.169496662 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.326537233 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.243872412 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.177481587 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.28625011 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.158083807 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.162963511 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.160274098 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.162665275 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.311327048 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.253938331 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.153586089 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.930740273 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.283137991 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.150606183 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.171704336 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.157109018 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.14582385 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.14364299 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.166826504 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.902651999 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.820285166 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.399923804 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.06313677 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.178367465 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.170781371 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.133009514 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.152843744 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.369669536 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.953717574 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.15800806 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.17188979 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.473260833 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.223278111 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.164901329 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.50494341 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.271687431 seconds)
  done (took 90.449956625 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.161204985 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.35459687 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.233235392 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.170179715 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.361711889 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.151944999 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.330619108 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.163905804 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.151651616 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.153449123 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.351254807 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.323273543 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.175108331 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.161820125 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.312427249 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.171042363 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.137950809 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.129185991 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.154828313 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.142678195 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.137289729 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.277713761 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.340540113 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.314131568 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.159344467 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.163819676 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.166905432 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.162833106 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.36611623 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.162198325 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.182150276 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.163817116 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.34857082 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.273441298 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.15228917 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.184410827 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.378073781 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.148592557 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.207988249 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.181274796 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.1803096 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.169641567 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.282105809 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.358979428 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.169664466 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.314064377 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.160003173 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.158265421 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.368728542 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.163208537 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.191212581 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.361505109 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.158466237 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.158296317 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.174287636 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.348675185 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.143756205 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.173208833 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.160476821 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.330973794 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.156247449 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.152177139 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.315556778 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.155295499 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.170876757 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.32166837 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.295524242 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.150253042 seconds)
  done (took 84.148455465 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.152081483 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.136867751 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.152272463 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.150381608 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.145454143 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.138921668 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.15004944 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.159913278 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.178886579 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.156456255 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.160014093 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.13777459 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.132170773 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.171020351 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.150598182 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.168572352 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.158449878 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.163193533 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.192310632 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234910662 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.18980423 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.176768877 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.194481355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.248199371 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.549233603 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.1882807 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203934653 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.259152164 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26386086 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.243972434 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.569858819 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286650713 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.250827877 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.232300763 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.598519438 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.266480479 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245382174 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247789732 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.243029727 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251529689 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.239879071 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238023179 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240850103 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.264821367 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258075632 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.21989306 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.218846618 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.584426797 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.230509015 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22339263 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.220039863 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229223981 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246769815 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232586307 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.239402903 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.410235171 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239678802 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236020135 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236261245 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.240683089 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241368622 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.361583806 seconds)
  done (took 77.892736831 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195280156 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.202566678 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.236830046 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.253375649 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268107372 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23785305 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246224352 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.275170936 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28076081 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.262191305 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247366208 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250006539 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253151185 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238575689 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231879504 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26597636 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221525757 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232877298 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213894379 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21267145 seconds)
  done (took 25.998090405 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.20109945 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.197764473 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.217614115 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215411908 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.184591434 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.222359469 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.221706925 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222888747 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195930685 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202898136 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.194832137 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238424785 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259370745 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217733214 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.234426845 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.220968746 seconds)
  done (took 20.64833661 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.223116285 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.220700703 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.220788954 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.21291553 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.22090817 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.249268999 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.23874219 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.268988589 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.238680429 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.767801093 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.23970408 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.221412483 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.23303319 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.258006252 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.272894944 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.233736505 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.196077158 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.208299424 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.227494679 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.198069923 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.735186037 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.227471915 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.24941849 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.211155219 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.174882102 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.756338759 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.201104163 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.16600645 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.150469497 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.175630428 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.173540389 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.663760354 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.183680356 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.170657266 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.182802222 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.143293365 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.137587005 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.175106101 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.186978377 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.173543887 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.146183527 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.160306685 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.168715509 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.184050874 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.169307858 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.187099745 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.154755614 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.642347257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.161012632 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.16022045 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.161826439 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.181556333 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.191608369 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.702347221 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.158030198 seconds)
  done (took 70.14303921 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258979837 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260120361 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.17100375 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.151023379 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.203290094 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.277969985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.331117968 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.238236879 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204156793 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235552887 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.329534803 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.206588295 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228163042 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291973099 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317617064 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284533539 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.196124831 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265712821 seconds)
  done (took 23.616429818 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.210580127 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208278734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.193358189 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21118364 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.200890332 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213554925 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196172499 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.219264529 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231362093 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218400801 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216320315 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.189572731 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20310023 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.172512694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.170367282 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202167135 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.199340135 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185988703 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.17028388 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.158039705 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.167150919 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.177583438 seconds)
  done (took 27.533869583 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.186841848 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.238135598 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.188842115 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.14386552 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.158516295 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.181919373 seconds)
  done (took 8.276798529 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221400792 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.154840952 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.188701413 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205557634 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.161543547 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142170815 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219844804 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220450508 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.16802291 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.470192939 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235269823 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210068504 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.166009744 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173659159 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213169723 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241955547 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206019001 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.161979993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218745829 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342743314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.182805914 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182593446 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169666804 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.187437302 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19510402 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.15523228 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164455332 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.508053802 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.174670928 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201011988 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173005272 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213864179 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219997343 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.47997078 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235201027 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170829059 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.162660191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300080761 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.162473824 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16271898 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.21570449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173250433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.1623919 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.170079191 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.157655399 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198433537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173040174 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.183148623 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.148212948 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.530432827 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173159262 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.16514213 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173545909 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191841134 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186891604 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56238789 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565707196 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198912208 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213532929 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.515910416 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215995778 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221730743 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230548677 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.549372263 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.1927526 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235076562 seconds)
  done (took 82.620932845 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216661263 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252037823 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202845744 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.496314695 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189688411 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185808531 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198825429 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188427421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187323593 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244974594 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33990338 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192088673 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167277461 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.160535352 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.158384354 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167008036 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.184237275 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.166826529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215897975 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.534032147 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173714754 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163964033 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.156716097 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.148777413 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.466422947 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.16662129 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175482901 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.15877741 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.153974006 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.159565219 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178099135 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.150544016 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.165395703 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211690271 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.158410004 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.164893112 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201047665 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217298403 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21936176 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170778325 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182954102 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405100213 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283185254 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229175258 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548631424 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242386286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22001237 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299310789 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205688368 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257798361 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.505779874 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.478036958 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.488292003 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170755118 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173591924 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171073965 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.160805033 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182089871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163692196 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.178894658 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181256223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.183869792 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.526325227 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.178087891 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.174671982 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173970326 seconds)
  done (took 82.576986983 seconds)
done (took 2476.837180393 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.199364698 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.304312882 seconds)
  done (took 13.653009846 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.269493218 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.217056564 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.355131415 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.208903662 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.264902398 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.30277324 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.254462432 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.176241938 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.173196615 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.256161696 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.172387966 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.323453803 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.279016547 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.18083913 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.179630352 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.181002706 seconds)
  done (took 41.088587035 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.155679375 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.364557531 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.21446578 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.944394371 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.363416493 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.011482042 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.445670585 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.441107633 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.544419119 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.63601776 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.435743912 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.693243794 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.967504387 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.276958683 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.694037828 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.69179959 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.748913111 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.875213419 seconds)
  done (took 60.659121697 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.233046024 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.358382161 seconds)
  done (took 8.828901015 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.249106873 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.219302684 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.242248525 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.266455177 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.212026479 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.20747308 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.186070195 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.23386486 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.204978953 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.243927171 seconds)
  done (took 63.497326123 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.268130027 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.833651516 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.667883783 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.863697513 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.853307349 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.634009235 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.383477245 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.567224517 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.302223345 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.196101211 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.100048725 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.733463959 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 3.019589638 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.185564311 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.686733169 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.529038601 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.803821063 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.721842008 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.532593827 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.600737085 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.444620052 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.912759721 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.623933536 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.040197584 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.20362587 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.321924407 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.219587814 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.269803977 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.230820846 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.118098611 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.038597238 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.188580735 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.118023498 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.165382979 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.311616549 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.805068069 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.875571435 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.358261497 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.498639182 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.471521219 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.527102597 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.457516772 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.309050875 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.439987105 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.382242287 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.411227979 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.11303543 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.394673995 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.234698267 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.279434234 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.664328477 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.340841064 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.294905428 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.293239849 seconds)
  done (took 155.038709018 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.134380339 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.606617687 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.367370062 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.182088836 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.58272979 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.408733187 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.983060598 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.70231931 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.16550133 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.432056333 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.387571861 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.332878791 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.194260999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.219304472 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.196066234 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.178781462 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.369890052 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.583656271 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.164909326 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.157686692 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.378254433 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.414666813 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.265458404 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.159187418 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.331327419 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.415121164 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.612646047 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.346148522 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.586423941 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.153398731 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.5787068 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.145673995 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.147437838 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.080815638 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.570541491 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.480487169 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582198452 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.148810476 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.030864911 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.158963863 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.807347368 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.353137195 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.505898696 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.308786229 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.327015609 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.410384894 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.776287912 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.166810772 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.953213467 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.319214975 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.433560153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.402539852 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.442597172 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.161215874 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.702993987 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.213070888 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.241080018 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.458977318 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.320132909 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.362544722 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.18574931 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.184376166 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.172665025 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.421604808 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.191451463 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.271458951 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.185908638 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.165334234 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.311208318 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.313106357 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.344473445 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.480580941 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.439154914 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.123507864 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.528620449 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.459579262 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.634668196 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.462155031 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.185217467 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.170502434 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613015713 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.638392553 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.382937365 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.446040043 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.516393878 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.4951664 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.773645817 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.199253976 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.464971215 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.383198469 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.424221242 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.342780811 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.575769185 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.082644823 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.161691309 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.209514654 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.301460446 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.317552477 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.19787346 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.700008382 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.479655393 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.862208681 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.37047956 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.658736103 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.29935889 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.188109272 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.730100393 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.168680049 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.405579884 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.503494044 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.20905785 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.167353188 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.360631486 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.991732323 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.22847092 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.316721485 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.545526701 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.171193407 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.345128151 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.189432058 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.476705919 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.066375144 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.462830977 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.194453579 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.431423636 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.387706537 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.327574556 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.176003239 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.505885474 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.49123378 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.612327652 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.416235682 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.071300521 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.220862973 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.480645097 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.176039584 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.159419626 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.347334185 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.168269156 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.330044292 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.164779175 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.416761268 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.369199434 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.526463575 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.184066235 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.400327081 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.401619967 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.543152127 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.172538974 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.311765769 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.164504614 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.222720516 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.32602826 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.159585997 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.148149854 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.062966812 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.150993079 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.313551224 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.377998637 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811942694 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.660317437 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.548969032 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.133224376 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625850582 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.33752163 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.652360672 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.67746293 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.329101077 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.144644813 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.146555358 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.132098065 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.379837315 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.343125746 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.146512551 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.134370904 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.871979003 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.249796507 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.173109671 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.340932815 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.792460358 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.558396313 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.354422776 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.154585484 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.477544243 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.172200935 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.321548335 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.676105828 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.427560751 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.14965833 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.15174335 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.158725692 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.150246466 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.398864626 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.416615476 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.745411704 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.359948869 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.457290627 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.387681115 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.484139981 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.626598339 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.166281266 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.397365823 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.177575905 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.613818735 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.146257193 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.319878148 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.456112851 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.159976745 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.463601382 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.524220631 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324027271 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.615483819 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.189655968 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.146250099 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.150296852 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.330314265 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.646666996 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.158474486 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.389248916 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.524047209 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.258755537 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.352962892 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.372919104 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.15864994 seconds)
  done (took 743.635903882 seconds)
done (took 1087.549015349 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.160539685 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.176593445 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.174056495 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.189832337 seconds)
  done (took 25.840478982 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.013609558 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.978208656 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.267160929 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.195557062 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.298622958 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.416283427 seconds)
  done (took 11.351133264 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.709153 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.156625721 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.149746918 seconds)
  done (took 18.205134558 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.476154006 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.63558949 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.344554836 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.254632435 seconds)
  done (took 6.846406307 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.159237406 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.16749629 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.153433323 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.174307355 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.173462225 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.16951666 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.15255783 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.168903236 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.17299003 seconds)
  done (took 11.642330509 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.62583576 seconds)
done (took 79.644975336 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.624209259 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.488683359 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.18651004 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.38128499 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.312901067 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.501149621 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.300890622 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.251459939 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.517969235 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.602873192 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.642088755 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.404880051 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.651310954 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.672985858 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.370967354 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.172246053 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.186526897 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.229223884 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.857445174 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.358577954 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.838433834 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.297109233 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.15293746 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.171039392 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.139157819 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.264298316 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.431791036 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.165358005 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.470961268 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.176875142 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.25995071 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.639014469 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.351532893 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.454007571 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.274355107 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.077407382 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.622635052 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.180322644 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.382988959 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.763680266 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.400837107 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.23652114 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.135081106 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.453647062 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.585967023 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.163238783 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.105188808 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.322417685 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.721402012 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.373115182 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.577607183 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.155352602 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.817028278 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.220033065 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.268995262 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.182630588 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.138811701 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.63770963 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.391925398 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.424943632 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.171050901 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.121838806 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.08262793 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.168366103 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.154677124 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.202954986 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.59808005 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.248177051 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.641523552 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.170760709 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.173293328 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.179410627 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.906339793 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.219252262 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.143562868 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.188431519 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.459223704 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.360384869 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.193383979 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.233103249 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 3.423569377 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.169391217 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.403248366 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.478446777 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.334174376 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.563045725 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.6741628 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.552369551 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.782312623 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.158666688 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.33570095 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.789501698 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.572959433 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.21622167 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.212043301 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.442593639 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.585502405 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.686104734 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.336158696 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.882038882 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.202630055 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.192260967 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.674282063 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.491515817 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.999851917 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.193711477 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.308427848 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.1385534 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.318926525 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.170603791 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.770896207 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.695398953 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.17056963 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.226246985 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.690789338 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.1532543 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.493568828 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.530027858 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.330184831 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.219621183 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.430799488 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.20428483 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.296346787 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.792135279 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.565866943 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.434669246 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.195050776 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.522618422 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.159714216 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.367383438 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.180786086 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.796501449 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.734380943 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.202678498 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.43572003 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.261650184 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.145498486 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.292795154 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.249011352 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.302218182 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.496938574 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.508014751 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.33121096 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.148275958 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.516666171 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 5.566163381 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.355337002 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.49298407 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.313052922 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.451252841 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.261226071 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.178909573 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.26299433 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.593655855 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.741777695 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.843107471 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.406862267 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.316767194 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.824216161 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.527714052 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.025855916 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.319395677 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.257348119 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.197701358 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.173928025 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.25652741 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.184920847 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.213422581 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.353489102 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.560409219 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.982722934 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 2.013260404 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.892612174 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.445418644 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.302075351 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.096083372 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.827423011 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.147035005 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.59594614 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.639184268 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.240190855 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.215509898 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.166458656 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.261165556 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 2.005830159 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.22521753 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.516474076 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.812213494 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.668347377 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.551283484 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.437415551 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.232269895 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.63523144 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.487354064 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.465299654 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.359550843 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.810074807 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.246369786 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.568052347 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.284453811 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.485346381 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.145382855 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.324747177 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.403488643 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.687941561 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.499243608 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.392591101 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.411148031 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.476483128 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.134132354 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.158858693 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 7.794681934 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.368802688 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.137959059 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.152967862 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 7.768131571 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.477125695 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.051896394 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.318215845 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.546453753 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.26218064 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.288902102 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.566541588 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.175715218 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.456288324 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.375535969 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.33018081 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.3647642 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.213431367 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.373457746 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.369305929 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.290611924 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.396655636 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.275506208 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.444831588 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.147592212 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 2.879081183 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.135296686 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 1.737088988 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.182585486 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.151424995 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.382180408 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.337462007 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.451965668 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.23495739 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.312059256 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.162117962 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.220606442 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.758917106 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.992158697 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.731301597 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.094531132 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.174595672 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.139147271 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.712094201 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.567690072 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.203695061 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.257539893 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.772822905 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.167216569 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.334827065 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.177252122 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.179514347 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 3.083305253 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.286936393 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.416793388 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.882993793 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.159099153 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.361533523 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.202283243 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.697902267 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.610548171 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.193224824 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.300361475 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.172359162 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 5.509269008 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.503374601 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.241732323 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.337254945 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.465200496 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.259253425 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.219569472 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.103640081 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.158791566 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.769060407 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.488910737 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.600435604 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.138271826 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.518146103 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.163899857 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.626109907 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.135994805 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.193693 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.516083182 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.235671403 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.473276727 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.143739992 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.212534416 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.421416121 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.202246043 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.156624483 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.316682573 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.141704544 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.618454462 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 3.091848937 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.307518669 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.108173863 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.373673399 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.299263701 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.173249268 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.298659618 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.247071293 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.726423982 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.586499851 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.140106754 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.547918402 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.189515563 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.558597571 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.150853415 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.167680235 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.288169395 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.208545973 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.126476042 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 2.20147095 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.283476724 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.619101545 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.259579796 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.065655167 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.112421953 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.599377424 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.345285724 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.533239995 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.19430037 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.192492542 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.363594319 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.790302021 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.29441468 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.158320643 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.391402511 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.190834212 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.761320655 seconds)
  done (took 884.603755662 seconds)
done (took 885.979540674 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.161621647 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.551227267 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.324630808 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.102076988 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.995627039 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.810783826 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.393106624 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.35485739 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.191666779 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.354922051 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.013448225 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.95849907 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.206796856 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.25013686 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.194755159 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.251715703 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.340379657 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.353757847 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.256561011 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.968177854 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.486416988 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.926294585 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.534107135 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.441347014 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.511615517 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.215606148 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.187970299 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.461678645 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.52310541 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.245730903 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.369223552 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.36535439 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.038094078 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.392323791 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.223114048 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.230837263 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.125552837 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.22670288 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.166775789 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.213479817 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.529499879 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.270370622 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.872789322 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.003908062 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.931496348 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.547313881 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.994202206 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.233239036 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.227166423 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.314099897 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.160304365 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.139152812 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.482166798 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.133201921 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.987062198 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.95971843 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.479803118 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.061073801 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.859984398 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.32189262 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.5090205 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.235622182 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.326691 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.399183999 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.297487517 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.459025952 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.535556039 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.1702451 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.349795214 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.352247054 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.368900834 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.384222953 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.255663478 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.326167468 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.272932718 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.354457199 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.862091147 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.365102731 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.930541308 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.213851821 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.052434252 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.067465442 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.074361317 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.221560275 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.171231071 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.911264833 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.07718854 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.040017938 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.235255325 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.327119942 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.049094746 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.367091993 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.609295449 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.203957074 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.152129713 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.329260969 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.096050639 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.142397196 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.294694579 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.330009153 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.92992472 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.211996737 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.132520255 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.225368461 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.260584165 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.205630025 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.198787135 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.553751083 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.353543292 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.31639616 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.545928481 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.24634457 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.352749631 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.254403038 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.233919507 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.899188728 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.419606707 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.05667412 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.241988764 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.8247613 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.42665112 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.210642107 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.505034112 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.438408483 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.175024295 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.235753395 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.265706908 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.055406289 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.238673612 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.217067293 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.321236829 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.563062522 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.290569215 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.120193211 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.374660436 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.083166526 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.372051646 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.363860319 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.220276985 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.027549641 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.198715758 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.271102435 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.405330058 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.505340991 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.351726946 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.431117855 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.248405832 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.394659559 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.154251033 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.249333462 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.343538731 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.262040488 seconds)
done (took 246.091386486 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.466498878 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 3.512171093 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.406462634 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.397779796 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.491216285 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.415773402 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.216070435 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.636084917 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.199155515 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.598450391 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.422387364 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.314886823 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 3.513573791 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.408369535 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.505708041 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.408604639 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.273875105 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.442084695 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.616144382 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.604774859 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.175553943 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.39210815 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.325128507 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.575726081 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.133230768 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.142429296 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.515684883 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.307286634 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.439332044 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.194687934 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.234270103 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.424553008 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.485795256 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 3.283633733 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.579753615 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.1901719 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.449215109 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.232447555 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.464819373 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.481448334 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.358958284 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 3.927017221 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.192667505 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.239700566 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.330331368 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.476057392 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.288238826 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 3.44575684 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.124809726 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.127293721 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.406578658 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.155279334 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.298963107 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.441338427 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.402737593 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 3.239919236 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.523591353 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.534965423 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.522502152 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.458710848 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39112668 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.543134281 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.567195249 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.308972951 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.165685194 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.460505194 seconds)
  done (took 128.93178411 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.537070152 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.457933188 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.622118117 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.4732141 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.673418502 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.590843087 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.531774416 seconds)
  done (took 14.035325764 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.20312631 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.169520338 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.426747967 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.419572281 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.188651998 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.302921033 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.273982238 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.194218843 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417794626 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.206282924 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.536161901 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420956685 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.129070067 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.192550676 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.313176064 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.563476106 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.233607806 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.271150038 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.264483463 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.479047455 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.180035844 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.193743817 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.362538742 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.199310308 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.294269261 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.300260483 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.247461588 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.179434638 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.214978645 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.183743589 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.229551824 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.36015164 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.268531926 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.236900668 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.268352325 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.618749903 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.283528179 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.260978939 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.417466389 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.233879023 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.262220652 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.301428681 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.425273413 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.338778067 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.234565805 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.389503838 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.189477518 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.255913318 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.234833172 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.206577827 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.38725979 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.25502991 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.186646058 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.168295162 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.462525428 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.203943035 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.296324486 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.24266603 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.253677912 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.302194743 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.215199443 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.482099707 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.47539968 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.250600674 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.545995992 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.596920029 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.220285992 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.203911534 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.211146013 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.464337408 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.236518732 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.475482429 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.262198318 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.34116331 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.278183576 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.406781254 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.434464049 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.044565044 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.050315755 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.185477475 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.577590199 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.265133417 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.646130459 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.179488638 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.186940648 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.231849012 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.272306446 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.90530227 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.118879471 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.217097337 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.540354799 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.200603444 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.25468645 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.257506727 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.212063829 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.315102551 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.441090661 seconds)
  done (took 151.831028455 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.40318092 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.398360425 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.557094559 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.136263521 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.255928856 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.530062445 seconds)
  done (took 15.436242829 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.642700949 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.017392412 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.24695866 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.268271455 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.294791599 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.186688077 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.185424695 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.384150803 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.390470436 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.253897561 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.19007904 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.161616439 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.151437669 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.337463478 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.165077036 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.194941483 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.155017707 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.202420356 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.18914699 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.245710798 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.356879596 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.248182187 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247000885 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.867495893 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.197086608 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.208342983 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.907830181 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.181071708 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.190978364 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.576523972 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.338744592 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.179709529 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.904022223 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.245944543 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.941395479 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.846234485 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.343716835 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.156843165 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.222897481 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.156295177 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.140032567 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.237791652 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.220128592 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.134778962 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.497811006 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.796563299 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.192627289 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.447376695 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.120651885 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.143248928 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.127520538 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.189325219 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.131141122 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.133515944 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.472956206 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.741562354 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.156760828 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.181861793 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.263349331 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.884550019 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.31086763 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.189665831 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.570360243 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.112071821 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.176194239 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.159258443 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.869982306 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.329848224 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.255095497 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.189236938 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.184082238 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.205889041 seconds)
  done (took 116.130992935 seconds)
done (took 427.483940652 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.396857568 seconds)
  done (took 7.512523346 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.334748866 seconds)
  done (took 7.581829545 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.133984529 seconds)
  done (took 7.290146322 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.131731509 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.141078314 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.151845169 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.148666873 seconds)
  done (took 25.742616181 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.908595621 seconds)
  done (took 8.037494192 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.154473387 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.144351162 seconds)
  done (took 13.493003405 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.314516823 seconds)
  done (took 7.466539805 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.39832269 seconds)
  done (took 7.556122642 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.136420531 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.145525681 seconds)
  done (took 13.437357465 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.127583652 seconds)
  done (took 7.260578067 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.207266226 seconds)
  done (took 7.398537362 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.117510886 seconds)
  done (took 7.367736981 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.20443018 seconds)
  done (took 7.334124018 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.200008164 seconds)
  done (took 7.347657513 seconds)
done (took 135.938346086 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.126554441 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.124373872 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.182399497 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.136501108 seconds)
  done (took 25.708652706 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.465131546 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.481097179 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.479822311 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.665056079 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.451609963 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.446086267 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.501156483 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.499524601 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.428771939 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.580707017 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.475640935 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.520397472 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.642596898 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.485973994 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.43852026 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.510561706 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.612949645 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.479518379 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.395602371 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.450542344 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.639703935 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.629821428 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.938670124 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.878773578 seconds)
  done (took 38.230526019 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.340970083 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.491292185 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.332834438 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.445152822 seconds)
  done (took 6.744162253 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.162028685 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.491749714 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.499369292 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.549203458 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.520264416 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.316918828 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.529799024 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.32680826 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.325046232 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.332982942 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.734603606 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.27582612 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.333413284 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.555552588 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.313684692 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.124526935 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.126818353 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.257371582 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.520597496 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.352660701 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384629282 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.542094903 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.524140772 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.536236806 seconds)
  done (took 34.774400588 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.993938038 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.067363836 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.519588067 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.053016129 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.885644684 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.92781984 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.423471599 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.655590635 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.38857628 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.37557979 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.931602974 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.936359294 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.277516738 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.034046744 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.893206762 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.313497742 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.329094734 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.989624303 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.569441009 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.44103454 seconds)
  done (took 39.170424777 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.159695616 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.381250539 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.394123733 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.309058395 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.135646621 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.119960182 seconds)
  done (took 26.687545008 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.415499507 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.308608768 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.434957628 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.39330743 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.274438334 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.270853497 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.658562864 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.381017125 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.873629321 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.788437804 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.551904049 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.55231961 seconds)
  done (took 22.05058216 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.127564802 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.174937577 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.134766069 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.305275826 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.966278036 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.08205732 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.573182629 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.277895465 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.287735965 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.360305752 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.026235785 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.315432731 seconds)
  done (took 40.769991878 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.357904638 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.323661027 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.488194696 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.199671455 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.553971513 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.215981971 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.539769295 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.113028234 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.78801358 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.91916253 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.716684632 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.132807534 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.677335658 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.116327205 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.125739334 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.468988667 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985812192 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.15459312 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.448181412 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.151284148 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.104414749 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.203749484 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.190804111 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.572693845 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419139287 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.12659064 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.348945855 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.388854458 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.11124524 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.369717952 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.141812729 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.686112878 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.272755126 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.436931982 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.553282127 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.174902799 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.402088446 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.002137199 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.790189552 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.503977235 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.402290899 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.407191289 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.200649748 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.211881859 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.461787484 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.994806491 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.228564364 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.961821863 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.201331344 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.543522723 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.959440826 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.088875234 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.696170148 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.911629683 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.369006076 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.540200517 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.45177884 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.236886138 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.513226127 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.429742709 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.245758321 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.386291601 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.426037969 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.20301643 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.64922542 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.429834165 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.397359411 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.432795717 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.543837711 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.49953055 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.587881276 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.568550243 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.927661392 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.308633507 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.761144311 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.131250915 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.598764762 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.206193835 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.963547966 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.792546725 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.241967172 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.329521393 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.080052127 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.170821986 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.227099377 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.366569461 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.881025056 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.188770267 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.255903754 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.487411961 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.502331396 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.291657996 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307169775 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.48442603 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.929076559 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.254822712 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.30614336 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.476922247 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.213806261 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.7901454 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.224143664 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.289038335 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.244073339 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.852405489 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.635821625 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.265928384 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.03347545 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.805227017 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.563677909 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.856208778 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.449049976 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.279558873 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.63920056 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.591671297 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.273528457 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.002601543 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.260511637 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.599272336 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.46892693 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.255250422 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.273947955 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.618960029 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.424309372 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.274416549 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.528429115 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.242684398 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.406520669 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.271684882 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.86937128 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.272334466 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.509032427 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.761796182 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.362175361 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.468301341 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.236493329 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.404260008 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.737725773 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.348654231 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.5902239 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.575819679 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.4344926 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.889034983 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.259378666 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.093564106 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.654155985 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.48044273 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.6137724 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.962400659 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.418973871 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.271257887 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.265517722 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.47835844 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.316817239 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.804094721 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.256716278 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.138781026 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.986742575 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.512473061 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.279177752 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.446985205 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.268444484 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.474058623 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.763915645 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.414185121 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.487438366 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.499339786 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.431961897 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.239586191 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.244326043 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.592751213 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.512886002 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.747078315 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.545038073 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.812011915 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.777964851 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.746744051 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.463381748 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.591849569 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.043968664 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.544567319 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.528216923 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.368904282 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.196894105 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.294080909 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.486357514 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46629326 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.440925953 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.995961284 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.090209513 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.231484535 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.358349952 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.869584786 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.226317856 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.391800447 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.654014927 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.234251182 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.766720283 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.334125186 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.642200735 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.725920745 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.258220402 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.519717966 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.808950426 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.736085122 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.513505055 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.520099431 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.15606165 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.093791368 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.764068608 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.400515265 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.18613581 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.746719142 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.928144531 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.424018718 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.220526831 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.609253215 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.159251578 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.029701081 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.742139114 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.860235919 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.258935366 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.369842227 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.64758307 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.240723832 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.065723876 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.483678653 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.505639041 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.932742175 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.658944051 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.409499607 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.510954039 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.202171869 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.271568419 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.516473733 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.559807469 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.567554967 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.732454189 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.485419082 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.941810219 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.343170005 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.846898082 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.420040304 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.227048808 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.752180846 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.420464718 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.116038221 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.415107469 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.018904706 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.53165424 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.759256832 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.501558266 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.209424279 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.576751366 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.778944343 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.190219861 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.190209567 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.373524175 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.249906433 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.463524688 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.16697854 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.362689696 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.817507733 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.924963099 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.47964965 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.413967386 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.638022812 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.655469393 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.572325948 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.194502166 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.406470039 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.307121538 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.525904108 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.232752844 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.472523444 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.839624482 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.725891701 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.194159065 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.757956758 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.666494612 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.909550664 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.63573554 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.456486518 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.547959442 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.173782705 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.804372332 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.24659663 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.350760303 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.197100963 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.848255093 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659884123 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.598881156 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.579978415 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.223664553 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.613949034 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.509382199 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.481437043 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.229095786 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.487735799 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.17737972 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.519394158 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.202710198 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.12438735 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.707440048 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.256428542 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.20282414 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.508088204 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.557650418 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.414762842 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.809883176 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.399157509 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.369835144 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.021451767 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.422041023 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.379697677 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.58776371 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.909659156 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.435921682 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.2511278 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.762101841 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.911247733 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.623565484 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.797516298 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.719327452 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.555652928 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.001864952 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.258348671 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.482867642 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.418385817 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.245052526 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.465091711 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.64063327 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.308322947 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.446469379 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.574763337 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.551838953 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.827485794 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.227166723 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.964778745 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.496131975 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.768659722 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.801943062 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.077218783 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.527398324 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.416701922 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.643388244 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.380865799 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.434354163 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.526822044 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.083840462 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.279441562 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.088709906 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.005530898 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.29050386 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.727983449 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.284433275 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.053877688 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.379609564 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.454654616 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.461937395 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.362639706 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.242074146 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.975610046 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.022443008 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.5146988 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.391961694 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.393429532 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.286463873 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.429905765 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.706057374 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.524152471 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.965184455 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.581648196 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.370633277 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.184632522 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.214310451 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.921823323 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.569750931 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.197479796 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.495238017 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.514985752 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.229830061 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.261192532 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.20594206 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.452030701 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.067982061 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.940945754 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.44354222 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.57849415 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.64512602 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.191944228 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.94363813 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.412402463 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.549493684 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.552735928 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.995504401 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.589303735 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.516253156 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.337530589 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.179708466 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.361763662 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.257057616 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.334184081 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.139954601 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.491810583 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.191037973 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.121128103 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.826060019 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.218575086 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.200248271 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.885419949 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.472936256 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.409716962 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.209066361 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.951306027 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.550178686 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.35076418 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.191653558 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.991168811 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.177404095 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.413128532 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.203111893 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.503224936 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.058849411 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.283934369 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 3.004906003 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.814956877 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.263206988 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.517635607 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.217720718 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.883760374 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.410559137 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.735293108 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.20445505 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.481729086 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.768053655 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.370999501 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.217544545 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.580823894 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.328871586 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.503183299 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.654953388 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.575066276 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.578027044 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.455377886 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476317737 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.645450414 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.459465863 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435599352 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.169306962 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.235836922 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.318493663 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.607732179 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.604276809 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.202879443 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.787231669 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510607053 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.305781368 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.457506809 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.341672524 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.809623771 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.362400652 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.255046954 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.420537484 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.278047571 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.471694013 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.174166275 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.292208527 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.167095292 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.247809404 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.413737474 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.42631434 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.526199397 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.457388639 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.7331874 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.283427591 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.862724568 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.049200923 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.711787427 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.195354431 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.869961841 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.668962638 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.159672008 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.535186397 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.808609168 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.329213133 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.865111397 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.394611941 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.204898574 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.318691332 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.690745507 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.188763499 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.776201791 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.489709309 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.098988248 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.500203038 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.157492769 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.277481067 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.915744061 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.621254736 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.123455138 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.794049359 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.531790202 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.689087833 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.825762575 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.1417314 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.276863079 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.758932131 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.095580466 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.122377254 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.259739654 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.654343504 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.118201175 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.647945601 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.190972625 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.377886397 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.14308931 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.199728734 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.123050806 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.361364424 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.745617346 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.387920725 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.412648926 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.279138376 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.166905351 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.886512515 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.835014641 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.215333709 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.350528721 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.110460793 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.541458152 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.008576418 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.105429166 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.788387238 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.329773332 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.136884117 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503496 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405705992 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.170816699 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.302384807 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.110027568 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.488635064 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.302299465 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.600712813 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.369486543 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.144732158 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.277058343 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.124573001 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.72313093 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.490465018 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.984130755 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.111584965 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.446191718 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.125566248 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.779858119 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.819869933 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.2745272 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.248951099 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.007599357 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.849129608 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.021662644 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.375082164 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.100976833 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.335433348 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.634453873 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.093726132 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.759656677 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.119720624 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.317548815 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.448859089 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.121789284 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.27297124 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.151568519 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.134398058 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.719631824 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.167244124 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.513011613 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.229128477 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.769333438 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.155163868 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.211938099 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.4010613 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.510575503 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.15517605 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.177065568 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.368136285 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.145058856 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.119758431 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.525767775 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.340656663 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.411173327 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.528215567 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.275244308 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.644083385 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.069346197 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.779702006 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.264647704 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.434642075 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.011604893 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.752959332 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.15121283 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.751027504 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.784179389 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.303335652 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.68087373 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.369762562 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.900460766 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.190655701 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.644709081 seconds)
  done (took 2011.126032473 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.194971203 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.274930622 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.175295732 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.276804217 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.217353454 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.172444681 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.299855645 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.170538014 seconds)
  done (took 50.947759332 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.135574627 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.178113992 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.701441286 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.392148469 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.13567581 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.210142171 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.479210256 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.961388376 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.24155564 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.095131044 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.27117531 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.347573419 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.175472658 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.174964781 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 5.917929484 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.259346222 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.188362321 seconds)
  done (took 94.069164376 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.210938589 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.020106894 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.171659554 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.015566142 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.173723657 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.566133407 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.122804692 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.15175263 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.583960923 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.801994481 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.168854249 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.2582267 seconds)
  done (took 86.408796151 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.145524735 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.162078577 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.148362648 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.162614603 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.174314408 seconds)
  done (took 6.945011313 seconds)
done (took 2484.890252616 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.346078842 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.598951583 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.70121649 seconds)
  done (took 4.442090846 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.211654992 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.26817644 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.333504954 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.28566979 seconds)
  done (took 6.238586502 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.434240255 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.606841709 seconds)
  done (took 4.148877332 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.476205526 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.144796888 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.669382006 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.116365477 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.125177421 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.160588575 seconds)
  done (took 19.519603498 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.145411018 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.146425954 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.173595394 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.183590384 seconds)
  done (took 5.776190225 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.130262466 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.172609942 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.134924364 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.094390044 seconds)
  done (took 18.672596736 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.516310383 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.410159973 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.856035342 seconds)
  done (took 5.928387394 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.95357608 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.266811307 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.950880677 seconds)
  done (took 6.331479375 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.063078756 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.337517735 seconds)
  done (took 5.523042428 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.26986196 seconds)
  done (took 2.401799853 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.612797053 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.597211233 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.802342419 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.867195617 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.039266061 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.402943864 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.540356173 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.371419075 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.646391458 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.692347383 seconds)
  done (took 17.736600041 seconds)
done (took 108.496795918 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.069824741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.543331599 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.287567183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.346744273 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.276428145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.292652269 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.16856704 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.086769125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.838652734 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.873786547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.42420018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.213424357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.202076037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.521699786 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.202830366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.518827333 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.558156819 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.074288563 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.924693953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.391484012 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.159642051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.809929528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.178802046 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.814108219 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.55930024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.30662983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.256631038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.492594852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.139497513 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.269943347 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.324011229 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.596984716 seconds)
  done (took 156.814538119 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.111173047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.138755331 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.171172717 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.124256526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.190081387 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.150587648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.129361458 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.154813527 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.155747912 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.14705805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.129529343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.180573717 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.191395 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.170205752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.140624599 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.158047721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.307523518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.172964671 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.154429755 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.173019517 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.162246137 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.041869381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.148197683 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.11925177 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.280229062 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.169315571 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.139606821 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.147842677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.142854546 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.14235203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.198249778 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.118274022 seconds)
  done (took 190.189154768 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.15522918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.138239438 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.120979966 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.110137137 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.13228729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.132306958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.130399786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.113010168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.180800629 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.136021137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.136488947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.180088217 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.149663315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.163848588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.148722357 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.14412599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.14400603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.182707916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.191035051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.140989395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.177982944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.155489798 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.180013629 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.12520589 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.166286821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.152966131 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.182752154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.159944129 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.136980817 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.198301448 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.195706415 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.160239277 seconds)
  done (took 198.056626689 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.440908081 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.186837339 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.099874584 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.912580972 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.113912801 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.20411884 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.910363122 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.470068467 seconds)
  done (took 14.505094151 seconds)
done (took 560.710499645 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.763054139 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.049638073 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.372590718 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421279323 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.681440814 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460841957 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.40429614 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.581188087 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.904777231 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.588330769 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.596287978 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.378979756 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.014205722 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.406646497 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.371067422 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.669958454 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.55723799 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.872521677 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.416544356 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.031913033 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.401486958 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.118903319 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.623068195 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.988754098 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.653590481 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.139895689 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.38900734 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.584384895 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.449394198 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.404228652 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.221368406 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.650891835 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.378561413 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.371427274 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.668440987 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.656492606 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.619985794 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.660303394 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.381879976 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.913158586 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.026673573 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.873195654 seconds)
  done (took 77.868438286 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.259309788 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.313269945 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.421462235 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.284696911 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.860044534 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.327718952 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.497206181 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.441583081 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.335875951 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.447047762 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.442602774 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.91999094 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.470813138 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.819129688 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.422001705 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.475313702 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.266325703 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.81544554 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.454601027 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.442096648 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.268787551 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.432917917 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.264553962 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.418980806 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.2455298 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.281941359 seconds)
  done (took 38.865748381 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.248732517 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.361426455 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.411771928 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.248770681 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.446690473 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.241723175 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.467187079 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.330293537 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.793263589 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.555211008 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.302431722 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.34766648 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.411833723 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.478951592 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.535766734 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.399014708 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.361612952 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.39097268 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.424816377 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.475834292 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.295086152 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.245289608 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.510611184 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.227731443 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.06667701 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.766285149 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.412792738 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.756782683 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.421900677 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.342019955 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.344643518 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.500959591 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.584222504 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.472548784 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.399966457 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.203879279 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.217569285 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.248442574 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.146754653 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.343032921 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.482099462 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.616933139 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.523455998 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.732667699 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.548652029 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.414766284 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.621761064 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.310465496 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.346158772 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.119942306 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.464764521 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.875511125 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.443288142 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414360642 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.329840029 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.618191625 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.41481886 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.534844649 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.287609399 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.9753454 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.292191102 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.580420998 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.354019118 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.514766575 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.452308218 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.379528908 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.410818977 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.787355772 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.490138754 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.452060164 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.75831431 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.233277237 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.207988397 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.257287357 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.327875774 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.617915226 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.059579695 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.467966139 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.532747507 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.451185894 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.463878915 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.741595683 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.166149009 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.478595253 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.364869926 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.179241483 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.264308942 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.504185737 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.465885863 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.67099277 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.743519434 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.58944385 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.641470546 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.434483079 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.845435108 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.607256252 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.214578758 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.190902401 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.368379995 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.704369406 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.263319852 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.441564518 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.745736207 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.769763404 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.552794394 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.29857117 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.518295217 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.527807273 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.605993224 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.200451501 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.408871396 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.305985193 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.435569829 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.463317598 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.219681881 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.722867099 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.306363157 seconds)
  done (took 244.065981055 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.178451604 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.198705157 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.207222866 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.183691646 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.188102999 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.708910022 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.191428252 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.156589687 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.719106529 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.162711127 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.135473166 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.146022476 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.150571634 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.133834357 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.313645592 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.350464864 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.973516702 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.131340215 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.163504034 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.181597384 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.950280105 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.169150011 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.142523839 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.143320152 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.138861236 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.143772572 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.177851217 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.140437753 seconds)
  done (took 152.766316853 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.197451981 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.549381777 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.249641863 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.306864911 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.25053923 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.222095336 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.699747368 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.346348529 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.289591189 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.207942283 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.205084973 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.41522859 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.5196796 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.786707845 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.35961817 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.3984449 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.825729833 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.322274827 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.183258831 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.235928725 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.358391092 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.50971895 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.484923396 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.453459551 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.313730838 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.482576318 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.271980145 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.215536082 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.315769077 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.682623293 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.231299696 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.565590471 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.326035829 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.18766909 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.678643751 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.535461026 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.776322121 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.825119586 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.360736319 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.185901155 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.157375959 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437106992 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.492633739 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.214388116 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.170011873 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.810891268 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.224412031 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.459622345 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.204148079 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.140839048 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.278219205 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.290095955 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.461719361 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.136230728 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.352436234 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.336713703 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.826710209 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.182997489 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.232003222 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.564530867 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.221901865 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.711988318 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.734793484 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.288900714 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.238764963 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.096185429 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.317047948 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.760866053 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.895987172 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.273609636 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.584887049 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.460382933 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.187401647 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.462112509 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.39805888 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.618822494 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.825122174 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.366928337 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.35142337 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.303094886 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.488922502 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.205522816 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.766752028 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.289250696 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.165444925 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.688675977 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.600169258 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.214588276 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.250921948 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.356733821 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.407749106 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.443933225 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.527363072 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.317678882 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.137448366 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.484678588 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.494074191 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.224761579 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.351993065 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.202833675 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.665868081 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.372976735 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.195948506 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.527322411 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.579831833 seconds)
  done (took 160.5053065 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.852361534 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.255264616 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.439717834 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.724653162 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.524611284 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.645374395 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.488257159 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.269203521 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.482162927 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.404647222 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.407342623 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.283398812 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.869383175 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.95499694 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.265337806 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.414118936 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.244849201 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.769147601 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.485591858 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.17744749 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.648011952 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.886813706 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.547754538 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.599981369 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.623050268 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.688787562 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.868860986 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.337741773 seconds)
  done (took 49.294928485 seconds)
done (took 724.52881342 seconds)
SAVING RESULT...
DONE!
