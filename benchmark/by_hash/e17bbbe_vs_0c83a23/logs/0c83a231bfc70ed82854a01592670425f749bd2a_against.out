cset: moving following pidspec: 1920310
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.43969198 seconds)
loading group "string"... done (took 0.282132402 seconds)
loading group "linalg"... done (took 3.845807622 seconds)
loading group "parallel"... done (took 0.023538768 seconds)
loading group "find"... done (took 1.424547419 seconds)
loading group "tuple"... done (took 0.997894923 seconds)
loading group "dates"... done (took 0.265000167 seconds)
loading group "micro"... done (took 0.066145849 seconds)
loading group "io"... done (took 1.275421592 seconds)
loading group "frontend"... done (took 0.012965606 seconds)
loading group "scalar"... done (took 5.119701614 seconds)
loading group "sparse"... done (took 3.637907706 seconds)
loading group "alloc"... done (took 0.016230754 seconds)
loading group "broadcast"... done (took 0.400657161 seconds)
loading group "union"... done (took 3.689970227 seconds)
loading group "simd"... done (took 3.028958978 seconds)
loading group "random"... done (took 3.121376892 seconds)
loading group "inference"... done (took 1.857944373 seconds)
loading group "problem"... done (took 1.145218717 seconds)
loading group "array"... done (took 4.69375862 seconds)
loading group "misc"... done (took 0.912550312 seconds)
loading group "sort"... done (took 0.368852369 seconds)
loading group "collection"... done (took 6.457288017 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.265211415 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.023819284 seconds)
    (2/2) benchmarking "String"...
    done (took 0.025592907 seconds)
  done (took 0.805298624 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.021925075 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.021470734 seconds)
    (3/3) benchmarking "different"...
    done (took 0.021435263 seconds)
  done (took 0.813822489 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.02110654 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.082653879 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.023004292 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.024023962 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.039372757 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.023875561 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.023428701 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.023648094 seconds)
  done (took 0.989695726 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.023042583 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022817471 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.019629738 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.019879492 seconds)
  done (took 0.833194936 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.021238204 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.040596311 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020488356 seconds)
    (4/4) benchmarking "different"...
    done (took 0.020861151 seconds)
  done (took 0.847400573 seconds)
done (took 5.462262405 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.29558749 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.039806448 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.034229452 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.025856818 seconds)
  done (took 1.16838867 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022201466 seconds)
    (2/2) benchmarking "read"...
    done (took 0.029151477 seconds)
  done (took 0.803021564 seconds)
done (took 2.720008238 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.595400258 seconds)
  done (took 11.337009293 seconds)
done (took 12.083884295 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.17323538 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020296319 seconds)
  done (took 0.940910901 seconds)
done (took 1.728687624 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.832665692 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.919928276 seconds)
    (2/2) benchmarking "String"...
    done (took 1.01560259 seconds)
  done (took 2.705811243 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.051320991 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.791173917 seconds)
    (3/3) benchmarking "different"...
    done (took 0.803261016 seconds)
  done (took 3.395827169 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.038417374 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.360115425 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.039724148 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.751119998 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.763810054 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.27673418 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.425083044 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.105317272 seconds)
  done (took 23.476277816 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.086793975 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.992493973 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 2.027688318 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 2.043507646 seconds)
  done (took 8.943292695 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.057544958 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.9011143 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.901463345 seconds)
    (4/4) benchmarking "different"...
    done (took 0.841125335 seconds)
  done (took 4.501378267 seconds)
done (took 51.718792677 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.570256048 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.900334408 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.783996659 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.541264417 seconds)
  done (took 16.546363117 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.994776421 seconds)
    (2/2) benchmarking "read"...
    done (took 1.106147326 seconds)
  done (took 2.865450794 seconds)
done (took 20.162494076 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.08101505 seconds)
  done (took 10.830196076 seconds)
done (took 11.579413769 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.065647051 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.32345553 seconds)
  done (took 5.1392437 seconds)
done (took 5.908458456 seconds)
SAVING RESULT...
DONE!
