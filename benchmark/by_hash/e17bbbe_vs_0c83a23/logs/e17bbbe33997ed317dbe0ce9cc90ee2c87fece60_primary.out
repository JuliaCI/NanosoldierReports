cset: moving following pidspec: 1914710
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.411638995 seconds)
loading group "string"... done (took 0.275482951 seconds)
loading group "linalg"... done (took 3.814805421 seconds)
loading group "parallel"... done (took 0.023715595 seconds)
loading group "find"... done (took 1.393624674 seconds)
loading group "tuple"... done (took 0.978432851 seconds)
loading group "dates"... done (took 0.258827622 seconds)
loading group "micro"... done (took 0.064539483 seconds)
loading group "io"... done (took 1.248930458 seconds)
loading group "frontend"... done (took 0.01289293 seconds)
loading group "scalar"... done (took 5.131103909 seconds)
loading group "sparse"... done (took 3.602145369 seconds)
loading group "alloc"... done (took 0.015829139 seconds)
loading group "broadcast"... done (took 0.390371496 seconds)
loading group "union"... done (took 3.615122341 seconds)
loading group "simd"... done (took 2.981185653 seconds)
loading group "random"... done (took 3.083440925 seconds)
loading group "inference"... done (took 1.859423775 seconds)
loading group "problem"... done (took 1.187901182 seconds)
loading group "array"... done (took 4.726323457 seconds)
loading group "misc"... done (took 0.936625143 seconds)
loading group "sort"... done (took 0.379012738 seconds)
loading group "collection"... done (took 6.390919719 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.266515188 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.023802953 seconds)
    (2/2) benchmarking "String"...
    done (took 0.025456169 seconds)
  done (took 0.793838245 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.021852761 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.021320785 seconds)
    (3/3) benchmarking "different"...
    done (took 0.021398998 seconds)
  done (took 0.802272182 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020821489 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.081973209 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.023188637 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.023800294 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.023932131 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.023428557 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.023038373 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022914539 seconds)
  done (took 0.957382903 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.022839764 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022412084 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.019180365 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.019120272 seconds)
  done (took 0.822574451 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.021230752 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.040503391 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020038494 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019980136 seconds)
  done (took 0.838898346 seconds)
done (took 5.370219408 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.293778932 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.039168036 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033575614 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.024684754 seconds)
  done (took 1.161165499 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.021956692 seconds)
    (2/2) benchmarking "read"...
    done (took 0.028685072 seconds)
  done (took 0.791292934 seconds)
done (took 2.691378508 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.56100499 seconds)
  done (took 11.292244192 seconds)
done (took 12.031182229 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.174817119 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020203185 seconds)
  done (took 0.93433789 seconds)
done (took 1.710466441 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.871476719 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.902271365 seconds)
    (2/2) benchmarking "String"...
    done (took 1.00326479 seconds)
  done (took 2.682828836 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.042849902 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.780726039 seconds)
    (3/3) benchmarking "different"...
    done (took 0.797474183 seconds)
  done (took 3.36193744 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.934663762 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.443255376 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.025355142 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.742014486 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.763365428 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.222693889 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.412456355 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.101727218 seconds)
  done (took 23.501920294 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.114372611 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.978683382 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 2.015810217 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 2.056629753 seconds)
  done (took 8.950010763 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.049915934 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.931399644 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.93785779 seconds)
    (4/4) benchmarking "different"...
    done (took 0.830721276 seconds)
  done (took 4.5459688 seconds)
done (took 51.667381574 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.633432023 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.897751995 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.773943799 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.50993387 seconds)
  done (took 16.556664626 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.972964469 seconds)
    (2/2) benchmarking "read"...
    done (took 1.100391035 seconds)
  done (took 2.828697219 seconds)
done (took 20.127729008 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.992588028 seconds)
  done (took 10.733180872 seconds)
done (took 11.476968778 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.044197024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.294268667 seconds)
  done (took 5.079340541 seconds)
done (took 5.838917817 seconds)
SAVING RESULT...
DONE!
